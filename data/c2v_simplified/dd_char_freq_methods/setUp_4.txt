
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/yandex-qatools__postgresql-embedded/src/test/java/ru/yandex/qatools/embed/postgresql/TestPostgresWithPgCtl_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net("localhost", findFreePort()), new AbstractPostgresConfig.Storage("test"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials("user", "password"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList("-E", "SQL_ASCII", "--locale=C", "--lc-collate=C", "--lc-ctype=C")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format("jdbc:postgresql://%s:%s/%s?user=%s&password=%s", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }
predict, score, loss = setUp, 0.41180580854415894, 1.4471166133880615

Trace of simplified code(s):
{"time": "2020-12-28 07:14:23.651631", "n_pass": [1, 1, 1], "score": "0.4355", "loss": "1.6281", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", findFreePort()), new AbstractPostgresConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:26.475465", "n_pass": [21, 2, 2], "score": "0.4624", "loss": "1.72", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", findFreePort()), new AbstractPostgresConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:29.181874", "n_pass": [43, 3, 3], "score": "0.3625", "loss": "2.1628", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRODUCTION, new AbstractPostgresCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:31.880481", "n_pass": [49, 4, 4], "score": "0.343", "loss": "1.825", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRODUCTION, new AbstractPostgresCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:37.674235", "n_pass": [99, 6, 5], "score": "0.4904", "loss": "0.9432", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:43.020151", "n_pass": [102, 8, 6], "score": "0.4239", "loss": "1.2393", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:45.687299", "n_pass": [105, 9, 7], "score": "0.4845", "loss": "0.9443", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:48.356239", "n_pass": [107, 10, 8], "score": "0.4915", "loss": "1.0045", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCII=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:14:56.779551", "n_pass": [168, 13, 9], "score": "0.5106", "loss": "1.0846", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCIIe=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:07.549143", "n_pass": [173, 17, 10], "score": "0.377", "loss": "1.3057", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCIIe=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql:/%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:12.881339", "n_pass": [177, 19, 11], "score": "0.4529", "loss": "0.9327", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Main.PRsCoConfig.Storage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCIIe=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql:/%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:34.226242", "n_pass": [197, 27, 12], "score": "0.5588", "loss": "0.9682", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"-E\", \"SQL_ASCIIe=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql:/%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:44.898928", "n_pass": [206, 31, 13], "score": "0.3944", "loss": "1.23", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jdbc:postgresql:/%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:52.927754", "n_pass": [211, 34, 14], "score": "0.5064", "loss": "0.7868", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:15:58.279801", "n_pass": [219, 36, 15], "score": "0.1436", "loss": "3.835", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-28 07:16:03.623019", "n_pass": [222, 38, 16], "score": "0.4782", "loss": "1.5882", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timenfig.Credentials(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:22.388746", "n_pass": [237, 45, 17], "score": "0.3379", "loss": "1.2903", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:41.044423", "n_pass": [262, 52, 18], "score": "0.5338", "loss": "0.9481", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = PostgrestgresConfig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:43.710266", "n_pass": [264, 53, 19], "score": "0.3973", "loss": "1.458", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), new AbstractPostgresConfig.Timls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:46.376769", "n_pass": [267, 54, 20], "score": "0.4252", "loss": "0.9856", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), tgresConfig.Timls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:49.037044", "n_pass": [268, 55, 21], "score": "0.4564", "loss": "1.4613", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); PostgresExecutable exec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:51.707080", "n_pass": [274, 56, 22], "score": "0.586", "loss": "0.636", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrec = runtime.prepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:54.366906", "n_pass": [275, 57, 23], "score": "0.6874", "loss": "0.4892", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().host(), config.onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:57.041248", "n_pass": [279, 58, 24], "score": "0.6353", "loss": "0.9813", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), cls().password()); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:16:59.702781", "n_pass": [284, 59, 25], "score": "0.6769", "loss": "0.5175", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:02.349157", "n_pass": [287, 60, 26], "score": "0.2375", "loss": "3.4362", "code": " void setUp() throws Exception { PostgresStarter<PostgresExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:16.193609", "n_pass": [361, 65, 27], "score": "0.3045", "loss": "3.0389", "code": " void setUp() throws Exception { PostgresStarter<sExecutable, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:18.851149", "n_pass": [362, 66, 28], "score": "0.2152", "loss": "4.3305", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Version.Mainorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:21.515604", "n_pass": [367, 67, 29], "score": "0.3128", "loss": "3.3807", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"user\", \"password\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:24.173586", "n_pass": [371, 68, 30], "score": "0.3453", "loss": "3.4247", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); confiaddAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:32.152519", "n_pass": [376, 71, 31], "score": "0.3345", "loss": "3.4922", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); Postgrepa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:34.804885", "n_pass": [380, 72, 32], "score": "0.3076", "loss": "3.66", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jd%s&password=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:40.102427", "n_pass": [383, 74, 33], "score": "0.2369", "loss": "4.136", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", config.net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:42.756976", "n_pass": [385, 75, 34], "score": "0.267", "loss": "3.9102", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",net().onfig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:45.405500", "n_pass": [386, 76, 35], "score": "0.3718", "loss": "2.3381", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",fig.storage().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:48.066845", "n_pass": [387, 77, 36], "score": "0.3386", "loss": "3.4011", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",age().dbName(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:50.751622", "n_pass": [388, 78, 37], "score": "0.3684", "loss": "3.3184", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",Name(), config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:53.397460", "n_pass": [389, 79, 38], "score": "0.5451", "loss": "2.4365", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",config.credentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:56.046681", "n_pass": [390, 80, 39], "score": "0.4196", "loss": "3.1256", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",redentials().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:17:58.686600", "n_pass": [391, 81, 40], "score": "0.4339", "loss": "3.081", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",ls().username(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:18:01.347748", "n_pass": [392, 82, 41], "score": "0.3237", "loss": "3.6241", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\",rname(), c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:18:03.994727", "n_pass": [393, 83, 42], "score": "0.3766", "loss": "3.2052", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Drivenection(url); }"}
{"time": "2020-12-28 07:18:09.292830", "n_pass": [396, 85, 43], "score": "0.79", "loss": "1.1858", "code": " void setUp() throws Exception { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:12.338122", "n_pass": [401, 86, 44], "score": "0.2475", "loss": "4.5964", "code": " void setUp() throws on { PostgresStarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:14.973454", "n_pass": [403, 87, 45], "score": "0.2475", "loss": "4.5964", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Command.PgCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:20.276192", "n_pass": [414, 89, 46], "score": "0.1761", "loss": "4.9377", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), CogCtl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:31.282655", "n_pass": [488, 93, 47], "score": "0.183", "loss": "4.8628", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = format(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:36.559270", "n_pass": [497, 95, 48], "score": "0.2433", "loss": "4.5696", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jdord=%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:39.227242", "n_pass": [499, 96, 49], "score": "0.3458", "loss": "3.564", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c); conn = Driv(url); }"}
{"time": "2020-12-28 07:18:41.869560", "n_pass": [502, 97, 50], "score": "0.355", "loss": "3.553", "code": " void setUp() throws on { Potarter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:18:53.279887", "n_pass": [516, 101, 51], "score": "0.355", "loss": "3.553", "code": " void setUp() throws on { Prter<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:18:55.912756", "n_pass": [517, 102, 52], "score": "0.355", "loss": "3.553", "code": " void setUp() throws on { Pr<able, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:18:58.563514", "n_pass": [519, 103, 53], "score": "0.446", "loss": "3.1504", "code": " void setUp() throws on { Pr<a, P> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:01.223820", "n_pass": [520, 104, 54], "score": "0.4466", "loss": "3.1415", "code": " void setUp() throws on { Pr<a> runtime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:04.311653", "n_pass": [522, 105, 55], "score": "0.4233", "loss": "3.2845", "code": " void setUp() throws on { Pr<a> rime = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:06.956449", "n_pass": [523, 106, 56], "score": "0.4113", "loss": "3.2976", "code": " void setUp() throws on { Pr<a> r = Poig(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:10.002529", "n_pass": [525, 107, 57], "score": "0.4136", "loss": "3.2827", "code": " void setUp() throws on { Pr<a> r = g(Versnorage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:12.652142", "n_pass": [527, 108, 58], "score": "0.4136", "loss": "3.2827", "code": " void setUp() throws on { Pr<a> r = g(Verage(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:15.306947", "n_pass": [528, 109, 59], "score": "0.4139", "loss": "3.3391", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upassword\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:17.974729", "n_pass": [533, 110, 60], "score": "0.4139", "loss": "3.3391", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); dAll(asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:20.605329", "n_pass": [537, 111, 61], "score": "0.4106", "loss": "2.2134", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (asList(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:37.079477", "n_pass": [638, 116, 62], "score": "0.4063", "loss": "2.2241", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (aist(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:39.715156", "n_pass": [639, 117, 63], "score": "0.3986", "loss": "2.2586", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e=C\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:42.354516", "n_pass": [642, 118, 64], "score": "0.4018", "loss": "2.2234", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\")); pa = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:44.978380", "n_pass": [645, 119, 65], "score": "0.4255", "loss": "2.1321", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd%s\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:50.238094", "n_pass": [651, 121, 66], "score": "0.4145", "loss": "3.9057", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(url); }"}
{"time": "2020-12-28 07:19:58.160895", "n_pass": [660, 124, 67], "score": "0.4326", "loss": "3.777", "code": " void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:00.799615", "n_pass": [663, 125, 68], "score": "0.4326", "loss": "3.777", "code": "void setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:03.442821", "n_pass": [664, 126, 69], "score": "0.1963", "loss": "4.9702", "code": "oid setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:06.098947", "n_pass": [665, 127, 70], "score": "0.244", "loss": "4.5071", "code": "id setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:08.727894", "n_pass": [666, 128, 71], "score": "0.317", "loss": "4.1903", "code": "d setUp() throws on { Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:14.259819", "n_pass": [680, 129, 72], "score": "0.5167", "loss": "2.7561", "code": "d setUp() throws o{ Pr<a> r = g(Ve(\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:17.693517", "n_pass": [688, 130, 73], "score": "0.4962", "loss": "2.1433", "code": "d setUp() throws o{ Pr<a> r = g((\"test\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:20.351043", "n_pass": [690, 131, 74], "score": "0.5005", "loss": "2.1035", "code": "d setUp() throws o{ Pr<a> r = g((\"st\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:22.999896", "n_pass": [691, 132, 75], "score": "0.4946", "loss": "2.1052", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), ls(\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:25.628297", "n_pass": [694, 133, 76], "score": "0.5956", "loss": "1.2346", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"upord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:28.254078", "n_pass": [696, 134, 77], "score": "0.5968", "loss": "1.2431", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"ord\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:30.879616", "n_pass": [697, 135, 78], "score": "0.5978", "loss": "1.2262", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"), Cl); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:33.506484", "n_pass": [700, 136, 79], "score": "0.6078", "loss": "1.2543", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l); (at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:54.493264", "n_pass": [829, 140, 80], "score": "0.6078", "loss": "1.2543", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);(at(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:57.117722", "n_pass": [831, 141, 81], "score": "0.6307", "loss": "1.1763", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);(t(\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:20:59.746072", "n_pass": [832, 142, 82], "score": "0.6538", "loss": "1.0925", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"e\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:02.388751", "n_pass": [835, 143, 83], "score": "0.6491", "loss": "1.0903", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a = fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:05.027765", "n_pass": [841, 144, 84], "score": "0.6491", "loss": "1.0903", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a= fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:07.653162", "n_pass": [843, 145, 85], "score": "0.6491", "loss": "1.0903", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=fo(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:10.314751", "n_pass": [844, 146, 86], "score": "0.5629", "loss": "1.3283", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\", c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:18.234099", "n_pass": [852, 149, 87], "score": "0.5629", "loss": "1.3283", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n = Driv(u); }"}
{"time": "2020-12-28 07:21:20.858704", "n_pass": [857, 150, 88], "score": "0.5629", "loss": "1.3283", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n= Driv(u); }"}
{"time": "2020-12-28 07:21:23.473932", "n_pass": [859, 151, 89], "score": "0.5629", "loss": "1.3283", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=Driv(u); }"}
{"time": "2020-12-28 07:21:26.115768", "n_pass": [860, 152, 90], "score": "0.6228", "loss": "1.0145", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv(u); }"}
{"time": "2020-12-28 07:21:36.606191", "n_pass": [865, 156, 91], "score": "0.4019", "loss": "1.6695", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv(); }"}
{"time": "2020-12-28 07:21:39.257410", "n_pass": [868, 157, 92], "score": "0.4019", "loss": "1.6695", "code": "d setUp() throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:44.757762", "n_pass": [879, 158, 93], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{ Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:47.378025", "n_pass": [889, 159, 94], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{Pr<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:50.025119", "n_pass": [890, 160, 95], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{r<a> r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:53.048427", "n_pass": [895, 161, 96], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{r<a>r = g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:55.685610", "n_pass": [897, 162, 97], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{r<a>r= g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:21:58.328249", "n_pass": [899, 163, 98], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{r<a>r=g((\"\"), (\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:22:00.958639", "n_pass": [907, 164, 99], "score": "0.4019", "loss": "1.6695", "code": "d setUp()throws o{r<a>r=g((\"\"),(\"d\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}
{"time": "2020-12-28 07:22:03.588513", "n_pass": [910, 165, 100], "score": "0.4025", "loss": "1.673", "code": "d setUp()throws o{r<a>r=g((\"\"),(\"\"),l);((\"\"));a=o(\"jd\",c);n=riv();}"}

Minimal simplified code:
d setUp()throws o{r<a>r=g((""),(""),l);((""));a=o("jd",c);n=riv();}

