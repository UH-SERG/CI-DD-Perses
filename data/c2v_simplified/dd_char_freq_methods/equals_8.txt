
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/naming/NamingEntry_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } }
predict, score, loss = equals, 0.9998308420181274, 0.00019488819816615433

Trace of simplified code(s):
{"time": "2020-12-28 09:28:10.792049", "n_pass": [1, 1, 1], "score": "0.9998", "loss": "0.0002", "code": "@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } }"}
{"time": "2020-12-28 09:28:13.415609", "n_pass": [20, 2, 2], "score": "0.9997", "loss": "0.0004", "code": "olean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } }"}
{"time": "2020-12-28 09:28:19.053730", "n_pass": [50, 4, 3], "score": "0.9997", "loss": "0.0005", "code": "olean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((N) obj).name); } else { return false; } }"}
{"time": "2020-12-28 09:28:24.706741", "n_pass": [93, 6, 4], "score": "0.999", "loss": "0.0014", "code": "olean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((N) obj).name); } { return false; } }"}
{"time": "2020-12-28 09:28:27.323107", "n_pass": [95, 7, 5], "score": "0.9992", "loss": "0.0012", "code": "olean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((N) obj).name); } { refalse; } }"}
{"time": "2020-12-28 09:28:29.957883", "n_pass": [96, 8, 6], "score": "0.9992", "loss": "0.0011", "code": "olean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((N) obj).name); } { re; } }"}
{"time": "2020-12-28 09:28:32.593210", "n_pass": [98, 9, 7], "score": "0.9983", "loss": "0.0027", "code": "n equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((N) obj).name); } { re; } }"}
{"time": "2020-12-28 09:28:36.062433", "n_pass": [109, 10, 8], "score": "0.9798", "loss": "0.0349", "code": "n equals(Object obj) { if (obj instanceof Nantry) { return name.equals(((N) obj).name); } { re; } }"}
{"time": "2020-12-28 09:28:41.318363", "n_pass": [113, 12, 9], "score": "0.6448", "loss": "0.6626", "code": "n equals(Object obj) { if (obj instanceof Nantry) { return equals(((N) obj).name); } { re; } }"}
{"time": "2020-12-28 09:28:52.646821", "n_pass": [177, 16, 10], "score": "0.8306", "loss": "0.3372", "code": "n equals(Object obj) { if (obj instanceof Nantry) { return eqs(((N) obj).name); } { re; } }"}
{"time": "2020-12-28 09:28:57.880889", "n_pass": [180, 18, 11], "score": "0.5114", "loss": "0.928", "code": "n equals(Object obj) { if (obj instanceof Nantry) { return eqs(((N)j).name); } { re; } }"}
{"time": "2020-12-28 09:29:00.518881", "n_pass": [182, 19, 12], "score": "0.6341", "loss": "0.7177", "code": "n equals(Object obj) { if (obj instanceof Nantry) { return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:12.689683", "n_pass": [202, 23, 13], "score": "0.5999", "loss": "0.7947", "code": "n equals(Object obj) { if (o instanceof Nantry) { return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:15.319595", "n_pass": [209, 24, 14], "score": "0.5246", "loss": "1.0032", "code": "n equals(Object obj) { if (o instanceof ntry) { return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:17.928401", "n_pass": [210, 25, 15], "score": "0.5634", "loss": "0.9889", "code": "n equals(Object obj) { if (o instanceof ry) { return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:39.006960", "n_pass": [313, 31, 16], "score": "0.6295", "loss": "0.7293", "code": "n equals(Object obj) { if (o instanceof y) { return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:41.614969", "n_pass": [315, 32, 17], "score": "0.6295", "loss": "0.7293", "code": "n equals(Object obj) { if (o instanceof y){ return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:29:44.234861", "n_pass": [317, 33, 18], "score": "0.6295", "loss": "0.7293", "code": "n equals(Object obj) { if (o instanceof y){return eqs(((N)j).e); } { re; } }"}
{"time": "2020-12-28 09:30:00.056142", "n_pass": [336, 39, 19], "score": "0.6319", "loss": "0.7323", "code": "n equals(Object obj) { if (o instanceof y){return eqs(((N)j).e); } {e; } }"}
{"time": "2020-12-28 09:30:02.699389", "n_pass": [337, 40, 20], "score": "0.6286", "loss": "0.7301", "code": "n equals(Object obj) { if (o instanceof y){return eqs(((N)j).e); } { } }"}
{"time": "2020-12-28 09:30:32.189888", "n_pass": [360, 50, 21], "score": "0.6286", "loss": "0.7301", "code": "n equals(Object obj){ if (o instanceof y){return eqs(((N)j).e); } { } }"}
{"time": "2020-12-28 09:30:34.797262", "n_pass": [362, 51, 22], "score": "0.6286", "loss": "0.7301", "code": "n equals(Object obj){if (o instanceof y){return eqs(((N)j).e); } { } }"}
{"time": "2020-12-28 09:30:37.408730", "n_pass": [365, 52, 23], "score": "0.6286", "loss": "0.7301", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)j).e); } { } }"}
{"time": "2020-12-28 09:31:21.803037", "n_pass": [448, 67, 24], "score": "0.2665", "loss": "2.1681", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)).e); } { } }"}
{"time": "2020-12-28 09:31:24.421232", "n_pass": [453, 68, 25], "score": "0.2665", "loss": "2.1681", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)).e);} { } }"}
{"time": "2020-12-28 09:31:27.050436", "n_pass": [455, 69, 26], "score": "0.2665", "loss": "2.1681", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{ } }"}
{"time": "2020-12-28 09:31:29.671181", "n_pass": [457, 70, 27], "score": "0.2665", "loss": "2.1681", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{} }"}
{"time": "2020-12-28 09:31:32.313854", "n_pass": [459, 71, 28], "score": "0.2665", "loss": "2.1681", "code": "n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{}}"}

Minimal simplified code:
n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{}}

