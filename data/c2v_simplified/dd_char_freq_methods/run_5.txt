
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__incubator-dubbo-ops/dubbo-monitor-simple/src/main/java/com/alibaba/dubbo/monitor/simple/SimpleMonitorService_run.java
method_name = run
method_body = public void run() { try { draw(); } catch (Throwable t) { logger.error("Unexpected error occur at draw stat chart, cause: " + t.getMessage(), t); } }
predict, score, loss = run, 0.9247642755508423, 0.10111054033041

Trace of simplified code(s):
{"time": "2020-12-28 06:35:32.372226", "n_pass": [1, 1, 1], "score": "0.9248", "loss": "0.1011", "code": "public void run() { try { draw(); } catch (Throwable t) { logger.error(\"Unexpected error occur at draw stat chart, cause: \" + t.getMessage(), t); } }"}
{"time": "2020-12-28 06:35:34.981239", "n_pass": [10, 2, 2], "score": "0.9248", "loss": "0.1011", "code": "public void run() { try { draw(); } catch (Throwable t) { logger.error(\"Unrt, cause: \" + t.getMessage(), t); } }"}
{"time": "2020-12-28 06:35:37.991836", "n_pass": [37, 3, 3], "score": "0.9187", "loss": "0.1126", "code": "public void run() { try { draw(); } catch (Throwable t) { logger.error(\"e: \" + t.getMessage(), t); } }"}
{"time": "2020-12-28 06:35:40.599738", "n_pass": [41, 4, 4], "score": "0.4801", "loss": "1.4374", "code": "id run() { try { draw(); } catch (Throwable t) { logger.error(\"e: \" + t.getMessage(), t); } }"}
{"time": "2020-12-28 06:35:49.254633", "n_pass": [83, 7, 5], "score": "0.4141", "loss": "1.8443", "code": "id run() { try { draw(); } catch (Throwable t) {er.error(\"e: \" + t.getMessage(), t); } }"}
{"time": "2020-12-28 06:35:54.472016", "n_pass": [88, 9, 6], "score": "0.4003", "loss": "1.8823", "code": "id run() { try { draw(); } catch (Throwable t) {er.error(\"e: \" + t.gsage(), t); } }"}
{"time": "2020-12-28 06:36:05.328849", "n_pass": [143, 13, 7], "score": "0.6879", "loss": "1.1385", "code": "id run() { try { draw(); } catch (Throwable t) {er.error(\"e: \" + sage(), t); } }"}
{"time": "2020-12-28 06:36:07.933593", "n_pass": [144, 14, 8], "score": "0.4534", "loss": "1.7478", "code": "id run() { try { draw(); } catch (Throwable t) {er.error(\"e: \" + e(), t); } }"}
{"time": "2020-12-28 06:36:10.557296", "n_pass": [146, 15, 9], "score": "0.3178", "loss": "2.1517", "code": "id run() { try { draw(); } catch (Throwable t) {er.error(\"e: \" + e()); } }"}
{"time": "2020-12-28 06:36:30.100977", "n_pass": [174, 22, 10], "score": "0.4784", "loss": "1.2045", "code": "id run() { try { draw(); } catch (Throwable t) {error(\"e: \" + e()); } }"}
{"time": "2020-12-28 06:36:52.167224", "n_pass": [206, 30, 11], "score": "0.4731", "loss": "1.524", "code": "id run() { try { draw(); } catch (Throwable t) {ror(\"e: \" + e()); } }"}
{"time": "2020-12-28 06:37:18.297922", "n_pass": [300, 38, 12], "score": "0.5323", "loss": "1.4238", "code": "id run() { try { draw(); } catch (Throwable t) {or(\"e: \" + e()); } }"}
{"time": "2020-12-28 06:37:26.116832", "n_pass": [305, 41, 13], "score": "0.6053", "loss": "1.239", "code": "id run() { try { draw(); } catch (Throwable t) {or(\": \" + e()); } }"}
{"time": "2020-12-28 06:37:28.718751", "n_pass": [306, 42, 14], "score": "0.5052", "loss": "1.435", "code": "id run() { try { draw(); } catch (Throwable t) {or(\" \" + e()); } }"}
{"time": "2020-12-28 06:37:31.339211", "n_pass": [310, 43, 15], "score": "0.4888", "loss": "1.4697", "code": "id run() { try { draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:33.947431", "n_pass": [314, 44, 16], "score": "0.5664", "loss": "0.6323", "code": "d run() { try { draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:38.570270", "n_pass": [322, 45, 17], "score": "0.5664", "loss": "0.6323", "code": "d run(){ try { draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:41.161409", "n_pass": [324, 46, 18], "score": "0.5664", "loss": "0.6323", "code": "d run(){try { draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:43.756525", "n_pass": [328, 47, 19], "score": "0.5664", "loss": "0.6323", "code": "d run(){try{ draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:46.345399", "n_pass": [330, 48, 20], "score": "0.5664", "loss": "0.6323", "code": "d run(){try{draw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:51.543884", "n_pass": [332, 50, 21], "score": "0.3742", "loss": "1.4232", "code": "d run(){try{daw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:54.146686", "n_pass": [333, 51, 22], "score": "0.315", "loss": "1.8697", "code": "d run(){try{dw(); } catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:37:59.365792", "n_pass": [338, 53, 23], "score": "0.315", "loss": "1.8697", "code": "d run(){try{dw();} catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:38:01.968720", "n_pass": [340, 54, 24], "score": "0.315", "loss": "1.8697", "code": "d run(){try{dw();}catch (Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:38:04.561369", "n_pass": [346, 55, 25], "score": "0.315", "loss": "1.8697", "code": "d run(){try{dw();}catch(Throwable t) {or(\" \" + e); } }"}
{"time": "2020-12-28 06:38:30.582745", "n_pass": [360, 65, 26], "score": "0.315", "loss": "1.8697", "code": "d run(){try{dw();}catch(Throwable t){or(\" \" + e); } }"}
{"time": "2020-12-28 06:39:11.281499", "n_pass": [420, 79, 27], "score": "0.2125", "loss": "2.133", "code": "d run(){try{dw();}catch(Throwable t){or(\"\" + e); } }"}
{"time": "2020-12-28 06:39:13.882171", "n_pass": [421, 80, 28], "score": "0.2125", "loss": "2.133", "code": "d run(){try{dw();}catch(Throwable t){or(\"\"+ e); } }"}
{"time": "2020-12-28 06:39:16.498181", "n_pass": [423, 81, 29], "score": "0.2125", "loss": "2.133", "code": "d run(){try{dw();}catch(Throwable t){or(\"\"+e); } }"}
{"time": "2020-12-28 06:39:19.097998", "n_pass": [427, 82, 30], "score": "0.2125", "loss": "2.133", "code": "d run(){try{dw();}catch(Throwable t){or(\"\"+e);} }"}
{"time": "2020-12-28 06:39:21.725290", "n_pass": [429, 83, 31], "score": "0.2125", "loss": "2.133", "code": "d run(){try{dw();}catch(Throwable t){or(\"\"+e);}}"}

Minimal simplified code:
d run(){try{dw();}catch(Throwable t){or(""+e);}}

