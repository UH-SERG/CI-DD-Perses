
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/googlesamples__androidtv-Leanback/app/src/main/java/com/example/android/tvleanback/ui/VerticalGridFragment_onCreate.java
method_name = onCreate
method_body = @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }
predict, score, loss = onCreate, 0.9999961853027344, 3.814689989667386e-06

Trace of simplified code(s):
{"time": "2020-12-28 10:55:12.739026", "n_pass": [1, 1, 1], "score": "1.0", "loss": "0.0", "code": "@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:15.387890", "n_pass": [23, 2, 2], "score": "1.0", "loss": "0.0", "code": "@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:18.030976", "n_pass": [45, 3, 3], "score": "1.0", "loss": "0.0", "code": "@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setter(mVideoCursorAdapring(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:20.662027", "n_pass": [52, 4, 4], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setter(mVideoCursorAdapring(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:23.285868", "n_pass": [57, 5, 5], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoCursorAdapring(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:25.927333", "n_pass": [92, 6, 6], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:28.582961", "n_pass": [94, 7, 7], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.stral_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:31.216551", "n_pass": [95, 8, 8], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:33.839389", "n_pass": [98, 9, 9], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInst== null) { prepareEntranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:36.458933", "n_pass": [100, 10, 10], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInst== null) {tranceTransition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:39.084515", "n_pass": [101, 11, 11], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInst== null) {sition(); } setupFragment(); }"}
{"time": "2020-12-28 10:55:41.707901", "n_pass": [102, 12, 12], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInst== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:55:44.758424", "n_pass": [107, 13, 13], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savedInstanceState); mViter(mVideoring(R.strtle)); if (savedInst== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:55:49.992402", "n_pass": [111, 15, 14], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mVideoring(R.strtle)); if (savedInst== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:55:55.706502", "n_pass": [154, 17, 15], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(R.strtle)); if (savedInst== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:55:58.323541", "n_pass": [156, 18, 16], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(tle)); if (savedInst== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:56:00.947731", "n_pass": [160, 19, 17], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(tle)); if (save== null) {} setupFragment(); }"}
{"time": "2020-12-28 10:56:03.590556", "n_pass": [161, 20, 18], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(tle)); if (savell) {} setupFragment(); }"}
{"time": "2020-12-28 10:56:06.207598", "n_pass": [164, 21, 19], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(tle)); if (savell) {} setgment(); }"}
{"time": "2020-12-28 10:56:08.818309", "n_pass": [165, 22, 20], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle sceState) { super.onCreate(savetate); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:12.232478", "n_pass": [171, 23, 21], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle ste) { super.onCreate(savetate); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:14.872429", "n_pass": [173, 24, 22], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle ste) {r.onCreate(savetate); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:23.946265", "n_pass": [228, 27, 23], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(savetate); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:37.069629", "n_pass": [236, 32, 24], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(etate); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:39.696484", "n_pass": [237, 33, 25], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mViter(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:42.334944", "n_pass": [240, 34, 26], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(mring(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:44.960671", "n_pass": [242, 35, 27], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng(tle)); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:47.576251", "n_pass": [244, 36, 28], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng()); if (savell) {} set(); }"}
{"time": "2020-12-28 10:56:50.219584", "n_pass": [248, 37, 29], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng()); if (sll) {} set(); }"}
{"time": "2020-12-28 10:56:52.795953", "n_pass": [250, 38, 30], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng()); if (sll) set(); }"}
{"time": "2020-12-28 10:56:55.407954", "n_pass": [251, 39, 31], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng()); if (sll)t(); }"}
{"time": "2020-12-28 10:56:58.015506", "n_pass": [252, 40, 32], "score": "1.0", "loss": "0.0", "code": "id onCreate(Bundle s) {r.onCreate(te); mer(ng()); if (sll); }"}
{"time": "2020-12-28 10:57:02.657038", "n_pass": [260, 41, 33], "score": "0.9999", "loss": "0.0001", "code": "id onCreate(ndle s) {r.onCreate(te); mer(ng()); if (sll); }"}
{"time": "2020-12-28 10:57:05.273274", "n_pass": [261, 42, 34], "score": "0.9999", "loss": "0.0002", "code": "id onCreate(le s) {r.onCreate(te); mer(ng()); if (sll); }"}
{"time": "2020-12-28 10:57:18.375686", "n_pass": [276, 47, 35], "score": "0.9999", "loss": "0.0001", "code": "id onCreate(le s) {r.onCreate(te); mer(ng()); (sll); }"}
{"time": "2020-12-28 10:57:35.730306", "n_pass": [349, 52, 36], "score": "0.9999", "loss": "0.0001", "code": "id onCreate(le s) {r.onCreate(te); mer(ng()); (s); }"}
{"time": "2020-12-28 10:57:38.341615", "n_pass": [352, 53, 37], "score": "0.9999", "loss": "0.0001", "code": "d onCreate(le s) {r.onCreate(te); mer(ng()); (s); }"}
{"time": "2020-12-28 10:57:45.019631", "n_pass": [364, 54, 38], "score": "1.0", "loss": "0.0001", "code": "d onCreate(e s) {r.onCreate(te); mer(ng()); (s); }"}
{"time": "2020-12-28 10:57:47.634324", "n_pass": [369, 55, 39], "score": "1.0", "loss": "0.0001", "code": "d onCreate(e s){r.onCreate(te); mer(ng()); (s); }"}
{"time": "2020-12-28 10:58:13.726124", "n_pass": [382, 65, 40], "score": "1.0", "loss": "0.0001", "code": "d onCreate(e s){r.onCreate(e); mer(ng()); (s); }"}
{"time": "2020-12-28 10:58:16.342850", "n_pass": [383, 66, 41], "score": "0.8626", "loss": "0.3846", "code": "d onCreate(e s){r.onCreate(); mer(ng()); (s); }"}
{"time": "2020-12-28 10:58:18.962555", "n_pass": [386, 67, 42], "score": "0.8626", "loss": "0.3846", "code": "d onCreate(e s){r.onCreate();mer(ng()); (s); }"}
{"time": "2020-12-28 10:58:21.567227", "n_pass": [387, 68, 43], "score": "0.9957", "loss": "0.0073", "code": "d onCreate(e s){r.onCreate();er(ng()); (s); }"}
{"time": "2020-12-28 10:58:24.205977", "n_pass": [388, 69, 44], "score": "0.9963", "loss": "0.0063", "code": "d onCreate(e s){r.onCreate();r(ng()); (s); }"}
{"time": "2020-12-28 10:58:26.828398", "n_pass": [389, 70, 45], "score": "0.941", "loss": "0.1111", "code": "d onCreate(e s){r.onCreate();(ng()); (s); }"}
{"time": "2020-12-28 10:58:58.503425", "n_pass": [442, 80, 46], "score": "0.941", "loss": "0.1111", "code": "d onCreate(e s){r.onCreate();(ng());(s); }"}
{"time": "2020-12-28 10:59:01.104002", "n_pass": [447, 81, 47], "score": "0.941", "loss": "0.1111", "code": "d onCreate(e s){r.onCreate();(ng());(s);}"}
{"time": "2020-12-28 10:59:31.302344", "n_pass": [479, 91, 48], "score": "0.8662", "loss": "0.2262", "code": "d onCreate(e s){r.onCreate();(g());(s);}"}

Minimal simplified code:
d onCreate(e s){r.onCreate();(g());(s);}

