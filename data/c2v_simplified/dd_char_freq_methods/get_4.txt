
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/websocket/AsyncChannelWrapperSecure_get.java
method_name = get
method_body = @Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString("asyncChannelWrapperSecure.tooBig", result), null); } return new Integer(result.intValue()); }
predict, score, loss = get, 0.9907217025756836, 0.01919679529964924

Trace of simplified code(s):
{"time": "2020-12-28 06:51:11.432292", "n_pass": [1, 1, 1], "score": "0.9907", "loss": "0.0192", "code": "@Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(\"asyncChannelWrapperSecure.tooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:14.114210", "n_pass": [44, 2, 2], "score": "0.979", "loss": "0.0573", "code": "ger get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(\"asyncChannelWrapperSecure.tooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:16.777099", "n_pass": [47, 3, 3], "score": "0.9724", "loss": "0.0604", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(\"asyncChannelWrapperSecure.tooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:19.428966", "n_pass": [52, 4, 4], "score": "0.9872", "loss": "0.0293", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throw new ExecutionException(sm.getString(\"asyncChannelWrapperSecure.tooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:22.058044", "n_pass": [54, 5, 5], "score": "0.8104", "loss": "0.814", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncChannelWrapperSecure.tooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:24.687214", "n_pass": [56, 6, 6], "score": "0.8104", "loss": "0.814", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return new Integer(result.intValue()); }"}
{"time": "2020-12-28 06:51:27.333290", "n_pass": [93, 7, 7], "score": "0.4377", "loss": "1.8405", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:29.960987", "n_pass": [101, 8, 8], "score": "0.5185", "loss": "1.9658", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEimeoutException { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:32.591860", "n_pass": [102, 9, 9], "score": "0.5185", "loss": "1.9658", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Long result = wrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:35.218764", "n_pass": [104, 10, 10], "score": "0.7013", "loss": "1.2706", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(timeout, unit); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:37.831978", "n_pass": [106, 11, 11], "score": "0.3194", "loss": "3.4843", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reeger.MAX_VALUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:40.456293", "n_pass": [108, 12, 12], "score": "0.2616", "loss": "3.8911", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reLUE) { throon(sm.getString(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:43.095842", "n_pass": [161, 13, 13], "score": "0.1775", "loss": "4.4809", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reLUE) { throon(smring(\"asyncooBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:45.736980", "n_pass": [163, 14, 14], "score": "0.1775", "loss": "4.4809", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reLUE) { throon(smring(\"oBig\", result), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:48.355672", "n_pass": [165, 15, 15], "score": "0.1679", "loss": "4.504", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.intValue()); }"}
{"time": "2020-12-28 06:51:56.239461", "n_pass": [171, 18, 16], "score": "0.1435", "loss": "4.7471", "code": "ger get(long timeout, TimeUnit unit) throws ExecutionEtion { Longrapped.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:04.542266", "n_pass": [182, 21, 17], "score": "0.1435", "loss": "4.7471", "code": "ger get(long timeout, TimeUnit unit) throws EionEtion { Longrapped.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:07.186404", "n_pass": [183, 22, 18], "score": "0.1435", "loss": "4.7471", "code": "ger get(long timeout, TimeUnit unit) throws Eion { Longrapped.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:09.808404", "n_pass": [185, 23, 19], "score": "0.1435", "loss": "4.7471", "code": "ger get(long timeout, TimeUnit unit) throws Eion {rapped.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:12.448640", "n_pass": [186, 24, 20], "score": "0.224", "loss": "4.0803", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (reLUE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:31.369554", "n_pass": [265, 31, 21], "score": "0.2828", "loss": "3.7685", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { throon(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:36.629907", "n_pass": [268, 33, 22], "score": "0.4092", "loss": "3.016", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smring(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:39.270966", "n_pass": [270, 34, 23], "score": "0.3377", "loss": "3.4282", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"oBig\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:41.893518", "n_pass": [272, 35, 24], "score": "0.2099", "loss": "4.371", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t), null); } return (result.in()); }"}
{"time": "2020-12-28 06:52:44.546148", "n_pass": [275, 36, 25], "score": "0.3912", "loss": "3.6116", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (result.in()); }"}
{"time": "2020-12-28 06:52:52.432799", "n_pass": [281, 39, 26], "score": "0.8989", "loss": "1.0022", "code": "ger get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:52:57.683668", "n_pass": [286, 41, 27], "score": "0.8956", "loss": "0.6853", "code": "r get(long timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:01.137304", "n_pass": [290, 42, 28], "score": "0.9151", "loss": "0.4703", "code": "r get(ng timeout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:03.788548", "n_pass": [293, 43, 29], "score": "0.8632", "loss": "0.7589", "code": "r get(ng teout, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:06.401056", "n_pass": [294, 44, 30], "score": "0.5669", "loss": "1.6798", "code": "r get(ng tut, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:09.012096", "n_pass": [295, 45, 31], "score": "0.8672", "loss": "0.7049", "code": "r get(ng t, TimeUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:11.625264", "n_pass": [297, 46, 32], "score": "0.8929", "loss": "0.6745", "code": "r get(ng t, meUnit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:14.239829", "n_pass": [298, 47, 33], "score": "0.806", "loss": "0.739", "code": "r get(ng t, Unit unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:16.860101", "n_pass": [299, 48, 34], "score": "0.8784", "loss": "0.5995", "code": "r get(ng t, t unit) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:19.480851", "n_pass": [301, 49, 35], "score": "0.7825", "loss": "0.6416", "code": "r get(ng t, t u) throws Eion {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:22.116608", "n_pass": [305, 50, 36], "score": "0.7574", "loss": "0.7121", "code": "r get(ng t, t u) throws n {d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:39.867480", "n_pass": [407, 55, 37], "score": "0.7574", "loss": "0.7121", "code": "r get(ng t, t u) throws n{d.get(it); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:52.964306", "n_pass": [415, 60, 38], "score": "0.7754", "loss": "0.6218", "code": "r get(ng t, t u) throws n{d.get(t); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:55.574196", "n_pass": [416, 61, 39], "score": "0.8716", "loss": "0.2526", "code": "r get(ng t, t u) throws n{d.get(); if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:53:58.213184", "n_pass": [419, 62, 40], "score": "0.8716", "loss": "0.2526", "code": "r get(ng t, t u) throws n{d.get();if (UE) { thr(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:54:00.845136", "n_pass": [425, 63, 41], "score": "0.6982", "loss": "0.4306", "code": "r get(ng t, t u) throws n{d.get();if (UE) { r(smg(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:54:03.482628", "n_pass": [427, 64, 42], "score": "0.6439", "loss": "0.5121", "code": "r get(ng t, t u) throws n{d.get();if (UE) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:54:23.837956", "n_pass": [452, 71, 43], "score": "0.559", "loss": "0.6572", "code": "r get(g t, t u) throws n{d.get();if (UE) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:54:26.456989", "n_pass": [457, 72, 44], "score": "0.559", "loss": "0.6572", "code": "r get(g t,t u) throws n{d.get();if (UE) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:54:29.095790", "n_pass": [462, 73, 45], "score": "0.559", "loss": "0.6572", "code": "r get(g t,t u)throws n{d.get();if (UE) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:03.426070", "n_pass": [568, 84, 46], "score": "0.559", "loss": "0.6572", "code": "r get(g t,t u)throws n{d.get();if(UE) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:06.051194", "n_pass": [569, 85, 47], "score": "0.4902", "loss": "0.7895", "code": "r get(g t,t u)throws n{d.get();if(E) { r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:08.672023", "n_pass": [572, 86, 48], "score": "0.4902", "loss": "0.7895", "code": "r get(g t,t u)throws n{d.get();if(E){ r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:11.316282", "n_pass": [574, 87, 49], "score": "0.4902", "loss": "0.7895", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"g\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:13.944074", "n_pass": [580, 88, 50], "score": "0.6518", "loss": "0.4723", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),ll); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:16.566750", "n_pass": [586, 89, 51], "score": "0.6077", "loss": "0.5476", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l); } return (ult.in()); }"}
{"time": "2020-12-28 06:55:19.204161", "n_pass": [590, 90, 52], "score": "0.6077", "loss": "0.5476", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l);} return (ult.in()); }"}
{"time": "2020-12-28 06:55:21.826297", "n_pass": [592, 91, 53], "score": "0.6077", "loss": "0.5476", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l);}return (ult.in()); }"}
{"time": "2020-12-28 06:55:40.224261", "n_pass": [599, 98, 54], "score": "0.6077", "loss": "0.5476", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l);}return(ult.in()); }"}
{"time": "2020-12-28 06:55:53.407230", "n_pass": [605, 103, 55], "score": "0.5434", "loss": "0.6698", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l);}return(ult.n()); }"}
{"time": "2020-12-28 06:55:56.029413", "n_pass": [611, 104, 56], "score": "0.5434", "loss": "0.6698", "code": "r get(g t,t u)throws n{d.get();if(E){r(g(\"\",t),l);}return(ult.n());}"}

Minimal simplified code:
r get(g t,t u)throws n{d.get();if(E){r(g("",t),l);}return(ult.n());}

