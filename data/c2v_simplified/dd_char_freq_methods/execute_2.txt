
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/ant/FindLeaksTask_execute.java
method_name = execute
method_body = @Override public void execute() throws BuildException { super.execute(); execute("/findleaks?statusLine=" + Boolean.toString(statusLine)); }
predict, score, loss = execute, 0.9996827840805054, 0.00040797016117721796

Trace of simplified code(s):
{"time": "2020-12-28 06:04:08.088879", "n_pass": [1, 1, 1], "score": "0.9997", "loss": "0.0004", "code": "@Override public void execute() throws BuildException { super.execute(); execute(\"/findleaks?statusLine=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-28 06:04:10.729993", "n_pass": [10, 2, 2], "score": "0.9462", "loss": "0.0695", "code": "@Override public void execute() throws BuildException { super.execute( + Boolean.toString(statusLine)); }"}
{"time": "2020-12-28 06:04:13.330809", "n_pass": [21, 3, 3], "score": "0.9786", "loss": "0.028", "code": "void execute() throws BuildException { super.execute( + Boolean.toString(statusLine)); }"}
{"time": "2020-12-28 06:04:18.941983", "n_pass": [42, 5, 4], "score": "0.9897", "loss": "0.0215", "code": "void execute() throws BuildException { supe( + Boolean.toString(statusLine)); }"}
{"time": "2020-12-28 06:04:21.536531", "n_pass": [44, 6, 5], "score": "0.9967", "loss": "0.0077", "code": "void execute() throws BuildException { supe( + Booleng(statusLine)); }"}
{"time": "2020-12-28 06:04:27.124199", "n_pass": [70, 8, 6], "score": "0.9973", "loss": "0.0066", "code": "void execute() throws BuildException { supe( + Booleng(sLine)); }"}
{"time": "2020-12-28 06:04:29.714239", "n_pass": [71, 9, 7], "score": "0.998", "loss": "0.0043", "code": "void execute() throws BuildException { supe( + Booleng()); }"}
{"time": "2020-12-28 06:04:41.240374", "n_pass": [84, 13, 8], "score": "0.8736", "loss": "0.422", "code": "void execute() throws BuildException { supe( leng()); }"}
{"time": "2020-12-28 06:04:52.764143", "n_pass": [124, 17, 9], "score": "0.9988", "loss": "0.0021", "code": "void execute() throws BuildException { supe(eng()); }"}
{"time": "2020-12-28 06:04:55.375395", "n_pass": [128, 18, 10], "score": "0.9994", "loss": "0.0016", "code": "id execute() throws BuildException { supe(eng()); }"}
{"time": "2020-12-28 06:05:20.749669", "n_pass": [148, 27, 11], "score": "0.9992", "loss": "0.0016", "code": "id execute() throws BuildException { se(eng()); }"}
{"time": "2020-12-28 06:05:43.499109", "n_pass": [171, 35, 12], "score": "0.9989", "loss": "0.0021", "code": "id execute() throws BuildException {e(eng()); }"}
{"time": "2020-12-28 06:06:07.720959", "n_pass": [238, 43, 13], "score": "0.8438", "loss": "0.41", "code": "id execute() throws BuildException {(eng()); }"}
{"time": "2020-12-28 06:06:10.308222", "n_pass": [239, 44, 14], "score": "0.7941", "loss": "0.5417", "code": "id execute() throws BuildException {(ng()); }"}
{"time": "2020-12-28 06:06:12.893447", "n_pass": [240, 45, 15], "score": "0.7638", "loss": "0.6", "code": "id execute() throws BuildException {(g()); }"}
{"time": "2020-12-28 06:06:15.492849", "n_pass": [242, 46, 16], "score": "0.7638", "loss": "0.6", "code": "id execute() throws BuildException {(g); }"}
{"time": "2020-12-28 06:06:18.071524", "n_pass": [245, 47, 17], "score": "0.9576", "loss": "0.0535", "code": "d execute() throws BuildException {(g); }"}
{"time": "2020-12-28 06:06:24.176519", "n_pass": [257, 48, 18], "score": "0.9576", "loss": "0.0535", "code": "d execute()throws BuildException {(g); }"}
{"time": "2020-12-28 06:07:02.831191", "n_pass": [279, 63, 19], "score": "0.9576", "loss": "0.0535", "code": "d execute()throws BuildException{(g); }"}
{"time": "2020-12-28 06:07:45.832630", "n_pass": [323, 78, 20], "score": "0.9576", "loss": "0.0535", "code": "d execute()throws BuildException{(g);}"}

Minimal simplified code:
d execute()throws BuildException{(g);}

