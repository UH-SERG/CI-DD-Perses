
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/comet/TestCometProcessor_init.java
method_name = init
method_body = @Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); }
predict, score, loss = init, 0.9942877888679504, 0.011515812017023563

Trace of simplified code(s):
{"time": "2020-12-28 10:33:06.366930", "n_pass": [1, 1, 1], "score": "0.9943", "loss": "0.0115", "code": "@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:09.004293", "n_pass": [10, 2, 2], "score": "0.9964", "loss": "0.0076", "code": "@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolea = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:11.647105", "n_pass": [38, 3, 3], "score": "0.9921", "loss": "0.015", "code": "@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolea = Boolean.valueOf(gnitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:14.684406", "n_pass": [44, 4, 4], "score": "0.9266", "loss": "0.0778", "code": "@Override public void init() throws ServletException { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolea = Boolean.valueOf(gnitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:17.372781", "n_pass": [48, 5, 5], "score": "0.4662", "loss": "0.8118", "code": "@Override public void init() throws ServletException { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValuea = Boolean.valueOf(gnitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:20.475234", "n_pass": [76, 6, 6], "score": "0.9735", "loss": "0.0838", "code": "@Override public void init() throws ServletException { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValun.valueOf(gnitParameter(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:23.113341", "n_pass": [77, 7, 7], "score": "0.991", "loss": "0.033", "code": "@Override public void init() throws ServletException { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValun.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:25.757147", "n_pass": [81, 8, 8], "score": "0.5903", "loss": "0.7397", "code": "public void init() throws ServletException { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValun.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:31.019428", "n_pass": [85, 10, 9], "score": "0.9036", "loss": "0.2865", "code": "public void init() throws Servon { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValun.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:38.900869", "n_pass": [92, 13, 10], "score": "0.8866", "loss": "0.3137", "code": "public void init() throws Servon { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:41.516867", "n_pass": [97, 14, 11], "score": "0.7094", "loss": "0.8655", "code": "d init() throws Servon { failOnBe(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:52.438700", "n_pass": [141, 18, 12], "score": "0.6634", "loss": "0.9423", "code": "d init() throws Servon { failOnBe(gvletConfig().getInitParameter(FAIL_ON_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:55.103294", "n_pass": [142, 19, 13], "score": "0.6634", "loss": "0.9423", "code": "d init() throws Servon { failOnBe(gonfig().getInitParameter(FAIL_ON_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:33:57.764675", "n_pass": [143, 20, 14], "score": "0.6601", "loss": "0.9442", "code": "d init() throws Servon { failOnBe(g().getInitParameter(FAIL_ON_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:34:08.362298", "n_pass": [148, 24, 15], "score": "0.6601", "loss": "0.9442", "code": "d init() throws Servon { failOnBe(g().getInitParameter(N_BEGIN)).n.valueOf(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:34:13.658232", "n_pass": [151, 26, 16], "score": "0.7161", "loss": "0.8435", "code": "d init() throws Servon { failOnBe(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).booleanValue(); }"}
{"time": "2020-12-28 10:34:19.037838", "n_pass": [156, 28, 17], "score": "0.8411", "loss": "0.5145", "code": "d init() throws Servon { failOnBe(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:34:43.699544", "n_pass": [221, 36, 18], "score": "0.8411", "loss": "0.5145", "code": "d init() throws rvon { failOnBe(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:34:49.545026", "n_pass": [223, 38, 19], "score": "0.284", "loss": "2.7212", "code": "d init() throws rv { failOnBe(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:34:52.344702", "n_pass": [225, 39, 20], "score": "0.284", "loss": "2.7212", "code": "d init() throws rv { lOnBe(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:34:55.174963", "n_pass": [226, 40, 21], "score": "0.1915", "loss": "3.1713", "code": "d init() throws rv { Be(g().getInitParameter(N_BEGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:35:08.945749", "n_pass": [235, 45, 22], "score": "0.1915", "loss": "3.1713", "code": "d init() throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(FAIL_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:35:14.692461", "n_pass": [241, 47, 23], "score": "0.1915", "loss": "3.1713", "code": "d init() throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(F_ON_END)).boolee(); }"}
{"time": "2020-12-28 10:35:20.173042", "n_pass": [243, 49, 24], "score": "0.1915", "loss": "3.1713", "code": "d init() throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(F_OND)).boolee(); }"}
{"time": "2020-12-28 10:35:51.564407", "n_pass": [333, 59, 25], "score": "0.3202", "loss": "3.1549", "code": "d init() throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).boolee(); }"}
{"time": "2020-12-28 10:35:56.780453", "n_pass": [337, 61, 26], "score": "0.3202", "loss": "3.1549", "code": "d init() throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:01.396492", "n_pass": [349, 62, 27], "score": "0.3202", "loss": "3.1549", "code": "d init()throws rv { Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:04.013069", "n_pass": [357, 63, 28], "score": "0.4923", "loss": "1.4119", "code": "d init()throws v { Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:06.633966", "n_pass": [359, 64, 29], "score": "0.4923", "loss": "1.4119", "code": "d init()throws v{ Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:09.251294", "n_pass": [361, 65, 30], "score": "0.4923", "loss": "1.4119", "code": "d init()throws v{Be(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:11.859077", "n_pass": [362, 66, 31], "score": "0.5894", "loss": "1.1132", "code": "d init()throws v{e(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:14.470022", "n_pass": [363, 67, 32], "score": "0.6552", "loss": "0.7833", "code": "d init()throws v{(g().getInitParameter(EGIN)).n.f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:53.669467", "n_pass": [386, 82, 33], "score": "0.7432", "loss": "0.4407", "code": "d init()throws v{(g().getInitParameter(EGIN)).f(gr(F_O)).booe(); }"}
{"time": "2020-12-28 10:36:56.277372", "n_pass": [388, 83, 34], "score": "0.5249", "loss": "0.6509", "code": "d init()throws v{(g().getInitParameter(EGIN)).f((F_O)).booe(); }"}
{"time": "2020-12-28 10:37:43.447308", "n_pass": [471, 100, 35], "score": "0.5249", "loss": "0.6509", "code": "d init()throws v{(g().getInitParameter(EGIN)).f((F_O)).ooe(); }"}
{"time": "2020-12-28 10:37:53.906394", "n_pass": [478, 104, 36], "score": "0.5249", "loss": "0.6509", "code": "d init()throws v{(g().getInitParameter(EGIN)).f((F_O)).ooe();}"}
{"time": "2020-12-28 10:38:40.212502", "n_pass": [519, 121, 37], "score": "0.8761", "loss": "0.1488", "code": "d init()throws v{(g().getInitParameter(GIN)).f((F_O)).ooe();}"}
{"time": "2020-12-28 10:38:50.657248", "n_pass": [529, 125, 38], "score": "0.8613", "loss": "0.1671", "code": "d init()throws v{(g().getInitParameter(GIN)).f((_O)).ooe();}"}
{"time": "2020-12-28 10:38:53.285441", "n_pass": [530, 126, 39], "score": "0.8613", "loss": "0.1671", "code": "d init()throws v{(g().getInitParameter(GIN)).f((O)).ooe();}"}
{"time": "2020-12-28 10:38:55.888702", "n_pass": [535, 127, 40], "score": "0.8496", "loss": "0.1815", "code": "d init()throws v{(g().getInitParameter(GIN)).f((O)).oe();}"}
{"time": "2020-12-28 10:38:58.494647", "n_pass": [536, 128, 41], "score": "0.8789", "loss": "0.1465", "code": "d init()throws v{(g().getInitParameter(GIN)).f((O)).e();}"}

Minimal simplified code:
d init()throws v{(g().getInitParameter(GIN)).f((O)).e();}

