
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/net/ha/JournalClient_run.java
method_name = run
method_body = @Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$("Retrying reconnect ... [").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$("Unknown command: ").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$("Network error. Server died?").$(); LOG.debug().$("Network error details: ").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$("Unhandled exception in client").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$("Fatal exception when closing client").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$("Terminated").$(); } }
predict, score, loss = run, 0.7871399521827698, 0.5845625996589661

Trace of simplified code(s):
{"time": "2021-01-20 23:20:57.337524", "n_pass": [1, 1, 1], "score": "0.9247", "loss": "0.5879", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(\"Retrying reconnect ... [\").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(); LOG.debug().$(\"Network error details: \").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:00.353663", "n_pass": [22, 2, 2], "score": "0.2388", "loss": "2.6047", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(); LOG.debug().$(\"Network error details: \").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:03.413284", "n_pass": [49, 3, 3], "score": "0.6023", "loss": "0.9004", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(\"Fatal exception when closing client\").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:06.683030", "n_pass": [173, 4, 4], "score": "0.9436", "loss": "0.2879", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:09.620055", "n_pass": [175, 5, 5], "score": "0.8829", "loss": "0.2044", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:12.582895", "n_pass": [183, 6, 6], "score": "0.9304", "loss": "0.2019", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:15.520142", "n_pass": [189, 7, 7], "score": "0.392", "loss": "1.9027", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(\"Unknown command: \").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:18.558783", "n_pass": [210, 8, 8], "score": "0.9932", "loss": "0.0192", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:21.518740", "n_pass": [216, 9, 9], "score": "0.7893", "loss": "0.7624", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\"Network error. Server died?\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:24.867460", "n_pass": [356, 10, 10], "score": "0.9941", "loss": "0.0183", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\"\").$(\"Unhandled exception in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:27.770721", "n_pass": [357, 11, 11], "score": "0.9618", "loss": "0.0752", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:30.706806", "n_pass": [360, 12, 12], "score": "0.8563", "loss": "0.3384", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:33.622972", "n_pass": [362, 13, 13], "score": "0.9991", "loss": "0.0025", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:36.696028", "n_pass": [364, 14, 14], "score": "0.6922", "loss": "0.5489", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:39.661716", "n_pass": [374, 15, 15], "score": "0.9634", "loss": "0.082", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch().$(\"Terminated\").$(); } }"}
{"time": "2021-01-20 23:21:42.530124", "n_pass": [375, 16, 16], "score": "0.9947", "loss": "0.0091", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:21:45.416018", "n_pass": [381, 17, 17], "score": "0.9136", "loss": "0.2103", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:21:48.342972", "n_pass": [387, 18, 18], "score": "0.7021", "loss": "0.6521", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:21:51.273634", "n_pass": [394, 19, 19], "score": "0.9468", "loss": "0.0672", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:21:54.184741", "n_pass": [396, 20, 20], "score": "0.9979", "loss": "0.0025", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:21:57.360548", "n_pass": [409, 21, 21], "score": "0.7107", "loss": "0.6144", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:00.311879", "n_pass": [411, 22, 22], "score": "0.9982", "loss": "0.004", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:03.244367", "n_pass": [414, 23, 23], "score": "0.9988", "loss": "0.002", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:06.136757", "n_pass": [416, 24, 24], "score": "0.6336", "loss": "1.0267", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:09.108738", "n_pass": [428, 25, 25], "score": "0.9717", "loss": "0.0463", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStatebreak; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:11.973834", "n_pass": [429, 26, 26], "score": "0.7072", "loss": "0.4509", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:14.887004", "n_pass": [432, 27, 27], "score": "0.8592", "loss": "0.2495", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:17.765206", "n_pass": [433, 28, 28], "score": "0.6372", "loss": "1.2264", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected = false; break; default:$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:20.683034", "n_pass": [436, 29, 29], "score": "0.9865", "loss": "0.0263", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:23.582135", "n_pass": [441, 30, 30], "score": "0.933", "loss": "0.253", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:26.704068", "n_pass": [470, 31, 31], "score": "0.9922", "loss": "0.0164", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendStateHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:29.790054", "n_pass": [504, 32, 32], "score": "0.8301", "loss": "0.3824", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:33.214378", "n_pass": [715, 33, 33], "score": "0.5207", "loss": "1.3313", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); ; break; case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:36.119850", "n_pass": [716, 34, 34], "score": "0.9929", "loss": "0.0149", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN: connected =$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:44.749941", "n_pass": [724, 37, 35], "score": "0.8099", "loss": "0.8101", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:47.588854", "n_pass": [726, 38, 36], "score": "0.9758", "loss": "0.0566", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event == JournalClientEvents.EVT_NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:50.467548", "n_pass": [730, 39, 37], "score": "0.9437", "loss": "0.1455", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVTLOG.error().$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:53.369262", "n_pass": [741, 40, 38], "score": "0.9836", "loss": "0.0441", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$(e).$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:56.202711", "n_pass": [744, 41, 39], "score": "0.6934", "loss": "1.2124", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$(); eventEXCEPTION; } if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:22:59.054975", "n_pass": [746, 42, 40], "score": "0.9097", "loss": "0.5408", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:01.909102", "n_pass": [753, 43, 41], "score": "0.637", "loss": "1.3215", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:04.768360", "n_pass": [754, 44, 42], "score": "0.7638", "loss": "0.5803", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); }  notifyCallback(event); break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:07.657718", "n_pass": [755, 45, 43], "score": "0.9993", "loss": "0.0027", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } ; break; } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:10.594400", "n_pass": [756, 46, 44], "score": "0.999", "loss": "0.0029", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) { LOG.error$(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:13.591580", "n_pass": [760, 47, 45], "score": "0.8803", "loss": "0.5986", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$(); closeChannel(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:16.413664", "n_pass": [762, 48, 46], "score": "0.9818", "loss": "0.0485", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$(); close0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:19.363894", "n_pass": [763, 49, 47], "score": "0.9822", "loss": "0.0478", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); haltLatch.$(); } }"}
{"time": "2021-01-20 23:23:22.190929", "n_pass": [766, 50, 48], "score": "0.9964", "loss": "0.0111", "code": "@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:25.050285", "n_pass": [768, 51, 49], "score": "0.8999", "loss": "0.2748", "code": " void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:27.972853", "n_pass": [771, 52, 50], "score": "0.5439", "loss": "1.0465", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int NONE; boolean connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:33.640222", "n_pass": [776, 54, 51], "score": "0.2682", "loss": "2.8312", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {; do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:36.497507", "n_pass": [784, 55, 52], "score": "0.9761", "loss": "0.0588", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:39.345348", "n_pass": [789, 56, 53], "score": "0.9139", "loss": "0.4677", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { break; } }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:45.018473", "n_pass": [798, 58, 54], "score": "0.9719", "loss": "0.0437", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:47.855756", "n_pass": [801, 59, 55], "score": "0.5994", "loss": "1.7886", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:53.690636", "n_pass": [814, 61, 56], "score": "0.9731", "loss": "0.0369", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:23:56.514308", "n_pass": [818, 62, 57], "score": "0.513", "loss": "2.8343", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected && (retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:02.132432", "n_pass": [825, 64, 58], "score": "0.9933", "loss": "0.0365", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  == 0)) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:04.937948", "n_pass": [827, 65, 59], "score": "0.7458", "loss": "1.2003", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) {SERVER_ERROR; } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:07.764164", "n_pass": [829, 66, 60], "score": "0.7307", "loss": "2.1716", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if (connected && isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:10.873003", "n_pass": [833, 67, 61], "score": "0.4109", "loss": "1.5392", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:13.749226", "n_pass": [842, 68, 62], "score": "0.9948", "loss": "0.0153", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:17.016816", "n_pass": [847, 69, 63], "score": "0.3528", "loss": "3.8634", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:19.803675", "n_pass": [849, 70, 64], "score": "0.5353", "loss": "1.0968", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0); case CommandHEARTBEAT: if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:22.657376", "n_pass": [853, 71, 65], "score": "0.2602", "loss": "3.5996", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) { sendReady();  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:25.466081", "n_pass": [856, 72, 66], "score": "0.2243", "loss": "3.525", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT.$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:31.426189", "n_pass": [873, 74, 67], "score": "0.39", "loss": "1.8624", "code": " void run() { true; notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:34.307890", "n_pass": [892, 75, 68], "score": "0.87", "loss": "0.4422", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:37.142681", "n_pass": [913, 76, 69], "score": "0.8741", "loss": "0.3064", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR); break; } } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:42.797431", "n_pass": [933, 78, 70], "score": "0.6661", "loss": "2.4324", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:24:49.098098", "n_pass": [1023, 80, 71], "score": "0.6043", "loss": "1.7443", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0(); notifyCallback(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:02.302290", "n_pass": [1336, 83, 72], "score": "0.9179", "loss": "0.5527", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents.EVT_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:05.110684", "n_pass": [1338, 84, 73], "score": "0.6252", "loss": "0.9686", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents_ERROR);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:07.900295", "n_pass": [1339, 85, 74], "score": "0.9414", "loss": "0.1583", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } while (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:10.844350", "n_pass": [1343, 86, 75], "score": "0.5854", "loss": "1.4719", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if (!connected(retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:13.661660", "n_pass": [1348, 87, 76], "score": "0.7459", "loss": "0.5191", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount  )) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:16.470765", "n_pass": [1350, 88, 77], "score": "0.9494", "loss": "0.109", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning()) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:19.336800", "n_pass": [1360, 89, 78], "score": "0.9769", "loss": "0.0257", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:22.127109", "n_pass": [1366, 90, 79], "score": "0.9932", "loss": "0.009", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer(); switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:24.934870", "n_pass": [1367, 91, 80], "score": "0.9164", "loss": "0.1813", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command.JOURNAL: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:27.749374", "n_pass": [1374, 92, 81], "score": "0.8977", "loss": "0.2032", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: statsChannel.setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:30.583219", "n_pass": [1376, 93, 82], "score": "0.9941", "loss": "0.0093", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); int index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:33.389114", "n_pass": [1380, 94, 83], "score": "0.9725", "loss": "0.0638", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = intResponseConsumer. deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:36.198717", "n_pass": [1383, 95, 84], "score": "0.9898", "loss": "0.0131", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers.getQuick(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:39.349057", "n_pass": [1385, 96, 85], "score": "0.9453", "loss": "0.1223", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList.set(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:42.238373", "n_pass": [1389, 97, 86], "score": "0.9886", "loss": "0.019", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index, 0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:45.162062", "n_pass": [1391, 98, 87], "score": "0.736", "loss": "0.6511", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {  } break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:47.963442", "n_pass": [1399, 99, 88], "score": "0.9604", "loss": "0.1016", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {} break; case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:50.747801", "n_pass": [1401, 100, 89], "score": "0.9581", "loss": "0.0736", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command.SERVER_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:53.561502", "n_pass": [1404, 101, 90], "score": "0.9826", "loss": "0.0281", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command_SHUTDOWN:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:56.415329", "n_pass": [1405, 102, 91], "score": "0.9593", "loss": "0.0695", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd).$; } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:25:59.228416", "n_pass": [1408, 103, 92], "score": "0.8704", "loss": "0.2473", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } else if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:02.044623", "n_pass": [1412, 104, 93], "score": "0.9901", "loss": "0.0216", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event ==NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:04.844683", "n_pass": [1415, 105, 94], "score": "0.9956", "loss": "0.0055", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event=NONE) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:07.610739", "n_pass": [1416, 106, 95], "score": "0.9813", "loss": "0.0301", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) { _HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:10.415218", "n_pass": [1419, 107, 96], "score": "0.9971", "loss": "0.0036", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:13.194590", "n_pass": [1426, 108, 97], "score": "0.9925", "loss": "0.0088", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$(); event .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:16.070719", "n_pass": [1431, 109, 98], "score": "0.9944", "loss": "0.0097", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" in client\").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:18.977371", "n_pass": [1434, 110, 99], "score": "0.9497", "loss": "0.0957", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel .isOpen()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:21.794725", "n_pass": [1442, 111, 100], "score": "0.9409", "loss": "0.1118", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { sendDisconnect(); } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:24.580184", "n_pass": [1445, 112, 101], "score": "0.9669", "loss": "0.0739", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEvents.EVT_TERMINATED); ; } }"}
{"time": "2021-01-20 23:26:27.394248", "n_pass": [1455, 113, 102], "score": "0.9614", "loss": "0.062", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED); ; } }"}
{"time": "2021-01-20 23:26:30.173083", "n_pass": [1457, 114, 103], "score": "0.9939", "loss": "0.0071", "code": " void run() {notifyCallback(JournalClientEvents.EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:33.429433", "n_pass": [1464, 115, 104], "score": "0.9757", "loss": "0.0376", "code": " void run() {notifyCallback(EVT_RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:36.249310", "n_pass": [1465, 116, 105], "score": "0.9962", "loss": "0.004", "code": " void run() {notifyCallback(RUNNING); int  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:38.994146", "n_pass": [1468, 117, 106], "score": "0.9957", "loss": "0.0048", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try { openChannelcounter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:41.794995", "n_pass": [1490, 118, 107], "score": "0.9968", "loss": "0.006", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:44.594325", "n_pass": [1491, 119, 108], "score": "0.9958", "loss": "0.0054", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:47.387753", "n_pass": [1502, 120, 109], "score": "0.9963", "loss": "0.0052", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} }; notifyCallback(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:50.176604", "n_pass": [1507, 121, 110], "score": "0.9952", "loss": "0.0069", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:53.129003", "n_pass": [1516, 122, 111], "score": "0.9961", "loss": "0.0044", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents.EVT); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:55.896828", "n_pass": [1518, 123, 112], "score": "0.9865", "loss": "0.0162", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:26:58.669552", "n_pass": [1521, 124, 113], "score": "0.9831", "loss": "0.0331", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index =  deltaConsumers(statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:01.745623", "n_pass": [1569, 125, 114], "score": "0.9859", "loss": "0.0375", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel); statusSentList(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:04.517009", "n_pass": [1572, 126, 115], "score": "0.9968", "loss": "0.0035", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  case Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:07.348763", "n_pass": [1582, 127, 116], "score": "0.9966", "loss": "0.004", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { LOG.error$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:10.141773", "n_pass": [1598, 128, 117], "score": "0.9973", "loss": "0.0034", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents); loginRetryCount; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:13.527392", "n_pass": [1677, 129, 118], "score": "0.9956", "loss": "0.0054", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);; } catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:16.291410", "n_pass": [1678, 130, 119], "score": "0.9956", "loss": "0.0056", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index = (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:19.164253", "n_pass": [1724, 131, 120], "score": "0.9968", "loss": "0.0043", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); index (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:27:22.780422", "n_pass": [1873, 132, 121], "score": "0.9971", "loss": "0.0035", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(index0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:05.716726", "n_pass": [2323, 133, 122], "score": "0.9962", "loss": "0.0056", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);  if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:08.482016", "n_pass": [2327, 134, 123], "score": "0.9966", "loss": "0.0044", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0); if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:11.239314", "n_pass": [2328, 135, 124], "score": "0.9969", "loss": "0.0037", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if (processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:14.029371", "n_pass": [2330, 136, 125], "score": "0.9964", "loss": "0.0045", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()) {}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:16.781504", "n_pass": [2336, 137, 126], "score": "0.9972", "loss": "0.0033", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}  Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:19.587853", "n_pass": [2339, 138, 127], "score": "0.9966", "loss": "0.0039", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){} Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:22.371300", "n_pass": [2340, 139, 128], "score": "0.9955", "loss": "0.0051", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command:(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:25.141243", "n_pass": [2342, 140, 129], "score": "0.9953", "loss": "0.0058", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command(cmd); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:27.896714", "n_pass": [2344, 141, 130], "score": "0.9976", "loss": "0.0034", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command(); } } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:30.639929", "n_pass": [2347, 142, 131], "score": "0.9967", "loss": "0.004", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();} } if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:33.464643", "n_pass": [2349, 143, 132], "score": "0.9976", "loss": "0.0031", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}} if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:36.231804", "n_pass": [2351, 144, 133], "score": "0.9957", "loss": "0.0049", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if (event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:38.987572", "n_pass": [2353, 145, 134], "score": "0.9976", "loss": "0.0035", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event) {  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:41.775172", "n_pass": [2357, 146, 135], "score": "0.9882", "loss": "0.0223", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){  } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:44.511425", "n_pass": [2359, 147, 136], "score": "0.9879", "loss": "0.0274", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){ } } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:47.273741", "n_pass": [2360, 148, 137], "score": "0.9971", "loss": "0.0035", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){} } catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:50.012545", "n_pass": [2362, 149, 138], "score": "0.9966", "loss": "0.0044", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}} catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:52.769269", "n_pass": [2364, 150, 139], "score": "0.9885", "loss": "0.0286", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch (IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:55.719047", "n_pass": [2366, 151, 140], "score": "0.9965", "loss": "0.0041", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e) { $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:28:58.501163", "n_pass": [2372, 152, 141], "score": "0.9962", "loss": "0.0052", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){ $(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:01.244045", "n_pass": [2374, 153, 142], "score": "0.9943", "loss": "0.0072", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){$(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:04.007190", "n_pass": [2375, 154, 143], "score": "0.997", "loss": "0.0037", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e.getMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:06.754865", "n_pass": [2378, 155, 144], "score": "0.997", "loss": "0.0036", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(egetMessage()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:09.558434", "n_pass": [2379, 156, 145], "score": "0.998", "loss": "0.003", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$() .$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:12.343929", "n_pass": [2387, 157, 146], "score": "0.9966", "loss": "0.0041", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$();} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:15.338143", "n_pass": [2394, 158, 147], "score": "0.9949", "loss": "0.0066", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { ; } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:18.240887", "n_pass": [2405, 159, 148], "score": "0.9965", "loss": "0.0044", "code": " void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:21.055069", "n_pass": [2422, 160, 149], "score": "0.9969", "loss": "0.0039", "code": "void run() {notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:24.686682", "n_pass": [2428, 161, 150], "score": "0.9952", "loss": "0.0059", "code": "void run(){notifyCallback(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:27.435420", "n_pass": [2430, 162, 151], "score": "0.9906", "loss": "0.0116", "code": "void run(){(RUNNING);  connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:30.663698", "n_pass": [2435, 163, 152], "score": "0.9903", "loss": "0.0117", "code": "void run(){(RUNNING); connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:33.592837", "n_pass": [2436, 164, 153], "score": "0.9901", "loss": "0.0123", "code": "void run(){(RUNNING);connected = false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:36.323269", "n_pass": [2438, 165, 154], "score": "0.9926", "loss": "0.0091", "code": "void run(){(RUNNING);connected= false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:39.066638", "n_pass": [2440, 166, 155], "score": "0.9915", "loss": "0.0105", "code": "void run(){(RUNNING);connected=false; try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:41.851737", "n_pass": [2443, 167, 156], "score": "0.9893", "loss": "0.0133", "code": "void run(){(RUNNING);connected=false;try { while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:44.623265", "n_pass": [2445, 168, 157], "score": "0.9919", "loss": "0.0095", "code": "void run(){(RUNNING);connected=false;try{ while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:47.353724", "n_pass": [2447, 169, 158], "score": "0.9901", "loss": "0.0123", "code": "void run(){(RUNNING);connected=false;try{while (true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:50.154045", "n_pass": [2449, 170, 159], "score": "0.9903", "loss": "0.0118", "code": "void run(){(RUNNING);connected=false;try{while(true) { if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:52.932751", "n_pass": [2453, 171, 160], "score": "0.991", "loss": "0.011", "code": "void run(){(RUNNING);connected=false;try{while(true){ if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:55.688230", "n_pass": [2455, 172, 161], "score": "0.9902", "loss": "0.0124", "code": "void run(){(RUNNING);connected=false;try{while(true){if (!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:29:58.519104", "n_pass": [2457, 173, 162], "score": "0.9888", "loss": "0.0138", "code": "void run(){(RUNNING);connected=false;try{while(true){if(!connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:01.268423", "n_pass": [2459, 174, 163], "score": "0.9971", "loss": "0.0034", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected) {{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:04.014774", "n_pass": [2462, 175, 164], "score": "0.8982", "loss": "0.1465", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{ try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:06.772125", "n_pass": [2465, 176, 165], "score": "0.9972", "loss": "0.0034", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try { closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:09.549858", "n_pass": [2467, 177, 166], "score": "0.9951", "loss": "0.0061", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{ closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:12.278346", "n_pass": [2469, 178, 167], "score": "0.9966", "loss": "0.0042", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel(); try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:15.045227", "n_pass": [2474, 179, 168], "score": "0.9963", "loss": "0.0047", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try {incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:17.799438", "n_pass": [2476, 180, 169], "score": "0.9953", "loss": "0.0058", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet(); } catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:20.557790", "n_pass": [2482, 181, 170], "score": "0.9972", "loss": "0.0033", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();} catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:23.317758", "n_pass": [2484, 182, 171], "score": "0.9956", "loss": "0.0056", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch (JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:26.067562", "n_pass": [2486, 183, 172], "score": "0.9966", "loss": "0.0042", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e) { if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:28.840213", "n_pass": [2492, 184, 173], "score": "0.9967", "loss": "0.0039", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){ if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:31.623331", "n_pass": [2494, 185, 174], "score": "0.9974", "loss": "0.0032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if (0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:34.443133", "n_pass": [2496, 186, 175], "score": "0.9973", "loss": "0.0032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0) {} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:37.207196", "n_pass": [2500, 187, 176], "score": "0.9971", "loss": "0.0035", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){} };(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:39.964644", "n_pass": [2503, 188, 177], "score": "0.978", "loss": "0.0358", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}};(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:42.728420", "n_pass": [2505, 189, 178], "score": "0.9959", "loss": "0.0057", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents); } catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:45.487830", "n_pass": [2510, 190, 179], "score": "0.9975", "loss": "0.0029", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);} catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:48.240974", "n_pass": [2512, 191, 180], "score": "0.9971", "loss": "0.0038", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch (UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:51.020331", "n_pass": [2514, 192, 181], "score": "0.9972", "loss": "0.0034", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e) {(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:53.817211", "n_pass": [2520, 193, 182], "score": "0.9979", "loss": "0.0027", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);} catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:56.593907", "n_pass": [2527, 194, 183], "score": "0.9963", "loss": "0.0043", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch (AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:30:59.377965", "n_pass": [2529, 195, 184], "score": "0.9771", "loss": "0.0386", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException | AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:02.138998", "n_pass": [2532, 196, 185], "score": "0.9757", "loss": "0.0396", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException| AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:04.900058", "n_pass": [2534, 197, 186], "score": "0.9971", "loss": "0.0035", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e) {  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:07.673296", "n_pass": [2539, 198, 187], "score": "0.9972", "loss": "0.0035", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){  close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:10.446291", "n_pass": [2541, 199, 188], "score": "0.9981", "loss": "0.0023", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){ close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:13.188609", "n_pass": [2542, 200, 189], "score": "0.9969", "loss": "0.0036", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close0();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:15.928484", "n_pass": [2544, 201, 190], "score": "0.9978", "loss": "0.0029", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);} } (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:18.719304", "n_pass": [2553, 202, 191], "score": "0.9975", "loss": "0.0032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}} (true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:21.469285", "n_pass": [2555, 203, 192], "score": "0.9974", "loss": "0.0032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true); if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:24.292747", "n_pass": [2560, 204, 193], "score": "0.9969", "loss": "0.004", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if ((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:27.070137", "n_pass": [2562, 205, 194], "score": "0.9502", "loss": "0.0945", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)) { } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:29.860966", "n_pass": [2568, 206, 195], "score": "0.9962", "loss": "0.0049", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){ } } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:32.630385", "n_pass": [2570, 207, 196], "score": "0.9704", "loss": "0.0524", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){} } try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:35.379707", "n_pass": [2572, 208, 197], "score": "0.9982", "loss": "0.0022", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}} try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:38.143224", "n_pass": [2574, 209, 198], "score": "0.9982", "loss": "0.0022", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try { if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:40.999281", "n_pass": [2576, 210, 199], "score": "0.9976", "loss": "0.0028", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{ if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:43.854886", "n_pass": [2578, 211, 200], "score": "0.9971", "loss": "0.0036", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if ( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:46.647188", "n_pass": [2580, 212, 201], "score": "0.9974", "loss": "0.0032", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if( isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:49.393904", "n_pass": [2582, 213, 202], "score": "0.9965", "loss": "0.0044", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning) {byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:52.178395", "n_pass": [2585, 214, 203], "score": "0.9979", "loss": "0.0025", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){byte cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:54.922200", "n_pass": [2587, 215, 204], "score": "0.9837", "loss": "0.0201", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){ cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:31:57.659200", "n_pass": [2588, 216, 205], "score": "0.7637", "loss": "0.4567", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd = commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:00.407104", "n_pass": [2590, 217, 206], "score": "0.9853", "loss": "0.018", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd= commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:03.132532", "n_pass": [2591, 218, 207], "score": "0.996", "loss": "0.0049", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd commandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:05.903144", "n_pass": [2592, 219, 208], "score": "0.9981", "loss": "0.0022", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmdcommandConsumer; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:08.736221", "n_pass": [2593, 220, 209], "score": "0.9971", "loss": "0.0036", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd; switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:11.513479", "n_pass": [2595, 221, 210], "score": "0.9973", "loss": "0.0034", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd) { case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:14.274844", "n_pass": [2600, 222, 211], "score": "0.9975", "loss": "0.0031", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){ case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:17.051148", "n_pass": [2602, 223, 212], "score": "0.9971", "loss": "0.0035", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command: setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:19.815106", "n_pass": [2607, 224, 213], "score": "0.997", "loss": "0.0036", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:setDelegate(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:22.586724", "n_pass": [2608, 225, 214], "score": "0.9807", "loss": "0.0329", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel); (statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:25.803187", "n_pass": [2613, 226, 215], "score": "0.9973", "loss": "0.0033", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \").$;} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:29.137317", "n_pass": [2664, 227, 216], "score": "0.9755", "loss": "0.0448", "code": "void run(){(RUNNING);connected=false;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:33.239267", "n_pass": [2702, 228, 217], "score": "0.9983", "loss": "0.0018", "code": "void run(){(RUNNING);connectedfalse;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:36.000975", "n_pass": [2703, 229, 218], "score": "0.9983", "loss": "0.0019", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException|AuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:38.865389", "n_pass": [2765, 230, 219], "score": "0.9975", "loss": "0.0028", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigExceptionAuthenticationProviderException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:41.600054", "n_pass": [2766, 231, 220], "score": "0.9984", "loss": "0.0018", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){cmd;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:44.415876", "n_pass": [2801, 232, 221], "score": "0.9986", "loss": "0.0016", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){;switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:47.174288", "n_pass": [2802, 233, 222], "score": "0.9986", "loss": "0.0016", "code": "void run(){(RUNNING);connected;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:52.341170", "n_pass": [2902, 234, 223], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);;try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:32:55.094294", "n_pass": [2903, 235, 224], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\" \");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:07.033750", "n_pass": [3154, 236, 225], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");} if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:09.763561", "n_pass": [3159, 237, 226], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if (event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:12.487947", "n_pass": [3161, 238, 227], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event) { if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:15.246524", "n_pass": [3165, 239, 228], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){ if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:17.998424", "n_pass": [3167, 240, 229], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if (channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:20.823460", "n_pass": [3169, 241, 230], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()) { } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:23.579915", "n_pass": [3175, 242, 231], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){ } } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:26.339026", "n_pass": [3177, 243, 232], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){} } } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:29.056814", "n_pass": [3179, 244, 233], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}} } } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:31.808922", "n_pass": [3181, 245, 234], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}} } catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:34.524556", "n_pass": [3183, 246, 235], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}} catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:37.244273", "n_pass": [3185, 247, 236], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch (Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:40.004753", "n_pass": [3187, 248, 237], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e) {(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:42.766589", "n_pass": [3193, 249, 238], "score": "0.9986", "loss": "0.0015", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$0(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:46.003818", "n_pass": [3200, 250, 239], "score": "0.9987", "loss": "0.0014", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$(JournalClientEventsTERMINATED);} }"}
{"time": "2021-01-20 23:33:48.724443", "n_pass": [3202, 251, 240], "score": "0.9988", "loss": "0.0014", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$(TERMINATED);} }"}
{"time": "2021-01-20 23:33:51.468338", "n_pass": [3203, 252, 241], "score": "0.9984", "loss": "0.0017", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();} }"}
{"time": "2021-01-20 23:33:54.226911", "n_pass": [3207, 253, 242], "score": "0.9984", "loss": "0.0017", "code": "void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$(\"\");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}"}

Minimal simplified code:
void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}

