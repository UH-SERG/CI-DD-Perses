
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/iplanet/services/comm/https/JSSProxy_run.java
method_name = run
method_body = public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error("JSSProxySessionRunnable: Unable to open input stream on " + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message("JSSProxySessionRunnable: " + "Unable to connect to " + host + ":" + port + ". ", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = "CONNECT " + desthost + ":" + destport + " HTTP/1.0\n" + "User-Agent: " + sun.net.www.protocol.http.HttpURLConnection.userAgent + "\r\n\r\n"; debug.message(msg); byte[] b; try { b = msg.getBytes("ASCII7"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error("JSSProxySessionRunnable: " + "Unexpected EOF from proxy"); closeSockets(); return; } if (i == '\n') { headerDone = true; ++newlinesSeen; } else if (i != '\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error("JSSProxySessionRunnable: " + "Unable to get OutputStream", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, "ASCII7"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith("HTTP/1.0 200")) { debug.error("JSSProxySessionRunnable: Unable to tunnel through "); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error("JSSProxySessionRunnable: " + "Unable to write prebuffer.", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }
predict, score, loss = run, 0.7911894917488098, 1.1850957870483398

Trace of simplified code(s):
{"time": "2021-01-20 23:07:24.576732", "n_pass": [1, 1, 1], "score": "0.9677", "loss": "0.1389", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i == '\\n') { headerDone = true; ++newlinesSeen; } else if (i != '\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:27.616470", "n_pass": [47, 2, 2], "score": "0.8851", "loss": "0.2779", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i == '\\n') { headerDone = true; ++newlinesSeen; } else if (i != '\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:30.689123", "n_pass": [107, 3, 3], "score": "0.6877", "loss": "2.3989", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:33.575186", "n_pass": [110, 4, 4], "score": "0.4976", "loss": "2.0684", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:40.284020", "n_pass": [208, 6, 5], "score": "0.9925", "loss": "0.0169", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:43.254214", "n_pass": [211, 7, 6], "score": "0.8152", "loss": "0.9466", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:46.137869", "n_pass": [216, 8, 7], "score": "0.6327", "loss": "1.7023", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:51.891641", "n_pass": [218, 10, 8], "score": "0.8204", "loss": "0.5117", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info); ; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:54.761497", "n_pass": [219, 11, 9], "score": "0.8066", "loss": "0.6825", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:07:57.670677", "n_pass": [222, 12, 10], "score": "0.872", "loss": "0.451", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:00.547670", "n_pass": [228, 13, 11], "score": "0.911", "loss": "0.7994", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:03.418105", "n_pass": [230, 14, 12], "score": "0.7917", "loss": "0.4429", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:11.955286", "n_pass": [236, 17, 13], "score": "0.9948", "loss": "0.0329", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:15.077626", "n_pass": [241, 18, 14], "score": "0.2354", "loss": "2.887", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:17.954172", "n_pass": [249, 19, 15], "score": "0.9282", "loss": "0.5742", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info);  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:23.862383", "n_pass": [270, 21, 16], "score": "0.657", "loss": "1.0773", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:26.741721", "n_pass": [277, 22, 17], "score": "0.2432", "loss": "2.3501", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); Stringreply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:29.558665", "n_pass": [278, 23, 18], "score": "0.9969", "loss": "0.012", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:32.378606", "n_pass": [280, 24, 19], "score": "0.9739", "loss": "0.376", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:35.223059", "n_pass": [282, 25, 20], "score": "0.3968", "loss": "3.5587", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:38.113003", "n_pass": [296, 26, 21], "score": "0.9975", "loss": "0.0193", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:41.672765", "n_pass": [422, 27, 22], "score": "0.8089", "loss": "0.4002", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:44.533654", "n_pass": [431, 28, 23], "score": "0.998", "loss": "0.0041", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:47.852203", "n_pass": [445, 29, 24], "score": "0.9026", "loss": "0.2908", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:50.727564", "n_pass": [459, 30, 25], "score": "0.9996", "loss": "0.0014", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:53.569067", "n_pass": [461, 31, 26], "score": "0.9999", "loss": "0.0003", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:56.378266", "n_pass": [466, 32, 27], "score": "0.8366", "loss": "1.7752", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:08:59.177093", "n_pass": [467, 33, 28], "score": "0.9976", "loss": "0.0079", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:01.983274", "n_pass": [469, 34, 29], "score": "0.9991", "loss": "0.0022", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:04.865759", "n_pass": [474, 35, 30], "score": "0.8777", "loss": "0.3429", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:07.718368", "n_pass": [483, 36, 31], "score": "0.9956", "loss": "0.0141", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:17.783563", "n_pass": [694, 39, 32], "score": "0.9932", "loss": "0.0439", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:20.578855", "n_pass": [696, 40, 33], "score": "0.9981", "loss": "0.0046", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:23.383637", "n_pass": [699, 41, 34], "score": "0.8533", "loss": "0.4701", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereplyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:26.171737", "n_pass": [700, 42, 35], "score": "0.3423", "loss": "2.8982", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:29.004829", "n_pass": [709, 43, 36], "score": "0.999", "loss": "0.0034", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:31.866420", "n_pass": [724, 44, 37], "score": "0.9985", "loss": "0.0106", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:37.484735", "n_pass": [730, 46, 38], "score": "0.8558", "loss": "2.0532", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.writeout.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:40.284729", "n_pass": [731, 47, 39], "score": "0.2576", "loss": "3.78", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:43.118876", "n_pass": [736, 48, 40], "score": "0.4989", "loss": "2.8789", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:49.183891", "n_pass": [746, 50, 41], "score": "0.9978", "loss": "0.0035", "code": "public void run() { Integer prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:51.998918", "n_pass": [750, 51, 42], "score": "0.8714", "loss": "0.3198", "code": "public void run() { Integer prebuffer = new byte[1];  try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:09:54.777992", "n_pass": [752, 52, 43], "score": "0.9234", "loss": "1.4774", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:00.447274", "n_pass": [760, 54, 44], "score": "0.9946", "loss": "0.0751", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:03.348791", "n_pass": [762, 55, 45], "score": "0.9989", "loss": "0.0057", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:06.161602", "n_pass": [770, 56, 46], "score": "0.902", "loss": "0.4351", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:09.070345", "n_pass": [779, 57, 47], "score": "0.9625", "loss": "0.5983", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:11.851615", "n_pass": [785, 58, 48], "score": "0.9995", "loss": "0.0021", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:14.654752", "n_pass": [788, 59, 49], "score": "0.9865", "loss": "0.0681", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:17.874581", "n_pass": [793, 60, 50], "score": "1.0", "loss": "0.0001", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:20.646567", "n_pass": [796, 61, 51], "score": "0.3401", "loss": "2.5271", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:23.424594", "n_pass": [797, 62, 52], "score": "0.9989", "loss": "0.0058", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:26.226532", "n_pass": [800, 63, 53], "score": "0.9161", "loss": "0.9169", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:29.040916", "n_pass": [802, 64, 54], "score": "0.4726", "loss": "3.251", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:34.661423", "n_pass": [823, 66, 55], "score": "0.9998", "loss": "0.0005", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:40.336287", "n_pass": [856, 68, 56], "score": "0.9828", "loss": "0.1772", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:43.162885", "n_pass": [865, 69, 57], "score": "0.9994", "loss": "0.0015", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:46.571262", "n_pass": [877, 70, 58], "score": "0.9997", "loss": "0.0009", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:49.924686", "n_pass": [924, 71, 59], "score": "0.8939", "loss": "0.4501", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:52.747409", "n_pass": [938, 72, 60], "score": "0.9998", "loss": "0.0008", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:10:56.685999", "n_pass": [1032, 73, 61], "score": "0.6648", "loss": "2.3079", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); ; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:04.203548", "n_pass": [1351, 74, 62], "score": "0.9203", "loss": "0.6512", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:06.982306", "n_pass": [1357, 75, 63], "score": "0.9408", "loss": "0.3023", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:09.737660", "n_pass": [1360, 76, 64], "score": "0.7464", "loss": "1.3032", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:12.755684", "n_pass": [1370, 77, 65], "score": "0.2262", "loss": "4.1105", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:15.523448", "n_pass": [1372, 78, 66], "score": "0.993", "loss": "0.1005", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:18.313293", "n_pass": [1375, 79, 67], "score": "0.9981", "loss": "0.0082", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\");return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:21.084249", "n_pass": [1376, 80, 68], "score": "0.9733", "loss": "0.2797", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:23.889699", "n_pass": [1384, 81, 69], "score": "0.5878", "loss": "1.9399", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:26.643834", "n_pass": [1387, 82, 70], "score": "0.3095", "loss": "3.6735", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (reply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:29.420902", "n_pass": [1388, 83, 71], "score": "0.9967", "loss": "0.0142", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:32.245056", "n_pass": [1402, 84, 72], "score": "0.9989", "loss": "0.0053", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:35.169099", "n_pass": [1415, 85, 73], "score": "0.9942", "loss": "0.0949", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:37.930136", "n_pass": [1418, 86, 74], "score": "0.9162", "loss": "0.3969", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:40.754012", "n_pass": [1426, 87, 75], "score": "0.9876", "loss": "0.1122", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:43.524795", "n_pass": [1431, 88, 76], "score": "0.9987", "loss": "0.0139", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:46.301411", "n_pass": [1434, 89, 77], "score": "0.9918", "loss": "0.0604", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:49.069411", "n_pass": [1435, 90, 78], "score": "0.3784", "loss": "3.6474", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:51.827331", "n_pass": [1438, 91, 79], "score": "0.8314", "loss": "1.1734", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:54.576191", "n_pass": [1439, 92, 80], "score": "0.9899", "loss": "0.0327", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:11:57.351524", "n_pass": [1442, 93, 81], "score": "0.9998", "loss": "0.0005", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:00.160730", "n_pass": [1452, 94, 82], "score": "0.9983", "loss": "0.0151", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:02.940035", "n_pass": [1458, 95, 83], "score": "0.9348", "loss": "0.3253", "code": "void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:08.901566", "n_pass": [1464, 97, 84], "score": "0.9948", "loss": "0.0757", "code": "void run() { Integer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:11.663368", "n_pass": [1473, 98, 85], "score": "0.9967", "loss": "0.0258", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:14.441131", "n_pass": [1482, 99, 86], "score": "0.997", "loss": "0.0279", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:17.210602", "n_pass": [1484, 100, 87], "score": "0.9989", "loss": "0.0075", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:22.737909", "n_pass": [1495, 102, 88], "score": "0.9834", "loss": "0.0674", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:25.487014", "n_pass": [1496, 103, 89], "score": "0.976", "loss": "0.5339", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:28.232770", "n_pass": [1499, 104, 90], "score": "0.9985", "loss": "0.0109", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:30.983947", "n_pass": [1500, 105, 91], "score": "0.9962", "loss": "0.0221", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:33.726469", "n_pass": [1503, 106, 92], "score": "0.9955", "loss": "0.0097", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:36.494152", "n_pass": [1504, 107, 93], "score": "0.9187", "loss": "0.5132", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:39.238888", "n_pass": [1507, 108, 94], "score": "0.9842", "loss": "0.1153", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:42.013734", "n_pass": [1510, 109, 95], "score": "0.991", "loss": "0.0577", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:44.762616", "n_pass": [1517, 110, 96], "score": "0.9962", "loss": "0.0167", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String headerDone = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:50.294585", "n_pass": [1530, 112, 97], "score": "0.9911", "loss": "0.0314", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:53.083430", "n_pass": [1537, 113, 98], "score": "0.9934", "loss": "0.1012", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:55.855020", "n_pass": [1538, 114, 99], "score": "0.9996", "loss": "0.0022", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:12:58.575536", "n_pass": [1546, 115, 100], "score": "0.9305", "loss": "0.3808", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:01.355734", "n_pass": [1555, 116, 101], "score": "0.996", "loss": "0.0675", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:04.117880", "n_pass": [1556, 117, 102], "score": "0.9976", "loss": "0.0227", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:06.858955", "n_pass": [1558, 118, 103], "score": "0.9444", "loss": "0.3851", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:09.648554", "n_pass": [1578, 119, 104], "score": "0.9063", "loss": "0.9023", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:12.539026", "n_pass": [1624, 120, 105], "score": "0.999", "loss": "0.0033", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:13:15.863298", "n_pass": [1675, 121, 106], "score": "0.9638", "loss": "0.2904", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:06.929028", "n_pass": [2177, 122, 107], "score": "0.9571", "loss": "0.4857", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:10.144604", "n_pass": [2181, 123, 108], "score": "0.995", "loss": "0.0221", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:12.895318", "n_pass": [2187, 124, 109], "score": "0.9956", "loss": "0.0149", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();} {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:15.659587", "n_pass": [2188, 125, 110], "score": "0.9776", "loss": "0.1631", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:18.487148", "n_pass": [2191, 126, 111], "score": "0.7984", "loss": "1.2967", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:21.258672", "n_pass": [2195, 127, 112], "score": "0.483", "loss": "2.5436", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){ message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:24.077341", "n_pass": [2197, 128, 113], "score": "0.981", "loss": "0.2133", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:26.922080", "n_pass": [2201, 129, 114], "score": "0.9765", "loss": "0.1914", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:29.676659", "n_pass": [2203, 130, 115], "score": "0.9867", "loss": "0.1141", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\" + \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:32.447593", "n_pass": [2204, 131, 116], "score": "0.9892", "loss": "0.0478", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+ \":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:35.197378", "n_pass": [2206, 132, 117], "score": "0.9942", "loss": "0.0614", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\":\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:37.943957", "n_pass": [2208, 133, 118], "score": "0.9595", "loss": "0.2749", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" + \"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:43.447497", "n_pass": [2212, 135, 119], "score": "0.9723", "loss": "0.1131", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\", ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:46.289726", "n_pass": [2216, 136, 120], "score": "0.9988", "loss": "0.0051", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex); } } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:49.065813", "n_pass": [2220, 137, 121], "score": "0.9176", "loss": "0.7924", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);} } if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:51.821240", "n_pass": [2222, 138, 122], "score": "0.939", "loss": "0.4463", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}} if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:54.592622", "n_pass": [2224, 139, 123], "score": "0.9964", "loss": "0.0083", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if (toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:14:57.614609", "n_pass": [2226, 140, 124], "score": "0.9975", "loss": "0.0146", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket ) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:00.397010", "n_pass": [2229, 141, 125], "score": "0.939", "loss": "0.3917", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket) { } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:03.155348", "n_pass": [2231, 142, 126], "score": "0.9041", "loss": "0.5961", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){ } String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:05.949138", "n_pass": [2233, 143, 127], "score": "0.9074", "loss": "0.5848", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){} String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:08.732414", "n_pass": [2235, 144, 128], "score": "0.95", "loss": "0.3528", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:11.484584", "n_pass": [2237, 145, 129], "score": "0.9748", "loss": "0.2094", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String= false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:14.249304", "n_pass": [2239, 146, 130], "score": "0.9878", "loss": "0.0893", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:16.987004", "n_pass": [2242, 147, 131], "score": "0.9867", "loss": "0.035", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:19.739216", "n_pass": [2244, 148, 132], "score": "0.9878", "loss": "0.1116", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{ out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:22.493301", "n_pass": [2246, 149, 133], "score": "0.9935", "loss": "0.0364", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:25.264024", "n_pass": [2248, 150, 134], "score": "0.9905", "loss": "0.0405", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:28.005787", "n_pass": [2251, 151, 135], "score": "0.9977", "loss": "0.0116", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:30.766642", "n_pass": [2253, 152, 136], "score": "0.8252", "loss": "0.881", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+ (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:33.500677", "n_pass": [2255, 153, 137], "score": "0.9994", "loss": "0.0028", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:36.267613", "n_pass": [2261, 154, 138], "score": "0.9942", "loss": "0.023", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{ getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:39.008105", "n_pass": [2263, 155, 139], "score": "0.998", "loss": "0.0081", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:41.782634", "n_pass": [2268, 156, 140], "score": "0.963", "loss": "0.1747", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();} catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:44.544724", "n_pass": [2270, 157, 141], "score": "0.9984", "loss": "0.0036", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:47.279004", "n_pass": [2272, 158, 142], "score": "0.7829", "loss": "1.1532", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:50.043679", "n_pass": [2278, 159, 143], "score": "0.9989", "loss": "0.0042", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:52.814584", "n_pass": [2281, 160, 144], "score": "0.9312", "loss": "0.5457", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:55.560141", "n_pass": [2282, 161, 145], "score": "0.9828", "loss": "0.1529", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:15:58.347531", "n_pass": [2287, 162, 146], "score": "0.9762", "loss": "0.1031", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:01.118156", "n_pass": [2289, 163, 147], "score": "0.9726", "loss": "0.1676", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:03.847425", "n_pass": [2292, 164, 148], "score": "0.9998", "loss": "0.0006", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen< 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:06.602667", "n_pass": [2294, 165, 149], "score": "0.9912", "loss": "0.0544", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:09.333769", "n_pass": [2297, 166, 150], "score": "0.9989", "loss": "0.0038", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){ i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:12.100452", "n_pass": [2299, 167, 151], "score": "0.9994", "loss": "0.0019", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:14.879799", "n_pass": [2301, 168, 152], "score": "0.9995", "loss": "0.0015", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i= read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:17.626946", "n_pass": [2303, 169, 153], "score": "0.9995", "loss": "0.0014", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:20.371237", "n_pass": [2308, 170, 154], "score": "0.9612", "loss": "0.3419", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:23.098476", "n_pass": [2310, 171, 155], "score": "0.9029", "loss": "0.429", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:25.851080", "n_pass": [2313, 172, 156], "score": "0.999", "loss": "0.0048", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i< 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:28.583199", "n_pass": [2315, 173, 157], "score": "0.9999", "loss": "0.0004", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:31.349068", "n_pass": [2318, 174, 158], "score": "0.9996", "loss": "0.0015", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:34.085215", "n_pass": [2322, 175, 159], "score": "0.9722", "loss": "0.1859", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:36.827370", "n_pass": [2326, 176, 160], "score": "0.998", "loss": "0.0079", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");} if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:39.571012", "n_pass": [2328, 177, 161], "score": "0.9997", "loss": "0.0011", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:42.326002", "n_pass": [2330, 178, 162], "score": "0.997", "loss": "0.0143", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:45.068595", "n_pass": [2333, 179, 163], "score": "0.9969", "loss": "0.0072", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:48.175966", "n_pass": [2337, 180, 164], "score": "0.9925", "loss": "0.0283", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:50.912890", "n_pass": [2339, 181, 165], "score": "0.6099", "loss": "1.8787", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){ if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:53.638064", "n_pass": [2340, 182, 166], "score": "0.9465", "loss": "0.3067", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:56.395645", "n_pass": [2342, 183, 167], "score": "0.9997", "loss": "0.0007", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:16:59.117195", "n_pass": [2346, 184, 168], "score": "0.3141", "loss": "3.7647", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:01.849524", "n_pass": [2349, 185, 169], "score": "0.9902", "loss": "0.0425", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}} } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:04.604555", "n_pass": [2351, 186, 170], "score": "0.999", "loss": "0.0032", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}} } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:07.350567", "n_pass": [2353, 187, 171], "score": "0.9999", "loss": "0.0003", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}} catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:10.121662", "n_pass": [2355, 188, 172], "score": "0.8693", "loss": "0.6826", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:12.834849", "n_pass": [2357, 189, 173], "score": "0.9255", "loss": "0.585", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:15.603443", "n_pass": [2363, 190, 174], "score": "0.9916", "loss": "0.0367", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:18.373666", "n_pass": [2365, 191, 175], "score": "0.9998", "loss": "0.0005", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){ String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:21.097270", "n_pass": [2366, 192, 176], "score": "0.9684", "loss": "0.1431", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:23.827308", "n_pass": [2369, 193, 177], "score": "0.9911", "loss": "0.0503", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:26.587045", "n_pass": [2373, 194, 178], "score": "0.9997", "loss": "0.0011", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:29.412641", "n_pass": [2374, 195, 179], "score": "0.995", "loss": "0.0182", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:32.196900", "n_pass": [2378, 196, 180], "score": "0.9454", "loss": "0.1739", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");} catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:34.963800", "n_pass": [2380, 197, 181], "score": "0.8993", "loss": "0.2848", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:37.701627", "n_pass": [2382, 198, 182], "score": "0.9981", "loss": "0.0036", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:40.483308", "n_pass": [2388, 199, 183], "score": "0.7561", "loss": "1.4656", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){ replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:43.254385", "n_pass": [2390, 200, 184], "score": "0.9601", "loss": "0.2408", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:46.152841", "n_pass": [2392, 201, 185], "score": "0.9981", "loss": "0.0082", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr= String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:48.913307", "n_pass": [2394, 202, 186], "score": "0.9908", "loss": "0.0469", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:51.670853", "n_pass": [2397, 203, 187], "score": "0.9915", "loss": "0.0287", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:54.448148", "n_pass": [2400, 204, 188], "score": "0.9458", "loss": "0.1994", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:17:57.275642", "n_pass": [2404, 205, 189], "score": "0.9244", "loss": "0.3637", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);} if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:00.027250", "n_pass": [2406, 206, 190], "score": "0.9885", "loss": "0.0403", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:02.828026", "n_pass": [2408, 207, 191], "score": "0.982", "loss": "0.0778", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:05.587602", "n_pass": [2415, 208, 192], "score": "0.9962", "loss": "0.013", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){ error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:08.321776", "n_pass": [2417, 209, 193], "score": "0.9969", "loss": "0.0128", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:11.054568", "n_pass": [2418, 210, 194], "score": "0.9902", "loss": "0.0443", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:13.785471", "n_pass": [2421, 211, 195], "score": "0.9655", "loss": "0.1102", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\" \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:16.549332", "n_pass": [2422, 212, 196], "score": "0.9984", "loss": "0.0081", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:19.345709", "n_pass": [2427, 213, 197], "score": "0.9996", "loss": "0.0011", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:22.090720", "n_pass": [2429, 214, 198], "score": "0.9989", "loss": "0.004", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{ ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:24.820410", "n_pass": [2431, 215, 199], "score": "0.9964", "loss": "0.0116", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:27.575513", "n_pass": [2432, 216, 200], "score": "0.9995", "loss": "0.0016", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{ } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:30.324158", "n_pass": [2433, 217, 201], "score": "0.9971", "loss": "0.0087", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{} catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:33.048249", "n_pass": [2435, 218, 202], "score": "0.9967", "loss": "0.0145", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:35.820542", "n_pass": [2437, 219, 203], "score": "0.9965", "loss": "0.0128", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:38.573711", "n_pass": [2444, 220, 204], "score": "0.988", "loss": "0.127", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:41.342446", "n_pass": [2452, 221, 205], "score": "0.9992", "loss": "0.0045", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 23:18:44.091109", "n_pass": [2454, 222, 206], "score": "0.9955", "loss": "0.0087", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy( toProxySocket); }"}
{"time": "2021-01-20 23:18:46.807139", "n_pass": [2455, 223, 207], "score": "0.993", "loss": "0.0878", "code": "void run() { Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:18:50.392374", "n_pass": [2463, 224, 208], "score": "0.9983", "loss": "0.0041", "code": "void run(){ Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:18:53.134407", "n_pass": [2465, 225, 209], "score": "0.9679", "loss": "0.3612", "code": "void run(){Integer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:18:55.894044", "n_pass": [2467, 226, 210], "score": "0.7414", "loss": "1.2431", "code": "void run(){Integer= new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:18:58.654890", "n_pass": [2469, 227, 211], "score": "0.9988", "loss": "0.0042", "code": "void run(){Integer=new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:01.446557", "n_pass": [2471, 228, 212], "score": "0.9978", "loss": "0.0177", "code": "void run(){Integer=newbyte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:04.204107", "n_pass": [2477, 229, 213], "score": "0.899", "loss": "0.2766", "code": "void run(){Integer=newbyte[1]; try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:06.960780", "n_pass": [2478, 230, 214], "score": "0.9994", "loss": "0.0035", "code": "void run(){Integer=newbyte[1];try {(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:09.685782", "n_pass": [2480, 231, 215], "score": "0.9995", "loss": "0.0016", "code": "void run(){Integer=newbyte[1];try{(inconnection); } catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:12.441993", "n_pass": [2486, 232, 216], "score": "0.9386", "loss": "0.6143", "code": "void run(){Integer=newbyte[1];try{(inconnection);} catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:15.211113", "n_pass": [2488, 233, 217], "score": "0.9991", "loss": "0.0027", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch (IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:17.966196", "n_pass": [2490, 234, 218], "score": "0.9988", "loss": "0.0052", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e) { debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:20.711074", "n_pass": [2496, 235, 219], "score": "0.9909", "loss": "0.0316", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){ debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:23.459614", "n_pass": [2498, 236, 220], "score": "0.9945", "loss": "0.0133", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\" \", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:26.206964", "n_pass": [2502, 237, 221], "score": "0.9993", "loss": "0.0042", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\", e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:28.931696", "n_pass": [2505, 238, 222], "score": "0.9991", "loss": "0.0044", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e); (remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:31.669763", "n_pass": [2509, 239, 223], "score": "0.9936", "loss": "0.081", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\" +\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:34.854315", "n_pass": [2532, 240, 224], "score": "0.9927", "loss": "0.122", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:37.656765", "n_pass": [2549, 241, 225], "score": "0.9786", "loss": "0.3631", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}Stringfalse;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:40.432725", "n_pass": [2550, 242, 226], "score": "0.9986", "loss": "0.0125", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:43.277958", "n_pass": [2585, 243, 227], "score": "0.982", "loss": "0.1976", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:46.024119", "n_pass": [2586, 244, 228], "score": "0.9887", "loss": "0.1504", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:48.755835", "n_pass": [2590, 245, 229], "score": "0.9961", "loss": "0.0078", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){iread();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:51.513721", "n_pass": [2591, 246, 230], "score": "0.9973", "loss": "0.0215", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:54.281862", "n_pass": [2598, 247, 231], "score": "0.9992", "loss": "0.0094", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:19:57.012104", "n_pass": [2599, 248, 232], "score": "0.9968", "loss": "0.0212", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:00.471996", "n_pass": [2648, 249, 233], "score": "0.9591", "loss": "0.389", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStrString(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:03.227750", "n_pass": [2649, 250, 234], "score": "0.9912", "loss": "0.1899", "code": "void run(){Integer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:06.994689", "n_pass": [2698, 251, 235], "score": "0.9927", "loss": "0.0449", "code": "void run(){Integernewbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:09.723138", "n_pass": [2699, 252, 236], "score": "0.999", "loss": "0.0037", "code": "void run(){Integerbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:12.452140", "n_pass": [2700, 253, 237], "score": "0.9968", "loss": "0.0466", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}String;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:15.718533", "n_pass": [2764, 254, 238], "score": "0.9823", "loss": "0.0286", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){};try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:18.441518", "n_pass": [2765, 255, 239], "score": "0.9977", "loss": "0.0029", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:26.810068", "n_pass": [2992, 256, 240], "score": "0.9968", "loss": "0.0108", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){ error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:29.538662", "n_pass": [2994, 257, 241], "score": "0.9947", "loss": "0.0104", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:32.464536", "n_pass": [2998, 258, 242], "score": "0.8795", "loss": "0.1534", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\".\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:35.186417", "n_pass": [2999, 259, 243], "score": "0.9312", "loss": "0.0723", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:37.906801", "n_pass": [3002, 260, 244], "score": "0.9864", "loss": "0.0147", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:40.641466", "n_pass": [3006, 261, 245], "score": "0.966", "loss": "0.0429", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);} RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:43.385082", "n_pass": [3008, 262, 246], "score": "0.9985", "loss": "0.0019", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);}RWGroupJSSProxy(); }"}
{"time": "2021-01-20 23:20:46.142370", "n_pass": [3013, 263, 247], "score": "0.9918", "loss": "0.0089", "code": "void run(){Integer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);}RWGroupJSSProxy();}"}

Minimal simplified code:
void run(){Integer[1];try{(inconnection);}catch(IOException e){debug("",e);(remotePort);closeSockets();}{if(debug){message(""+""+"",ex);}}if(toProxySocket){}try{out=""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("")){("");}try{}catch(IOException ioe){error("",ioe);}RWGroupJSSProxy();}

