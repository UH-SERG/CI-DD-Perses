
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/demos/LoadTest_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { "-help" }; } for (int i = 0; i < args.length; i++) { if ("-threads".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if ("-count".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println("Sending " + count + " messages."); } else if ("-pause".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if ("-break".equals(args[i])) { breakOnEx = true; } else if ("-shutdown".equals(args[i])) { shutdown = true; } else if ("-stats".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println("Stats every " + stats + " message"); } else if ("-sendoptions".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println("Setting send options to " + channelOptions); } else if ("-startoptions".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println("Setting start options to " + startoptions); } else if ("-size".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println("Message size will be:" + (size + 4) + " bytes"); } else if ("-mode".equals(args[i])) { if ("receive".equals(args[++i])) send = false; } else if ("-debug".equals(args[i])) { debug = true; } else if ("-help".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println("System test complete, sleeping to let threads finish."); Thread.sleep(60 * 1000 * 60); }
predict, score, loss = main, 0.9995958209037781, 0.0007309625507332385

Trace of simplified code(s):
{"time": "2021-01-20 14:42:48.599075", "n_pass": [1, 1, 1], "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (\"-startoptions\".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(\"Setting start options to \" + startoptions); } else if (\"-size\".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:42:51.701494", "n_pass": [52, 2, 2], "score": "0.9841", "loss": "0.0452", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:42:54.635284", "n_pass": [56, 3, 3], "score": "0.9976", "loss": "0.0029", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:42:57.744273", "n_pass": [106, 4, 4], "score": "0.9369", "loss": "0.2712", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:01.018833", "n_pass": [217, 5, 5], "score": "0.9992", "loss": "0.0012", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:03.973682", "n_pass": [227, 6, 6], "score": "0.9978", "loss": "0.0029", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChanneladdChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:06.840502", "n_pass": [228, 7, 7], "score": "0.9989", "loss": "0.0016", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:09.704702", "n_pass": [231, 8, 8], "score": "0.7272", "loss": "0.6848", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { (true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:12.559263", "n_pass": [232, 9, 9], "score": "0.9996", "loss": "0.0017", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:16.190857", "n_pass": [382, 10, 10], "score": "0.706", "loss": "0.3526", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:19.032390", "n_pass": [384, 11, 11], "score": "0.9994", "loss": "0.0007", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:21.885108", "n_pass": [387, 12, 12], "score": "0.9987", "loss": "0.0017", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, sleeping to let threads finish.\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:24.731798", "n_pass": [390, 13, 13], "score": "0.9998", "loss": "0.0002", "code": "public static void main(String[] args) throws Exception { boolean send = true; boolean debug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:27.606355", "n_pass": [397, 14, 14], "score": "0.8601", "loss": "0.1682", "code": "public static void main(String[] args) throws Exception { boolean senddebug = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:30.446163", "n_pass": [398, 15, 15], "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:33.291064", "n_pass": [401, 16, 16], "score": "0.9964", "loss": "0.0066", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0; i < args.length; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:36.155712", "n_pass": [412, 17, 17], "score": "0.9996", "loss": "0.0008", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:38.996683", "n_pass": [415, 18, 18], "score": "0.9379", "loss": "0.0893", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:41.843418", "n_pass": [420, 19, 19], "score": "0.9866", "loss": "0.016", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\".equals(args[i])) { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:44.721836", "n_pass": [434, 20, 20], "score": "0.9953", "loss": "0.0069", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { breakOnEx = true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:48.168363", "n_pass": [697, 21, 21], "score": "0.9973", "loss": "0.003", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:51.067308", "n_pass": [712, 22, 22], "score": "0.995", "loss": "0.0075", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"Stats every \" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:53.938371", "n_pass": [718, 23, 23], "score": "0.8915", "loss": "0.1202", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + stats + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:56.784291", "n_pass": [720, 24, 24], "score": "1.0", "loss": "0.0", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:43:59.785383", "n_pass": [733, 25, 25], "score": "0.9996", "loss": "0.0011", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting send options to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:02.617640", "n_pass": [735, 26, 26], "score": "0.9957", "loss": "0.0103", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { size = Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:05.471205", "n_pass": [743, 27, 27], "score": "0.916", "loss": "0.0899", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (size + 4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:13.928822", "n_pass": [749, 30, 28], "score": "0.9755", "loss": "0.0276", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) send = false; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:16.805930", "n_pass": [763, 31, 29], "score": "0.9954", "loss": "0.0053", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { debug = true; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:19.646165", "n_pass": [769, 32, 30], "score": "0.9368", "loss": "0.1214", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:22.486809", "n_pass": [775, 33, 31], "score": "0.9398", "loss": "0.065", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } test.run(); if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:28.183198", "n_pass": [790, 35, 32], "score": "0.9908", "loss": "0.0164", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (shutdown && DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:31.020877", "n_pass": [792, 36, 33], "score": "0.7424", "loss": "0.309", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000 * 60); }"}
{"time": "2021-01-20 14:44:33.861292", "n_pass": [800, 37, 34], "score": "0.9849", "loss": "0.0158", "code": "public static void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:36.682740", "n_pass": [802, 38, 35], "score": "0.9821", "loss": "0.0213", "code": "void main(String[] args) throws Exception { boolean send0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:39.528714", "n_pass": [807, 39, 36], "score": "0.9781", "loss": "0.0605", "code": "void main(String[] args) throws Exception {0; boolean breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:42.337036", "n_pass": [808, 40, 37], "score": "0.9862", "loss": "0.0278", "code": "void main(String[] args) throws Exception { breakOnEx = false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:45.137881", "n_pass": [809, 41, 38], "score": "0.946", "loss": "0.0649", "code": "void main(String[] args) throws Exception { false; int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:47.928925", "n_pass": [810, 42, 39], "score": "0.9951", "loss": "0.0217", "code": "void main(String[] args) throws Exception {int threads  = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:50.719993", "n_pass": [812, 43, 40], "score": "0.9648", "loss": "0.0406", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:53.538713", "n_pass": [818, 44, 41], "score": "1.0", "loss": "0.0", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args.length == 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:56.362771", "n_pass": [821, 45, 42], "score": "0.9087", "loss": "0.4187", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { threads = Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:44:59.211341", "n_pass": [837, 46, 43], "score": "0.999", "loss": "0.0012", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { count = Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:02.037726", "n_pass": [845, 47, 44], "score": "0.9906", "loss": "0.0108", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + count + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:04.854112", "n_pass": [852, 48, 45], "score": "0.9708", "loss": "0.035", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:07.668366", "n_pass": [859, 49, 46], "score": "0.5108", "loss": "0.697", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause = Long.parseLong(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:10.909376", "n_pass": [862, 50, 47], "score": "0.9945", "loss": "0.0069", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { Integer.out.println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:14.037165", "n_pass": [911, 51, 48], "score": "0.9181", "loss": "0.1663", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message size will be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:16.837012", "n_pass": [913, 52, 49], "score": "0.9993", "loss": "0.0008", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(channel, pause, stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:19.789667", "n_pass": [950, 53, 50], "score": "0.9992", "loss": "0.0012", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest( stats, breakOnEx); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:22.573504", "n_pass": [951, 54, 51], "score": "0.9993", "loss": "0.0016", "code": "void main(String[] args) throws Exception {int threads ; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:25.423322", "n_pass": [966, 55, 52], "score": "0.9988", "loss": "0.0027", "code": "void main(String[] args) throws Exception {; int startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:28.213095", "n_pass": [967, 56, 53], "score": "0.9999", "loss": "0.0001", "code": "void main(String[] args) throws Exception {startoptions = Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:30.998969", "n_pass": [968, 57, 54], "score": "0.9999", "loss": "0.0002", "code": "void main(String[] args) throws Exception {Channel.DEFAULT; int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:33.796617", "n_pass": [969, 58, 55], "score": "0.4127", "loss": "0.9363", "code": "void main(String[] args) throws Exception { int channelOptions = Channel_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:36.604386", "n_pass": [971, 59, 56], "score": "0.9977", "loss": "0.0028", "code": "void main(String[] args) throws Exception { int channelOptions_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:40.517344", "n_pass": [1109, 60, 57], "score": "0.9964", "loss": "0.0043", "code": "void main(String[] args) throws Exception {_DEFAULT; if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:43.303490", "n_pass": [1110, 61, 58], "score": "0.2782", "loss": "2.7064", "code": "void main(String[] args) throws Exception {if (args= 0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:49.495362", "n_pass": [1521, 62, 59], "score": "0.9986", "loss": "0.0015", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"-help\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:52.307715", "n_pass": [1530, 63, 60], "score": "0.9954", "loss": "0.0102", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (int i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:55.107306", "n_pass": [1536, 64, 61], "score": "0.9921", "loss": "0.0132", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { Integer.parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:45:57.910478", "n_pass": [1550, 65, 62], "score": "0.9955", "loss": "0.0049", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[++i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:00.690836", "n_pass": [1553, 66, 63], "score": "0.9997", "loss": "0.0004", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } else if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:03.494815", "n_pass": [1557, 67, 64], "score": "0.9947", "loss": "0.0062", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[++i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:09.026480", "n_pass": [1567, 69, 65], "score": "0.8737", "loss": "0.1401", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System.out.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:11.977779", "n_pass": [1571, 70, 66], "score": "0.9981", "loss": "0.0024", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System.println(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:14.759657", "n_pass": [1572, 71, 67], "score": "0.9504", "loss": "0.0551", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"Sending \" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:17.546158", "n_pass": [1574, 72, 68], "score": "0.8244", "loss": "0.2758", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" messages.\"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:20.333820", "n_pass": [1578, 73, 69], "score": "0.8645", "loss": "0.4865", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } else if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:23.103976", "n_pass": [1582, 74, 70], "score": "0.6679", "loss": "0.4277", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"-pause\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:25.871482", "n_pass": [1585, 75, 71], "score": "0.9973", "loss": "0.0052", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) * 1000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:29.111028", "n_pass": [1597, 76, 72], "score": "0.9997", "loss": "0.0004", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *000; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:31.878499", "n_pass": [1598, 77, 73], "score": "0.5777", "loss": "0.5683", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } else if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:34.650965", "n_pass": [1601, 78, 74], "score": "0.9545", "loss": "0.049", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") { true; } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:37.427132", "n_pass": [1608, 79, 75], "score": "0.9999", "loss": "0.0001", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } else if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:40.191696", "n_pass": [1610, 80, 76], "score": "0.9934", "loss": "0.0072", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } else if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:43.002725", "n_pass": [1625, 81, 77], "score": "0.852", "loss": "0.3265", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { Integer.parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:45.798823", "n_pass": [1636, 82, 78], "score": "0.8897", "loss": "0.1333", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[++i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:48.577757", "n_pass": [1639, 83, 79], "score": "0.9327", "loss": "0.1597", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System.out.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:51.360649", "n_pass": [1643, 84, 80], "score": "0.9301", "loss": "0.216", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System.println(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:54.114813", "n_pass": [1644, 85, 81], "score": "0.996", "loss": "0.0043", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } else if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:56.918733", "n_pass": [1652, 86, 82], "score": "0.2123", "loss": "2.994", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:46:59.714407", "n_pass": [1665, 87, 83], "score": "0.9753", "loss": "0.0304", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[++i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:02.495011", "n_pass": [1668, 88, 84], "score": "0.9861", "loss": "0.0226", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]); System(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:05.257716", "n_pass": [1671, 89, 85], "score": "0.7534", "loss": "0.2939", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \" bytes\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:19.071507", "n_pass": [1697, 94, 86], "score": "0.9893", "loss": "0.0124", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"-mode\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:24.627647", "n_pass": [1704, 96, 87], "score": "0.9983", "loss": "0.0023", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { if (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:27.402825", "n_pass": [1711, 97, 88], "score": "0.89", "loss": "0.1537", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { ; } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:35.750738", "n_pass": [1733, 100, 89], "score": "0.8747", "loss": "0.1452", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } else if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:38.516073", "n_pass": [1735, 101, 90], "score": "0.961", "loss": "0.0464", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"-help\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:41.268350", "n_pass": [1738, 102, 91], "score": "0.9013", "loss": "0.1166", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:49.598732", "n_pass": [1760, 105, 92], "score": "0.6482", "loss": "0.8546", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete, .\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:47:57.864357", "n_pass": [1774, 108, 93], "score": "0.9585", "loss": "0.0579", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\"); Thread.sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:00.610789", "n_pass": [1776, 109, 94], "score": "0.6007", "loss": "0.5462", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]); System(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:13.036061", "n_pass": [1893, 113, 95], "score": "0.8116", "loss": "0.246", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message be:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:24.166471", "n_pass": [1935, 117, 96], "score": "0.9662", "loss": "0.0637", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[++i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:29.780064", "n_pass": [1959, 119, 97], "score": "0.3966", "loss": "0.9638", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System.exit(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:35.396547", "n_pass": [1985, 121, 98], "score": "0.9578", "loss": "0.0513", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); } ; if (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:41.027002", "n_pass": [2005, 123, 99], "score": "0.6842", "loss": "0.464", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 * 1000); }"}
{"time": "2021-01-20 14:48:46.585131", "n_pass": [2015, 125, 100], "score": "0.4543", "loss": "0.8519", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { Integer.parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:48:49.938129", "n_pass": [2066, 126, 101], "score": "0.6762", "loss": "0.4148", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) { System(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:10.134880", "n_pass": [2217, 133, 102], "score": "0.6874", "loss": "0.3945", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]); System(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:21.856155", "n_pass": [2300, 137, 103], "score": "0.9165", "loss": "0.1037", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"Setting to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:25.551076", "n_pass": [2382, 138, 104], "score": "0.3853", "loss": "1.3532", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } else if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:31.087549", "n_pass": [2389, 140, 105], "score": "0.8666", "loss": "0.147", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:39.610640", "n_pass": [2453, 143, 106], "score": "0.7587", "loss": "0.4096", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(60 *00); }"}
{"time": "2021-01-20 14:49:45.210461", "n_pass": [2473, 145, 107], "score": "0.5412", "loss": "0.7929", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } else if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(600); }"}
{"time": "2021-01-20 14:49:54.925996", "n_pass": [2651, 148, 108], "score": "0.685", "loss": "1.0262", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } else if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(600); }"}
{"time": "2021-01-20 14:50:07.543599", "n_pass": [2856, 152, 109], "score": "0.9168", "loss": "0.0925", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"to \" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(600); }"}
{"time": "2021-01-20 14:50:17.331335", "n_pass": [3054, 155, 110], "score": "0.2419", "loss": "2.5803", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System test complete\");sleep(600); }"}
{"time": "2021-01-20 14:50:23.171812", "n_pass": [3137, 157, 111], "score": "0.6653", "loss": "0.5338", "code": "void main(String[] args) throws Exception {if (args0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:51:33.230386", "n_pass": [3822, 165, 112], "score": "0.6155", "loss": "0.5992", "code": "void main(String[] args) throws Exception {if (0) { args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:51:38.746187", "n_pass": [3827, 167, 113], "score": "0.9185", "loss": "0.1057", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for (i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:00.771141", "n_pass": [3849, 175, 114], "score": "0.9119", "loss": "0.1968", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i = 0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:06.336366", "n_pass": [3854, 177, 115], "score": "0.7415", "loss": "0.3442", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;; i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:09.103058", "n_pass": [3858, 178, 116], "score": "0.612", "loss": "0.5255", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) { if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:14.636342", "n_pass": [3865, 180, 117], "score": "0.9667", "loss": "0.0364", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-count\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:44.983554", "n_pass": [3893, 191, 118], "score": "0.4859", "loss": "0.8087", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") { parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:50.513506", "n_pass": [3898, 193, 119], "score": "0.8869", "loss": "0.1503", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {parseInt(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:53.284561", "n_pass": [3899, 194, 120], "score": "0.867", "loss": "0.1453", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" + \" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:52:58.821092", "n_pass": [3912, 196, 121], "score": "0.827", "loss": "0.2025", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if (\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:09.878268", "n_pass": [3922, 200, 122], "score": "0.6413", "loss": "1.0382", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) { pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:15.394054", "n_pass": [3933, 202, 123], "score": "0.7381", "loss": "0.3172", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[++i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:24.098074", "n_pass": [3941, 205, 124], "score": "0.3641", "loss": "1.0648", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i]) *0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:26.866496", "n_pass": [3945, 206, 125], "score": "0.7663", "loss": "0.3394", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; } if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:32.404979", "n_pass": [3951, 208, 126], "score": "0.4618", "loss": "0.8243", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-break\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:40.673167", "n_pass": [3957, 211, 127], "score": "0.8571", "loss": "0.1811", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\") {  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:43.462244", "n_pass": [3960, 212, 128], "score": "0.421", "loss": "1.0156", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){  } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:46.243235", "n_pass": [3962, 213, 129], "score": "0.8911", "loss": "0.2499", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if (\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:53:54.557115", "n_pass": [3967, 216, 130], "score": "0.8079", "loss": "0.3853", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) { shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:54:05.627667", "n_pass": [3984, 220, 131], "score": "0.8237", "loss": "0.2485", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown = true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:54:11.167232", "n_pass": [3988, 222, 132], "score": "0.4743", "loss": "0.872", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) { parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:54:30.551560", "n_pass": [4012, 229, 133], "score": "0.5991", "loss": "0.5457", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {parseInt(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:54:33.307054", "n_pass": [4013, 230, 134], "score": "0.4888", "loss": "0.7638", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" + \" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:54:38.864005", "n_pass": [4026, 232, 135], "score": "0.5552", "loss": "0.7888", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" + channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:17.535507", "n_pass": [4072, 246, 136], "score": "0.8505", "loss": "0.1733", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions); } if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:20.306343", "n_pass": [4076, 247, 137], "score": "0.9654", "loss": "0.0641", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);} if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:23.069193", "n_pass": [4078, 248, 138], "score": "0.2792", "loss": "2.1345", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\" + (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:45.124728", "n_pass": [4099, 256, 139], "score": "0.4113", "loss": "1.5257", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+ (4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:47.905076", "n_pass": [4101, 257, 140], "score": "0.9799", "loss": "0.044", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) + \"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:55:53.425828", "n_pass": [4107, 259, 141], "score": "0.8353", "loss": "0.4061", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if (\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:01.697824", "n_pass": [4116, 262, 142], "score": "0.9731", "loss": "0.0526", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])) { (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:04.501424", "n_pass": [4129, 263, 143], "score": "0.8372", "loss": "0.1954", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){ (\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:07.264289", "n_pass": [4131, 264, 144], "score": "0.2894", "loss": "1.3875", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"receive\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:10.031707", "n_pass": [4134, 265, 145], "score": "0.9797", "loss": "0.0298", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"-debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:23.868380", "n_pass": [4154, 270, 146], "score": "0.6611", "loss": "0.4433", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"debug\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:26.622931", "n_pass": [4155, 271, 147], "score": "0.8823", "loss": "0.2122", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { } if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:34.937697", "n_pass": [4170, 274, 148], "score": "0.9351", "loss": "0.0989", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if (\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:37.700629", "n_pass": [4172, 275, 149], "score": "0.9967", "loss": "0.0036", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1); } } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:43.285647", "n_pass": [4191, 277, 150], "score": "0.4914", "loss": "0.7529", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} } ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:48.798359", "n_pass": [4195, 279, 151], "score": "0.9654", "loss": "0.0543", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(startoptions); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:54.314100", "n_pass": [4198, 281, 152], "score": "0.4998", "loss": "0.7315", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); Runtime.getRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:56:59.834780", "n_pass": [4203, 283, 153], "score": "0.9928", "loss": "0.0078", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimegetRuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:02.620143", "n_pass": [4204, 284, 154], "score": "0.9771", "loss": "0.0402", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(new Shutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:10.924617", "n_pass": [4208, 287, 155], "score": "0.6085", "loss": "0.9787", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel)); while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:16.476498", "n_pass": [4215, 289, 156], "score": "0.9565", "loss": "0.0801", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = new LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:19.278711", "n_pass": [4223, 290, 157], "score": "0.4688", "loss": "0.822", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }  (DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:22.083094", "n_pass": [4227, 291, 158], "score": "0.9263", "loss": "0.1338", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.out.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:24.871331", "n_pass": [4231, 292, 159], "score": "0.5439", "loss": "0.7027", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"System \");sleep(600); }"}
{"time": "2021-01-20 14:57:30.391621", "n_pass": [4234, 294, 160], "score": "0.8903", "loss": "0.1375", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(600); }"}
{"time": "2021-01-20 14:57:33.167010", "n_pass": [4238, 295, 161], "score": "0.6168", "loss": "0.5244", "code": "void main(String[] args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:36.852674", "n_pass": [4248, 296, 162], "score": "0.51", "loss": "0.7243", "code": "void main(String[]args) throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:39.638740", "n_pass": [4251, 297, 163], "score": "0.9294", "loss": "0.0822", "code": "void main(String[]args)throws Exception {if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:42.411692", "n_pass": [4255, 298, 164], "score": "0.7868", "loss": "0.5616", "code": "void main(String[]args)throws Exception{if (0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:45.186018", "n_pass": [4258, 299, 165], "score": "0.7993", "loss": "0.3211", "code": "void main(String[]args)throws Exception{if(0) {args = new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:50.706234", "n_pass": [4265, 301, 166], "score": "0.3209", "loss": "2.0353", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] { \"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:57:59.001511", "n_pass": [4275, 304, 167], "score": "0.5141", "loss": "1.2143", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; } for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:07.304163", "n_pass": [4283, 307, 168], "score": "0.7966", "loss": "0.2371", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++) {if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:12.850130", "n_pass": [4296, 309, 169], "score": "0.5545", "loss": "0.6695", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\") { parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:23.915326", "n_pass": [4306, 313, 170], "score": "0.7646", "loss": "0.5242", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){ parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:26.681799", "n_pass": [4308, 314, 171], "score": "0.9814", "loss": "0.036", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){parseInt(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:29.448257", "n_pass": [4309, 315, 172], "score": "0.807", "loss": "0.2511", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\" +\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:46.404127", "n_pass": [4339, 321, 173], "score": "0.9587", "loss": "0.0887", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\" \"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:49.170896", "n_pass": [4342, 322, 174], "score": "0.5396", "loss": "1.1063", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); } if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:54.719571", "n_pass": [4348, 324, 175], "score": "0.9733", "loss": "0.0345", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()) {pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:58:57.504034", "n_pass": [4358, 325, 176], "score": "0.4801", "loss": "0.7434", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause =(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:00.276137", "n_pass": [4361, 326, 177], "score": "0.4724", "loss": "0.8741", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0; }if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:06.257948", "n_pass": [4373, 328, 178], "score": "0.7381", "loss": "0.3238", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if (\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:09.038798", "n_pass": [4376, 329, 179], "score": "0.7597", "loss": "0.442", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"-\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:11.809083", "n_pass": [4379, 330, 180], "score": "0.9696", "loss": "0.044", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){ } if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:14.580240", "n_pass": [4383, 331, 181], "score": "0.5713", "loss": "0.6419", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){} if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:17.350643", "n_pass": [4385, 332, 182], "score": "0.7063", "loss": "0.3813", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])) {shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:25.651946", "n_pass": [4401, 335, 183], "score": "0.7516", "loss": "0.373", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if (\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:36.692914", "n_pass": [4412, 339, 184], "score": "0.515", "loss": "0.728", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"-stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:39.482392", "n_pass": [4415, 340, 185], "score": "0.8837", "loss": "0.1335", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"stats\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:42.243327", "n_pass": [4416, 341, 186], "score": "0.5603", "loss": "1.1096", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" message\"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:53.349528", "n_pass": [4443, 345, 187], "score": "0.8678", "loss": "0.1756", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); } if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 14:59:58.876132", "n_pass": [4449, 347, 188], "score": "0.5173", "loss": "0.8531", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"-sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:04.415361", "n_pass": [4454, 349, 189], "score": "0.474", "loss": "0.8759", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"sendoptions\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:07.170779", "n_pass": [4455, 350, 190], "score": "0.9867", "loss": "0.0161", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])) { channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:09.990711", "n_pass": [4466, 351, 191], "score": "0.765", "loss": "0.2894", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){ channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:12.760638", "n_pass": [4468, 352, 192], "score": "0.8802", "loss": "0.1784", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions = parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:18.276729", "n_pass": [4472, 354, 193], "score": "0.7487", "loss": "0.3091", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =parseInt(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:21.037878", "n_pass": [4473, 355, 194], "score": "0.9872", "loss": "0.0186", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if (equals(args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:29.379199", "n_pass": [4493, 358, 195], "score": "0.7735", "loss": "0.4047", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])) { println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:32.178261", "n_pass": [4501, 359, 196], "score": "0.9776", "loss": "0.0286", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ println(\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:37.718164", "n_pass": [4504, 361, 197], "score": "0.9458", "loss": "0.0654", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"Message:\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:40.476385", "n_pass": [4507, 362, 198], "score": "0.9524", "loss": "0.0583", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\":\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:43.236256", "n_pass": [4508, 363, 199], "score": "0.9035", "loss": "0.1127", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\"); } if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:48.772265", "n_pass": [4520, 365, 200], "score": "0.6033", "loss": "0.5402", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");} if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:51.532686", "n_pass": [4522, 366, 201], "score": "0.7995", "loss": "0.3313", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])) ; } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:54.379487", "n_pass": [4549, 367, 202], "score": "0.9861", "loss": "0.0168", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); } if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:00:59.906741", "n_pass": [4553, 369, 203], "score": "0.4104", "loss": "0.9959", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if (\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:02.660738", "n_pass": [4555, 370, 204], "score": "0.7019", "loss": "0.5258", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) { }if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:08.198377", "n_pass": [4570, 372, 205], "score": "0.4905", "loss": "0.7302", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel(); RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:16.557859", "n_pass": [4598, 375, 206], "score": "0.3928", "loss": "1.0589", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();RuntimeaddShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:19.338335", "n_pass": [4599, 376, 207], "score": "0.4792", "loss": "0.7553", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown(channel));while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:27.589870", "n_pass": [4605, 379, 208], "score": "0.6754", "loss": "0.414", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System.println(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:30.416356", "n_pass": [4622, 380, 209], "score": "0.4169", "loss": "0.9705", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" }; }for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:45.137397", "n_pass": [4663, 385, 210], "score": "0.3037", "loss": "1.3249", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if (\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:50.705345", "n_pass": [4679, 387, 211], "score": "0.7313", "loss": "0.3253", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]); } if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:01:58.975569", "n_pass": [4694, 390, 212], "score": "0.5607", "loss": "0.5872", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"-shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:18.809578", "n_pass": [4756, 397, 213], "score": "0.8833", "loss": "0.1557", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown =true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:24.336306", "n_pass": [4770, 399, 214], "score": "0.7492", "loss": "0.3188", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; } if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:32.618705", "n_pass": [4776, 402, 215], "score": "0.5187", "loss": "0.7827", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])) {(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:35.424150", "n_pass": [4790, 403, 216], "score": "0.7651", "loss": "0.2874", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\" +\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:38.199612", "n_pass": [4802, 404, 217], "score": "0.8812", "loss": "0.173", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \"); }if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:43.716154", "n_pass": [4809, 406, 218], "score": "0.8664", "loss": "0.1583", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if (\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:46.484257", "n_pass": [4812, 407, 219], "score": "0.7652", "loss": "0.3278", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\" +channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:54.817568", "n_pass": [4839, 410, 220], "score": "0.6178", "loss": "0.5448", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if ((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:02:57.596785", "n_pass": [4846, 411, 221], "score": "0.6282", "loss": "0.5111", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){ (\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:00.384204", "n_pass": [4856, 412, 222], "score": "0.7837", "loss": "0.2502", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i])); }if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:06.027957", "n_pass": [4898, 414, 223], "score": "0.6616", "loss": "0.4338", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();addShutdownHook(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:17.230529", "n_pass": [4942, 418, 224], "score": "0.9605", "loss": "0.0521", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT); System(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:22.800450", "n_pass": [4962, 420, 225], "score": "0.993", "loss": "0.0097", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\" };}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:34.761203", "n_pass": [5000, 424, 226], "score": "0.7248", "loss": "0.3644", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i =0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:37.548578", "n_pass": [5007, 425, 227], "score": "0.5778", "loss": "0.7822", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i=0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:40.321225", "n_pass": [5008, 426, 228], "score": "0.6293", "loss": "0.5655", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i0;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:43.087013", "n_pass": [5009, 427, 229], "score": "0.3385", "loss": "1.136", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"-threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:45.859230", "n_pass": [5020, 428, 230], "score": "0.9633", "loss": "0.0437", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);} if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:51.413003", "n_pass": [5033, 430, 231], "score": "0.4493", "loss": "1.0936", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"-\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:03:56.930569", "n_pass": [5038, 432, 232], "score": "0.3946", "loss": "1.024", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[+i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:05.686486", "n_pass": [5075, 435, 233], "score": "0.5969", "loss": "0.5437", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"shutdown\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:08.477507", "n_pass": [5093, 436, 234], "score": "0.895", "loss": "0.1218", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true; }if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:14.040237", "n_pass": [5109, 438, 235], "score": "0.4535", "loss": "0.8452", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions =(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:19.676806", "n_pass": [5157, 440, 236], "score": "0.8795", "loss": "0.1413", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions=(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:22.419215", "n_pass": [5158, 441, 237], "score": "0.3884", "loss": "0.9984", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4) +\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:25.268421", "n_pass": [5191, 442, 238], "score": "0.9073", "loss": "0.1324", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])) {(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:30.990502", "n_pass": [5255, 444, 239], "score": "0.9985", "loss": "0.0016", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);} }ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:33.765634", "n_pass": [5262, 445, 240], "score": "0.4122", "loss": "1.1957", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(newShutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:36.544377", "n_pass": [5269, 446, 241], "score": "0.9399", "loss": "0.1092", "code": "void main(String[]args)throws Exception{if(0) {args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:40.294626", "n_pass": [5310, 447, 242], "score": "0.7469", "loss": "0.3143", "code": "void main(String[]args)throws Exception{if(0){args= new String[] {\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:46.210032", "n_pass": [5320, 449, 243], "score": "0.9761", "loss": "0.0408", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(i;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:48.972362", "n_pass": [5329, 450, 244], "score": "0.9987", "loss": "0.0016", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"threads\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:51.765227", "n_pass": [5340, 451, 245], "score": "0.5701", "loss": "0.6945", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\") {(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:04:57.283240", "n_pass": [5358, 453, 246], "score": "0.7669", "loss": "0.2802", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\"){(args[i]);(\"\"+\"\"); }if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:00.065740", "n_pass": [5375, 454, 247], "score": "0.9696", "loss": "0.0363", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){channelOptions(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:09.011963", "n_pass": [5470, 457, 248], "score": "0.7332", "loss": "0.3227", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\" \");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:24.891172", "n_pass": [5753, 462, 249], "score": "0.8886", "loss": "0.1386", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])) {}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:27.986234", "n_pass": [5851, 463, 250], "score": "0.9603", "loss": "0.0456", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if (\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:34.674809", "n_pass": [5958, 465, 251], "score": "0.4987", "loss": "0.7234", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads1) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:55.021253", "n_pass": [6294, 470, 252], "score": "0.6064", "loss": "0.5257", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads) { test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:05:57.782544", "n_pass": [6296, 471, 253], "score": "0.9697", "loss": "0.036", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){ test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:06:00.550663", "n_pass": [6298, 472, 254], "score": "0.9283", "loss": "0.084", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test = LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:06:03.314601", "n_pass": [6300, 473, 255], "score": "0.5363", "loss": "0.7923", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test= LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:06:06.092820", "n_pass": [6302, 474, 256], "score": "0.8722", "loss": "0.1844", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test=LoadTest(); }(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:06:08.896891", "n_pass": [6307, 475, 257], "score": "0.7331", "loss": "0.5128", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test=LoadTest();}(DEFAULT);(\"\");sleep(6); }"}
{"time": "2021-01-20 15:06:17.656093", "n_pass": [6323, 478, 258], "score": "0.9679", "loss": "0.0362", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown=true;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test=LoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:24.734122", "n_pass": [6446, 480, 259], "score": "0.9982", "loss": "0.0021", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdowntrue;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test=LoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:27.487931", "n_pass": [6447, 481, 260], "score": "0.8767", "loss": "0.1554", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while (threads){test=LoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:30.753883", "n_pass": [6606, 482, 261], "score": "0.8437", "loss": "0.2195", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){test=LoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:33.517915", "n_pass": [6612, 483, 262], "score": "0.5785", "loss": "0.6608", "code": "void main(String[]args)throws Exception{if(0){args= new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){testLoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:45.912776", "n_pass": [6653, 487, 263], "score": "0.9784", "loss": "0.0261", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){testLoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:52.589339", "n_pass": [6916, 489, 264], "score": "0.9621", "loss": "0.0407", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){LoadTest();}(DEFAULT);(\"\");sleep(6);}"}
{"time": "2021-01-20 15:06:55.898183", "n_pass": [6931, 490, 265], "score": "0.9877", "loss": "0.0153", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){shutdown;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){LoadTest();}(DEFAULT);(\"\");(6);}"}
{"time": "2021-01-20 15:07:00.228576", "n_pass": [7056, 491, 266], "score": "0.4941", "loss": "0.7863", "code": "void main(String[]args)throws Exception{if(0){args=new String[]{\"\"};}for(;;i++){if(\"\"){(args[i]);}if(\"\"){(args[i]);(\"\"+\"\");}if(\"\".equals()){pause=(args[i])*0;}if(\"\"){}if(\"\".equals(args[i])){;}if(\"\".equals(args[i])){(args[i]);(\"\"+\"\");}if(\"\".equals(args[i])){(args[i]);(\"\"+channelOptions);}if((args[i])){(\"\"+(4)+\"\");}if(\"\".equals(args[i])){(\"\".equals(args[i]));}if(\"\".equals(args[i])){}if(\"\".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){LoadTest();}(DEFAULT);(\"\");(6);}"}

Minimal simplified code:
void main(String[]args)throws Exception{if(0){args=new String[]{""};}for(;;i++){if(""){(args[i]);}if(""){(args[i]);(""+"");}if("".equals()){pause=(args[i])*0;}if(""){}if("".equals(args[i])){;}if("".equals(args[i])){(args[i]);(""+"");}if("".equals(args[i])){(args[i]);(""+channelOptions);}if((args[i])){(""+(4)+"");}if("".equals(args[i])){("".equals(args[i]));}if("".equals(args[i])){}if("".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){LoadTest();}(DEFAULT);("");(6);}

