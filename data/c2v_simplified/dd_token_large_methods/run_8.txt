
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/test/java/org/mariadb/jdbc/failover/TcpProxySocket_run.java
method_name = run
method_body = @Override public void run() { logger.trace("host proxy port " + this.localport + " for " + host + " started"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println("Proxy server cannot connect to " + host + ":" + remoteport + ":\n" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }
predict, score, loss = run, 0.9985042810440063, 0.001992623321712017

Trace of simplified code(s):
{"time": "2021-01-21 00:34:43.820419", "n_pass": [1, 1, 1], "score": "0.9478", "loss": "0.0795", "code": "@Override public void run() { logger.trace(\"host proxy port \" + this.localport + \" for \" + host + \" started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:34:46.834061", "n_pass": [93, 2, 2], "score": "0.9948", "loss": "0.0056", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:34:49.773473", "n_pass": [114, 3, 3], "score": "0.9877", "loss": "0.0137", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:34:53.732448", "n_pass": [239, 4, 4], "score": "0.9619", "loss": "0.0502", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + host + \":\" + remoteport + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:34:56.598119", "n_pass": [247, 5, 5], "score": "0.9997", "loss": "0.0003", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:02.339405", "n_pass": [425, 7, 6], "score": "0.9995", "loss": "0.0005", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flushclose(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:05.146665", "n_pass": [426, 8, 7], "score": "0.9984", "loss": "0.0017", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:08.123183", "n_pass": [432, 9, 8], "score": "0.9913", "loss": "0.013", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:11.112202", "n_pass": [437, 10, 9], "score": "0.9897", "loss": "0.0153", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:13.968228", "n_pass": [443, 11, 10], "score": "0.9979", "loss": "0.0027", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:16.808661", "n_pass": [449, 12, 11], "score": "0.9928", "loss": "0.01", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:19.670432", "n_pass": [455, 13, 12], "score": "0.9992", "loss": "0.0008", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:22.491378", "n_pass": [458, 14, 13], "score": "0.9979", "loss": "0.0024", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:25.328808", "n_pass": [462, 15, 14], "score": "0.9997", "loss": "0.0003", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:28.190253", "n_pass": [469, 16, 15], "score": "0.9992", "loss": "0.0008", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:31.050433", "n_pass": [473, 17, 16], "score": "0.9958", "loss": "0.006", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:33.877521", "n_pass": [476, 18, 17], "score": "0.9997", "loss": "0.0003", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:36.735126", "n_pass": [483, 19, 18], "score": "0.9976", "loss": "0.0024", "code": "@Override public void run() { logger.trace(\"host proxy port started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:40.021471", "n_pass": [493, 20, 19], "score": "0.9969", "loss": "0.0033", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:42.916348", "n_pass": [513, 21, 20], "score": "0.9992", "loss": "0.0008", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientInputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:45.768832", "n_pass": [522, 22, 21], "score": "0.9988", "loss": "0.0013", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy server cannot connect to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:48.634132", "n_pass": [536, 23, 22], "score": "0.9949", "loss": "0.0056", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy to \" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:52.512185", "n_pass": [834, 24, 23], "score": "0.9999", "loss": "0.0001", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" + + \":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:55.320196", "n_pass": [835, 25, 24], "score": "0.9986", "loss": "0.0023", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" + e); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:35:58.113185", "n_pass": [838, 26, 25], "score": "0.9962", "loss": "0.0048", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); out.flush; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:00.913286", "n_pass": [840, 27, 26], "score": "0.9879", "loss": "0.016", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:03.734809", "n_pass": [842, 28, 27], "score": "0.9993", "loss": "0.0009", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:06.577227", "n_pass": [847, 29, 28], "score": "0.9919", "loss": "0.015", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = server.getOutputStreamThread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:09.388356", "n_pass": [850, 30, 29], "score": "0.9996", "loss": "0.0006", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> { int bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:12.231026", "n_pass": [854, 31, 30], "score": "0.8985", "loss": "0.1496", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {bytesRead; try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:15.053831", "n_pass": [855, 32, 31], "score": "0.9985", "loss": "0.0018", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead(request)) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:17.882454", "n_pass": [859, 33, 32], "score": "0.997", "loss": "0.0032", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) != -1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:20.698047", "n_pass": [861, 34, 33], "score": "0.9951", "loss": "0.0056", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay > 0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:23.524020", "n_pass": [865, 35, 34], "score": "0.8815", "loss": "0.2005", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:26.528400", "n_pass": [877, 36, 35], "score": "0.9996", "loss": "0.0005", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead(reply)) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:29.393275", "n_pass": [893, 37, 36], "score": "0.9996", "loss": "0.0006", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) != -1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:32.216118", "n_pass": [895, 38, 37], "score": "0.9996", "loss": "0.0005", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:35.091346", "n_pass": [908, 39, 38], "score": "0.9994", "loss": "0.0006", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(0, bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:37.957439", "n_pass": [909, 40, 39], "score": "0.7893", "loss": "0.4163", "code": "@Override public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:40.925867", "n_pass": [945, 41, 40], "score": "0.993", "loss": "0.0099", "code": "public void run() { logger.trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:44.172195", "n_pass": [949, 42, 41], "score": "0.9978", "loss": "0.0026", "code": "public void run() {trace(\"started\"); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:47.489004", "n_pass": [953, 43, 42], "score": "0.9952", "loss": "0.0054", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:50.299968", "n_pass": [963, 44, 43], "score": "0.9817", "loss": "0.0246", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:53.110865", "n_pass": [973, 45, 44], "score": "0.5127", "loss": "1.0336", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:55.944896", "n_pass": [985, 46, 45], "score": "0.9954", "loss": "0.0066", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } } request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:36:58.769623", "n_pass": [989, 47, 46], "score": "0.9951", "loss": "0.0066", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:01.563924", "n_pass": [992, 48, 47], "score": "0.9282", "loss": "0.1616", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1]; byte[] reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:04.364843", "n_pass": [994, 49, 48], "score": "0.9852", "loss": "0.0276", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[4096]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:07.178562", "n_pass": [998, 50, 49], "score": "0.9995", "loss": "0.0007", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { clientclient.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:10.020869", "n_pass": [1005, 51, 50], "score": "0.9974", "loss": "0.003", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:12.821549", "n_pass": [1007, 52, 51], "score": "0.9914", "loss": "0.0175", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:15.667542", "n_pass": [1023, 53, 52], "score": "0.7586", "loss": "0.9108", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(new OutputStreamWriter(toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:18.443216", "n_pass": [1026, 54, 53], "score": "0.9951", "loss": "0.0057", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter((toClient)); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:21.239996", "n_pass": [1027, 55, 54], "score": "0.9991", "loss": "0.0012", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); out.println(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:24.022061", "n_pass": [1029, 56, 55], "score": "0.9968", "loss": "0.0048", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss = (localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:27.856120", "n_pass": [1140, 57, 56], "score": "0.9955", "loss": "0.0078", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss(localport); } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:30.638579", "n_pass": [1141, 58, 57], "score": "0.9993", "loss": "0.0009", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = (localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:33.549087", "n_pass": [1160, 59, 58], "score": "0.9883", "loss": "0.0206", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss(localport); } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:36.350828", "n_pass": [1161, 60, 59], "score": "0.9996", "loss": "0.0005", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client();OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:39.338234", "n_pass": [1176, 61, 60], "score": "0.9997", "loss": "0.0003", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { clientOutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:42.198126", "n_pass": [1177, 62, 61], "score": "0.9987", "loss": "0.0014", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:44.978450", "n_pass": [1178, 63, 62], "score": "0.9992", "loss": "0.0011", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { clientclient.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:37:47.770569", "n_pass": [1179, 64, 63], "score": "0.6792", "loss": "0.5878", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()) { ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:16.824162", "n_pass": [1651, 65, 64], "score": "0.9857", "loss": "0.0227", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){ ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:19.623567", "n_pass": [1653, 66, 65], "score": "0.4448", "loss": "1.0314", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){ss; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:22.431035", "n_pass": [1654, 67, 66], "score": "0.9964", "loss": "0.0069", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){; } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:25.203415", "n_pass": [1655, 68, 67], "score": "0.9942", "loss": "0.0092", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){ } }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:27.975048", "n_pass": [1656, 69, 68], "score": "0.9986", "loss": "0.0021", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){} }  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:30.749615", "n_pass": [1658, 70, 69], "score": "0.999", "loss": "0.0014", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}  new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:33.529420", "n_pass": [1660, 71, 70], "score": "0.9937", "loss": "0.0083", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}} new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:36.321900", "n_pass": [1661, 72, 71], "score": "0.995", "loss": "0.0095", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}new byte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:39.129329", "n_pass": [1663, 73, 72], "score": "0.9906", "loss": "0.017", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];  reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:41.921885", "n_pass": [1669, 74, 73], "score": "0.9995", "loss": "0.0007", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1]; reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:44.774039", "n_pass": [1670, 75, 74], "score": "0.9992", "loss": "0.001", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply = new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:47.576369", "n_pass": [1672, 76, 75], "score": "0.9977", "loss": "0.0035", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply= new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:50.422287", "n_pass": [1674, 77, 76], "score": "0.9937", "loss": "0.0114", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=new byte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:53.205993", "n_pass": [1676, 78, 77], "score": "0.9977", "loss": "0.0034", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6]; while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:56.003644", "n_pass": [1682, 79, 78], "score": "0.999", "loss": "0.0016", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while (!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:38:58.767954", "n_pass": [1684, 80, 79], "score": "0.9125", "loss": "0.2076", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(!stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:01.538676", "n_pass": [1686, 81, 80], "score": "0.9429", "loss": "0.0766", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop) { try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:04.312838", "n_pass": [1689, 82, 81], "score": "0.9289", "loss": "0.0986", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){ try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:07.104628", "n_pass": [1691, 83, 82], "score": "0.9183", "loss": "0.1377", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try { client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:09.901029", "n_pass": [1693, 84, 83], "score": "0.7537", "loss": "0.4211", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{ client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:12.701474", "n_pass": [1695, 85, 84], "score": "0.8719", "loss": "0.1853", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:15.512056", "n_pass": [1700, 86, 85], "score": "0.8834", "loss": "0.1573", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:18.387223", "n_pass": [1702, 87, 86], "score": "0.9378", "loss": "0.0872", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{ server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:21.216970", "n_pass": [1704, 88, 87], "score": "0.9875", "loss": "0.0181", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:23.988288", "n_pass": [1707, 89, 88], "score": "0.8747", "loss": "0.1565", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(host, remoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:26.758279", "n_pass": [1710, 90, 89], "score": "0.7712", "loss": "0.3192", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) { PrintWriter= new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:29.572077", "n_pass": [1719, 91, 90], "score": "0.9903", "loss": "0.0159", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  new PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:32.455072", "n_pass": [1720, 92, 91], "score": "0.964", "loss": "0.0616", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(); (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:35.219058", "n_pass": [1722, 93, 92], "score": "0.9801", "loss": "0.0275", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter; (\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:37.969747", "n_pass": [1723, 94, 93], "score": "0.8888", "loss": "0.1542", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\\n\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:40.766888", "n_pass": [1728, 95, 94], "score": "0.9158", "loss": "0.1115", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); ; }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:43.539405", "n_pass": [1731, 96, 95], "score": "0.97", "loss": "0.0468", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }InputStream fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:46.409218", "n_pass": [1733, 97, 96], "score": "0.9926", "loss": "0.0116", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = server.getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:49.204848", "n_pass": [1736, 98, 97], "score": "0.9366", "loss": "0.1241", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();OutputStream toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:51.949149", "n_pass": [1739, 99, 98], "score": "0.9687", "loss": "0.057", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) !1) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:54.786751", "n_pass": [1752, 100, 99], "score": "0.8682", "loss": "0.2593", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:39:57.609329", "n_pass": [1761, 101, 100], "score": "0.9327", "loss": "0.1526", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e.printStackTrace(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:00.399696", "n_pass": [1769, 102, 101], "score": "0.9608", "loss": "0.0602", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e(); } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:03.182843", "n_pass": [1770, 103, 102], "score": "0.9444", "loss": "0.0884", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer.flush(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:05.971578", "n_pass": [1777, 104, 103], "score": "0.9891", "loss": "0.0186", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer(); } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:08.735882", "n_pass": [1778, 105, 104], "score": "0.9075", "loss": "0.1876", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) !1) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:11.554670", "n_pass": [1797, 106, 105], "score": "0.9877", "loss": "0.0173", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { ; } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:14.503494", "n_pass": [1802, 107, 106], "score": "0.8963", "loss": "0.1439", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:17.316498", "n_pass": [1809, 108, 107], "score": "0.9444", "loss": "0.0803", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient.write(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:20.104441", "n_pass": [1814, 109, 108], "score": "0.8804", "loss": "0.2444", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);; } } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:22.848658", "n_pass": [1817, 110, 109], "score": "0.9825", "loss": "0.0267", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { server.close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:25.871381", "n_pass": [1841, 111, 110], "score": "0.9584", "loss": "0.0611", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }"}
{"time": "2021-01-21 00:40:28.760485", "n_pass": [1868, 112, 111], "score": "0.8755", "loss": "0.1798", "code": "public void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:31.618164", "n_pass": [1873, 113, 112], "score": "0.9539", "loss": "0.0691", "code": " void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:34.345010", "n_pass": [1874, 114, 113], "score": "0.8919", "loss": "0.1698", "code": "void run() {trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:37.953280", "n_pass": [1880, 115, 114], "score": "0.8342", "loss": "0.2685", "code": "void run(){trace(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:40.676626", "n_pass": [1882, 116, 115], "score": "0.7727", "loss": "0.3709", "code": "void run(){(\"started\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:43.435539", "n_pass": [1885, 117, 116], "score": "0.9647", "loss": "0.0532", "code": "void run(){(\"\"); stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:46.200502", "n_pass": [1889, 118, 117], "score": "0.9886", "loss": "0.0175", "code": "void run(){(\"\");stopfalse; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:48.933284", "n_pass": [1890, 119, 118], "score": "0.9702", "loss": "0.0482", "code": "void run(){(\"\");false; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:51.674868", "n_pass": [1891, 120, 119], "score": "0.9482", "loss": "0.0766", "code": "void run(){(\"\");; try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:54.441908", "n_pass": [1892, 121, 120], "score": "0.989", "loss": "0.0161", "code": "void run(){(\"\"); try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:40:57.354300", "n_pass": [1893, 122, 121], "score": "0.9874", "loss": "0.0202", "code": "void run(){(\"\");try { try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:00.083556", "n_pass": [1895, 123, 122], "score": "0.9834", "loss": "0.0282", "code": "void run(){(\"\");try{ try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:02.813830", "n_pass": [1897, 124, 123], "score": "0.9814", "loss": "0.0312", "code": "void run(){(\"\");try{try { if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:05.574490", "n_pass": [1899, 125, 124], "score": "0.9848", "loss": "0.023", "code": "void run(){(\"\");try{try{ if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:08.314705", "n_pass": [1901, 126, 125], "score": "0.9695", "loss": "0.043", "code": "void run(){(\"\");try{try{if (ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:11.053174", "n_pass": [1903, 127, 126], "score": "0.9764", "loss": "0.0321", "code": "void run(){(\"\");try{try{if(ss.isClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:13.823099", "n_pass": [1906, 128, 127], "score": "0.9769", "loss": "0.0466", "code": "void run(){(\"\");try{try{if(ssisClosed()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:16.614886", "n_pass": [1907, 129, 128], "score": "0.9748", "loss": "0.0346", "code": "void run(){(\"\");try{try{if(ss()) { ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:19.383387", "n_pass": [1911, 130, 129], "score": "0.9829", "loss": "0.0263", "code": "void run(){(\"\");try{try{if(ss()){ ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:22.137804", "n_pass": [1913, 131, 130], "score": "0.9371", "loss": "0.1047", "code": "void run(){(\"\");try{try{if(ss()){ss; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:24.903626", "n_pass": [1914, 132, 131], "score": "0.9657", "loss": "0.0484", "code": "void run(){(\"\");try{try{if(ss()){; } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:27.669200", "n_pass": [1915, 133, 132], "score": "0.9726", "loss": "0.0445", "code": "void run(){(\"\");try{try{if(ss()){ } } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:30.425491", "n_pass": [1916, 134, 133], "score": "0.9285", "loss": "0.1057", "code": "void run(){(\"\");try{try{if(ss()){} } catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:33.170482", "n_pass": [1918, 135, 134], "score": "0.9803", "loss": "0.0302", "code": "void run(){(\"\");try{try{if(ss()){}} catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:35.894355", "n_pass": [1920, 136, 135], "score": "0.9846", "loss": "0.0262", "code": "void run(){(\"\");try{try{if(ss()){}}catch (BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:38.630222", "n_pass": [1922, 137, 136], "score": "0.9872", "loss": "0.0191", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b) { try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:41.365535", "n_pass": [1928, 138, 137], "score": "0.9554", "loss": "0.0766", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){ try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:44.112860", "n_pass": [1930, 139, 138], "score": "0.9752", "loss": "0.0392", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try { Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:46.850186", "n_pass": [1932, 140, 139], "score": "0.9281", "loss": "0.1008", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{ Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:49.589603", "n_pass": [1934, 141, 140], "score": "0.9673", "loss": "0.0477", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread.sleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:52.341301", "n_pass": [1936, 142, 141], "score": "0.9688", "loss": "0.0478", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Threadsleep(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:55.062715", "n_pass": [1937, 143, 142], "score": "0.9654", "loss": "0.0585", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread(); } catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:41:57.824572", "n_pass": [1941, 144, 143], "score": "0.9865", "loss": "0.0226", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();} catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:00.549124", "n_pass": [1943, 145, 144], "score": "0.9095", "loss": "0.1305", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch (InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:03.709922", "n_pass": [1945, 146, 145], "score": "0.9721", "loss": "0.0424", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i) { } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:06.475511", "n_pass": [1951, 147, 146], "score": "0.9821", "loss": "0.0253", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){ } if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:09.201875", "n_pass": [1953, 148, 147], "score": "0.9815", "loss": "0.0264", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){} if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:11.935656", "n_pass": [1955, 149, 148], "score": "0.9481", "loss": "0.0732", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if (ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:14.702337", "n_pass": [1957, 150, 149], "score": "0.9727", "loss": "0.0402", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss.isClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:17.466233", "n_pass": [1960, 151, 150], "score": "0.9478", "loss": "0.1017", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ssisClosed()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:20.226403", "n_pass": [1961, 152, 151], "score": "0.9739", "loss": "0.0377", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply=newbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:23.004103", "n_pass": [1975, 153, 152], "score": "0.9356", "loss": "0.0969", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];replynewbyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:25.942778", "n_pass": [1976, 154, 153], "score": "0.9716", "loss": "0.0425", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];replybyte[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:28.694976", "n_pass": [1977, 155, 154], "score": "0.9578", "loss": "0.0689", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server = Socket(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:31.515581", "n_pass": [1997, 156, 155], "score": "0.9403", "loss": "0.0947", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) {  PrintWriter(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:34.262134", "n_pass": [2007, 157, 156], "score": "0.955", "loss": "0.0663", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) { e; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:37.404400", "n_pass": [2045, 158, 157], "score": "0.9893", "loss": "0.013", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {; } }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:40.126626", "n_pass": [2046, 159, 158], "score": "0.9863", "loss": "0.0214", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request); toServer; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:42.943422", "n_pass": [2051, 160, 159], "score": "0.8999", "loss": "0.1446", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);; } } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:45.665463", "n_pass": [2052, 161, 160], "score": "0.9326", "loss": "0.0852", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); } toClient(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:48.713168", "n_pass": [2083, 162, 161], "score": "0.9674", "loss": "0.0479", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server =(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:52.653994", "n_pass": [2219, 163, 162], "score": "0.9846", "loss": "0.0221", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{server(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:42:57.055787", "n_pass": [2434, 164, 163], "score": "0.9874", "loss": "0.0185", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() -> {try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:42.011672", "n_pass": [2921, 165, 164], "score": "0.9764", "loss": "0.0353", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try { while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:44.752589", "n_pass": [2924, 166, 165], "score": "0.9797", "loss": "0.0314", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{ while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:47.504357", "n_pass": [2926, 167, 166], "score": "0.9553", "loss": "0.0672", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while ((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:50.264341", "n_pass": [2928, 168, 167], "score": "0.9732", "loss": "0.0413", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead) ) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:53.040710", "n_pass": [2933, 169, 168], "score": "0.9859", "loss": "0.0206", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)) { if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:55.810631", "n_pass": [2935, 170, 169], "score": "0.9763", "loss": "0.0364", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){ if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:43:58.612855", "n_pass": [2937, 171, 170], "score": "0.9783", "loss": "0.0333", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if (delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:01.378719", "n_pass": [2939, 172, 171], "score": "0.9765", "loss": "0.0366", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(delay0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:04.145364", "n_pass": [2941, 173, 172], "score": "0.9622", "loss": "0.0561", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0) { try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:06.924427", "n_pass": [2944, 174, 173], "score": "0.9704", "loss": "0.0445", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){ try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:09.842153", "n_pass": [2946, 175, 174], "score": "0.9826", "loss": "0.0248", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try { } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:12.607542", "n_pass": [2948, 176, 175], "score": "0.9699", "loss": "0.044", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{ } catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:15.357467", "n_pass": [2950, 177, 176], "score": "0.9328", "loss": "0.0973", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{} catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:18.177229", "n_pass": [2952, 178, 177], "score": "0.9619", "loss": "0.0548", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch (InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:20.910352", "n_pass": [2954, 179, 178], "score": "0.9722", "loss": "0.0417", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e) {} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:23.649406", "n_pass": [2960, 180, 179], "score": "0.9704", "loss": "0.0455", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){} }write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:26.423055", "n_pass": [2963, 181, 180], "score": "0.9595", "loss": "0.06", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}write(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:29.201495", "n_pass": [2965, 182, 181], "score": "0.9597", "loss": "0.0592", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);} } catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:31.960551", "n_pass": [2971, 183, 182], "score": "0.9504", "loss": "0.0696", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}} catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:34.725979", "n_pass": [2973, 184, 183], "score": "0.9645", "loss": "0.052", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch (IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:37.482985", "n_pass": [2975, 185, 184], "score": "0.9572", "loss": "0.0611", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e) { } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:40.294830", "n_pass": [2981, 186, 185], "score": "0.9445", "loss": "0.0777", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){ } }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:43.194410", "n_pass": [2983, 187, 186], "score": "0.9581", "loss": "0.0612", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){} }).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:45.925222", "n_pass": [2985, 188, 187], "score": "0.9633", "loss": "0.0529", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).startbytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:48.672389", "n_pass": [2989, 189, 188], "score": "0.9534", "loss": "0.0608", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead; try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:51.535314", "n_pass": [2992, 190, 189], "score": "0.9451", "loss": "0.0712", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try { while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:54.373783", "n_pass": [2994, 191, 190], "score": "0.9556", "loss": "0.0624", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{ while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:57.109412", "n_pass": [2996, 192, 191], "score": "0.9477", "loss": "0.0674", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while ((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:44:59.833341", "n_pass": [2998, 193, 192], "score": "0.9657", "loss": "0.0435", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead) ) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:02.608426", "n_pass": [3003, 194, 193], "score": "0.9586", "loss": "0.0543", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)) { try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:05.338530", "n_pass": [3005, 195, 194], "score": "0.9437", "loss": "0.0745", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){ try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:08.078451", "n_pass": [3007, 196, 195], "score": "0.9317", "loss": "0.088", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try { } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:10.861715", "n_pass": [3009, 197, 196], "score": "0.934", "loss": "0.0903", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{ } catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:13.587041", "n_pass": [3011, 198, 197], "score": "0.9529", "loss": "0.0612", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{} catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:16.351672", "n_pass": [3013, 199, 198], "score": "0.9508", "loss": "0.0636", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch (InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:19.225765", "n_pass": [3015, 200, 199], "score": "0.9701", "loss": "0.0375", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e) { printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:22.071538", "n_pass": [3021, 201, 200], "score": "0.9209", "loss": "0.1013", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){ printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:24.822533", "n_pass": [3023, 202, 201], "score": "0.9247", "loss": "0.0939", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace(); }(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:27.586761", "n_pass": [3028, 203, 202], "score": "0.9812", "loss": "0.0304", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);} } catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:30.359475", "n_pass": [3035, 204, 203], "score": "0.6491", "loss": "0.4831", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}} catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:33.094293", "n_pass": [3037, 205, 204], "score": "0.9547", "loss": "0.0637", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch (IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:35.860777", "n_pass": [3039, 206, 205], "score": "0.9604", "loss": "0.0506", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e) { }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:38.623178", "n_pass": [3045, 207, 206], "score": "0.9494", "loss": "0.0657", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){ }  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:41.407933", "n_pass": [3047, 208, 207], "score": "0.9495", "loss": "0.0659", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}  } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:44.134528", "n_pass": [3049, 209, 208], "score": "0.9647", "loss": "0.0447", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){} } catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:46.862608", "n_pass": [3050, 210, 209], "score": "0.9554", "loss": "0.0592", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}} catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:49.586467", "n_pass": [3052, 211, 210], "score": "0.9457", "loss": "0.0706", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch (IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:52.321872", "n_pass": [3054, 212, 211], "score": "0.9269", "loss": "0.0939", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e) { try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:55.062728", "n_pass": [3060, 213, 212], "score": "0.9489", "loss": "0.0665", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){ try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:45:57.843613", "n_pass": [3062, 214, 213], "score": "0.958", "loss": "0.0571", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try { if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:00.571480", "n_pass": [3064, 215, 214], "score": "0.9431", "loss": "0.0745", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{ if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:03.305907", "n_pass": [3066, 216, 215], "score": "0.9636", "loss": "0.0485", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if (server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:06.050198", "n_pass": [3068, 217, 216], "score": "0.9515", "loss": "0.0624", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server != null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:08.790316", "n_pass": [3071, 218, 217], "score": "0.9567", "loss": "0.0572", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server!= null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:11.525807", "n_pass": [3072, 219, 218], "score": "0.9506", "loss": "0.0658", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server= null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:14.339062", "n_pass": [3074, 220, 219], "score": "0.9486", "loss": "0.0677", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null) { close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:17.103111", "n_pass": [3077, 221, 220], "score": "0.9524", "loss": "0.0639", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){ close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:19.837219", "n_pass": [3079, 222, 221], "score": "0.9381", "loss": "0.0809", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close(); } if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:22.605923", "n_pass": [3084, 223, 222], "score": "0.8832", "loss": "0.1537", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();} if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:25.372486", "n_pass": [3086, 224, 223], "score": "0.948", "loss": "0.0681", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if (client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:28.099190", "n_pass": [3088, 225, 224], "score": "0.9461", "loss": "0.072", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client != null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:30.841454", "n_pass": [3091, 226, 225], "score": "0.9451", "loss": "0.0731", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client!= null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:33.598180", "n_pass": [3092, 227, 226], "score": "0.9559", "loss": "0.0594", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client= null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:36.354288", "n_pass": [3094, 228, 227], "score": "0.9536", "loss": "0.0696", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null) { } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:39.111626", "n_pass": [3097, 229, 228], "score": "0.955", "loss": "0.0621", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){ } } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:41.853285", "n_pass": [3099, 230, 229], "score": "0.9556", "loss": "0.0607", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){} } catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:44.583894", "n_pass": [3101, 231, 230], "score": "0.9547", "loss": "0.0618", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}} catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:47.327205", "n_pass": [3103, 232, 231], "score": "0.9496", "loss": "0.0684", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch (IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:50.122178", "n_pass": [3105, 233, 232], "score": "0.9452", "loss": "0.0744", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e) { } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:52.894825", "n_pass": [3111, 234, 233], "score": "0.8985", "loss": "0.1361", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){ } } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:55.633647", "n_pass": [3113, 235, 234], "score": "0.9589", "loss": "0.0611", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){} } } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:46:58.366392", "n_pass": [3115, 236, 235], "score": "0.945", "loss": "0.073", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}} } } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:47:01.091664", "n_pass": [3117, 237, 236], "score": "0.899", "loss": "0.1356", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}} } catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:47:03.833677", "n_pass": [3119, 238, 237], "score": "0.8795", "loss": "0.1629", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}} catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:47:06.563019", "n_pass": [3121, 239, 238], "score": "0.9804", "loss": "0.0291", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch (IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:47:09.352149", "n_pass": [3123, 240, 239], "score": "0.9619", "loss": "0.0528", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e) { printStackTrace(); } }"}
{"time": "2021-01-21 00:47:12.321479", "n_pass": [3129, 241, 240], "score": "0.9532", "loss": "0.0623", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){ printStackTrace(); } }"}
{"time": "2021-01-21 00:47:15.175754", "n_pass": [3131, 242, 241], "score": "0.9011", "loss": "0.1444", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace(); } }"}
{"time": "2021-01-21 00:47:18.031860", "n_pass": [3136, 243, 242], "score": "0.9566", "loss": "0.0578", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();} }"}
{"time": "2021-01-21 00:47:20.796608", "n_pass": [3138, 244, 243], "score": "0.9513", "loss": "0.0648", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(hostremoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:24.614291", "n_pass": [3220, 245, 244], "score": "0.9581", "loss": "0.0599", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport); } catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:27.356666", "n_pass": [3224, 246, 245], "score": "0.9483", "loss": "0.0711", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);} catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:30.106966", "n_pass": [3226, 247, 246], "score": "0.9543", "loss": "0.0622", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch (IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:32.823908", "n_pass": [3228, 248, 247], "score": "0.973", "loss": "0.038", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e) { (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:35.627426", "n_pass": [3234, 249, 248], "score": "0.9626", "loss": "0.0517", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){ (\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:38.430954", "n_pass": [3236, 250, 249], "score": "0.9553", "loss": "0.0645", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"Proxy\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:41.191955", "n_pass": [3239, 251, 250], "score": "0.9735", "loss": "0.0345", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\" +\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:43.956287", "n_pass": [3241, 252, 251], "score": "0.9718", "loss": "0.0365", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\":\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:46.726206", "n_pass": [3244, 253, 252], "score": "0.9754", "loss": "0.0337", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\" ); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:49.479739", "n_pass": [3246, 254, 253], "score": "0.9684", "loss": "0.0486", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\"); }fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:52.203738", "n_pass": [3249, 255, 254], "score": "0.9559", "loss": "0.0579", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer = getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:54.931112", "n_pass": [3252, 256, 255], "score": "0.9532", "loss": "0.0608", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer= getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:47:57.660290", "n_pass": [3254, 257, 256], "score": "0.9739", "loss": "0.0345", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer = Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:00.648386", "n_pass": [3260, 258, 257], "score": "0.9494", "loss": "0.0699", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer= Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:03.525910", "n_pass": [3262, 259, 258], "score": "0.9813", "loss": "0.0298", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=Thread(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:06.249687", "n_pass": [3263, 260, 259], "score": "0.7577", "loss": "0.3228", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(() ->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:08.986119", "n_pass": [3267, 261, 260], "score": "0.9511", "loss": "0.0631", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server=null){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:12.049790", "n_pass": [3367, 262, 261], "score": "0.9556", "loss": "0.0584", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(servernull){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:14.826222", "n_pass": [3368, 263, 262], "score": "0.959", "loss": "0.0541", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client=null){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:17.605128", "n_pass": [3379, 264, 263], "score": "0.9574", "loss": "0.055", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(clientnull){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:20.356882", "n_pass": [3380, 265, 264], "score": "0.9583", "loss": "0.0538", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer=getInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:24.228197", "n_pass": [3510, 266, 265], "score": "0.9674", "loss": "0.0591", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServergetInputStream();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:26.967055", "n_pass": [3511, 267, 266], "score": "0.9772", "loss": "0.0391", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();toServer=(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:29.711740", "n_pass": [3516, 268, 267], "score": "0.9766", "loss": "0.0515", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();toServer(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}
{"time": "2021-01-21 00:48:33.926088", "n_pass": [3761, 269, 268], "score": "0.9845", "loss": "0.0303", "code": "void run(){(\"\");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(\"\"+\"\");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}"}

Minimal simplified code:
void run(){("");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(""+"");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}

