
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/pnikosis__materialish-progress/app/src/main/java/com/pnikosis/materialishprogress/sample/MainActivity_onCreate.java
method_name = onCreate
method_body = @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); progressWheelLinear = (ProgressWheel) findViewById(R.id.linear); interpolatedValue = (TextView) findViewById(R.id.interpolatedValue); linearValue = (TextView) findViewById(R.id.linearValue); Spinner spinnerOptions = (Spinner) findViewById(R.id.spinner_options); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelInterpolated.setProgress(0.0f); } interpolatedValue.setText(String.format("%.2f", progress)); } }); progressWheelLinear.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelLinear.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelLinear.setProgress(0.0f); } linearValue.setText(String.format("%.2f", progress)); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }
predict, score, loss = onCreate, 1.0, 0.0

Trace of simplified code(s):
{"time": "2021-01-21 04:08:28.617097", "n_pass": [1, 1, 1], "score": "0.4485", "loss": "0.8198", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); progressWheelLinear = (ProgressWheel) findViewById(R.id.linear); interpolatedValue = (TextView) findViewById(R.id.interpolatedValue); linearValue = (TextView) findViewById(R.id.linearValue); Spinner spinnerOptions = (Spinner) findViewById(R.id.spinner_options); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelInterpolated.setProgress(0.0f); } interpolatedValue.setText(String.format(\"%.2f\", progress)); } }); progressWheelLinear.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelLinear.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelLinear.setProgress(0.0f); } linearValue.setText(String.format(\"%.2f\", progress)); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:31.741830", "n_pass": [23, 2, 2], "score": "0.9827", "loss": "0.0341", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); progressWheelLinear = (ProgressWheel) findViewById(R.id.linear); interpolatedValue = (TextView) findViewById(R.id.interpolatedValue); linearValue = (TextView) findViewById(R.id.linearValue); Spinner spinnerOptions = (Spinner) findViewById(R.id.spinner_options); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:34.938901", "n_pass": [55, 3, 3], "score": "0.4048", "loss": "1.0883", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:38.100669", "n_pass": [100, 4, 4], "score": "0.9999", "loss": "0.0002", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:44.057092", "n_pass": [105, 6, 5], "score": "0.9996", "loss": "0.0004", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:47.030606", "n_pass": [110, 7, 6], "score": "1.0", "loss": "0.0", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:50.052742", "n_pass": [118, 8, 7], "score": "1.0", "loss": "0.0", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:53.055103", "n_pass": [129, 9, 8], "score": "0.9991", "loss": "0.0009", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor);(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:56.119894", "n_pass": [193, 10, 9], "score": "1.0", "loss": "0.0", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:08:59.124119", "n_pass": [205, 11, 10], "score": "0.4435", "loss": "0.8488", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:02.097535", "n_pass": [210, 12, 11], "score": "0.7026", "loss": "0.3536", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:05.030501", "n_pass": [223, 13, 12], "score": "0.7038", "loss": "0.3953", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:07.914266", "n_pass": [224, 14, 13], "score": "0.6695", "loss": "0.4017", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break; case 1: setProgress(f); break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:11.028311", "n_pass": [337, 15, 14], "score": "0.4262", "loss": "1.0533", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;; break; case 4: setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:13.911684", "n_pass": [338, 16, 15], "score": "0.3182", "loss": "1.1554", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:16.833524", "n_pass": [345, 17, 16], "score": "0.3634", "loss": "1.0261", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:19.718784", "n_pass": [351, 18, 17], "score": "0.5738", "loss": "0.6094", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:25.600001", "n_pass": [368, 20, 18], "score": "0.4812", "loss": "0.7469", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:31.327308", "n_pass": [370, 22, 19], "score": "0.6532", "loss": "0.4284", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:42.928826", "n_pass": [397, 26, 20], "score": "0.7933", "loss": "0.2325", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:45.963946", "n_pass": [428, 27, 21], "score": "0.5714", "loss": "0.5645", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:48.866684", "n_pass": [438, 28, 22], "score": "0.3596", "loss": "1.0674", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:51.728636", "n_pass": [439, 29, 23], "score": "0.4615", "loss": "0.7967", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:54.572961", "n_pass": [440, 30, 24], "score": "0.4029", "loss": "0.957", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreatebuttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:09:57.466021", "n_pass": [446, 31, 25], "score": "0.5439", "loss": "0.6202", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:00.311706", "n_pass": [452, 32, 26], "score": "0.414", "loss": "0.8901", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.BuilderBuilder(MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:04.289982", "n_pass": [637, 33, 27], "score": "0.5239", "loss": "0.6481", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(R.string.aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:07.146289", "n_pass": [640, 34, 28], "score": "0.7078", "loss": "0.3505", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(aboutok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:09.988858", "n_pass": [641, 35, 29], "score": "0.6551", "loss": "0.4688", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:12.836155", "n_pass": [645, 36, 30], "score": "0.8578", "loss": "0.1537", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:15.687811", "n_pass": [647, 37, 31], "score": "0.5315", "loss": "0.6333", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog.dismiss(); } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:18.535510", "n_pass": [650, 38, 32], "score": "0.8138", "loss": "0.2065", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:24.330600", "n_pass": [677, 40, 33], "score": "0.5885", "loss": "0.5376", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:27.269146", "n_pass": [699, 41, 34], "score": "0.4541", "loss": "0.8191", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:30.128086", "n_pass": [700, 42, 35], "score": "0.7746", "loss": "0.2565", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:32.972436", "n_pass": [702, 43, 36], "score": "0.8253", "loss": "0.1929", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:35.833679", "n_pass": [705, 44, 37], "score": "0.5074", "loss": "0.6956", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:38.727227", "n_pass": [708, 45, 38], "score": "0.6833", "loss": "0.3815", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:47.320439", "n_pass": [730, 48, 39], "score": "0.6893", "loss": "0.3743", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:50.214668", "n_pass": [744, 49, 40], "score": "0.7401", "loss": "0.3017", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:55.914316", "n_pass": [755, 51, 41], "score": "0.6814", "loss": "0.3868", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:10:58.864775", "n_pass": [789, 52, 42], "score": "0.5448", "loss": "0.6739", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:07.620903", "n_pass": [857, 55, 43], "score": "0.3279", "loss": "1.1169", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:13.618840", "n_pass": [945, 57, 44], "score": "0.398", "loss": "1.1539", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:16.847427", "n_pass": [1042, 58, 45], "score": "0.6676", "loss": "0.4222", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:29.425335", "n_pass": [1365, 61, 46], "score": "0.5412", "loss": "0.6182", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { public void onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:32.323205", "n_pass": [1366, 62, 47], "score": "0.6021", "loss": "0.5084", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:35.198252", "n_pass": [1377, 63, 48], "score": "0.6964", "loss": "0.521", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:40.860108", "n_pass": [1379, 65, 49], "score": "0.8631", "loss": "0.1552", "code": " void onCreate(Bundle savedInstanceState) { super.findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:49.889219", "n_pass": [1398, 68, 50], "score": "0.3687", "loss": "1.0087", "code": " void onCreate(Bundle savedInstanceState) { findViewById(button_about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:52.717000", "n_pass": [1400, 69, 51], "score": "0.6198", "loss": "0.4793", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); buttonAbout.setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:55.572704", "n_pass": [1403, 70, 52], "score": "0.3744", "loss": "0.9958", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new View.OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:11:58.412649", "n_pass": [1406, 71, 53], "score": "0.9065", "loss": "0.0988", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  void onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:01.245075", "n_pass": [1410, 72, 54], "score": "0.7347", "loss": "0.3098", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity.this).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:04.083469", "n_pass": [1417, 73, 55], "score": "0.6388", "loss": "0.4514", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new DialogInterface.OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:06.919963", "n_pass": [1421, 74, 56], "score": "0.4622", "loss": "0.7758", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) { dialog; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:12.625958", "n_pass": [1431, 76, 57], "score": "0.3579", "loss": "1.0302", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); dialog.show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:18.299791", "n_pass": [1436, 78, 58], "score": "0.6926", "loss": "0.3693", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:24.010464", "n_pass": [1446, 80, 59], "score": "0.6233", "loss": "0.479", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:41.077104", "n_pass": [1474, 86, 60], "score": "0.2503", "loss": "2.2898", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { void onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:52.450651", "n_pass": [1486, 90, 61], "score": "0.7451", "loss": "0.3104", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:12:55.301200", "n_pass": [1496, 91, 62], "score": "0.6576", "loss": "0.437", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress == 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:08.174312", "n_pass": [1505, 95, 63], "score": "0.2228", "loss": "2.4731", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress= 1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:10.973754", "n_pass": [1506, 96, 64], "score": "0.4032", "loss": "0.9271", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); break;setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:13.792245", "n_pass": [1512, 97, 65], "score": "0.6657", "loss": "0.4163", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.5f); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:19.390342", "n_pass": [1515, 99, 66], "score": "0.6497", "loss": "0.4389", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:27.813398", "n_pass": [1527, 102, 67], "score": "0.437", "loss": "0.8747", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:30.621114", "n_pass": [1532, 103, 68], "score": "0.4382", "loss": "0.8449", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor =colorOptions = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:33.429202", "n_pass": [1534, 104, 69], "score": "0.3302", "loss": "1.2195", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:36.278007", "n_pass": [1550, 105, 70], "score": "0.7231", "loss": "0.3295", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:39.087427", "n_pass": [1554, 106, 71], "score": "0.7205", "loss": "0.3457", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } } public void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:41.887176", "n_pass": [1555, 107, 72], "score": "0.3886", "loss": "1.2821", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.id._color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:44.713561", "n_pass": [1564, 108, 73], "score": "0.3949", "loss": "0.9532", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:13:53.160053", "n_pass": [1586, 111, 74], "score": "0.5993", "loss": "0.5218", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public void onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:07.690694", "n_pass": [1644, 116, 75], "score": "0.5107", "loss": "0.8122", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:18.853017", "n_pass": [1665, 120, 76], "score": "0.6005", "loss": "0.5567", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:21.627816", "n_pass": [1667, 121, 77], "score": "0.6793", "loss": "0.4077", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:24.400088", "n_pass": [1670, 122, 78], "score": "0.5343", "loss": "0.676", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressWheel.ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:27.187499", "n_pass": [1673, 123, 79], "score": "0.3644", "loss": "1.0151", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1.0f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:32.798108", "n_pass": [1687, 125, 80], "score": "0.7412", "loss": "0.307", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } else if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:35.606126", "n_pass": [1691, 126, 81], "score": "0.7524", "loss": "0.3143", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } if (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:38.397617", "n_pass": [1692, 127, 82], "score": "0.7192", "loss": "0.3533", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:49.728734", "n_pass": [1744, 131, 83], "score": "0.4243", "loss": "0.8791", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {; } }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:14:58.619360", "n_pass": [1803, 134, 84], "score": "0.6473", "loss": "0.4545", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions.setOnItemSelectedListener(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:01.406207", "n_pass": [1813, 135, 85], "score": "0.5113", "loss": "0.6772", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() { @Override public onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:04.215048", "n_pass": [1820, 136, 86], "score": "0.6157", "loss": "0.7311", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() { @Override onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:12.602888", "n_pass": [1839, 139, 87], "score": "0.5927", "loss": "0.7729", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() { @Override onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} } @Overridevoid onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:26.992634", "n_pass": [1931, 144, 88], "score": "0.7252", "loss": "0.3525", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() { @Override onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() { @Override onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:30.310573", "n_pass": [1965, 145, 89], "score": "0.8468", "loss": "0.2521", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() { @Override onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:35.926948", "n_pass": [1984, 147, 90], "score": "0.7962", "loss": "0.2359", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {Override onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:38.713459", "n_pass": [1985, 148, 91], "score": "0.5003", "loss": "0.7114", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: progressWheelLinear.setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:41.565832", "n_pass": [2001, 149, 92], "score": "0.8076", "loss": "0.2563", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress(0.);(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:44.338115", "n_pass": [2003, 150, 93], "score": "0.6326", "loss": "0.4614", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) { progressWheelInterpolated(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:15:47.153406", "n_pass": [2021, 151, 94], "score": "0.7215", "loss": "0.3641", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1f); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:16:35.598846", "n_pass": [2495, 157, 95], "score": "0.6218", "loss": "0.5315", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); } (progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:16:41.168522", "n_pass": [2499, 159, 96], "score": "0.4666", "loss": "0.8585", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(progress1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:16:43.962221", "n_pass": [2501, 160, 97], "score": "0.6052", "loss": "0.5073", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); } }); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:16:49.539231", "n_pass": [2507, 162, 98], "score": "0.7794", "loss": "0.301", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.); } } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:00.641625", "n_pass": [2518, 166, 99], "score": "0.5682", "loss": "0.5873", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} } @Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:06.219301", "n_pass": [2522, 168, 100], "score": "0.5251", "loss": "0.6764", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override public void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:09.066862", "n_pass": [2525, 169, 101], "score": "0.7756", "loss": "0.2661", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Overridepublic void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:11.846784", "n_pass": [2526, 170, 102], "score": "0.8386", "loss": "0.1767", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override void onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:17.381400", "n_pass": [2528, 172, 103], "score": "0.6399", "loss": "0.6041", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override  onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:20.151298", "n_pass": [2529, 173, 104], "score": "0.5845", "loss": "0.5496", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?> parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:22.935207", "n_pass": [2536, 174, 105], "score": "0.6201", "loss": "0.5487", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { } });int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:31.253635", "n_pass": [2543, 177, 106], "score": "0.3615", "loss": "1.4407", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});int defaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:36.817809", "n_pass": [2548, 179, 107], "score": "0.4066", "loss": "0.98", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor = progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:42.361439", "n_pass": [2552, 181, 108], "score": "0.7052", "loss": "0.4911", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor();int defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:17:47.907407", "n_pass": [2559, 183, 109], "score": "0.455", "loss": "0.8448", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options_color)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:04.474871", "n_pass": [2568, 189, 110], "score": "0.3369", "loss": "1.6301", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_optionscolor)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:07.245282", "n_pass": [2569, 190, 111], "score": "0.3375", "loss": "1.7322", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterView.OnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:10.043806", "n_pass": [2575, 191, 112], "score": "0.5782", "loss": "0.6553", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:18.366494", "n_pass": [2581, 194, 113], "score": "0.6791", "loss": "0.5069", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() {void onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:21.124622", "n_pass": [2582, 195, 114], "score": "0.7248", "loss": "0.354", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }void onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:26.719270", "n_pass": [2601, 197, 115], "score": "0.6868", "loss": "0.4948", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(R.color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:29.502186", "n_pass": [2612, 198, 116], "score": "0.777", "loss": "0.2715", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:32.275404", "n_pass": [2617, 199, 117], "score": "0.2862", "loss": "2.4593", "code": " void onCreate(Bundle savedInstanceState) { findViewById(about); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:50.184063", "n_pass": [2666, 205, 118], "score": "0.405", "loss": "1.1512", "code": " void onCreate(Bundle savedInstanceState) { findViewById(); setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:18:52.929622", "n_pass": [2669, 206, 119], "score": "0.4734", "loss": "1.0827", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {  onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:01.360546", "n_pass": [2679, 209, 120], "score": "0.4101", "loss": "1.4073", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() { onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:04.097010", "n_pass": [2680, 210, 121], "score": "0.2302", "loss": "2.1585", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v) { (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:06.849484", "n_pass": [2687, 211, 122], "score": "0.7198", "loss": "0.3515", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){ (MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:09.586660", "n_pass": [2689, 212, 123], "score": "0.2727", "loss": "1.7765", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener() {  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:12.767305", "n_pass": [2701, 213, 124], "score": "0.3425", "loss": "1.4081", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(DialogInterfaceint which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:21.047868", "n_pass": [2707, 216, 125], "score": "0.2966", "loss": "1.7056", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {} }); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:26.537783", "n_pass": [2715, 218, 126], "score": "0.671", "loss": "0.4285", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}}); show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:29.301157", "n_pass": [2719, 219, 127], "score": "0.31", "loss": "1.5548", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent, View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:48.466275", "n_pass": [2749, 226, 128], "score": "0.7703", "loss": "0.2784", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View viewid) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:51.237532", "n_pass": [2752, 227, 129], "score": "0.243", "loss": "2.3647", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id) { switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:53.982019", "n_pass": [2755, 228, 130], "score": "0.3862", "loss": "1.4319", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){ switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:56.725348", "n_pass": [2757, 229, 131], "score": "0.3011", "loss": "1.8472", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position) { case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:19:59.467953", "n_pass": [2762, 230, 132], "score": "0.6434", "loss": "0.5788", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){ case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:02.235722", "n_pass": [2764, 231, 133], "score": "0.4818", "loss": "0.8497", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0: setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:04.999111", "n_pass": [2769, 232, 134], "score": "0.6984", "loss": "0.3673", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(0f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:07.773963", "n_pass": [2775, 233, 135], "score": "0.6164", "loss": "0.5966", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f); setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:10.941503", "n_pass": [2779, 234, 136], "score": "0.4743", "loss": "0.7759", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);setCallback(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:13.680067", "n_pass": [2780, 235, 137], "score": "0.4959", "loss": "0.824", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback() { onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:16.428632", "n_pass": [2787, 236, 138], "score": "0.5349", "loss": "0.7378", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if (0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:27.445879", "n_pass": [2800, 240, 139], "score": "0.6136", "loss": "0.5566", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0) {(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:30.185723", "n_pass": [2804, 241, 140], "score": "0.5903", "loss": "0.6387", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1); }(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:32.945646", "n_pass": [2810, 242, 141], "score": "0.8587", "loss": "0.198", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1); }}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:35.695351", "n_pass": [2816, 243, 142], "score": "0.371", "loss": "1.5957", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0.);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:43.923921", "n_pass": [2825, 246, 143], "score": "0.615", "loss": "0.649", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);} }@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:46.690161", "n_pass": [2829, 247, 144], "score": "0.5825", "loss": "0.7132", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}@Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:49.454708", "n_pass": [2831, 248, 145], "score": "0.7961", "loss": "0.4261", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override onNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:54.916782", "n_pass": [2833, 250, 146], "score": "0.2779", "loss": "1.5663", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}OverrideonNothingSelected(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:20:57.660286", "n_pass": [2834, 251, 147], "score": "0.5241", "loss": "0.7386", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) { }});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:03.191366", "n_pass": [2844, 253, 148], "score": "0.5401", "loss": "0.8377", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});intdefaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:05.951713", "n_pass": [2849, 254, 149], "score": "0.3071", "loss": "1.9578", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel.getBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:11.485232", "n_pass": [2854, 256, 150], "score": "0.6203", "loss": "0.509", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheelgetBarColor(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:14.234631", "n_pass": [2855, 257, 151], "score": "0.5059", "loss": "1.1923", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel(); defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:16.973347", "n_pass": [2859, 258, 152], "score": "0.8073", "loss": "0.2738", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor = (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:19.714033", "n_pass": [2861, 259, 153], "score": "0.7511", "loss": "0.2904", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor= (_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:22.464696", "n_pass": [2863, 260, 154], "score": "0.372", "loss": "1.4606", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(_options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:25.192949", "n_pass": [2865, 261, 155], "score": "0.5821", "loss": "0.7608", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new AdapterViewOnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:27.941095", "n_pass": [2871, 262, 156], "score": "0.7769", "loss": "0.2746", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener() { onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:30.695428", "n_pass": [2875, 263, 157], "score": "0.8175", "loss": "0.2342", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){ onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:33.423848", "n_pass": [2877, 264, 158], "score": "0.7556", "loss": "0.3198", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {  onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:36.262527", "n_pass": [2911, 265, 159], "score": "0.7921", "loss": "0.2914", "code": " void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:39.524257", "n_pass": [2943, 266, 160], "score": "0.3673", "loss": "1.3357", "code": "void onCreate(Bundle savedInstanceState) { findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:43.105214", "n_pass": [2952, 267, 161], "score": "0.7265", "loss": "0.3402", "code": "void onCreate(Bundle savedInstanceState){ findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:45.843431", "n_pass": [2954, 268, 162], "score": "0.4886", "loss": "0.9208", "code": "void onCreate(Bundle savedInstanceState){findViewById();setOnClickListener(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:48.566932", "n_pass": [2959, 269, 163], "score": "0.6323", "loss": "0.5017", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener() {onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:51.318812", "n_pass": [2966, 270, 164], "score": "0.5955", "loss": "0.7123", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){  onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:57.230380", "n_pass": [2988, 272, 165], "score": "0.8131", "loss": "0.2924", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which) {}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:21:59.974632", "n_pass": [2995, 273, 166], "score": "0.7441", "loss": "0.3094", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show(); } }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:02.729586", "n_pass": [3005, 274, 167], "score": "0.6984", "loss": "0.4654", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();} }); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:05.460690", "n_pass": [3007, 275, 168], "score": "0.8537", "loss": "0.17", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); spinnerOptions(new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:10.962272", "n_pass": [3012, 277, 169], "score": "0.4207", "loss": "1.1085", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView() {onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:13.703762", "n_pass": [3019, 278, 170], "score": "0.5585", "loss": "0.6829", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){ onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:19.661646", "n_pass": [3059, 280, 171], "score": "0.5881", "loss": "0.6071", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress) { if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:22.419627", "n_pass": [3066, 281, 172], "score": "0.5187", "loss": "0.8343", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){ if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:25.159016", "n_pass": [3068, 282, 173], "score": "0.7106", "loss": "0.4421", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); setProgress(0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:30.668809", "n_pass": [3088, 284, 174], "score": "0.5843", "loss": "0.5886", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent) {}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:33.470410", "n_pass": [3103, 285, 175], "score": "0.2633", "loss": "1.7998", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){ onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:41.016869", "n_pass": [3231, 287, 176], "score": "0.5734", "loss": "0.6392", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}}); (new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:44.079925", "n_pass": [3251, 288, 177], "score": "0.5066", "loss": "0.7209", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?> parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:46.842083", "n_pass": [3265, 289, 178], "score": "0.4781", "loss": "0.9497", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor =progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:22:52.900057", "n_pass": [3343, 291, 179], "score": "0.3602", "loss": "1.3381", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(defaultBarColor); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:20.069060", "n_pass": [3699, 295, 180], "score": "0.6068", "loss": "0.513", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor(); } }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:22.815789", "n_pass": [3702, 296, 181], "score": "0.597", "loss": "0.7551", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();} }onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:25.545697", "n_pass": [3704, 297, 182], "score": "0.6661", "loss": "0.4854", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?> parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:28.324749", "n_pass": [3712, 298, 183], "score": "0.2929", "loss": "1.4484", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { } }); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:36.542074", "n_pass": [3719, 301, 184], "score": "0.735", "loss": "0.3748", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner(color);setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:44.789421", "n_pass": [3726, 304, 185], "score": "0.4609", "loss": "0.8208", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent, long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:23:55.854884", "n_pass": [3747, 308, 186], "score": "0.582", "loss": "0.6346", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) { switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:01.337187", "n_pass": [3754, 310, 187], "score": "0.2896", "loss": "1.5548", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position) { case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:04.105529", "n_pass": [3759, 311, 188], "score": "0.4882", "loss": "0.9577", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){ case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:06.869811", "n_pass": [3761, 312, 189], "score": "0.697", "loss": "0.3903", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);} }void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:15.557679", "n_pass": [3777, 315, 190], "score": "0.67", "loss": "0.4616", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}void onNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:21.029614", "n_pass": [3780, 317, 191], "score": "0.3725", "loss": "1.2762", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent) { } }); }"}
{"time": "2021-01-21 04:24:26.511611", "n_pass": [3790, 319, 192], "score": "0.5345", "loss": "0.8314", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){ } }); }"}
{"time": "2021-01-21 04:24:29.239000", "n_pass": [3792, 320, 193], "score": "0.4528", "loss": "1.0199", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id) { switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){} }); }"}
{"time": "2021-01-21 04:24:47.726695", "n_pass": [3974, 326, 194], "score": "0.3573", "loss": "1.2456", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent) { }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){} }); }"}
{"time": "2021-01-21 04:24:58.734850", "n_pass": [4002, 330, 195], "score": "0.403", "loss": "1.2075", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){ }}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){} }); }"}
{"time": "2021-01-21 04:25:01.478941", "n_pass": [4004, 331, 196], "score": "0.6046", "loss": "0.747", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){} }); }"}
{"time": "2021-01-21 04:25:29.566755", "n_pass": [4071, 341, 197], "score": "0.358", "loss": "1.3567", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}}); }"}
{"time": "2021-01-21 04:25:32.305383", "n_pass": [4075, 342, 198], "score": "0.7403", "loss": "0.4343", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?> id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:25:42.533221", "n_pass": [4248, 345, 199], "score": "0.4305", "loss": "1.0692", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) { case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:25:50.717845", "n_pass": [4259, 348, 200], "score": "0.5751", "loss": "0.6993", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?> parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:26:01.843990", "n_pass": [4303, 352, 201], "score": "0.694", "loss": "0.5054", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}}); (0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:26:20.789560", "n_pass": [4476, 358, 202], "score": "0.3944", "loss": "1.2127", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id) {switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:26:40.264337", "n_pass": [4579, 365, 203], "score": "0.5231", "loss": "0.8646", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor=progressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:26:56.807018", "n_pass": [4765, 370, 204], "score": "0.5854", "loss": "0.7884", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColorprogressWheel();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:26:59.569269", "n_pass": [4766, 371, 205], "score": "0.6084", "loss": "0.75", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){ switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}
{"time": "2021-01-21 04:27:02.372843", "n_pass": [4791, 372, 206], "score": "0.5173", "loss": "0.8982", "code": "void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}"}

Minimal simplified code:
void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}

