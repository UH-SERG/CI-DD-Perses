
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyGenerationParameters_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }
predict, score, loss = equals, 0.9984808564186096, 0.0025993152521550655

Trace of simplified code(s):
{"time": "2021-01-21 00:07:45.856350", "n_pass": [1, 1, 1], "score": "0.9991", "loss": "0.0021", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:07:48.679664", "n_pass": [22, 2, 2], "score": "0.3246", "loss": "2.7844", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:07:51.515461", "n_pass": [44, 3, 3], "score": "0.8962", "loss": "0.181", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:07:54.330955", "n_pass": [46, 4, 4], "score": "0.7308", "loss": "1.2093", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:07:57.152923", "n_pass": [51, 5, 5], "score": "0.3383", "loss": "2.8331", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:07:59.943773", "n_pass": [58, 6, 6], "score": "0.9908", "loss": "0.0549", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:03.153160", "n_pass": [92, 7, 7], "score": "0.9997", "loss": "0.0005", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:05.918074", "n_pass": [94, 8, 8], "score": "0.9999", "loss": "0.0002", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) { false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:08.672904", "n_pass": [95, 9, 9], "score": "0.9997", "loss": "0.0005", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:11.410265", "n_pass": [96, 10, 10], "score": "0.9998", "loss": "0.0003", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:14.278259", "n_pass": [104, 11, 11], "score": "0.9999", "loss": "0.0002", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:17.035862", "n_pass": [106, 12, 12], "score": "0.9991", "loss": "0.0016", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:19.784085", "n_pass": [108, 13, 13], "score": "0.9993", "loss": "0.0014", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c= 3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:22.497450", "n_pass": [109, 14, 14], "score": "0.9985", "loss": "0.0044", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:25.296332", "n_pass": [154, 15, 15], "score": "0.9997", "loss": "0.0015", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:28.478149", "n_pass": [162, 16, 16], "score": "0.9983", "loss": "0.0105", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:31.217749", "n_pass": [165, 17, 17], "score": "0.9997", "loss": "0.0011", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:34.406105", "n_pass": [233, 18, 18], "score": "0.9998", "loss": "0.0006", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:37.147564", "n_pass": [247, 19, 19], "score": "0.9981", "loss": "0.0111", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:39.873411", "n_pass": [254, 20, 20], "score": "0.9993", "loss": "0.0034", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:42.703817", "n_pass": [256, 21, 21], "score": "0.998", "loss": "0.0141", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:45.451971", "n_pass": [268, 22, 22], "score": "0.9944", "loss": "0.0124", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if ( obj.getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:48.266978", "n_pass": [380, 23, 23], "score": "0.9719", "loss": "0.1499", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) { return false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:50.979656", "n_pass": [382, 24, 24], "score": "0.9318", "loss": "0.3775", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {false; } if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:53.681576", "n_pass": [383, 25, 25], "score": "0.9356", "loss": "0.3566", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:56.423912", "n_pass": [404, 26, 26], "score": "0.9082", "loss": "0.48", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:08:59.120444", "n_pass": [405, 27, 27], "score": "0.9196", "loss": "0.4108", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:09:01.829467", "n_pass": [408, 28, 28], "score": "0.928", "loss": "0.3714", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:09:04.632189", "n_pass": [422, 29, 29], "score": "0.9277", "loss": "0.3752", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-21 00:09:07.356239", "n_pass": [435, 30, 30], "score": "0.9", "loss": "0.52", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:10.062149", "n_pass": [437, 31, 31], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:28.036814", "n_pass": [641, 33, 32], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){ if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:30.737549", "n_pass": [643, 34, 33], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if (this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:33.410158", "n_pass": [645, 35, 34], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if(this == obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:36.116441", "n_pass": [648, 36, 35], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if(this== obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:39.630804", "n_pass": [651, 37, 36], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if(this==obj) { return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:42.346459", "n_pass": [654, 38, 37], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if(this==obj){ return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:45.025012", "n_pass": [656, 39, 38], "score": "0.9", "loss": "0.52", "code": "boolean equals(Object obj){if(this==obj){return true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:47.719360", "n_pass": [657, 40, 39], "score": "0.8814", "loss": "0.5996", "code": "boolean equals(Object obj){if(this==obj){ true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:50.384076", "n_pass": [658, 41, 40], "score": "0.8814", "loss": "0.5996", "code": "boolean equals(Object obj){if(this==obj){true; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:53.079582", "n_pass": [659, 42, 41], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){; } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:55.781059", "n_pass": [660, 43, 42], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){ } { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:09:58.484012", "n_pass": [661, 44, 43], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){} { return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:01.175624", "n_pass": [663, 45, 44], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){}{ return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:03.883690", "n_pass": [665, 46, 45], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){}{return false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:06.585166", "n_pass": [666, 47, 46], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){}{ false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:09.286718", "n_pass": [667, 48, 47], "score": "0.8814", "loss": "0.5994", "code": "boolean equals(Object obj){if(this==obj){}{false; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:12.026850", "n_pass": [668, 49, 48], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{; } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:14.697743", "n_pass": [669, 50, 49], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{ } if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:17.394234", "n_pass": [670, 51, 50], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{} if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:20.094718", "n_pass": [672, 52, 51], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{}if (getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:22.777990", "n_pass": [674, 53, 52], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()) {} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:25.651421", "n_pass": [680, 54, 53], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){} if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:28.392777", "n_pass": [683, 55, 54], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits != other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:31.089211", "n_pass": [687, 56, 55], "score": "0.88", "loss": "0.6056", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits!= other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:33.744053", "n_pass": [688, 57, 56], "score": "0.7974", "loss": "0.9719", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits= other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:36.417957", "n_pass": [690, 58, 57], "score": "0.7974", "loss": "0.9719", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other.bufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:39.079820", "n_pass": [692, 59, 58], "score": "0.7744", "loss": "1.0488", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=otherbufferLenTrits) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:41.781561", "n_pass": [693, 60, 59], "score": "0.7994", "loss": "0.9577", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other) {} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:44.472323", "n_pass": [695, 61, 60], "score": "0.7994", "loss": "0.9577", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){} if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:47.197325", "n_pass": [698, 62, 61], "score": "0.7994", "loss": "0.9577", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:49.964183", "n_pass": [704, 63, 62], "score": "0.7034", "loss": "1.3757", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) { false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:52.726047", "n_pass": [705, 64, 63], "score": "0.7233", "loss": "1.2773", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:55.440461", "n_pass": [716, 65, 64], "score": "0.986", "loss": "0.0363", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:10:58.155032", "n_pass": [717, 66, 65], "score": "0.9842", "loss": "0.0454", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:03.591891", "n_pass": [724, 68, 66], "score": "0.9842", "loss": "0.0454", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:06.260479", "n_pass": [728, 69, 67], "score": "0.926", "loss": "0.2195", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:11.604990", "n_pass": [730, 71, 68], "score": "0.8433", "loss": "0.5201", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:14.270929", "n_pass": [738, 72, 69], "score": "0.6846", "loss": "0.9647", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) { false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:16.939650", "n_pass": [739, 73, 70], "score": "0.6814", "loss": "0.9726", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:19.677923", "n_pass": [740, 74, 71], "score": "0.6814", "loss": "0.9726", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:22.365293", "n_pass": [743, 75, 72], "score": "0.6814", "loss": "0.9726", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:25.102777", "n_pass": [750, 76, 73], "score": "0.8943", "loss": "0.2259", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:27.765531", "n_pass": [752, 77, 74], "score": "0.4083", "loss": "1.9285", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-21 00:11:33.121842", "n_pass": [761, 79, 75], "score": "0.4083", "loss": "1.9285", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits=other){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:11:37.634557", "n_pass": [794, 80, 76], "score": "0.3179", "loss": "2.2446", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTritsother){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:11:40.296005", "n_pass": [795, 81, 77], "score": "0.3179", "loss": "2.2446", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeed= hashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:11:45.645602", "n_pass": [823, 83, 78], "score": "0.6018", "loss": "1.1879", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:09.810391", "n_pass": [1003, 86, 79], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:12.501729", "n_pass": [1004, 87, 80], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}  { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:15.182353", "n_pass": [1007, 88, 81], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){} { } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:17.828387", "n_pass": [1008, 89, 82], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{ } if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:20.483391", "n_pass": [1010, 90, 83], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{} if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:23.181367", "n_pass": [1012, 91, 84], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if (q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:25.867062", "n_pass": [1014, 92, 85], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q != other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:28.547982", "n_pass": [1017, 93, 86], "score": "0.6162", "loss": "1.2439", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q!= other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:31.249348", "n_pass": [1018, 94, 87], "score": "0.544", "loss": "1.4755", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q= other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:33.973183", "n_pass": [1020, 95, 88], "score": "0.544", "loss": "1.4755", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)  if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:37.233851", "n_pass": [1023, 96, 89], "score": "0.544", "loss": "1.4755", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other) if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:39.875602", "n_pass": [1024, 97, 90], "score": "0.544", "loss": "1.4755", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if (sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:42.514708", "n_pass": [1026, 98, 91], "score": "0.544", "loss": "1.4755", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparsesparse) { return false; } }"}
{"time": "2021-01-21 00:12:45.176691", "n_pass": [1028, 99, 92], "score": "0.6163", "loss": "1.4391", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse) { return false; } }"}
{"time": "2021-01-21 00:12:47.842462", "n_pass": [1031, 100, 93], "score": "0.6163", "loss": "1.4391", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){ return false; } }"}
{"time": "2021-01-21 00:12:50.513591", "n_pass": [1033, 101, 94], "score": "0.6163", "loss": "1.4391", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){return false; } }"}
{"time": "2021-01-21 00:12:53.178363", "n_pass": [1034, 102, 95], "score": "0.2997", "loss": "2.1698", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){ false; } }"}
{"time": "2021-01-21 00:12:55.822362", "n_pass": [1035, 103, 96], "score": "0.2997", "loss": "2.1698", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){false; } }"}
{"time": "2021-01-21 00:12:58.474302", "n_pass": [1036, 104, 97], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){; } }"}
{"time": "2021-01-21 00:13:01.162637", "n_pass": [1037, 105, 98], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){ } }"}
{"time": "2021-01-21 00:13:03.833466", "n_pass": [1038, 106, 99], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){} }"}
{"time": "2021-01-21 00:13:06.532228", "n_pass": [1040, 107, 100], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if (cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:10.832637", "n_pass": [1077, 108, 101], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(cfastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:13.501702", "n_pass": [1079, 109, 102], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp) {  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:16.162102", "n_pass": [1082, 110, 103], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){  } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:18.804057", "n_pass": [1084, 111, 104], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){ } if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:21.459477", "n_pass": [1085, 112, 105], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){} if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:24.332865", "n_pass": [1087, 113, 106], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if (hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:27.028459", "n_pass": [1089, 114, 107], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg == null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:29.675284", "n_pass": [1092, 115, 108], "score": "0.2785", "loss": "2.2461", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg== null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:32.795875", "n_pass": [1093, 116, 109], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg= null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:35.450544", "n_pass": [1095, 117, 110], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null) { if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:38.115600", "n_pass": [1098, 118, 111], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){ if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:40.975920", "n_pass": [1100, 119, 112], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if (other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:43.647430", "n_pass": [1102, 120, 113], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other= null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:46.308966", "n_pass": [1106, 121, 114], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null) {} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:49.064752", "n_pass": [1109, 122, 115], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){} } { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:51.728688", "n_pass": [1112, 123, 116], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}} { } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:54.414791", "n_pass": [1114, 124, 117], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{ } if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:57.064758", "n_pass": [1116, 125, 118], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{} if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:13:59.765391", "n_pass": [1118, 126, 119], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if (hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:02.407236", "n_pass": [1120, 127, 120], "score": "0.4394", "loss": "2.792", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if(hashSeedhashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:05.090433", "n_pass": [1122, 128, 121], "score": "0.2166", "loss": "3.3029", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if(hashSeed) {} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:07.779333", "n_pass": [1125, 129, 122], "score": "0.2166", "loss": "3.3029", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if(hashSeed){} if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:10.483204", "n_pass": [1128, 130, 123], "score": "0.2166", "loss": "3.3029", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if(hashSeed){}if (pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:13.156601", "n_pass": [1130, 131, 124], "score": "0.2166", "loss": "3.3029", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlg=null){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:20.227491", "n_pass": [1194, 133, 125], "score": "0.5337", "loss": "1.4392", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlgnull){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}}"}
{"time": "2021-01-21 00:14:28.250191", "n_pass": [1226, 136, 126], "score": "0.4552", "loss": "1.6782", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlgnull){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(qother)if(sparse){}}"}
{"time": "2021-01-21 00:14:30.916837", "n_pass": [1227, 137, 127], "score": "0.4282", "loss": "1.7605", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(hashAlgnull){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q)if(sparse){}}"}
{"time": "2021-01-21 00:14:35.256242", "n_pass": [1278, 138, 128], "score": "0.4166", "loss": "1.7767", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(null){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q)if(sparse){}}"}

Minimal simplified code:
boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(null){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q)if(sparse){}}

