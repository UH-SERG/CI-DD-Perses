
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/monitoring/Agent_main.java
method_name = main
method_body = public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + ":class=HtmlAdaptorServer,protocol=html,port=" + htmlPort); println("Adding HTML adaptor to MBean server with name \n " + htmlObjName); println("NOTE: HTML adaptor is bound on TCP port " + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + ":class=SnmpAdaptorServer,protocol=snmp,port=" + snmpPort); println("Adding SNMP adaptor to MBean server with name \n " + snmpObjName); println("NOTE: SNMP Adaptor is bound on UDP port " + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print("NOTE: Sending a coldStart SNMP trap" + " to each destination defined in the ACL file..."); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println("Done."); try { JMXServiceURL url = new JMXServiceURL("service:jmx:rmi:///jndi/rmi://localhost:9999/server"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println("Error starting RMI : execute rmiregistry 9999; ex=" + ex); } sunMibObjName = new ObjectName("snmp:class=SUN_OPENSSO_SERVER_MIB"); println("Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name" + "\n " + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_CTS_MIB"); println("Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name" + "\n " + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_POLICY_MIB"); println("Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name" + "\n " + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName("snmp:class=FORGEROCK_OPENAM_SESSION_MIB"); println("Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name" + "\n " + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName("trapGenerator" + ":class=LinkTrapGenerator,ifIndex=" + ifIndex); println("Adding LinkTrapGenerator to MBean server with name" + "\n " + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println("\n>> Press <Enter> if you want to start sending traps."); println(" -or-"); println(">> Press <Ctrl-C> if you want to stop this agent."); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }
predict, score, loss = main, 0.9877975583076477, 0.02049425058066845

Trace of simplified code(s):
{"time": "2021-01-20 22:54:54.656161", "n_pass": [1, 1, 1], "score": "0.8387", "loss": "0.256", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(\"trapGenerator\" + \":class=LinkTrapGenerator,ifIndex=\" + ifIndex); println(\"Adding LinkTrapGenerator to MBean server with name\" + \"\\n \" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(\"\\n>> Press <Enter> if you want to start sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:54:57.581102", "n_pass": [26, 2, 2], "score": "0.9995", "loss": "0.0028", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to\" + ifIndex); println(\"Adding LinkTrapGenerator to MBean server with name\" + \"\\n \" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(\"\\n>> Press <Enter> if you want to start sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:00.485021", "n_pass": [48, 3, 3], "score": "0.414", "loss": "2.7557", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + \":class=HtmlAdaptorServer,protocol=html,port=\" + htmlPort); println(\"Adding HTML adaptor to MBean server with name \\n \" + htmlObjName); println(\"NOTE: HTML adaptor is bound on TCP port \" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:03.396088", "n_pass": [53, 4, 4], "score": "0.9986", "loss": "0.0072", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + \":class=SnmpAdaptorServer,protocol=snmp,port=\" + snmpPort); println(\"Adding SNMP adaptor to MBean server with name \\n \" + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:06.373697", "n_pass": [54, 5, 5], "score": "0.9788", "loss": "0.206", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName = new ObjectName(\"snmp:class=SUN_OPENSSO_SERVER_MIB\"); println(\"Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name\" + \"\\n \" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:09.235757", "n_pass": [58, 6, 6], "score": "0.8889", "loss": "1.0115", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_POLICY_MIB\"); println(\"Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_SESSION_MIB\"); println(\"Adding FORGEROCK_OPENAM_SESSION_MIB-MIB tosending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:12.081830", "n_pass": [60, 7, 7], "score": "0.9993", "loss": "0.0016", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name\" + \"\\n \" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(\"snmp:class=FORGEROCK_sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:17.855361", "n_pass": [105, 9, 8], "score": "0.9434", "loss": "0.4004", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:24.445374", "n_pass": [163, 11, 9], "score": "0.9927", "loss": "0.0346", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:30.667118", "n_pass": [263, 13, 10], "score": "0.7696", "loss": "1.0045", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:34.343197", "n_pass": [286, 14, 11], "score": "0.9952", "loss": "0.0179", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE: SNMP Adaptor is bound on UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:37.167530", "n_pass": [289, 15, 12], "score": "0.9849", "loss": "0.0787", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:40.022848", "n_pass": [292, 16, 13], "score": "0.9588", "loss": "0.1297", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart SNMP trap\" + \" to each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:43.083985", "n_pass": [295, 17, 14], "score": "0.9762", "loss": "0.0455", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart each destination defined in the ACL file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:45.925229", "n_pass": [296, 18, 15], "score": "0.4214", "loss": "4.1397", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:48.838705", "n_pass": [303, 19, 16], "score": "0.9767", "loss": "0.0659", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"rmi://localhost:9999/server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:51.674923", "n_pass": [304, 20, 17], "score": "0.9957", "loss": "0.0082", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : execute rmiregistry 9999; ex=\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:55:54.535526", "n_pass": [310, 21, 18], "score": "0.8777", "loss": "0.2566", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"snmp:class=FORGEROCK_OPENAM_CTS_MIB\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:00.183337", "n_pass": [314, 23, 19], "score": "0.6537", "loss": "1.6367", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"\"); println(\"Adding FORGEROCK_OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:02.987897", "n_pass": [315, 24, 20], "score": "0.7855", "loss": "0.9782", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-C> if you want to stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:08.703144", "n_pass": [319, 26, 21], "score": "0.7392", "loss": "0.5152", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"OPENAM__sending traps.\"); println(\" -or-\"); println(\">> Press <Ctrl-stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:17.536247", "n_pass": [372, 29, 22], "score": "0.9505", "loss": "0.2031", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } sunMibObjName =registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(\"OPENAM__sending traps.\"); println(\">> Press <Ctrl-stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:23.565064", "n_pass": [423, 31, 23], "score": "0.9961", "loss": "0.0097", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName = new ObjectName(\"OPENAM__sending traps.\"); println(\">> Press <Ctrl-stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:30.380293", "n_pass": [581, 33, 24], "score": "0.5047", "loss": "1.1014", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">> Press <Ctrl-stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:33.325108", "n_pass": [585, 34, 25], "score": "0.6921", "loss": "0.6262", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>stop this agent.\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:36.154076", "n_pass": [586, 35, 26], "score": "0.7612", "loss": "1.9891", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:56:41.856150", "n_pass": [589, 37, 27], "score": "0.349", "loss": "2.7614", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:01.844502", "n_pass": [621, 44, 28], "score": "0.9232", "loss": "0.4539", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:04.671944", "n_pass": [628, 45, 29], "score": "0.8816", "loss": "0.3836", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:07.491842", "n_pass": [629, 46, 30], "score": "0.9998", "loss": "0.0005", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:13.350465", "n_pass": [638, 48, 31], "score": "0.4776", "loss": "1.8942", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:16.145555", "n_pass": [639, 49, 32], "score": "0.9721", "loss": "0.3637", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:18.967612", "n_pass": [646, 50, 33], "score": "0.9601", "loss": "0.4485", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:21.793189", "n_pass": [649, 51, 34], "score": "0.9958", "loss": "0.0106", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } String domain = new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:24.605994", "n_pass": [651, 52, 35], "score": "0.5683", "loss": "1.025", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain +  + snmpObjName); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:27.478534", "n_pass": [653, 53, 36], "score": "0.9687", "loss": "0.5031", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"NOTE UDP port \" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:30.289200", "n_pass": [655, 54, 37], "score": "0.996", "loss": "0.0258", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a coldStart  file...\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:35.910864", "n_pass": [662, 56, 38], "score": "0.7769", "loss": "1.434", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:38.786654", "n_pass": [668, 57, 39], "score": "0.9812", "loss": "0.0617", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:42.099813", "n_pass": [676, 58, 40], "score": "0.999", "loss": "0.0029", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:47.967178", "n_pass": [700, 60, 41], "score": "0.983", "loss": "0.3389", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;snmpObjName; final ObjectName sunMibObjName;final ObjectName trapGeneratorObjName; int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:57:56.323085", "n_pass": [703, 63, 42], "score": "0.898", "loss": "1.2071", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;snmpObjName; final ObjectName sunMibObjName;final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:02.117362", "n_pass": [714, 65, 43], "score": "0.9996", "loss": "0.0008", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;snmpObjName; final ObjectName sunMibObjName;final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage();System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"NOTE: Sending a..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:07.879230", "n_pass": [751, 67, 44], "score": "0.9993", "loss": "0.006", "code": "public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName;snmpObjName; final ObjectName sunMibObjName;final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage();System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:11.638304", "n_pass": [786, 68, 45], "score": "0.9985", "loss": "0.01", "code": "public static void main(String[] args) { final MBeanServer server; finalsnmpObjName; final ObjectName sunMibObjName;final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage();System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:14.435768", "n_pass": [787, 69, 46], "score": "0.9483", "loss": "0.1359", "code": "public static void main(String[] args) { final MBeanServer server; finalObjectName sunMibObjName;final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage();System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:17.373218", "n_pass": [788, 70, 47], "score": "0.9585", "loss": "0.1426", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) { usage();System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:20.467407", "n_pass": [798, 71, 48], "score": "0.9817", "loss": "0.2813", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:23.342925", "n_pass": [815, 72, 49], "score": "0.861", "loss": "1.4813", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server(0); } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:28.251786", "n_pass": [1068, 73, 50], "score": "0.9768", "loss": "0.1976", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; } else { server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:31.044825", "n_pass": [1069, 74, 51], "score": "0.9924", "loss": "0.0253", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } new ObjectName(domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:33.819119", "n_pass": [1073, 75, 52], "score": "0.8369", "loss": "1.4193", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:37.181771", "n_pass": [1081, 76, 53], "score": "0.9993", "loss": "0.0079", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort); snmpAdaptor.start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:39.959363", "n_pass": [1083, 77, 54], "score": "0.9694", "loss": "0.1671", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:42.750351", "n_pass": [1089, 78, 55], "score": "0.9344", "loss": "0.1443", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:45.601103", "n_pass": [1092, 79, 56], "score": "0.9998", "loss": "0.0006", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)); snmpAdaptor.snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:48.370950", "n_pass": [1094, 80, 57], "score": "0.9999", "loss": "0.0004", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try { JMXServiceURL url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:51.152767", "n_pass": [1102, 81, 58], "score": "0.971", "loss": "0.0378", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {url = new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:53.907890", "n_pass": [1103, 82, 59], "score": "0.999", "loss": "0.0073", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try { new JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:56.697741", "n_pass": [1104, 83, 60], "score": "0.9971", "loss": "0.0251", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:58:59.485923", "n_pass": [1108, 84, 61], "score": "0.9995", "loss": "0.0013", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer= JMXConnectorServerFactory.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:02.239272", "n_pass": [1109, 85, 62], "score": "0.9855", "loss": "0.0889", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server); cs.start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:05.147941", "n_pass": [1112, 86, 63], "score": "0.9997", "loss": "0.001", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);start(); } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:07.956366", "n_pass": [1113, 87, 64], "score": "0.9946", "loss": "0.0125", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error starting RMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:10.705381", "n_pass": [1120, 88, 65], "score": "0.9971", "loss": "0.0066", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"ErrorRMI : =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:13.446512", "n_pass": [1121, 89, 66], "score": "0.9983", "loss": "0.0042", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } ; forgerockCtsMibObjName(\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:16.205471", "n_pass": [1126, 90, 67], "score": "0.9991", "loss": "0.0045", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM__sending traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:18.954088", "n_pass": [1128, 91, 68], "score": "0.9985", "loss": "0.0051", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM traps.\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:21.742690", "n_pass": [1129, 92, 69], "score": "0.9995", "loss": "0.0014", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\"); System.in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:24.519278", "n_pass": [1134, 93, 70], "score": "0.9994", "loss": "0.0014", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read();; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:27.279559", "n_pass": [1136, 94, 71], "score": "0.9925", "loss": "0.0253", "code": "public static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:30.065227", "n_pass": [1145, 95, 72], "score": "0.9979", "loss": "0.0075", "code": "static void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:32.843055", "n_pass": [1146, 96, 73], "score": "0.998", "loss": "0.0042", "code": "void main(String[] args) { final MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:36.040969", "n_pass": [1153, 97, 74], "score": "0.9968", "loss": "0.0259", "code": "void main(String[] args) { MBeanServer server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:38.865239", "n_pass": [1154, 98, 75], "score": "0.9994", "loss": "0.0053", "code": "void main(String[] args) { server; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:41.600163", "n_pass": [1155, 99, 76], "score": "0.9974", "loss": "0.0097", "code": "void main(String[] args) {; final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:44.528931", "n_pass": [1156, 100, 77], "score": "0.9996", "loss": "0.0017", "code": "void main(String[] args) {final int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:47.271383", "n_pass": [1157, 101, 78], "score": "0.9999", "loss": "0.0003", "code": "void main(String[] args) {int htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:50.055541", "n_pass": [1158, 102, 79], "score": "0.9867", "loss": "0.0924", "code": "void main(String[] args) {htmlPort  = 11161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:52.830097", "n_pass": [1161, 103, 80], "score": "0.9965", "loss": "0.0121", "code": "void main(String[] args) {htmlPort  =1161; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:55.587321", "n_pass": [1162, 104, 81], "score": "0.9995", "loss": "0.0017", "code": "void main(String[] args) {htmlPort  =61; if ((args.length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 22:59:58.357400", "n_pass": [1167, 105, 82], "score": "0.9932", "loss": "0.042", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (args.length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:01.189496", "n_pass": [1174, 106, 83], "score": "0.9983", "loss": "0.0074", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {System.exit(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:03.968680", "n_pass": [1180, 107, 84], "score": "0.9882", "loss": "0.0605", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {(1); } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:06.750012", "n_pass": [1181, 108, 85], "score": "0.9999", "loss": "0.0006", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; } else if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:09.503456", "n_pass": [1183, 109, 86], "score": "0.998", "loss": "0.0081", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args[0])).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:12.245511", "n_pass": [1192, 110, 87], "score": "0.9847", "loss": "0.0816", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor = (snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:18.220405", "n_pass": [1233, 112, 88], "score": "0.9986", "loss": "0.0121", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor(snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:20.966169", "n_pass": [1234, 113, 89], "score": "0.9989", "loss": "0.0052", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor.start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\"); JMXConnectorServer.newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:23.756010", "n_pass": [1252, 114, 90], "score": "0.9999", "loss": "0.0002", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor.start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");in.read; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:26.553869", "n_pass": [1270, 115, 91], "score": "0.9994", "loss": "0.0023", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps < 0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor.start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:29.832447", "n_pass": [1315, 116, 92], "score": "0.9945", "loss": "0.0397", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort); snmpAdaptor.start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:32.647890", "n_pass": [1350, 117, 93], "score": "0.9993", "loss": "0.002", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:55.266324", "n_pass": [1687, 118, 94], "score": "0.8084", "loss": "0.2746", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers.isEmpty()) { server; }{ server(); } (domain ); println(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:00:58.012805", "n_pass": [1690, 119, 95], "score": "0.8644", "loss": "0.1786", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers()) { server; }{ server(); } (domain ); println(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:00.734304", "n_pass": [1691, 120, 96], "score": "0.8662", "loss": "0.3121", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) { server; }{ server(); } (domain ); println(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:03.522486", "n_pass": [1694, 121, 97], "score": "0.9849", "loss": "0.0288", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain ); println(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:06.633251", "n_pass": [1703, 122, 98], "score": "0.9994", "loss": "0.0016", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).start(); print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:09.360122", "n_pass": [1709, 123, 99], "score": "0.9845", "loss": "0.0249", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).start; print(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:12.113148", "n_pass": [1710, 124, 100], "score": "0.995", "loss": "0.034", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (new Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:14.861349", "n_pass": [1716, 125, 101], "score": "0.9944", "loss": "0.0108", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer(snmpPort1)).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:17.581769", "n_pass": [1718, 126, 102], "score": "0.9992", "loss": "0.0016", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV1Trap(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:20.349489", "n_pass": [1721, 127, 103], "score": "0.9985", "loss": "0.0016", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0); println(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:23.095804", "n_pass": [1724, 128, 104], "score": "0.9994", "loss": "0.0016", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"Done.\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:25.842354", "n_pass": [1726, 129, 105], "score": "0.9998", "loss": "0.0002", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) { println(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:28.587700", "n_pass": [1743, 130, 106], "score": "0.9998", "loss": "0.0005", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"Error =\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:31.325602", "n_pass": [1745, 131, 107], "score": "0.9999", "loss": "0.0002", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");; } catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:34.106033", "n_pass": [1759, 132, 108], "score": "0.9999", "loss": "0.0003", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { e.printStackTrace(); } }"}
{"time": "2021-01-20 23:01:37.019546", "n_pass": [1766, 133, 109], "score": "0.9998", "loss": "0.0003", "code": "void main(String[] args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:40.656150", "n_pass": [1778, 134, 110], "score": "0.9992", "loss": "0.0011", "code": "void main(String[]args) {htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:43.503397", "n_pass": [1781, 135, 111], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort  =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:46.234225", "n_pass": [1784, 136, 112], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){htmlPort =61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:48.958645", "n_pass": [1785, 137, 113], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort=61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:51.790241", "n_pass": [1786, 138, 114], "score": "0.9996", "loss": "0.0005", "code": "void main(String[]args){htmlPort61; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:54.524566", "n_pass": [1787, 139, 115], "score": "0.9998", "loss": "0.0006", "code": "void main(String[]args){htmlPort1; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:01:57.327828", "n_pass": [1788, 140, 116], "score": "0.9995", "loss": "0.0014", "code": "void main(String[]args){htmlPort; if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:00.042450", "n_pass": [1790, 141, 117], "score": "0.9997", "loss": "0.0009", "code": "void main(String[]args){htmlPort;if ((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:02.789351", "n_pass": [1792, 142, 118], "score": "0.9977", "loss": "0.0023", "code": "void main(String[]args){htmlPort;if((length != 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:05.513929", "n_pass": [1796, 143, 119], "score": "0.9985", "loss": "0.0018", "code": "void main(String[]args){htmlPort;if((length!= 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:08.386174", "n_pass": [1797, 144, 120], "score": "0.9964", "loss": "0.0086", "code": "void main(String[]args){htmlPort;if((length= 0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:11.139038", "n_pass": [1799, 145, 121], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0) && (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:14.033179", "n_pass": [1802, 146, 122], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){htmlPort;if((length=0)&& (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:16.760036", "n_pass": [1803, 147, 123], "score": "0.9999", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)& (length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:19.519222", "n_pass": [1805, 148, 124], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length != 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:22.267091", "n_pass": [1808, 149, 125], "score": "0.9996", "loss": "0.0004", "code": "void main(String[]args){htmlPort;if((length=0)&(length!= 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:24.976693", "n_pass": [1809, 150, 126], "score": "0.9999", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length= 1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:27.694245", "n_pass": [1811, 151, 127], "score": "0.9992", "loss": "0.0013", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)) {; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:30.428351", "n_pass": [1815, 152, 128], "score": "0.9995", "loss": "0.0008", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){; }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:33.159719", "n_pass": [1817, 153, 129], "score": "0.9998", "loss": "0.0004", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){ }if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:35.925234", "n_pass": [1818, 154, 130], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if (args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:38.645920", "n_pass": [1821, 155, 131], "score": "0.9998", "loss": "0.0005", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args.length == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:41.393932", "n_pass": [1824, 156, 132], "score": "0.9988", "loss": "0.0024", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(argslength == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:44.125148", "n_pass": [1825, 157, 133], "score": "0.9989", "loss": "0.0015", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args == 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:46.835263", "n_pass": [1826, 158, 134], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args== 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:49.535857", "n_pass": [1827, 159, 135], "score": "0.9998", "loss": "0.0004", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args= 1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:52.274782", "n_pass": [1829, 160, 136], "score": "0.9987", "loss": "0.0021", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1) { try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:54.989195", "n_pass": [1832, 161, 137], "score": "0.9998", "loss": "0.0008", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){ try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:02:57.700369", "n_pass": [1834, 162, 138], "score": "0.9994", "loss": "0.0007", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try {(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:00.432507", "n_pass": [1836, 163, 139], "score": "0.9995", "loss": "0.0007", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{(new Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:03.163461", "n_pass": [1839, 164, 140], "score": "0.9996", "loss": "0.0006", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{( Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:05.872705", "n_pass": [1840, 165, 141], "score": "0.9995", "loss": "0.0011", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{(Integer(args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:08.616731", "n_pass": [1841, 166, 142], "score": "0.9998", "loss": "0.0005", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue(); if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:11.433119", "n_pass": [1851, 167, 143], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if (nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:14.172611", "n_pass": [1853, 168, 144], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(nbTraps0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:16.901609", "n_pass": [1855, 169, 145], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0) { usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:19.604372", "n_pass": [1858, 170, 146], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){ usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:22.332678", "n_pass": [1860, 171, 147], "score": "0.9996", "loss": "0.0025", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){usage; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:25.075511", "n_pass": [1861, 172, 148], "score": "0.9997", "loss": "0.0019", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){; } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:27.816485", "n_pass": [1862, 173, 149], "score": "0.9994", "loss": "0.0006", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){ } } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:30.522883", "n_pass": [1863, 174, 150], "score": "0.9999", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){} } catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:33.319371", "n_pass": [1865, 175, 151], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}} catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:36.037940", "n_pass": [1867, 176, 152], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch (java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:38.789453", "n_pass": [1869, 177, 153], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java.lang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:41.594408", "n_pass": [1872, 178, 154], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(javalang.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:44.336566", "n_pass": [1873, 179, 155], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java.NumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:47.076291", "n_pass": [1874, 180, 156], "score": "0.9997", "loss": "0.0004", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(javaNumberFormatException e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:49.827122", "n_pass": [1875, 181, 157], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e) { System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:52.631792", "n_pass": [1879, 182, 158], "score": "0.9994", "loss": "0.0008", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){ System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:55.353671", "n_pass": [1881, 183, 159], "score": "0.9997", "loss": "0.0008", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System.exit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:03:58.124806", "n_pass": [1883, 184, 160], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){Systemexit(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:00.849688", "n_pass": [1884, 185, 161], "score": "0.9996", "loss": "0.0005", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System(1); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:03.625512", "n_pass": [1886, 186, 162], "score": "0.9993", "loss": "0.0033", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System(); } } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:06.374403", "n_pass": [1889, 187, 163], "score": "0.9993", "loss": "0.0009", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();} } try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:09.123678", "n_pass": [1891, 188, 164], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}} try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:11.899294", "n_pass": [1893, 189, 165], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try {MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:14.747289", "n_pass": [1895, 190, 166], "score": "0.9993", "loss": "0.0009", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory.findMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:17.484975", "n_pass": [1898, 191, 167], "score": "0.9999", "loss": "0.0003", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactoryfindMBeanServer(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:20.202438", "n_pass": [1899, 192, 168], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory(null); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:23.067291", "n_pass": [1901, 193, 169], "score": "0.9999", "loss": "0.0006", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory(); if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:25.820278", "n_pass": [1904, 194, 170], "score": "0.9996", "loss": "0.0022", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((servers != null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:28.568033", "n_pass": [1908, 195, 171], "score": "0.997", "loss": "0.0361", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((servers= null)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:31.307643", "n_pass": [1909, 196, 172], "score": "0.9994", "loss": "0.0065", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)& !servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:34.024053", "n_pass": [1911, 197, 173], "score": "0.9999", "loss": "0.0006", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)!servers) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:36.734253", "n_pass": [1912, 198, 174], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){htmlPort;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:40.468643", "n_pass": [1989, 199, 175], "score": "0.9998", "loss": "0.0005", "code": "void main(String[]args){;if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:43.206594", "n_pass": [1990, 200, 176], "score": "0.9998", "loss": "0.0012", "code": "void main(String[]args){if((length=0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:45.960235", "n_pass": [1995, 201, 177], "score": "0.9998", "loss": "0.0014", "code": "void main(String[]args){if((length0)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:48.684534", "n_pass": [1996, 202, 178], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)&(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:51.381289", "n_pass": [1998, 203, 179], "score": "0.9998", "loss": "0.0009", "code": "void main(String[]args){if((length)(length=1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:54.112244", "n_pass": [2001, 204, 180], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length1)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:56.850477", "n_pass": [2002, 205, 181], "score": "0.9998", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args=1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:04:59.569694", "n_pass": [2010, 206, 182], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args1){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:02.287840", "n_pass": [2011, 207, 183], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if ((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:22.129483", "n_pass": [2284, 208, 184], "score": "0.9999", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((serversnull)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:24.869138", "n_pass": [2286, 209, 185], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)) {  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:27.601361", "n_pass": [2290, 210, 186], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){  }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:30.332956", "n_pass": [2292, 211, 187], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){ }{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:33.105751", "n_pass": [2293, 212, 188], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{ server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:35.823293", "n_pass": [2296, 213, 189], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server(); } (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:38.530919", "n_pass": [2301, 214, 190], "score": "0.9999", "loss": "0.0004", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();} (domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:41.261009", "n_pass": [2303, 215, 191], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain );(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:43.987465", "n_pass": [2306, 216, 192], "score": "1.0", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\" + snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:47.119028", "n_pass": [2312, 217, 193], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+ snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:49.815043", "n_pass": [2314, 218, 194], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).startprint(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:52.520469", "n_pass": [2318, 219, 195], "score": "0.9999", "loss": "0.0001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"..\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:55.219336", "n_pass": [2322, 220, 196], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\".\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:05:57.956417", "n_pass": [2323, 221, 197], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\"); (Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:00.662501", "n_pass": [2327, 222, 198], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV(0);(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:03.435183", "n_pass": [2336, 223, 199], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\"); try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:06.156075", "n_pass": [2344, 224, 200], "score": "0.9999", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try {JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:08.944015", "n_pass": [2346, 225, 201], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{JMXServiceURL(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:11.667464", "n_pass": [2348, 226, 202], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"server\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:14.388872", "n_pass": [2351, 227, 203], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer(server);; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:17.097018", "n_pass": [2357, 228, 204], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();; } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:19.822448", "n_pass": [2359, 229, 205], "score": "0.9997", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer(); } catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:22.572466", "n_pass": [2361, 230, 206], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();} catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:25.277258", "n_pass": [2363, 231, 207], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch (Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:27.979927", "n_pass": [2365, 232, 208], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex) {(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:30.690072", "n_pass": [2371, 233, 209], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"=\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:33.435091", "n_pass": [2375, 234, 210], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\" + ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:36.146658", "n_pass": [2377, 235, 211], "score": "0.9998", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:38.865920", "n_pass": [2379, 236, 212], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex); } (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:41.587223", "n_pass": [2383, 237, 213], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);} (\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:44.315534", "n_pass": [2385, 238, 214], "score": "0.9998", "loss": "0.0002", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"OPENAM\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:47.032656", "n_pass": [2388, 239, 215], "score": "0.9997", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\"); println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:49.747593", "n_pass": [2392, 240, 216], "score": "0.9997", "loss": "0.0003", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");println(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:52.482222", "n_pass": [2393, 241, 217], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\">>\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:55.242300", "n_pass": [2396, 242, 218], "score": "0.9994", "loss": "0.0011", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\">\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:06:57.941671", "n_pass": [2397, 243, 219], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");} catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:07:00.738407", "n_pass": [2402, 244, 220], "score": "0.9995", "loss": "0.0009", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch (Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:07:03.461416", "n_pass": [2404, 245, 221], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch(Exception e) { printStackTrace(); } }"}
{"time": "2021-01-20 23:07:06.204805", "n_pass": [2410, 246, 222], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch(Exception e){ printStackTrace(); } }"}
{"time": "2021-01-20 23:07:08.929756", "n_pass": [2412, 247, 223], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch(Exception e){printStackTrace(); } }"}
{"time": "2021-01-20 23:07:11.639206", "n_pass": [2417, 248, 224], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch(Exception e){printStackTrace();} }"}
{"time": "2021-01-20 23:07:14.358503", "n_pass": [2419, 249, 225], "score": "0.9994", "loss": "0.001", "code": "void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(\"\"+snmpPort).print(\"\");(Integer()).snmpV();(\"\");try{(\"\").newJMXConnectorServer();}catch(Exception ex){(\"\"+ex);}(\"\");(\"\");}catch(Exception e){printStackTrace();}}"}

Minimal simplified code:
void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(""+snmpPort).print("");(Integer()).snmpV();("");try{("").newJMXConnectorServer();}catch(Exception ex){(""+ex);}("");("");}catch(Exception e){printStackTrace();}}

