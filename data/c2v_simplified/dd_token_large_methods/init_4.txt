
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/NumericConstantNode_init.java
method_name = init
method_body = public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.TINYINT; setValue((Byte) arg1); } break; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1); } break; case NodeTypes.DECIMAL_CONSTANT_NODE: if (valueInP) { typeid = Types.DECIMAL; String image = (String) arg1; int length = image.length(); int idx = image.indexOf('.'); precision = length; if (!Character.isDigit(image.charAt(0)) && (idx != 0)) precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : "Unexpected nodeType = " + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }
predict, score, loss = init, 0.9979817867279053, 0.006741872988641262

Trace of simplified code(s):
{"time": "2021-01-21 05:38:38.679686", "n_pass": [1, 1, 1], "score": "0.9998", "loss": "0.0003", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.TINYINT; setValue((Byte) arg1); } break; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1); } break; case NodeTypes.DECIMAL_CONSTANT_NODE: if (valueInP) { typeid = Types.DECIMAL; String image = (String) arg1; int length = image.length(); int idx = image.indexOf('.'); precision = length; if (!Character.isDigit(image.charAt(0)) && (idx != 0)) precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:41.598549", "n_pass": [24, 2, 2], "score": "0.9977", "loss": "0.0118", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.TINYINT; setValue((Byte) arg1); } break; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:44.549784", "n_pass": [55, 3, 3], "score": "0.9996", "loss": "0.0012", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTbreak; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:47.515987", "n_pass": [104, 4, 4], "score": "0.9957", "loss": "0.0124", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTbreak; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:50.404164", "n_pass": [105, 5, 5], "score": "0.9579", "loss": "0.2378", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTbreak; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:53.294294", "n_pass": [118, 6, 6], "score": "0.9987", "loss": "0.0044", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTbreak; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:38:59.114533", "n_pass": [192, 8, 7], "score": "0.9993", "loss": "0.0028", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:01.999359", "n_pass": [202, 9, 8], "score": "0.9774", "loss": "0.1151", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:04.825271", "n_pass": [203, 10, 9], "score": "0.9937", "loss": "0.0407", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); }  TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:07.634481", "n_pass": [204, 11, 10], "score": "0.9952", "loss": "0.0173", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:10.477233", "n_pass": [209, 12, 11], "score": "0.9983", "loss": "0.0031", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:13.394899", "n_pass": [217, 13, 12], "score": "0.9995", "loss": "0.0009", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseTypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:16.242113", "n_pass": [218, 14, 13], "score": "0.9924", "loss": "0.0322", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:19.051856", "n_pass": [220, 15, 14], "score": "0.9945", "loss": "0.0283", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); } break; default: assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:22.056872", "n_pass": [337, 16, 15], "score": "0.9982", "loss": "0.0032", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:24.891362", "n_pass": [344, 17, 16], "score": "0.8481", "loss": "0.2444", "code": "public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:27.759972", "n_pass": [350, 18, 17], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1) throws StandardException { int precision = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:30.576321", "n_pass": [351, 19, 18], "score": "0.8022", "loss": "0.2678", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:33.398335", "n_pass": [353, 20, 19], "score": "0.9977", "loss": "0.006", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINTprecision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:36.246017", "n_pass": [366, 21, 20], "score": "0.6709", "loss": "0.7062", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:39.038381", "n_pass": [367, 22, 21], "score": "0.608", "loss": "0.5616", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: _PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:41.873124", "n_pass": [368, 23, 22], "score": "0.999", "loss": "0.0018", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE:  TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:44.660340", "n_pass": [369, 24, 23], "score": "0.9872", "loss": "0.0371", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE:  if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:47.448333", "n_pass": [370, 25, 24], "score": "0.5295", "loss": "2.1249", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:50.231545", "n_pass": [372, 26, 25], "score": "0.961", "loss": "0.0625", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:53.016440", "n_pass": [376, 27, 26], "score": "0.9991", "loss": "0.0014", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:55.820328", "n_pass": [377, 28, 27], "score": "0.9251", "loss": "0.4101", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:39:58.592687", "n_pass": [378, 29, 28], "score": "0.9947", "loss": "0.0059", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } _PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:01.370131", "n_pass": [379, 30, 29], "score": "0.9985", "loss": "0.005", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); }  TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:04.194981", "n_pass": [380, 31, 30], "score": "0.8806", "loss": "0.5816", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); }  if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:06.962516", "n_pass": [381, 32, 31], "score": "0.9196", "loss": "0.1068", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:09.747159", "n_pass": [383, 33, 32], "score": "0.9548", "loss": "0.0842", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:12.514602", "n_pass": [388, 34, 33], "score": "0.1851", "loss": "4.395", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else _SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:15.291147", "n_pass": [395, 35, 34], "score": "0.9008", "loss": "0.1326", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:18.070061", "n_pass": [398, 36, 35], "score": "0.9376", "loss": "0.366", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; caseNODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:20.830727", "n_pass": [399, 37, 36], "score": "0.2295", "loss": "4.3669", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; caseTypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:23.587332", "n_pass": [400, 38, 37], "score": "0.7504", "loss": "1.3017", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; casescal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:26.392064", "n_pass": [401, 39, 38], "score": "0.3228", "loss": "3.871", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:29.155207", "n_pass": [404, 40, 39], "score": "0.2972", "loss": "3.3088", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth ; typeid = Types.DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:31.895519", "n_pass": [405, 41, 40], "score": "0.9117", "loss": "0.4407", "code": "public void init(Object arg1) throws StandardException { int precision = 0; Boolean; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:34.719792", "n_pass": [424, 42, 41], "score": "0.4837", "loss": "2.8214", "code": "public void init(Object arg1) throws StandardException { int precision; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:37.618435", "n_pass": [572, 43, 42], "score": "0.549", "loss": "2.2591", "code": "public void init(Object arg1) throws StandardException { ; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:40.353604", "n_pass": [573, 44, 43], "score": "0.8914", "loss": "0.379", "code": "public void init(Object arg1) throws StandardException {  typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:43.087723", "n_pass": [575, 45, 44], "score": "0.9114", "loss": "0.5537", "code": "public void init(Object arg1) throws StandardException {  typeId ; int typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:45.843066", "n_pass": [576, 46, 45], "score": "0.874", "loss": "0.445", "code": "public void init(Object arg1) throws StandardException {  typeId  typeid = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:48.575101", "n_pass": [577, 47, 46], "score": "0.9092", "loss": "0.5503", "code": "public void init(Object arg1) throws StandardException {  typeId = 0; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:51.295255", "n_pass": [578, 48, 47], "score": "0.9669", "loss": "0.0743", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) { typeId = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:54.069054", "n_pass": [584, 49, 48], "score": "0.8115", "loss": "1.3925", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:40:59.543354", "n_pass": [589, 51, 49], "score": "0.8355", "loss": "1.0081", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable .FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:02.359867", "n_pass": [590, 52, 50], "score": "0.6016", "loss": "2.4494", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable  valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:05.077098", "n_pass": [591, 53, 51], "score": "0.3789", "loss": "3.6805", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:07.786100", "n_pass": [592, 54, 52], "score": "0.8534", "loss": "0.7221", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:10.548395", "n_pass": [598, 55, 53], "score": "0.1743", "loss": "4.8266", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case _CONSTANT_NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:13.275535", "n_pass": [599, 56, 54], "score": "0.9519", "loss": "0.4141", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidth = TypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:16.008076", "n_pass": [602, 57, 55], "score": "0.3848", "loss": "2.3886", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId = Types.INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:18.717881", "n_pass": [604, 58, 56], "score": "0.8315", "loss": "0.614", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =INTEGER; setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:21.441117", "n_pass": [605, 59, 57], "score": "0.9276", "loss": "0.5919", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth = TypeId = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:24.163296", "n_pass": [611, 60, 58], "score": "0.7514", "loss": "1.8996", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth = Types.SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:26.879269", "n_pass": [612, 61, 59], "score": "0.8229", "loss": "0.7123", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth SMALLINT; setValue((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:29.617603", "n_pass": [613, 62, 60], "score": "0.8904", "loss": "0.6742", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth = TypeId = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:32.365026", "n_pass": [618, 63, 61], "score": "0.694", "loss": "0.8243", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth = Types.BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:35.076258", "n_pass": [619, 64, 62], "score": "0.8781", "loss": "0.5085", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth BIGINT; setValue((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:37.776608", "n_pass": [620, 65, 63], "score": "0.8163", "loss": "0.9014", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1);precision--; if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:40.483683", "n_pass": [623, 66, 64], "score": "0.9223", "loss": "0.377", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) scal = 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:43.188010", "n_pass": [627, 67, 65], "score": "0.867", "loss": "0.3701", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) 0; else  TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:45.879638", "n_pass": [628, 68, 66], "score": "0.933", "loss": "0.6426", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0)   TypeId.DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:48.575961", "n_pass": [629, 69, 67], "score": "0.7628", "loss": "1.202", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } break; case_SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:51.278754", "n_pass": [632, 70, 68], "score": "0.9509", "loss": "0.2314", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; caseSCALE; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:54.012805", "n_pass": [641, 71, 69], "score": "0.9678", "loss": "0.1737", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) { maxwidth =  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:56.709769", "n_pass": [644, 72, 70], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue((Float) arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:41:59.434591", "n_pass": [646, 73, 71], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert false : \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:02.152654", "n_pass": [649, 74, 72], "score": "0.9334", "loss": "0.3989", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:04.851062", "n_pass": [653, 75, 73], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType((typeId != null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:07.551539", "n_pass": [656, 76, 74], "score": "0.9727", "loss": "0.1788", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId. scal, isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:10.250396", "n_pass": [660, 77, 75], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1) throws StandardException {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:13.382791", "n_pass": [668, 78, 76], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  {  typeId ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:16.098592", "n_pass": [670, 79, 77], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  0; } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:18.799245", "n_pass": [676, 80, 78], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else { isNullable ; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:21.492477", "n_pass": [679, 81, 79], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { maxwidthTypeId =setValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:24.190389", "n_pass": [687, 82, 80], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { maxwidthsetValue((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:33.239097", "n_pass": [866, 83, 81], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer) arg1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:35.929201", "n_pass": [869, 84, 82], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { maxwidth ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:38.623158", "n_pass": [874, 85, 83], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short) arg1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:41.341883", "n_pass": [877, 86, 84], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { maxwidth ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:44.062016", "n_pass": [882, 87, 85], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long) arg1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:46.749470", "n_pass": [885, 88, 86], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) DECIMAL_MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:49.474970", "n_pass": [893, 89, 87], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } breakSCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:52.161198", "n_pass": [896, 90, 88], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; }SCALE; if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:54.845297", "n_pass": [897, 91, 89], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidth .DOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:42:57.561283", "n_pass": [903, 92, 90], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE; setValue((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:00.251858", "n_pass": [905, 93, 91], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double) arg1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:02.954647", "n_pass": [908, 94, 92], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); } break; if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:05.655404", "n_pass": [912, 95, 93], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {  setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:08.354273", "n_pass": [917, 96, 94], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(arg1); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:11.066678", "n_pass": [919, 97, 95], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected nodeType = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:14.177056", "n_pass": [924, 98, 96], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected = \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:16.890807", "n_pass": [925, 99, 97], "score": "0.9999", "loss": "0.0001", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : TypeId.isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:19.601778", "n_pass": [938, 100, 98], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : isNullable.booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:22.285050", "n_pass": [939, 101, 99], "score": "0.9999", "loss": "0.0002", "code": "public void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:24.979553", "n_pass": [945, 102, 100], "score": "0.9999", "loss": "0.0002", "code": " void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:27.689094", "n_pass": [946, 103, 101], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg1)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:31.227627", "n_pass": [954, 104, 102], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg)  { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:33.934127", "n_pass": [956, 105, 103], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg) { ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:36.612396", "n_pass": [957, 106, 104], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){ ; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:39.297856", "n_pass": [959, 107, 105], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){; if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:41.998330", "n_pass": [960, 108, 106], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){ if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:44.686274", "n_pass": [961, 109, 107], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if (arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:47.369964", "n_pass": [963, 110, 108], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(arg1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:50.053601", "n_pass": [965, 111, 109], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } else {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:52.765359", "n_pass": [972, 112, 110], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {; } switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:55.447081", "n_pass": [974, 113, 111], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) { maxwidthDOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:43:58.184190", "n_pass": [1011, 114, 112], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {DOUBLE;((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:00.872240", "n_pass": [1012, 115, 113], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double)1); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:25.783204", "n_pass": [1244, 116, 114], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double)); }  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:28.455845", "n_pass": [1246, 117, 115], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}  if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:31.135344", "n_pass": [1248, 118, 116], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));} if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:33.808607", "n_pass": [1249, 119, 117], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if (valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:36.516878", "n_pass": [1251, 120, 118], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP) {setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:39.202943", "n_pass": [1255, 121, 119], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue(); }assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:41.890529", "n_pass": [1261, 122, 120], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert \"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:44.982178", "n_pass": [1264, 123, 121], "score": "0.9999", "loss": "0.0002", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"Unexpected \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:47.655183", "n_pass": [1266, 124, 122], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\" \" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:50.345171", "n_pass": [1267, 125, 123], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\" + getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:53.038866", "n_pass": [1269, 126, 124], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+ getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:55.718655", "n_pass": [1271, 127, 125], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeTypebreak; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:44:58.432591", "n_pass": [1273, 128, 126], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType; } setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:01.111480", "n_pass": [1275, 129, 127], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;} setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:03.790866", "n_pass": [1277, 130, 128], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType(( null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:06.504038", "n_pass": [1281, 131, 129], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null) ? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:09.200653", "n_pass": [1284, 132, 130], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)? typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:11.881252", "n_pass": [1286, 133, 131], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId : booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:14.565899", "n_pass": [1288, 134, 132], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId: booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:17.248958", "n_pass": [1290, 135, 133], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(), maxwidth); }"}
{"time": "2021-01-21 05:45:19.962288", "n_pass": [1295, 136, 134], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth); }"}
{"time": "2021-01-21 05:45:22.639146", "n_pass": [1299, 137, 135], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1 instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:26.169644", "n_pass": [1313, 138, 136], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId) {  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:28.853673", "n_pass": [1318, 139, 137], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){  } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:31.557211", "n_pass": [1320, 140, 138], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){ } {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:34.244076", "n_pass": [1321, 141, 139], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){} {} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:36.945034", "n_pass": [1323, 142, 140], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{} switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:39.649199", "n_pass": [1326, 143, 141], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()) { case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:42.335102", "n_pass": [1333, 144, 142], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){ case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:45.037550", "n_pass": [1335, 145, 143], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE: { ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:47.720467", "n_pass": [1340, 146, 144], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{ ((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:50.405190", "n_pass": [1342, 147, 145], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer)1); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:53.092190", "n_pass": [1347, 148, 146], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer)); } { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:55.789026", "n_pass": [1350, 149, 147], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));} { ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:45:58.476206", "n_pass": [1352, 150, 148], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{ ((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:01.164610", "n_pass": [1354, 151, 149], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short)1); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:03.873349", "n_pass": [1359, 152, 150], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short)); } { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:06.555318", "n_pass": [1362, 153, 151], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));} { ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:09.231383", "n_pass": [1364, 154, 152], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{ ((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:11.906587", "n_pass": [1366, 155, 153], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long)1); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:14.581146", "n_pass": [1371, 156, 154], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long)); if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:17.268036", "n_pass": [1374, 157, 155], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if (idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:19.948198", "n_pass": [1376, 158, 156], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx < 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:22.631464", "n_pass": [1379, 159, 157], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx< 0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:25.319552", "n_pass": [1381, 160, 158], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0) MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:28.003531", "n_pass": [1384, 161, 159], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0)MAXWIDTH; } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:30.686326", "n_pass": [1385, 162, 160], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0); } if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:33.364799", "n_pass": [1387, 163, 161], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0);} if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:36.061057", "n_pass": [1389, 164, 162], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0);}if (valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:38.743988", "n_pass": [1391, 165, 163], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0);}if(valueInP) {((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:41.431134", "n_pass": [1395, 166, 164], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));if(idx<0);}if(valueInP){((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:45.485815", "n_pass": [1491, 167, 165], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx<0);}if(valueInP){((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:48.168208", "n_pass": [1494, 168, 166], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx0);}if(valueInP){((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}
{"time": "2021-01-21 05:46:50.850255", "n_pass": [1495, 169, 167], "score": "0.9999", "loss": "0.0001", "code": "void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx);}if(valueInP){((Double));}if(valueInP){setValue();}assert\"\"+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}"}

Minimal simplified code:
void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx);}if(valueInP){((Double));}if(valueInP){setValue();}assert""+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}

