
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/startup/Tool_main.java
method_name = main
method_body = @SuppressWarnings("null") public static void main(String[] args) { if (catalinaHome == null) { log.error("Must set '" + Globals.CATALINA_HOME_PROP + "' system property"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if ("-ant".equals(args[index])) ant = true; else if ("-common".equals(args[index])) common = true; else if ("-server".equals(args[index])) server = true; else if ("-shared".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty("ant.home", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, "classes")); packed.add(new File(catalinaHome, "lib")); if (common) { unpacked.add(new File(catalinaHome, "common" + File.separator + "classes")); packed.add(new File(catalinaHome, "common" + File.separator + "lib")); } if (server) { unpacked.add(new File(catalinaHome, "server" + File.separator + "classes")); packed.add(new File(catalinaHome, "server" + File.separator + "lib")); } if (shared) { unpacked.add(new File(catalinaHome, "shared" + File.separator + "classes")); packed.add(new File(catalinaHome, "shared" + File.separator + "lib")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Class loader creation threw exception", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug("Loading application class " + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Exception creating instance of " + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug("Identifying main() method"); String methodName = "main"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Exception locating main() method", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug("Calling main() method"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error("Exception calling main() method", t); System.exit(1); } }
predict, score, loss = main, 0.9987710118293762, 0.001508409040980041

Trace of simplified code(s):
{"time": "2021-01-20 15:53:44.444814", "n_pass": [1, 1, 1], "score": "0.9988", "loss": "0.0016", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"common\" + File.separator + \"lib\")); } if (server) { unpacked.add(new File(catalinaHome, \"server\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:53:47.526273", "n_pass": [50, 2, 2], "score": "0.9837", "loss": "0.0173", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:53:50.875291", "n_pass": [196, 3, 3], "score": "0.9962", "loss": "0.0045", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:53:53.958278", "n_pass": [203, 4, 4], "score": "0.9281", "loss": "0.1017", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:53:56.995389", "n_pass": [216, 5, 5], "score": "0.9959", "loss": "0.0109", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:01.272054", "n_pass": [239, 6, 6], "score": "0.9949", "loss": "0.0108", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:04.147478", "n_pass": [241, 7, 7], "score": "0.9999", "loss": "0.0001", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:07.981921", "n_pass": [418, 8, 8], "score": "0.4905", "loss": "0.8413", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:10.955555", "n_pass": [434, 9, 9], "score": "0.9626", "loss": "0.044", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:13.885771", "n_pass": [438, 10, 10], "score": "0.9998", "loss": "0.0003", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:16.838423", "n_pass": [449, 11, 11], "score": "0.9965", "loss": "0.0044", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:19.785662", "n_pass": [462, 12, 12], "score": "0.9939", "loss": "0.0077", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:22.698650", "n_pass": [467, 13, 13], "score": "0.9456", "loss": "0.0631", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:25.618628", "n_pass": [476, 14, 14], "score": "0.9199", "loss": "0.1378", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:28.503123", "n_pass": [479, 15, 15], "score": "0.9997", "loss": "0.0004", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:31.519305", "n_pass": [488, 16, 16], "score": "0.9998", "loss": "0.0002", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:34.401118", "n_pass": [493, 17, 17], "score": "0.9917", "loss": "0.0103", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:37.318431", "n_pass": [506, 18, 18], "score": "0.9862", "loss": "0.0188", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:40.205235", "n_pass": [513, 19, 19], "score": "0.7082", "loss": "0.3972", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:43.833877", "n_pass": [814, 20, 20], "score": "0.9943", "loss": "0.0082", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:46.711739", "n_pass": [818, 21, 21], "score": "0.9939", "loss": "0.0074", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:49.621762", "n_pass": [829, 22, 22], "score": "0.9506", "loss": "0.0696", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:52.482159", "n_pass": [832, 23, 23], "score": "0.2795", "loss": "1.6024", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:55.368133", "n_pass": [836, 24, 24], "score": "0.9848", "loss": "0.0181", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:54:58.256518", "n_pass": [844, 25, 25], "score": "0.4992", "loss": "0.735", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:01.121164", "n_pass": [847, 26, 26], "score": "0.5392", "loss": "0.8341", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:03.988360", "n_pass": [850, 27, 27], "score": "0.8274", "loss": "0.2446", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:06.846344", "n_pass": [851, 28, 28], "score": "0.9794", "loss": "0.0296", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:12.558910", "n_pass": [855, 30, 29], "score": "0.9984", "loss": "0.0021", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:18.447644", "n_pass": [869, 32, 30], "score": "0.9809", "loss": "0.026", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:21.404672", "n_pass": [879, 33, 31], "score": "0.9476", "loss": "0.075", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:24.296772", "n_pass": [888, 34, 32], "score": "0.9931", "loss": "0.008", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:27.218216", "n_pass": [897, 35, 33], "score": "0.9606", "loss": "0.0495", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:30.118029", "n_pass": [903, 36, 34], "score": "0.765", "loss": "0.3638", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:33.063858", "n_pass": [914, 37, 35], "score": "0.9681", "loss": "0.0407", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:35.945978", "n_pass": [920, 38, 36], "score": "0.9824", "loss": "0.0669", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:38.829749", "n_pass": [927, 39, 37], "score": "0.9637", "loss": "0.0475", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:44.569780", "n_pass": [938, 41, 38], "score": "0.9723", "loss": "0.0396", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 15:55:50.309399", "n_pass": [942, 43, 39], "score": "0.9994", "loss": "0.0012", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:55:53.161170", "n_pass": [944, 44, 40], "score": "0.8987", "loss": "0.2958", "code": "void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:55:56.045081", "n_pass": [949, 45, 41], "score": "0.9723", "loss": "0.0367", "code": "void main(String[] args) { if ( null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:55:58.902229", "n_pass": [953, 46, 42], "score": "0.7924", "loss": "0.262", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:01.758227", "n_pass": [955, 47, 43], "score": "0.8759", "loss": "0.2275", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:04.605906", "n_pass": [956, 48, 44], "score": "0.9991", "loss": "0.0015", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:07.445744", "n_pass": [958, 49, 45], "score": "0.8913", "loss": "0.1367", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:13.186683", "n_pass": [974, 51, 46], "score": "0.9999", "loss": "0.0001", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:18.876027", "n_pass": [981, 53, 47], "score": "0.9764", "loss": "0.036", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:21.737045", "n_pass": [987, 54, 48], "score": "0.9851", "loss": "0.0195", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:24.606157", "n_pass": [992, 55, 49], "score": "0.975", "loss": "0.0313", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:27.458818", "n_pass": [994, 56, 50], "score": "0.873", "loss": "0.2323", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:30.306787", "n_pass": [997, 57, 51], "score": "0.9116", "loss": "0.1214", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:33.328346", "n_pass": [1000, 58, 52], "score": "0.931", "loss": "0.0946", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:36.334457", "n_pass": [1039, 59, 53], "score": "0.9232", "loss": "0.0945", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:42.390214", "n_pass": [1107, 61, 54], "score": "0.9941", "loss": "0.0063", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\");paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:45.223169", "n_pass": [1108, 62, 55], "score": "0.9645", "loss": "0.0407", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:48.119994", "n_pass": [1116, 63, 56], "score": "0.9986", "loss": "0.0019", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:51.039092", "n_pass": [1136, 64, 57], "score": "0.9143", "loss": "0.1032", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:53.897454", "n_pass": [1148, 65, 58], "score": "0.9679", "loss": "0.142", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:56:57.165045", "n_pass": [1214, 66, 59], "score": "0.7241", "loss": "0.3477", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:05.870195", "n_pass": [1687, 67, 60], "score": "0.9742", "loss": "0.0283", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilslog.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:08.706055", "n_pass": [1688, 68, 61], "score": "0.998", "loss": "0.0026", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:11.575331", "n_pass": [1691, 69, 62], "score": "0.4636", "loss": "0.838", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:17.252997", "n_pass": [1701, 71, 63], "score": "0.9881", "loss": "0.0208", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:20.095838", "n_pass": [1704, 72, 64], "score": "0.8491", "loss": "0.2084", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:22.944669", "n_pass": [1710, 73, 65], "score": "0.5595", "loss": "0.647", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:28.584243", "n_pass": [1715, 75, 66], "score": "0.9548", "loss": "0.0602", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugclazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:31.404368", "n_pass": [1716, 76, 67], "score": "0.9615", "loss": "0.0464", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debug= classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:34.249811", "n_pass": [1717, 77, 68], "score": "0.809", "loss": "0.2219", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugclassLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:37.095670", "n_pass": [1718, 78, 69], "score": "0.7973", "loss": "0.3581", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:39.992446", "n_pass": [1728, 79, 70], "score": "0.8061", "loss": "0.233", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:42.826206", "n_pass": [1732, 80, 71], "score": "0.8808", "loss": "0.1502", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:48.497826", "n_pass": [1738, 82, 72], "score": "0.6263", "loss": "0.5271", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:51.356242", "n_pass": [1740, 83, 73], "score": "0.5251", "loss": "0.6819", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:54.217910", "n_pass": [1745, 84, 74], "score": "0.9564", "loss": "0.0559", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args- index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:57.047703", "n_pass": [1746, 85, 75], "score": "0.8841", "loss": "0.5191", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:57:59.882842", "n_pass": [1748, 86, 76], "score": "0.9347", "loss": "0.0759", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; (length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:02.737456", "n_pass": [1749, 87, 77], "score": "0.9818", "loss": "0.0211", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:05.621991", "n_pass": [1755, 88, 78], "score": "0.9107", "loss": "0.1832", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:08.495507", "n_pass": [1763, 89, 79], "score": "0.9939", "loss": "0.0075", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; Class[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:11.314026", "n_pass": [1764, 90, 80], "score": "0.6471", "loss": "0.5202", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:14.139330", "n_pass": [1766, 91, 81], "score": "0.3541", "loss": "1.0774", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:16.989625", "n_pass": [1771, 92, 82], "score": "0.9984", "loss": "0.002", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:19.826160", "n_pass": [1775, 93, 83], "score": "0.6921", "loss": "0.4147", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:22.910456", "n_pass": [1784, 94, 84], "score": "0.994", "loss": "0.007", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:25.731708", "n_pass": [1786, 95, 85], "score": "0.9469", "loss": "0.0616", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); (1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:28.541202", "n_pass": [1787, 96, 86], "score": "0.9912", "loss": "0.0095", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:34.250759", "n_pass": [1802, 98, 87], "score": "0.9154", "loss": "0.1189", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { tExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:37.063987", "n_pass": [1803, 99, 88], "score": "0.6715", "loss": "0.682", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:39.902013", "n_pass": [1804, 100, 89], "score": "0.9994", "loss": "0.0008", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t; ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:42.709749", "n_pass": [1805, 101, 90], "score": "0.4675", "loss": "1.0889", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\", t); System; } }"}
{"time": "2021-01-20 15:58:45.551029", "n_pass": [1807, 102, 91], "score": "0.9249", "loss": "0.142", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); System; } }"}
{"time": "2021-01-20 15:58:48.398883", "n_pass": [1809, 103, 92], "score": "0.9442", "loss": "0.0675", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:58:51.722339", "n_pass": [1822, 104, 93], "score": "0.4955", "loss": "0.841", "code": "void main(String[] args) { if ( null) { error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:58:54.533659", "n_pass": [1826, 105, 94], "score": "0.8976", "loss": "0.2804", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:58:57.344260", "n_pass": [1832, 106, 95], "score": "0.8814", "loss": "0.1688", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:00.169177", "n_pass": [1843, 107, 96], "score": "0.9375", "loss": "0.132", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:02.990686", "n_pass": [1851, 108, 97], "score": "0.7803", "loss": "0.2765", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:05.799995", "n_pass": [1857, 109, 98], "score": "0.9896", "loss": "0.0115", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:08.597742", "n_pass": [1859, 110, 99], "score": "0.9612", "loss": "0.044", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:11.408695", "n_pass": [1862, 111, 100], "score": "0.5745", "loss": "0.9499", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:14.194225", "n_pass": [1866, 112, 101], "score": "0.8825", "loss": "0.2176", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:16.987375", "n_pass": [1868, 113, 102], "score": "0.8342", "loss": "0.19", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:22.551258", "n_pass": [1877, 115, 103], "score": "0.988", "loss": "0.0136", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:25.341570", "n_pass": [1879, 116, 104], "score": "0.9738", "loss": "0.0328", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:28.133055", "n_pass": [1882, 117, 105], "score": "0.8756", "loss": "0.3769", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:30.928744", "n_pass": [1886, 118, 106], "score": "0.9949", "loss": "0.006", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:33.740136", "n_pass": [1891, 119, 107], "score": "0.8412", "loss": "0.2185", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:36.575524", "n_pass": [1894, 120, 108], "score": "0.8346", "loss": "0.2784", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:39.378248", "n_pass": [1895, 121, 109], "score": "0.3246", "loss": "2.9706", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:45.429362", "n_pass": [1906, 123, 110], "score": "0.1776", "loss": "2.7945", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:53.863408", "n_pass": [1931, 126, 111], "score": "0.7187", "loss": "0.4204", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 15:59:59.439663", "n_pass": [1939, 128, 112], "score": "0.8445", "loss": "0.2533", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:05.019732", "n_pass": [1949, 130, 113], "score": "0.9554", "loss": "0.2176", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:07.835130", "n_pass": [1959, 131, 114], "score": "0.8499", "loss": "0.1895", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:10.628065", "n_pass": [1961, 132, 115], "score": "0.3919", "loss": "1.2093", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:13.437360", "n_pass": [1963, 133, 116], "score": "0.9592", "loss": "0.0569", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:19.043735", "n_pass": [1978, 135, 117], "score": "0.6247", "loss": "1.2909", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:21.849422", "n_pass": [1984, 136, 118], "score": "0.9781", "loss": "0.0421", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:24.629080", "n_pass": [1986, 137, 119], "score": "0.9861", "loss": "0.0174", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:27.458980", "n_pass": [1998, 138, 120], "score": "0.9763", "loss": "0.0374", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); System.exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:30.258638", "n_pass": [2005, 139, 121], "score": "0.9624", "loss": "0.0511", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) log.debugloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:33.113175", "n_pass": [2020, 140, 122], "score": "0.8607", "loss": "0.2345", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:35.975297", "n_pass": [2035, 141, 123], "score": "0.554", "loss": "0.7317", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:38.868412", "n_pass": [2056, 142, 124], "score": "0.6437", "loss": "0.5521", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:41.770846", "n_pass": [2076, 143, 125], "score": "0.9829", "loss": "0.0228", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:45.405414", "n_pass": [2124, 144, 126], "score": "0.5854", "loss": "0.8841", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:48.216798", "n_pass": [2132, 145, 127], "score": "0.9714", "loss": "0.0365", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); if (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:50.999916", "n_pass": [2138, 146, 128], "score": "0.9694", "loss": "0.0338", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"-server\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:53.771630", "n_pass": [2140, 147, 129], "score": "0.9698", "loss": "0.0357", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:00:56.563669", "n_pass": [2147, 148, 130], "score": "0.7113", "loss": "0.3995", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:01:02.630612", "n_pass": [2173, 150, 131], "score": "0.9159", "loss": "0.1354", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:01:05.465279", "n_pass": [2191, 151, 132], "score": "0.9586", "loss": "0.077", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:01:08.375127", "n_pass": [2231, 152, 133], "score": "0.7922", "loss": "0.4751", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:01:11.319660", "n_pass": [2269, 153, 134], "score": "0.9483", "loss": "0.0679", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:16.154152", "n_pass": [2986, 157, 135], "score": "0.7769", "loss": "0.4336", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:21.710099", "n_pass": [2990, 159, 136], "score": "0.7412", "loss": "0.3336", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:32.847874", "n_pass": [3001, 163, 137], "score": "0.5761", "loss": "0.7549", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:38.446519", "n_pass": [3005, 165, 138], "score": "0.5009", "loss": "0.7761", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:41.238110", "n_pass": [3008, 166, 139], "score": "0.3273", "loss": "1.273", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:46.817075", "n_pass": [3012, 168, 140], "score": "0.718", "loss": "0.4316", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:49.622232", "n_pass": [3016, 169, 141], "score": "0.5925", "loss": "0.5829", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:02:55.212624", "n_pass": [3023, 171, 142], "score": "0.9271", "loss": "0.0881", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:09.065763", "n_pass": [3032, 176, 143], "score": "0.9184", "loss": "0.1637", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:11.870911", "n_pass": [3034, 177, 144], "score": "0.5487", "loss": "0.8226", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{ if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:14.674661", "n_pass": [3036, 178, 145], "score": "0.5031", "loss": "0.72", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:17.490182", "n_pass": [3038, 179, 146], "score": "0.9951", "loss": "0.0055", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:23.109419", "n_pass": [3046, 181, 147], "score": "0.475", "loss": "0.8733", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:25.901442", "n_pass": [3049, 182, 148], "score": "0.8348", "loss": "0.2098", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\" \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:28.684646", "n_pass": [3050, 183, 149], "score": "0.9469", "loss": "0.0597", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:34.235423", "n_pass": [3055, 185, 150], "score": "0.9579", "loss": "0.0561", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\");  methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:37.009530", "n_pass": [3056, 186, 151], "score": "0.9855", "loss": "0.0174", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:42.552969", "n_pass": [3060, 188, 152], "score": "0.9933", "loss": "0.0074", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:45.319949", "n_pass": [3062, 189, 153], "score": "0.9038", "loss": "0.1388", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:48.108340", "n_pass": [3064, 190, 154], "score": "0.7709", "loss": "0.3095", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:03:53.722847", "n_pass": [3083, 192, 155], "score": "0.9239", "loss": "0.1076", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:07.541397", "n_pass": [3099, 197, 156], "score": "0.8765", "loss": "0.2063", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:17.069553", "n_pass": [3123, 200, 157], "score": "0.8239", "loss": "0.2454", "code": "void main(String[] args){ if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:19.856306", "n_pass": [3125, 201, 158], "score": "0.6115", "loss": "0.5783", "code": "void main(String[] args){if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:22.625465", "n_pass": [3127, 202, 159], "score": "0.9958", "loss": "0.0077", "code": "void main(String[] args){if( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:28.168657", "n_pass": [3132, 204, 160], "score": "0.9492", "loss": "0.1403", "code": "void main(String[] args){if( null){ error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:33.685734", "n_pass": [3135, 206, 161], "score": "0.899", "loss": "0.1473", "code": "void main(String[] args){if( null){ (\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:36.461296", "n_pass": [3138, 207, 162], "score": "0.4314", "loss": "0.9585", "code": "void main(String[] args){if( null){ (\"\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:39.248253", "n_pass": [3140, 208, 163], "score": "0.9483", "loss": "0.0741", "code": "void main(String[] args){if( null){ (\"\"+ \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:44.754117", "n_pass": [3144, 210, 164], "score": "0.4951", "loss": "0.7466", "code": "void main(String[] args){if( null){ (\"\"+ \"\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:47.524741", "n_pass": [3148, 211, 165], "score": "0.8592", "loss": "0.2663", "code": "void main(String[] args){if( null){ (\"\"+ \"\");} index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:04:50.311599", "n_pass": [3150, 212, 166], "score": "0.7271", "loss": "0.5722", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:01.393454", "n_pass": [3159, 216, 167], "score": "0.6174", "loss": "0.5494", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:06.943134", "n_pass": [3165, 218, 168], "score": "0.4059", "loss": "0.9921", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:09.713089", "n_pass": [3167, 219, 169], "score": "0.8764", "loss": "0.157", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:12.483024", "n_pass": [3170, 220, 170], "score": "0.9948", "loss": "0.0057", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:18.033979", "n_pass": [3178, 222, 171], "score": "0.9702", "loss": "0.1193", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);} (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:20.805318", "n_pass": [3180, 223, 172], "score": "0.9985", "loss": "0.0022", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:26.383279", "n_pass": [3204, 225, 173], "score": "0.9934", "loss": "0.0082", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:29.183495", "n_pass": [3218, 226, 174], "score": "0.9612", "loss": "0.0475", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());; } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:32.006862", "n_pass": [3227, 227, 175], "score": "0.6477", "loss": "0.4639", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); } if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:37.575780", "n_pass": [3231, 229, 176], "score": "0.4612", "loss": "0.8285", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {exit(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:45.878194", "n_pass": [3239, 232, 177], "score": "0.9796", "loss": "0.0263", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if (ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:05:54.665023", "n_pass": [3248, 235, 178], "score": "0.5852", "loss": "0.6938", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) System.setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:00.206429", "n_pass": [3254, 237, 179], "score": "0.9314", "loss": "0.0914", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:08.490737", "n_pass": [3261, 240, 180], "score": "0.6922", "loss": "0.499", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:14.057181", "n_pass": [3267, 242, 181], "score": "0.9622", "loss": "0.0508", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:16.824296", "n_pass": [3270, 243, 182], "score": "0.5728", "loss": "0.5939", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:22.352737", "n_pass": [3282, 245, 183], "score": "0.6258", "loss": "0.6658", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();( File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:25.116044", "n_pass": [3283, 246, 184], "score": "0.9757", "loss": "0.0359", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:27.903296", "n_pass": [3288, 247, 185], "score": "0.4043", "loss": "0.992", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:30.654929", "n_pass": [3290, 248, 186], "score": "0.6276", "loss": "0.6968", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:33.424606", "n_pass": [3295, 249, 187], "score": "0.5283", "loss": "1.3748", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:06:44.450289", "n_pass": [3305, 253, 188], "score": "0.9679", "loss": "0.0579", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:23.080867", "n_pass": [3346, 267, 189], "score": "0.8639", "loss": "0.1814", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:31.353320", "n_pass": [3353, 270, 190], "score": "0.4551", "loss": "0.8726", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:39.688452", "n_pass": [3364, 273, 191], "score": "0.9694", "loss": "0.0427", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));( File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:42.467545", "n_pass": [3365, 274, 192], "score": "0.9401", "loss": "0.071", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:45.236953", "n_pass": [3370, 275, 193], "score": "0.514", "loss": "0.7275", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:50.764346", "n_pass": [3377, 277, 194], "score": "0.9537", "loss": "0.0933", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));} ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:53.525591", "n_pass": [3379, 278, 195], "score": "0.9864", "loss": "0.0634", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:07:56.289062", "n_pass": [3382, 279, 196], "score": "0.9169", "loss": "0.0992", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:07.327219", "n_pass": [3393, 283, 197], "score": "0.9674", "loss": "0.0475", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:10.111469", "n_pass": [3401, 284, 198], "score": "0.998", "loss": "0.0027", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:12.880024", "n_pass": [3405, 285, 199], "score": "0.3094", "loss": "1.5739", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);} catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:15.672595", "n_pass": [3407, 286, 200], "score": "0.9832", "loss": "0.0338", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:21.226380", "n_pass": [3415, 288, 201], "score": "0.4199", "loss": "0.9215", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:23.991264", "n_pass": [3420, 289, 202], "score": "0.9256", "loss": "0.0832", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\" \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:26.749927", "n_pass": [3421, 290, 203], "score": "0.9816", "loss": "0.0295", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:35.038147", "n_pass": [3429, 293, 204], "score": "0.5402", "loss": "0.6988", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1); }  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:37.830495", "n_pass": [3434, 294, 205], "score": "0.5881", "loss": "0.6105", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}  args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:40.618160", "n_pass": [3436, 295, 206], "score": "0.4728", "loss": "0.8179", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);} args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:43.389287", "n_pass": [3437, 296, 207], "score": "0.9894", "loss": "0.012", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index]; try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:46.184905", "n_pass": [3443, 297, 208], "score": "0.695", "loss": "1.1599", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try { if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:48.955751", "n_pass": [3445, 298, 209], "score": "0.9886", "loss": "0.0241", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if (isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:54.473161", "n_pass": [3449, 300, 210], "score": "0.4593", "loss": "1.0864", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())loadClass(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:08:57.248638", "n_pass": [3455, 301, 211], "score": "0.9985", "loss": "0.0022", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);} catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:00.023514", "n_pass": [3461, 302, 212], "score": "0.5951", "loss": "0.595", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) { handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:05.564737", "n_pass": [3470, 304, 213], "score": "0.9023", "loss": "0.6154", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable(); (\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:08.350523", "n_pass": [3475, 305, 214], "score": "0.9502", "loss": "0.0684", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1); } String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:13.925343", "n_pass": [3488, 307, 215], "score": "0.99", "loss": "0.0118", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);} String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:16.685500", "n_pass": [3490, 308, 216], "score": "0.9959", "loss": "0.0062", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; ;try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:24.988308", "n_pass": [3497, 311, 217], "score": "0.6643", "loss": "0.8912", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log.isDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:27.769054", "n_pass": [3503, 312, 218], "score": "0.6537", "loss": "0.505", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(logisDebugEnabled())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:30.543381", "n_pass": [3504, 313, 219], "score": "0.5961", "loss": "0.7955", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:38.879591", "n_pass": [3527, 316, 220], "score": "0.3245", "loss": "1.3442", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:44.412625", "n_pass": [3539, 318, 221], "score": "0.9914", "loss": "0.0112", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); ; } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:47.159517", "n_pass": [3541, 319, 222], "score": "0.7105", "loss": "0.38", "code": "void main(String[] args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:09:56.390184", "n_pass": [3572, 322, 223], "score": "0.4327", "loss": "0.906", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index = 0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:10.180072", "n_pass": [3596, 327, 224], "score": "0.8636", "loss": "0.165", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true) {if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:15.690456", "n_pass": [3604, 329, 225], "score": "0.6321", "loss": "0.5306", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index) {(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:18.451326", "n_pass": [3610, 330, 226], "score": "0.7429", "loss": "1.991", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals()); }if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:24.061094", "n_pass": [3662, 332, 227], "score": "0.7897", "loss": "0.2808", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if (length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:26.818705", "n_pass": [3665, 333, 228], "score": "0.9765", "loss": "0.034", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length) {(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:29.582709", "n_pass": [3669, 334, 229], "score": "0.7686", "loss": "0.8334", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1); } if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:32.682918", "n_pass": [3675, 335, 230], "score": "0.3915", "loss": "1.0759", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant) SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:38.652054", "n_pass": [3682, 337, 231], "score": "0.8734", "loss": "0.1545", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"ant\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:46.872351", "n_pass": [3687, 340, 232], "score": "0.8519", "loss": "0.2041", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome); try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:49.635889", "n_pass": [3693, 341, 233], "score": "0.8669", "loss": "0.2947", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked= new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:52.408268", "n_pass": [3698, 342, 234], "score": "0.968", "loss": "0.0472", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:10:55.213716", "n_pass": [3718, 343, 235], "score": "0.6455", "loss": "0.4844", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:08.994964", "n_pass": [3734, 348, 236], "score": "0.8928", "loss": "0.1623", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+ \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:11.765125", "n_pass": [3736, 349, 237], "score": "0.9291", "loss": "0.432", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:17.267524", "n_pass": [3744, 351, 238], "score": "0.9928", "loss": "0.0231", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" + \"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:28.226798", "n_pass": [3755, 355, 239], "score": "0.9247", "loss": "0.1331", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"lib\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:31.001056", "n_pass": [3757, 356, 240], "score": "0.9896", "loss": "0.0138", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); } if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:36.532228", "n_pass": [3764, 358, 241], "score": "0.996", "loss": "0.0053", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) { (File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:42.045212", "n_pass": [3771, 360, 242], "score": "0.7694", "loss": "0.3612", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {(File(\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:44.816264", "n_pass": [3773, 361, 243], "score": "0.7312", "loss": "0.3621", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"classes\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:47.566623", "n_pass": [3776, 362, 244], "score": "0.8236", "loss": "0.2606", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"lib\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:50.384351", "n_pass": [3787, 363, 245], "score": "0.4025", "loss": "0.9637", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]), (File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:11:58.722775", "n_pass": [3804, 366, 246], "score": "0.976", "loss": "0.0288", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch (Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:01.549689", "n_pass": [3817, 367, 247], "score": "0.959", "loss": "0.0538", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\", t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:04.338624", "n_pass": [3829, 368, 248], "score": "0.6612", "loss": "0.4594", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t); (1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:07.092475", "n_pass": [3833, 369, 249], "score": "0.8061", "loss": "0.3444", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t) {handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:12.717634", "n_pass": [3864, 371, 250], "score": "0.9982", "loss": "0.0024", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception)\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:26.762014", "n_pass": [3926, 376, 251], "score": "0.8737", "loss": "0.1569", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:29.561352", "n_pass": [3936, 377, 252], "score": "0.4517", "loss": "0.9813", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 16:12:32.391561", "n_pass": [3947, 378, 253], "score": "0.6715", "loss": "0.4719", "code": "void main(String[]args){if( null){ (\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:12:38.842417", "n_pass": [3967, 380, 254], "score": "0.7646", "loss": "0.2966", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index =0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:12:44.373127", "n_pass": [3979, 382, 255], "score": "0.7858", "loss": "0.2793", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index=0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:12:47.153161", "n_pass": [3980, 383, 256], "score": "0.6458", "loss": "1.1063", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:12:55.440602", "n_pass": [4012, 386, 257], "score": "0.9647", "loss": "0.0456", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);} if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:12:58.305419", "n_pass": [4055, 387, 258], "score": "0.7635", "loss": "0.7428", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)SystemsetProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:04.247942", "n_pass": [4061, 389, 259], "score": "0.5964", "loss": "0.5704", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(newFile(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:09.862053", "n_pass": [4098, 391, 260], "score": "0.9842", "loss": "0.0213", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome, \"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:12.645808", "n_pass": [4103, 392, 261], "score": "0.9395", "loss": "0.1278", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"classes\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:18.147345", "n_pass": [4109, 394, 262], "score": "0.6486", "loss": "0.5413", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));( File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:20.935615", "n_pass": [4115, 395, 263], "score": "0.4044", "loss": "1.1022", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\")); }if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:29.206195", "n_pass": [4130, 398, 264], "score": "0.5195", "loss": "0.837", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared) {((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:31.990928", "n_pass": [4136, 399, 265], "score": "0.7222", "loss": "0.3525", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:34.841363", "n_pass": [4159, 400, 266], "score": "0.9994", "loss": "0.0007", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory(( File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:37.593874", "n_pass": [4160, 401, 267], "score": "0.3619", "loss": "1.0907", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:40.529072", "n_pass": [4205, 402, 268], "score": "0.9713", "loss": "0.0337", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName =\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:13:51.766876", "n_pass": [4262, 406, 269], "score": "0.9965", "loss": "0.0042", "code": "void main(String[]args){if( null){(\"\"+ \"\");}index0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:01.176096", "n_pass": [4332, 409, 270], "score": "0.9908", "loss": "0.0119", "code": "void main(String[]args){if( null){(\"\"+ \"\");}0; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:03.927478", "n_pass": [4333, 410, 271], "score": "0.8178", "loss": "0.2717", "code": "void main(String[]args){if( null){(\"\"+ \"\");}; while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:09.420807", "n_pass": [4335, 412, 272], "score": "0.9886", "loss": "0.0144", "code": "void main(String[]args){if( null){(\"\"+ \"\");};while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\" +\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:21.216610", "n_pass": [4468, 416, 273], "score": "0.5719", "loss": "1.3948", "code": "void main(String[]args){if( null){(\"\"+ \"\");};while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\" +t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:24.742159", "n_pass": [4571, 417, 274], "score": "0.8179", "loss": "0.3033", "code": "void main(String[]args){if( null){(\"\"+ \"\");};while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:37.006532", "n_pass": [4665, 421, 275], "score": "0.5908", "loss": "0.5982", "code": "void main(String[]args){if( null){(\"\"+\"\");};while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:39.769197", "n_pass": [4671, 422, 276], "score": "0.9972", "loss": "0.0041", "code": "void main(String[]args){if( null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:43.250970", "n_pass": [4780, 423, 277], "score": "0.4356", "loss": "0.9365", "code": "void main(String[]args){if( null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"common\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:46.017969", "n_pass": [4788, 424, 278], "score": "0.8274", "loss": "0.2635", "code": "void main(String[]args){if( null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args]; try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:52.028958", "n_pass": [4920, 426, 279], "score": "0.9812", "loss": "0.0218", "code": "void main(String[]args){if( null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\"); methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:54.836626", "n_pass": [4934, 427, 280], "score": "0.7088", "loss": "0.4444", "code": "void main(String[]args){if( null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:14:58.706491", "n_pass": [4991, 428, 281], "score": "0.9946", "loss": "0.0093", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:23.760082", "n_pass": [5419, 432, 282], "score": "0.6039", "loss": "0.585", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:29.290286", "n_pass": [5425, 434, 283], "score": "0.9575", "loss": "0.0563", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:32.052185", "n_pass": [5427, 435, 284], "score": "0.6506", "loss": "0.5621", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:43.087224", "n_pass": [5443, 439, 285], "score": "0.6865", "loss": "0.4671", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:45.847263", "n_pass": [5445, 440, 286], "score": "0.3473", "loss": "1.1931", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:51.356883", "n_pass": [5448, 442, 287], "score": "0.3906", "loss": "1.0954", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:54.117299", "n_pass": [5451, 443, 288], "score": "0.8192", "loss": "0.2459", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:56.885843", "n_pass": [5452, 444, 289], "score": "0.9905", "loss": "0.0131", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:15:59.675734", "n_pass": [5457, 445, 290], "score": "0.5547", "loss": "0.6469", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 16:16:10.747067", "n_pass": [5471, 449, 291], "score": "0.5822", "loss": "0.6498", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){ t(); } }"}
{"time": "2021-01-20 16:16:13.504736", "n_pass": [5473, 450, 292], "score": "0.8898", "loss": "0.1408", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){t(); } }"}
{"time": "2021-01-20 16:16:16.314802", "n_pass": [5478, 451, 293], "score": "0.9105", "loss": "0.231", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){t();} }"}
{"time": "2021-01-20 16:16:19.080672", "n_pass": [5480, 452, 294], "score": "0.3803", "loss": "1.1232", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:23.566479", "n_pass": [5634, 453, 295], "score": "0.5159", "loss": "0.9452", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:26.887430", "n_pass": [5775, 454, 296], "score": "0.9442", "loss": "0.1444", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\"); }try{ (\"\");(paramValues); } catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:40.778369", "n_pass": [5806, 459, 297], "score": "0.8695", "loss": "0.1808", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\");}try{ (\"\");(paramValues); } catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:43.547975", "n_pass": [5810, 460, 298], "score": "0.9901", "loss": "0.0139", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\");}try{(\"\");(paramValues); } catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:46.371634", "n_pass": [5820, 461, 299], "score": "0.9785", "loss": "0.0624", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\");}try{(\"\");(paramValues);} catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:49.133299", "n_pass": [5822, 462, 300], "score": "0.795", "loss": "0.2634", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass();(methodName); }catch(Throwable t) {log(\"\");}try{(\"\");(paramValues);}catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:16:57.420160", "n_pass": [6133, 464, 301], "score": "0.6958", "loss": "0.416", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName); }catch(Throwable t) {log(\"\");}try{(\"\");(paramValues);}catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:17:00.233585", "n_pass": [6143, 465, 302], "score": "0.9491", "loss": "0.0677", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t) {log(\"\");}try{(\"\");(paramValues);}catch (Throwable t){t();}}"}
{"time": "2021-01-20 16:17:08.646644", "n_pass": [6173, 468, 303], "score": "0.9361", "loss": "0.1103", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)System(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t) {log(\"\");}try{(\"\");(paramValues);}catch(Throwable t){t();}}"}

Minimal simplified code:
void main(String[]args){if(null){(""+"");}while(true){if(index){(1);}("".equals(args[index]));("".equals());("".equals(args[index]));("".equals());}if(length){(1);}if(ant)System("",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,""));if(common){(File(catalinaHome,""+""));(File(catalinaHome,""+""));}if(shared){((""));(File(catalinaHome,""));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error("",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(""+t);(1);}String[args];try{if(log())("");methodName="";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t) {log("");}try{("");(paramValues);}catch(Throwable t){t();}}

