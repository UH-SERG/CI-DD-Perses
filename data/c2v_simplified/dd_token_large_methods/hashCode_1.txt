
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/internal/util/Options_hashCode.java
method_name = hashCode
method_body = @SuppressWarnings("SimplifiableIfStatement") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }
predict, score, loss = hashCode, 0.9993870258331299, 0.0007493072189390659

Trace of simplified code(s):
{"time": "2021-01-21 00:22:33.398439", "n_pass": [1, 1, 1], "score": "0.9986", "loss": "0.0019", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:36.947303", "n_pass": [22, 2, 2], "score": "0.9998", "loss": "0.0003", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:39.952184", "n_pass": [26, 3, 3], "score": "0.9989", "loss": "0.0013", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:42.986334", "n_pass": [45, 4, 4], "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:45.939909", "n_pass": [47, 5, 5], "score": "0.9976", "loss": "0.0046", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:48.956026", "n_pass": [53, 6, 6], "score": "0.9995", "loss": "0.0007", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 :0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:51.939586", "n_pass": [55, 7, 7], "score": "0.9995", "loss": "0.0007", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 :0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:54.828903", "n_pass": [62, 8, 8], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:22:57.829856", "n_pass": [85, 9, 9], "score": "0.9993", "loss": "0.0008", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result  (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:00.930174", "n_pass": [125, 10, 10], "score": "0.9995", "loss": "0.0007", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:03.839584", "n_pass": [132, 11, 11], "score": "0.9997", "loss": "0.0003", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:06.644037", "n_pass": [134, 12, 12], "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:09.927826", "n_pass": [139, 13, 13], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:12.791281", "n_pass": [143, 14, 14], "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:15.671473", "n_pass": [145, 15, 15], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:19.418637", "n_pass": [210, 16, 16], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:22.636993", "n_pass": [215, 17, 17], "score": "0.9991", "loss": "0.0012", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:25.683241", "n_pass": [232, 18, 18], "score": "0.9984", "loss": "0.0022", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:29.989352", "n_pass": [345, 19, 19], "score": "0.999", "loss": "0.0013", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:32.850134", "n_pass": [351, 20, 20], "score": "0.9996", "loss": "0.0005", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + 1 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:35.678634", "n_pass": [352, 21, 21], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:38.910358", "n_pass": [358, 22, 22], "score": "0.9999", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:41.697803", "n_pass": [365, 23, 23], "score": "0.9996", "loss": "0.0005", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:44.633283", "n_pass": [368, 24, 24], "score": "0.9995", "loss": "0.0006", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:47.384776", "n_pass": [372, 25, 25], "score": "0.9988", "loss": "0.0016", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:50.169270", "n_pass": [374, 26, 26], "score": "0.9977", "loss": "0.0031", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:52.925612", "n_pass": [376, 27, 27], "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:55.772322", "n_pass": [378, 28, 28], "score": "0.999", "loss": "0.0012", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:23:58.529343", "n_pass": [382, 29, 29], "score": "0.9975", "loss": "0.0032", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:02.156153", "n_pass": [391, 30, 30], "score": "0.9997", "loss": "0.0004", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:05.093998", "n_pass": [392, 31, 31], "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:07.874370", "n_pass": [396, 32, 32], "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:11.191887", "n_pass": [406, 33, 33], "score": "0.9998", "loss": "0.0003", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:13.947158", "n_pass": [415, 34, 34], "score": "0.9996", "loss": "0.0005", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:18.081026", "n_pass": [453, 35, 35], "score": "0.9999", "loss": "0.0001", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:22.873020", "n_pass": [625, 36, 36], "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:25.669215", "n_pass": [631, 37, 37], "score": "0.9989", "loss": "0.0045", "code": " int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:28.432405", "n_pass": [636, 38, 38], "score": "0.9979", "loss": "0.009", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:31.617505", "n_pass": [643, 39, 39], "score": "0.9974", "loss": "0.0103", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:34.405395", "n_pass": [649, 40, 40], "score": "0.9986", "loss": "0.0035", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:37.580286", "n_pass": [657, 41, 41], "score": "0.9998", "loss": "0.0005", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:40.337605", "n_pass": [659, 42, 42], "score": "0.9998", "loss": "0.0005", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:43.911708", "n_pass": [671, 43, 43], "score": "0.9924", "loss": "0.0135", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:46.651095", "n_pass": [673, 44, 44], "score": "0.9981", "loss": "0.0046", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:49.390520", "n_pass": [675, 45, 45], "score": "0.9993", "loss": "0.0019", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:52.687186", "n_pass": [680, 46, 46], "score": "0.9931", "loss": "0.0157", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:55.436134", "n_pass": [684, 47, 47], "score": "0.9996", "loss": "0.001", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:24:58.607050", "n_pass": [689, 48, 48], "score": "0.9994", "loss": "0.0015", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:02.161833", "n_pass": [694, 49, 49], "score": "0.9981", "loss": "0.0047", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:05.348338", "n_pass": [700, 50, 50], "score": "0.9978", "loss": "0.0078", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:08.121470", "n_pass": [701, 51, 51], "score": "0.9882", "loss": "0.021", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:10.945893", "n_pass": [705, 52, 52], "score": "0.9997", "loss": "0.0007", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:13.719987", "n_pass": [710, 53, 53], "score": "0.9981", "loss": "0.0053", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:16.487988", "n_pass": [712, 54, 54], "score": "0.9996", "loss": "0.0006", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:19.233658", "n_pass": [714, 55, 55], "score": "0.9987", "loss": "0.0029", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:23.248236", "n_pass": [723, 56, 56], "score": "0.9996", "loss": "0.0008", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:27.729876", "n_pass": [765, 57, 57], "score": "0.9997", "loss": "0.0006", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =+ (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:37.178450", "n_pass": [1042, 58, 58], "score": "0.9999", "loss": "0.0001", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:39.998226", "n_pass": [1043, 59, 59], "score": "0.9989", "loss": "0.0024", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:42.902012", "n_pass": [1046, 60, 60], "score": "0.9992", "loss": "0.0015", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:45.643319", "n_pass": [1047, 61, 61], "score": "0.9985", "loss": "0.0055", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:48.783404", "n_pass": [1053, 62, 62], "score": "0.9994", "loss": "0.0013", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:51.557423", "n_pass": [1062, 63, 63], "score": "0.9984", "loss": "0.0059", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:54.327860", "n_pass": [1074, 64, 64], "score": "0.993", "loss": "0.0211", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:57.065602", "n_pass": [1078, 65, 65], "score": "0.999", "loss": "0.0021", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe= nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:25:59.807335", "n_pass": [1079, 66, 66], "score": "0.9972", "loss": "0.0073", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipenullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:02.540948", "n_pass": [1080, 67, 67], "score": "0.9996", "loss": "0.0008", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:05.462203", "n_pass": [1088, 68, 68], "score": "0.9985", "loss": "0.007", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:08.181867", "n_pass": [1092, 69, 69], "score": "0.996", "loss": "0.0108", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory= 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:10.919449", "n_pass": [1093, 70, 70], "score": "0.9962", "loss": "0.0139", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:14.149415", "n_pass": [1098, 71, 71], "score": "0.9994", "loss": "0.001", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:16.983955", "n_pass": [1099, 72, 72], "score": "0.9985", "loss": "0.0044", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:20.258764", "n_pass": [1130, 73, 73], "score": "0.9993", "loss": "0.0012", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:23.064250", "n_pass": [1131, 74, 74], "score": "0.9974", "loss": "0.0044", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:25.848641", "n_pass": [1137, 75, 75], "score": "0.9932", "loss": "0.0326", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:28.703455", "n_pass": [1140, 76, 76], "score": "0.9993", "loss": "0.0022", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:31.493534", "n_pass": [1141, 77, 77], "score": "0.9945", "loss": "0.0137", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:34.422106", "n_pass": [1146, 78, 78], "score": "0.9984", "loss": "0.0025", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:37.156652", "n_pass": [1147, 79, 79], "score": "0.9968", "loss": "0.0058", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:39.968247", "n_pass": [1155, 80, 80], "score": "0.9982", "loss": "0.0041", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:43.304228", "n_pass": [1164, 81, 81], "score": "0.9993", "loss": "0.0011", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:46.172387", "n_pass": [1168, 82, 82], "score": "0.9967", "loss": "0.0103", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:48.966853", "n_pass": [1175, 83, 83], "score": "0.9979", "loss": "0.0038", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-21 00:26:51.822539", "n_pass": [1181, 84, 84], "score": "0.9995", "loss": "0.0007", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:26:54.979482", "n_pass": [1187, 85, 85], "score": "0.9996", "loss": "0.0006", "code": " int hashCode() { result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:26:57.706888", "n_pass": [1190, 86, 86], "score": "0.9971", "loss": "0.0132", "code": " int hashCode() { result =null ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:00.438247", "n_pass": [1193, 87, 87], "score": "0.9981", "loss": "0.0067", "code": " int hashCode() { result =null ? hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:03.586209", "n_pass": [1200, 88, 88], "score": "0.9988", "loss": "0.0016", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:06.291870", "n_pass": [1204, 89, 89], "score": "0.9892", "loss": "0.0342", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password= null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:09.092490", "n_pass": [1205, 90, 90], "score": "0.9962", "loss": "0.0063", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (passwordnull ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:11.798375", "n_pass": [1206, 91, 91], "score": "0.9995", "loss": "0.0008", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:14.555924", "n_pass": [1208, 92, 92], "score": "0.9991", "loss": "0.0012", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:17.321256", "n_pass": [1219, 93, 93], "score": "0.9989", "loss": "0.0013", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:20.016020", "n_pass": [1224, 94, 94], "score": "0.999", "loss": "0.0012", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:22.721001", "n_pass": [1232, 95, 95], "score": "0.9582", "loss": "0.2128", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:27.199344", "n_pass": [1268, 96, 96], "score": "0.9987", "loss": "0.0018", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:31.337680", "n_pass": [1316, 97, 97], "score": "0.9916", "loss": "0.023", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:34.522365", "n_pass": [1333, 98, 98], "score": "0.9975", "loss": "0.003", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:38.889356", "n_pass": [1367, 99, 99], "score": "0.9972", "loss": "0.0035", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:41.592656", "n_pass": [1371, 100, 100], "score": "0.9975", "loss": "0.0034", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:44.322797", "n_pass": [1378, 101, 101], "score": "0.9982", "loss": "0.002", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:48.380170", "n_pass": [1412, 102, 102], "score": "0.9958", "loss": "0.0064", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:27:51.081874", "n_pass": [1413, 103, 103], "score": "0.9961", "loss": "0.0058", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0) (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:41.663228", "n_pass": [1828, 104, 104], "score": "0.999", "loss": "0.0012", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:44.380855", "n_pass": [1830, 105, 105], "score": "0.997", "loss": "0.0036", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:47.156495", "n_pass": [1832, 106, 106], "score": "0.9977", "loss": "0.003", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:49.882339", "n_pass": [1834, 107, 107], "score": "0.9821", "loss": "0.0253", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1: 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:52.588963", "n_pass": [1836, 108, 108], "score": "0.9889", "loss": "0.0194", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:55.309750", "n_pass": [1840, 109, 109], "score": "0.9956", "loss": "0.006", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:28:58.059569", "n_pass": [1842, 110, 110], "score": "0.986", "loss": "0.021", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:01.336195", "n_pass": [1844, 111, 111], "score": "0.9968", "loss": "0.0037", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result= (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:04.083674", "n_pass": [1845, 112, 112], "score": "0.9977", "loss": "0.0036", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:06.880044", "n_pass": [1848, 113, 113], "score": "0.9948", "loss": "0.0058", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:09.690288", "n_pass": [1850, 114, 114], "score": "0.9868", "loss": "0.0449", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:12.532177", "n_pass": [1852, 115, 115], "score": "0.9947", "loss": "0.0075", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1: 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:15.294873", "n_pass": [1854, 116, 116], "score": "0.9963", "loss": "0.006", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:18.135179", "n_pass": [1857, 117, 117], "score": "0.9975", "loss": "0.0031", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+ (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:20.911082", "n_pass": [1859, 118, 118], "score": "0.9977", "loss": "0.003", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:23.693032", "n_pass": [1862, 119, 119], "score": "0.9965", "loss": "0.0051", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:26.503407", "n_pass": [1864, 120, 120], "score": "0.996", "loss": "0.0063", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:29.289014", "n_pass": [1866, 121, 121], "score": "0.9972", "loss": "0.0034", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1: 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:32.016726", "n_pass": [1868, 122, 122], "score": "0.997", "loss": "0.0036", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:34.815128", "n_pass": [1872, 123, 123], "score": "0.9986", "loss": "0.0016", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)* (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:37.659318", "n_pass": [1873, 124, 124], "score": "0.9973", "loss": "0.0035", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:40.443911", "n_pass": [1876, 125, 125], "score": "0.9904", "loss": "0.0183", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:43.184049", "n_pass": [1877, 126, 126], "score": "0.9969", "loss": "0.0038", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:45.929677", "n_pass": [1879, 127, 127], "score": "0.9979", "loss": "0.0029", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:48.667835", "n_pass": [1881, 128, 128], "score": "0.9974", "loss": "0.0032", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables: 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:51.382293", "n_pass": [1883, 129, 129], "score": "0.9978", "loss": "0.0024", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:54.096189", "n_pass": [1887, 130, 130], "score": "0.989", "loss": "0.0259", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:29:57.303387", "n_pass": [1889, 131, 131], "score": "0.9837", "loss": "0.0304", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:00.036038", "n_pass": [1893, 132, 132], "score": "0.9855", "loss": "0.0186", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:02.863650", "n_pass": [1895, 133, 133], "score": "0.989", "loss": "0.0209", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:05.984868", "n_pass": [1898, 134, 134], "score": "0.9968", "loss": "0.0062", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1* (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:08.672485", "n_pass": [1900, 135, 135], "score": "0.9959", "loss": "0.0052", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:11.781020", "n_pass": [1905, 136, 136], "score": "0.9953", "loss": "0.0066", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:14.466724", "n_pass": [1907, 137, 137], "score": "0.9988", "loss": "0.0015", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result= (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:17.613737", "n_pass": [1909, 138, 138], "score": "0.9988", "loss": "0.0015", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:20.338298", "n_pass": [1912, 139, 139], "score": "0.9901", "loss": "0.021", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:23.108766", "n_pass": [1914, 140, 140], "score": "0.9978", "loss": "0.0033", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:25.818275", "n_pass": [1916, 141, 141], "score": "0.9948", "loss": "0.0073", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1: 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:28.530200", "n_pass": [1918, 142, 142], "score": "0.9948", "loss": "0.007", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:31.522274", "n_pass": [1922, 143, 143], "score": "0.9936", "loss": "0.0142", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:34.230602", "n_pass": [1925, 144, 144], "score": "0.988", "loss": "0.0231", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:36.967960", "n_pass": [1927, 145, 145], "score": "0.9974", "loss": "0.0033", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:39.714572", "n_pass": [1929, 146, 146], "score": "0.9979", "loss": "0.0026", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1: 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:42.474216", "n_pass": [1931, 147, 147], "score": "0.9978", "loss": "0.0025", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:45.297047", "n_pass": [1935, 148, 148], "score": "0.9943", "loss": "0.0063", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:48.081883", "n_pass": [1937, 149, 149], "score": "0.9954", "loss": "0.0065", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result= 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:50.822443", "n_pass": [1939, 150, 150], "score": "0.9924", "loss": "0.0125", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:53.658229", "n_pass": [1940, 151, 151], "score": "0.9959", "loss": "0.006", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:56.367634", "n_pass": [1942, 152, 152], "score": "0.9985", "loss": "0.0018", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:30:59.097433", "n_pass": [1945, 153, 153], "score": "0.9982", "loss": "0.0021", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize= null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:01.812765", "n_pass": [1946, 154, 154], "score": "0.9931", "loss": "0.0096", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSizenull ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:04.522201", "n_pass": [1947, 155, 155], "score": "0.9943", "loss": "0.0078", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:07.215834", "n_pass": [1949, 156, 156], "score": "0.9974", "loss": "0.0036", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:09.941760", "n_pass": [1955, 157, 157], "score": "0.9988", "loss": "0.0015", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:12.646141", "n_pass": [1956, 158, 158], "score": "0.9957", "loss": "0.0049", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); ; }"}
{"time": "2021-01-21 00:31:15.369810", "n_pass": [1963, 159, 159], "score": "0.9986", "loss": "0.0017", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:18.086300", "n_pass": [1965, 160, 160], "score": "0.996", "loss": "0.0059", "code": "int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:21.600926", "n_pass": [1971, 161, 161], "score": "0.9964", "loss": "0.0051", "code": "int hashCode(){ result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:24.393047", "n_pass": [1973, 162, 162], "score": "0.9992", "loss": "0.001", "code": "int hashCode(){result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:27.090115", "n_pass": [1975, 163, 163], "score": "0.9939", "loss": "0.009", "code": "int hashCode(){result=null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:30.245965", "n_pass": [1978, 164, 164], "score": "0.9979", "loss": "0.0028", "code": "int hashCode(){result=null? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:32.936060", "n_pass": [1980, 165, 165], "score": "0.9894", "loss": "0.0388", "code": "int hashCode(){result=null?hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:35.639724", "n_pass": [1984, 166, 166], "score": "0.9987", "loss": "0.0016", "code": "int hashCode(){result=null?hashCode(): 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:38.435404", "n_pass": [1986, 167, 167], "score": "0.9989", "loss": "0.0013", "code": "int hashCode(){result=null?hashCode():0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:41.140662", "n_pass": [1989, 168, 168], "score": "0.9915", "loss": "0.0153", "code": "int hashCode(){result=null?hashCode():0;result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:43.869035", "n_pass": [1991, 169, 169], "score": "0.9897", "loss": "0.0326", "code": "int hashCode(){result=null?hashCode():0;result=1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:47.068413", "n_pass": [1994, 170, 170], "score": "0.978", "loss": "0.0288", "code": "int hashCode(){result=null?hashCode():0;result=1* (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:49.770426", "n_pass": [1996, 171, 171], "score": "0.9985", "loss": "0.0019", "code": "int hashCode(){result=null?hashCode():0;result=1*(password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:52.481482", "n_pass": [2000, 172, 172], "score": "0.9945", "loss": "0.0091", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:55.244510", "n_pass": [2004, 173, 173], "score": "0.9686", "loss": "0.0431", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode(): 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:31:57.981447", "n_pass": [2006, 174, 174], "score": "0.9979", "loss": "0.0035", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:00.665036", "n_pass": [2009, 175, 175], "score": "0.9976", "loss": "0.0036", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+ (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:03.368576", "n_pass": [2011, 176, 176], "score": "0.9963", "loss": "0.0061", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:06.101939", "n_pass": [2014, 177, 177], "score": "0.9964", "loss": "0.0057", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:09.027390", "n_pass": [2016, 178, 178], "score": "0.999", "loss": "0.0013", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:11.750923", "n_pass": [2018, 179, 179], "score": "0.9987", "loss": "0.0016", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1 : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:14.454311", "n_pass": [2019, 180, 180], "score": "0.9976", "loss": "0.0029", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1: 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:17.179632", "n_pass": [2021, 181, 181], "score": "0.9981", "loss": "0.0026", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:19.891109", "n_pass": [2028, 182, 182], "score": "0.9953", "loss": "0.0067", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword? enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:22.604909", "n_pass": [2029, 183, 183], "score": "0.9964", "loss": "0.005", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:25.327613", "n_pass": [2031, 184, 184], "score": "0.998", "loss": "0.0028", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites: 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:28.050126", "n_pass": [2033, 185, 185], "score": "0.9986", "loss": "0.0021", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:30.751152", "n_pass": [2039, 186, 186], "score": "0.9948", "loss": "0.0118", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:33.485275", "n_pass": [2041, 187, 187], "score": "0.9987", "loss": "0.0015", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:36.279604", "n_pass": [2043, 188, 188], "score": "0.9965", "loss": "0.005", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1: 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:39.020486", "n_pass": [2045, 189, 189], "score": "0.9956", "loss": "0.0063", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:41.730114", "n_pass": [2049, 190, 190], "score": "0.9987", "loss": "0.0016", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:44.456016", "n_pass": [2051, 191, 191], "score": "0.9979", "loss": "0.0029", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:47.550387", "n_pass": [2054, 192, 192], "score": "0.9981", "loss": "0.0024", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:50.281184", "n_pass": [2056, 193, 193], "score": "0.9973", "loss": "0.0036", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1* (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:52.984174", "n_pass": [2057, 194, 194], "score": "0.9982", "loss": "0.0025", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:55.697710", "n_pass": [2060, 195, 195], "score": "0.9936", "loss": "0.0097", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:32:58.417376", "n_pass": [2061, 196, 196], "score": "0.9961", "loss": "0.0058", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:01.126452", "n_pass": [2063, 197, 197], "score": "0.9953", "loss": "0.0066", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:03.834526", "n_pass": [2065, 198, 198], "score": "0.9992", "loss": "0.001", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory: 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:06.526799", "n_pass": [2067, 199, 199], "score": "0.9958", "loss": "0.0057", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:09.236547", "n_pass": [2071, 200, 200], "score": "0.9976", "loss": "0.0034", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:11.963616", "n_pass": [2073, 201, 201], "score": "0.9977", "loss": "0.003", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:15.087263", "n_pass": [2076, 202, 202], "score": "0.999", "loss": "0.0013", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1* (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:17.803685", "n_pass": [2078, 203, 203], "score": "0.9976", "loss": "0.0031", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:20.529582", "n_pass": [2081, 204, 204], "score": "0.9976", "loss": "0.003", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:23.241319", "n_pass": [2083, 205, 205], "score": "0.9961", "loss": "0.0056", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:25.970970", "n_pass": [2085, 206, 206], "score": "0.997", "loss": "0.0037", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket: 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:28.712755", "n_pass": [2087, 207, 207], "score": "0.9948", "loss": "0.0056", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:31.488121", "n_pass": [2091, 208, 208], "score": "0.9956", "loss": "0.0065", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:34.211196", "n_pass": [2093, 209, 209], "score": "0.9973", "loss": "0.0033", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:37.455129", "n_pass": [2096, 210, 210], "score": "0.9898", "loss": "0.0192", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1* (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:40.168659", "n_pass": [2098, 211, 211], "score": "0.9985", "loss": "0.0019", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:42.917171", "n_pass": [2101, 212, 212], "score": "0.9895", "loss": "0.0174", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:47.869335", "n_pass": [2177, 213, 213], "score": "0.9866", "loss": "0.0897", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:33:56.255999", "n_pass": [2343, 214, 214], "score": "0.9775", "loss": "0.034", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1 : 0); }"}
{"time": "2021-01-21 00:34:08.311124", "n_pass": [2535, 215, 215], "score": "0.9987", "loss": "0.0015", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1: 0); }"}
{"time": "2021-01-21 00:34:11.041625", "n_pass": [2536, 216, 216], "score": "0.9989", "loss": "0.0013", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1:0); }"}
{"time": "2021-01-21 00:34:13.778510", "n_pass": [2540, 217, 217], "score": "0.9864", "loss": "0.0222", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1:0);}"}
{"time": "2021-01-21 00:34:21.818278", "n_pass": [2695, 218, 218], "score": "0.9944", "loss": "0.0077", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode : 0);(autocommit ? 1:0);}"}
{"time": "2021-01-21 00:34:24.541597", "n_pass": [2700, 219, 219], "score": "0.9957", "loss": "0.0067", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode: 0);(autocommit ? 1:0);}"}
{"time": "2021-01-21 00:34:27.240490", "n_pass": [2702, 220, 220], "score": "0.9831", "loss": "0.037", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit ? 1:0);}"}
{"time": "2021-01-21 00:34:30.013610", "n_pass": [2708, 221, 221], "score": "0.9981", "loss": "0.0026", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit? 1:0);}"}
{"time": "2021-01-21 00:34:32.817125", "n_pass": [2710, 222, 222], "score": "0.9958", "loss": "0.0065", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);}"}

Minimal simplified code:
int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);}

