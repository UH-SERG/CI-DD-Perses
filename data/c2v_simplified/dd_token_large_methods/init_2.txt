
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/util/RequestFilter_init.java
method_name = init
method_body = public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString("serverUrl", null); chsDomain = serverConfigurationService.getString("content.chs.serverName", null); chsUrl = serverConfigurationService.getString("content.chs.serverUrl", null); useContentHostingDomain = serverConfigurationService.getBoolean("content.separateDomains", false); contentPaths = serverConfigurationService.getStrings("content.chs.urlprefixes"); if (contentPaths == null) { contentPaths = new String[] { "/access/", "/web/" }; } loginPaths = serverConfigurationService.getStrings("content.login.urlprefixes"); if (loginPaths == null) { loginPaths = new String[] { "/access/login", "/sakai-login-tool", "/access/require", "/access/accept" }; } contentExceptions = serverConfigurationService.getStrings("content.chsexception.urlprefixes"); if (contentExceptions == null) { contentExceptions = new String[] { "/access/calendar/", "/access/citation/export_ris_sel/", "/access/citation/export_ris_all/" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if ("container".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if ("sakai".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if ("context".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if ("tool".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn("invalid " + CONFIG_SESSION + " setting (" + s + "): not one of container, sakai, context, tool"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = "basic".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn("overridding " + CONFIG_MAX_PER_FILE + " setting: must be 'true' with " + CONFIG_CONTINUE + " ='true'"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty("sakai.cluster.terracotta"); TERRACOTTA_CLUSTER = "true".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!"none".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn("Unable to compile " + SAKAI_SESSION_PARAM_ALLOW + "=" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, "lax"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }
predict, score, loss = init, 0.9690180420875549, 0.05312582850456238

Trace of simplified code(s):
{"time": "2021-01-20 20:11:59.449640", "n_pass": [1, 1, 1], "score": "0.9702", "loss": "0.0715", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:03.071102", "n_pass": [105, 2, 2], "score": "0.9985", "loss": "0.0023", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContextm_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:06.063494", "n_pass": [108, 3, 3], "score": "0.998", "loss": "0.0039", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContextm_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:09.406380", "n_pass": [136, 4, 4], "score": "0.9996", "loss": "0.0008", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:12.754893", "n_pass": [229, 5, 5], "score": "0.9989", "loss": "0.0017", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:15.798526", "n_pass": [230, 6, 6], "score": "0.9919", "loss": "0.0131", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:18.877034", "n_pass": [243, 7, 7], "score": "0.9992", "loss": "0.0018", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:21.951989", "n_pass": [254, 8, 8], "score": "0.9887", "loss": "0.0382", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:24.883662", "n_pass": [256, 9, 9], "score": "0.9617", "loss": "0.0585", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:27.889947", "n_pass": [271, 10, 10], "score": "0.9309", "loss": "0.115", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:31.498824", "n_pass": [436, 11, 11], "score": "0.9934", "loss": "0.0134", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:34.760555", "n_pass": [456, 12, 12], "score": "0.9997", "loss": "0.0005", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean* 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:37.682427", "n_pass": [457, 13, 13], "score": "0.999", "loss": "0.0015", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:40.596545", "n_pass": [458, 14, 14], "score": "0.9533", "loss": "0.1177", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:43.709419", "n_pass": [477, 15, 15], "score": "0.9997", "loss": "0.0008", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:46.682017", "n_pass": [482, 16, 16], "score": "0.9367", "loss": "0.1556", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:49.718134", "n_pass": [493, 17, 17], "score": "0.9876", "loss": "0.0139", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:52.631611", "n_pass": [494, 18, 18], "score": "0.7253", "loss": "0.4224", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:55.593628", "n_pass": [499, 19, 19], "score": "0.9909", "loss": "0.0133", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:12:58.536552", "n_pass": [502, 20, 20], "score": "0.9988", "loss": "0.0019", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:02.207418", "n_pass": [527, 21, 21], "score": "0.9254", "loss": "0.0846", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:05.121355", "n_pass": [529, 22, 22], "score": "0.9915", "loss": "0.013", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:12.480915", "n_pass": [818, 24, 23], "score": "0.9999", "loss": "0.0002", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:15.412612", "n_pass": [821, 25, 24], "score": "0.9983", "loss": "0.0026", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:18.351364", "n_pass": [824, 26, 25], "score": "0.9997", "loss": "0.0006", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:21.277486", "n_pass": [826, 27, 26], "score": "0.9917", "loss": "0.0171", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \") container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:24.223802", "n_pass": [827, 28, 27], "score": "0.9994", "loss": "0.0013", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:27.202372", "n_pass": [833, 29, 28], "score": "0.9891", "loss": "0.0212", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:30.168554", "n_pass": [840, 30, 29], "score": "0.9991", "loss": "0.0014", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:33.155103", "n_pass": [847, 31, 30], "score": "0.9871", "loss": "0.0192", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:36.071031", "n_pass": [849, 32, 31], "score": "0.9987", "loss": "0.0025", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:39.586595", "n_pass": [865, 33, 32], "score": "0.9909", "loss": "0.0111", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:43.010942", "n_pass": [872, 34, 33], "score": "0.9985", "loss": "0.0031", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:45.953385", "n_pass": [874, 35, 34], "score": "0.9996", "loss": "0.001", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue24L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:48.888746", "n_pass": [875, 36, 35], "score": "0.9995", "loss": "0.001", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:51.814450", "n_pass": [878, 37, 36], "score": "0.9949", "loss": "0.0096", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:54.756471", "n_pass": [884, 38, 37], "score": "0.9819", "loss": "0.0248", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:13:57.745276", "n_pass": [892, 39, 38], "score": "0.999", "loss": "0.0021", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:00.692156", "n_pass": [896, 40, 39], "score": "0.9807", "loss": "0.0268", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:03.617553", "n_pass": [898, 41, 40], "score": "0.9995", "loss": "0.0009", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:06.617195", "n_pass": [907, 42, 41], "score": "0.9993", "loss": "0.0016", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:09.551019", "n_pass": [909, 43, 42], "score": "0.9997", "loss": "0.0006", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:12.539663", "n_pass": [914, 44, 43], "score": "0.999", "loss": "0.002", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:15.556162", "n_pass": [926, 45, 44], "score": "0.9983", "loss": "0.0031", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:18.470584", "n_pass": [928, 46, 45], "score": "0.999", "loss": "0.0029", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:21.374013", "n_pass": [932, 47, 46], "score": "0.8824", "loss": "0.145", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:24.553037", "n_pass": [942, 48, 47], "score": "0.9994", "loss": "0.001", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:27.532059", "n_pass": [957, 49, 48], "score": "0.9977", "loss": "0.0032", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:30.450298", "n_pass": [965, 50, 49], "score": "0.998", "loss": "0.0044", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:33.389024", "n_pass": [974, 51, 50], "score": "0.968", "loss": "0.0618", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:36.304091", "n_pass": [976, 52, 51], "score": "0.9941", "loss": "0.0093", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:39.235636", "n_pass": [977, 53, 52], "score": "0.9996", "loss": "0.0008", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:42.131223", "n_pass": [980, 54, 53], "score": "0.9978", "loss": "0.0038", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:45.083257", "n_pass": [987, 55, 54], "score": "0.881", "loss": "0.2199", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:48.017964", "n_pass": [992, 56, 55], "score": "0.9976", "loss": "0.0053", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:51.243970", "n_pass": [1039, 57, 56], "score": "0.9978", "loss": "0.0075", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:54.152241", "n_pass": [1044, 58, 57], "score": "0.9481", "loss": "0.0608", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:14:58.508732", "n_pass": [1492, 59, 58], "score": "0.9268", "loss": "0.1011", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:01.456283", "n_pass": [1497, 60, 59], "score": "0.9756", "loss": "0.0351", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:04.419696", "n_pass": [1505, 61, 60], "score": "0.9292", "loss": "0.1013", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:07.338524", "n_pass": [1507, 62, 61], "score": "0.994", "loss": "0.0162", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:10.254917", "n_pass": [1511, 63, 62], "score": "0.9906", "loss": "0.0173", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:13.163840", "n_pass": [1514, 64, 63], "score": "0.9736", "loss": "0.0418", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:16.083703", "n_pass": [1516, 65, 64], "score": "0.9507", "loss": "0.0783", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:18.993165", "n_pass": [1520, 66, 65], "score": "0.9998", "loss": "0.0005", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:21.949057", "n_pass": [1527, 67, 66], "score": "0.999", "loss": "0.0023", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:24.854142", "n_pass": [1530, 68, 67], "score": "0.998", "loss": "0.0059", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:27.848383", "n_pass": [1543, 69, 68], "score": "0.9593", "loss": "0.077", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:30.815065", "n_pass": [1549, 70, 69], "score": "0.9785", "loss": "0.0376", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:33.757398", "n_pass": [1554, 71, 70], "score": "0.9901", "loss": "0.0246", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:36.728109", "n_pass": [1565, 72, 71], "score": "0.9555", "loss": "0.1001", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:39.606140", "n_pass": [1566, 73, 72], "score": "0.9727", "loss": "0.0476", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:42.603862", "n_pass": [1575, 74, 73], "score": "0.9927", "loss": "0.0096", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:45.511276", "n_pass": [1576, 75, 74], "score": "0.9963", "loss": "0.0075", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:48.418298", "n_pass": [1581, 76, 75], "score": "0.9934", "loss": "0.0075", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:51.393871", "n_pass": [1592, 77, 76], "score": "0.9993", "loss": "0.001", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:54.325865", "n_pass": [1598, 78, 77], "score": "0.9957", "loss": "0.0073", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:15:57.238624", "n_pass": [1602, 79, 78], "score": "0.9932", "loss": "0.0104", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:16:00.117944", "n_pass": [1604, 80, 79], "score": "0.9996", "loss": "0.0008", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 20:16:03.006689", "n_pass": [1607, 81, 80], "score": "0.9827", "loss": "0.0303", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_RANDOM, true); }"}
{"time": "2021-01-20 20:16:05.870495", "n_pass": [1608, 82, 81], "score": "0.9988", "loss": "0.0024", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:09.229487", "n_pass": [1612, 83, 82], "score": "0.991", "loss": "0.0148", "code": "public void init() throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:12.112019", "n_pass": [1616, 84, 83], "score": "0.9979", "loss": "0.0066", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:14.979207", "n_pass": [1617, 85, 84], "score": "0.9983", "loss": "0.0029", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:17.858955", "n_pass": [1622, 86, 85], "score": "0.971", "loss": "0.1155", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:20.755192", "n_pass": [1625, 87, 86], "score": "0.9996", "loss": "0.0011", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:23.631933", "n_pass": [1629, 88, 87], "score": "0.9946", "loss": "0.0063", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:26.508694", "n_pass": [1632, 89, 88], "score": "0.9908", "loss": "0.0288", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:29.415621", "n_pass": [1636, 90, 89], "score": "0.9981", "loss": "0.0085", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:32.293873", "n_pass": [1640, 91, 90], "score": "0.9949", "loss": "0.006", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:35.440130", "n_pass": [1643, 92, 91], "score": "0.9985", "loss": "0.0054", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:38.355967", "n_pass": [1654, 93, 92], "score": "0.9495", "loss": "0.2319", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:41.257844", "n_pass": [1658, 94, 93], "score": "0.9575", "loss": "0.0454", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:44.119009", "n_pass": [1661, 95, 94], "score": "0.9936", "loss": "0.0131", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:47.023883", "n_pass": [1672, 96, 95], "score": "0.991", "loss": "0.0241", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:49.905736", "n_pass": [1673, 97, 96], "score": "0.992", "loss": "0.0182", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:52.786691", "n_pass": [1678, 98, 97], "score": "0.9997", "loss": "0.0011", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:55.716908", "n_pass": [1690, 99, 98], "score": "0.9995", "loss": "0.0016", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:16:58.619299", "n_pass": [1693, 100, 99], "score": "0.9996", "loss": "0.0012", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:01.535501", "n_pass": [1704, 101, 100], "score": "0.9981", "loss": "0.0044", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:04.416566", "n_pass": [1709, 102, 101], "score": "0.9932", "loss": "0.0081", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:07.278083", "n_pass": [1711, 103, 102], "score": "0.9972", "loss": "0.0069", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:10.122470", "n_pass": [1712, 104, 103], "score": "0.9844", "loss": "0.0361", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) { SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:12.965990", "n_pass": [1713, 105, 104], "score": "0.9965", "loss": "0.0112", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:15.841090", "n_pass": [1719, 106, 105], "score": "0.9907", "loss": "0.0102", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:18.693460", "n_pass": [1722, 107, 106], "score": "0.9918", "loss": "0.0321", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:21.540297", "n_pass": [1725, 108, 107], "score": "0.9992", "loss": "0.0026", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:24.398281", "n_pass": [1730, 109, 108], "score": "0.9718", "loss": "0.0839", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:27.252187", "n_pass": [1735, 110, 109], "score": "0.9844", "loss": "0.0532", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:30.143011", "n_pass": [1742, 111, 110], "score": "0.9851", "loss": "0.0175", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:32.994294", "n_pass": [1746, 112, 111], "score": "0.9957", "loss": "0.016", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:35.868987", "n_pass": [1752, 113, 112], "score": "0.9978", "loss": "0.006", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:39.242249", "n_pass": [1763, 114, 113], "score": "0.9986", "loss": "0.0033", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:42.085845", "n_pass": [1765, 115, 114], "score": "0.9984", "loss": "0.0045", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:44.951947", "n_pass": [1769, 116, 115], "score": "0.9949", "loss": "0.0155", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:47.817175", "n_pass": [1774, 117, 116], "score": "0.9997", "loss": "0.0008", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:50.664628", "n_pass": [1777, 118, 117], "score": "0.9815", "loss": "0.0245", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:53.547140", "n_pass": [1779, 119, 118], "score": "0.9966", "loss": "0.0085", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:56.415249", "n_pass": [1783, 120, 119], "score": "0.9933", "loss": "0.0113", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:17:59.663210", "n_pass": [1839, 121, 120], "score": "0.999", "loss": "0.0027", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:02.795978", "n_pass": [1876, 122, 121], "score": "0.9968", "loss": "0.0064", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:07.060600", "n_pass": [2005, 123, 122], "score": "0.9971", "loss": "0.0068", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:26.418877", "n_pass": [2711, 124, 123], "score": "0.9993", "loss": "0.0035", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:29.268966", "n_pass": [2712, 125, 124], "score": "0.9938", "loss": "0.0101", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:32.608671", "n_pass": [2718, 126, 125], "score": "0.9947", "loss": "0.0129", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:35.472131", "n_pass": [2720, 127, 126], "score": "0.9852", "loss": "0.0164", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:38.340566", "n_pass": [2722, 128, 127], "score": "0.9993", "loss": "0.0018", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:41.210736", "n_pass": [2724, 129, 128], "score": "0.9807", "loss": "0.0448", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:44.100088", "n_pass": [2730, 130, 129], "score": "0.9968", "loss": "0.01", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:47.013007", "n_pass": [2737, 131, 130], "score": "0.9981", "loss": "0.0051", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:49.914785", "n_pass": [2742, 132, 131], "score": "0.9936", "loss": "0.0137", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:52.809400", "n_pass": [2749, 133, 132], "score": "0.9967", "loss": "0.0063", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:55.669474", "n_pass": [2751, 134, 133], "score": "0.9909", "loss": "0.0249", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:18:58.540225", "n_pass": [2754, 135, 134], "score": "0.9927", "loss": "0.0121", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:01.453598", "n_pass": [2759, 136, 135], "score": "0.996", "loss": "0.0148", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:04.340563", "n_pass": [2765, 137, 136], "score": "0.9959", "loss": "0.0082", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:07.195406", "n_pass": [2766, 138, 137], "score": "0.9978", "loss": "0.0063", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:10.088032", "n_pass": [2773, 139, 138], "score": "0.999", "loss": "0.0031", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:12.950366", "n_pass": [2776, 140, 139], "score": "0.9994", "loss": "0.0024", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:15.801970", "n_pass": [2778, 141, 140], "score": "0.9995", "loss": "0.0009", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:18.707493", "n_pass": [2784, 142, 141], "score": "0.997", "loss": "0.004", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:22.418594", "n_pass": [2791, 143, 142], "score": "0.9914", "loss": "0.0228", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:25.270701", "n_pass": [2793, 144, 143], "score": "0.9973", "loss": "0.0093", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:28.126208", "n_pass": [2795, 145, 144], "score": "0.8484", "loss": "0.5157", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:30.973690", "n_pass": [2796, 146, 145], "score": "0.9982", "loss": "0.0027", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:33.896660", "n_pass": [2805, 147, 146], "score": "0.985", "loss": "0.0341", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:36.747421", "n_pass": [2807, 148, 147], "score": "0.9891", "loss": "0.0126", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:39.692086", "n_pass": [2818, 149, 148], "score": "0.9889", "loss": "0.0346", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:42.558946", "n_pass": [2821, 150, 149], "score": "0.9874", "loss": "0.0221", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:45.438038", "n_pass": [2823, 151, 150], "score": "0.989", "loss": "0.0219", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:48.292324", "n_pass": [2825, 152, 151], "score": "0.9836", "loss": "0.0661", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:51.197874", "n_pass": [2833, 153, 152], "score": "0.9962", "loss": "0.0167", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:54.039511", "n_pass": [2836, 154, 153], "score": "0.9982", "loss": "0.0059", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:56.921345", "n_pass": [2841, 155, 154], "score": "0.9992", "loss": "0.0022", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:19:59.793876", "n_pass": [2843, 156, 155], "score": "0.9358", "loss": "0.1845", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:02.653502", "n_pass": [2844, 157, 156], "score": "0.9956", "loss": "0.0108", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:05.513250", "n_pass": [2848, 158, 157], "score": "0.9902", "loss": "0.0296", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:08.381724", "n_pass": [2853, 159, 158], "score": "0.9939", "loss": "0.0203", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:11.227665", "n_pass": [2855, 160, 159], "score": "0.9907", "loss": "0.0236", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:14.081518", "n_pass": [2856, 161, 160], "score": "0.9931", "loss": "0.0108", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:17.427909", "n_pass": [2863, 162, 161], "score": "0.9926", "loss": "0.0127", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:20.280226", "n_pass": [2864, 163, 162], "score": "0.9904", "loss": "0.0188", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:23.163470", "n_pass": [2869, 164, 163], "score": "0.9795", "loss": "0.0295", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:25.992997", "n_pass": [2871, 165, 164], "score": "0.9968", "loss": "0.0085", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:28.855119", "n_pass": [2872, 166, 165], "score": "0.998", "loss": "0.0066", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:32.184008", "n_pass": [2879, 167, 166], "score": "0.9985", "loss": "0.0035", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:35.035714", "n_pass": [2880, 168, 167], "score": "0.9946", "loss": "0.0142", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:37.884289", "n_pass": [2883, 169, 168], "score": "0.9956", "loss": "0.0095", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:40.730028", "n_pass": [2885, 170, 169], "score": "0.9927", "loss": "0.03", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:43.642762", "n_pass": [2897, 171, 170], "score": "0.9937", "loss": "0.0251", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:46.559628", "n_pass": [2907, 172, 171], "score": "0.9948", "loss": "0.0064", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:49.453172", "n_pass": [2914, 173, 172], "score": "0.8952", "loss": "0.2413", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:52.303214", "n_pass": [2917, 174, 173], "score": "0.9904", "loss": "0.0205", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} }  m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:55.136173", "n_pass": [2918, 175, 174], "score": "0.9885", "loss": "0.0157", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:20:57.999299", "n_pass": [2920, 176, 175], "score": "0.9971", "loss": "0.0049", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 20:21:00.875537", "n_pass": [2925, 177, 176], "score": "0.9871", "loss": "0.0197", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:03.706667", "n_pass": [2928, 178, 177], "score": "0.9953", "loss": "0.0138", "code": " void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:06.540660", "n_pass": [2929, 179, 178], "score": "0.9766", "loss": "0.0519", "code": "void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:10.269930", "n_pass": [2935, 180, 179], "score": "0.9948", "loss": "0.0179", "code": "void init()throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:13.114154", "n_pass": [2939, 181, 180], "score": "0.9984", "loss": "0.0048", "code": "void init()throws ServletException{ appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:15.946527", "n_pass": [2941, 182, 181], "score": "0.9952", "loss": "0.0161", "code": "void init()throws ServletException{appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:18.796678", "n_pass": [2945, 183, 182], "score": "0.9708", "loss": "0.0499", "code": "void init()throws ServletException{appUrl(\"\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:21.618654", "n_pass": [2948, 184, 183], "score": "0.9921", "loss": "0.0118", "code": "void init()throws ServletException{appUrl(\"\",null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:24.483237", "n_pass": [2952, 185, 184], "score": "0.9597", "loss": "0.1474", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:27.332878", "n_pass": [2954, 186, 185], "score": "0.9132", "loss": "0.2302", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain.getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:30.176238", "n_pass": [2955, 187, 186], "score": "0.9861", "loss": "0.0202", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomaingetString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:33.011636", "n_pass": [2956, 188, 187], "score": "0.9525", "loss": "0.0821", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:35.860830", "n_pass": [2959, 189, 188], "score": "0.9771", "loss": "0.029", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\".\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:38.700780", "n_pass": [2960, 190, 189], "score": "0.988", "loss": "0.0255", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:41.548664", "n_pass": [2963, 191, 190], "score": "0.8797", "loss": "0.1305", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:44.387168", "n_pass": [2967, 192, 191], "score": "0.9943", "loss": "0.0144", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:47.211572", "n_pass": [2969, 193, 192], "score": "0.9712", "loss": "0.095", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl.getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:50.040005", "n_pass": [2970, 194, 193], "score": "0.9955", "loss": "0.0125", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrlgetString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:52.870273", "n_pass": [2971, 195, 194], "score": "0.9674", "loss": "0.0387", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:55.694264", "n_pass": [2974, 196, 195], "score": "0.995", "loss": "0.0213", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\".\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:21:58.553908", "n_pass": [2975, 197, 196], "score": "0.9972", "loss": "0.0114", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:01.380164", "n_pass": [2978, 198, 197], "score": "0.9906", "loss": "0.0141", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:04.213432", "n_pass": [2982, 199, 198], "score": "0.9994", "loss": "0.0023", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:07.032577", "n_pass": [2984, 200, 199], "score": "0.9906", "loss": "0.0211", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain.getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:09.868544", "n_pass": [2985, 201, 200], "score": "0.8825", "loss": "0.1343", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomaingetBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:12.689208", "n_pass": [2986, 202, 201], "score": "0.9558", "loss": "0.0841", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:15.534594", "n_pass": [2988, 203, 202], "score": "0.9978", "loss": "0.0038", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain(); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:18.395728", "n_pass": [2991, 204, 203], "score": "0.9916", "loss": "0.0094", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:21.227931", "n_pass": [2993, 205, 204], "score": "0.9868", "loss": "0.0427", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths.getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:24.049033", "n_pass": [2994, 206, 205], "score": "0.9967", "loss": "0.0053", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPathsgetStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:26.864591", "n_pass": [2995, 207, 206], "score": "0.9989", "loss": "0.0028", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:29.681671", "n_pass": [2998, 208, 207], "score": "0.9977", "loss": "0.0079", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\".\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:32.503592", "n_pass": [2999, 209, 208], "score": "0.9986", "loss": "0.0036", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:35.320975", "n_pass": [3003, 210, 209], "score": "0.9707", "loss": "0.1333", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:38.143198", "n_pass": [3005, 211, 210], "score": "0.9614", "loss": "0.0467", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:40.959922", "n_pass": [3008, 212, 211], "score": "0.9986", "loss": "0.0045", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:43.812379", "n_pass": [3019, 213, 212], "score": "0.9993", "loss": "0.0019", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:46.664273", "n_pass": [3024, 214, 213], "score": "0.9988", "loss": "0.0037", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:49.483539", "n_pass": [3026, 215, 214], "score": "0.9955", "loss": "0.0055", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:52.308030", "n_pass": [3031, 216, 215], "score": "0.9513", "loss": "0.0642", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPaths= null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:55.122269", "n_pass": [3032, 217, 216], "score": "0.9995", "loss": "0.0015", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:22:57.966006", "n_pass": [3043, 218, 217], "score": "0.9984", "loss": "0.0083", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:00.805572", "n_pass": [3048, 219, 218], "score": "0.9972", "loss": "0.0086", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions (); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:03.621166", "n_pass": [3049, 220, 219], "score": "0.9987", "loss": "0.0054", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:06.447218", "n_pass": [3053, 221, 220], "score": "0.9923", "loss": "0.0156", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptions= null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:09.270756", "n_pass": [3054, 222, 221], "score": "0.9875", "loss": "0.0167", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:12.119987", "n_pass": [3064, 223, 222], "score": "0.9986", "loss": "0.0036", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:14.932396", "n_pass": [3067, 224, 223], "score": "0.997", "loss": "0.0079", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:17.795922", "n_pass": [3073, 225, 224], "score": "0.9929", "loss": "0.0167", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:20.598869", "n_pass": [3075, 226, 225], "score": "0.997", "loss": "0.004", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:23.466044", "n_pass": [3082, 227, 226], "score": "0.9888", "loss": "0.0684", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:26.301733", "n_pass": [3086, 228, 227], "score": "0.7317", "loss": "0.4722", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:29.147038", "n_pass": [3090, 229, 228], "score": "0.9834", "loss": "0.0268", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:31.958019", "n_pass": [3092, 230, 229], "score": "0.9965", "loss": "0.0061", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:34.812811", "n_pass": [3101, 231, 230], "score": "0.9899", "loss": "0.0135", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:37.677884", "n_pass": [3109, 232, 231], "score": "0.9993", "loss": "0.0012", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:40.513193", "n_pass": [3111, 233, 232], "score": "0.9991", "loss": "0.0015", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:43.326308", "n_pass": [3113, 234, 233], "score": "0.9991", "loss": "0.0033", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:46.141929", "n_pass": [3114, 235, 234], "score": "0.9992", "loss": "0.0018", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:49.017100", "n_pass": [3122, 236, 235], "score": "0.9999", "loss": "0.0002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:52.309742", "n_pass": [3129, 237, 236], "score": "0.9998", "loss": "0.0007", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:55.123310", "n_pass": [3131, 238, 237], "score": "0.9799", "loss": "0.0641", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:23:57.937122", "n_pass": [3133, 239, 238], "score": "0.9991", "loss": "0.0037", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:00.756767", "n_pass": [3134, 240, 239], "score": "0.9916", "loss": "0.0102", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:03.596376", "n_pass": [3140, 241, 240], "score": "0.9961", "loss": "0.0067", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:06.921859", "n_pass": [3150, 242, 241], "score": "0.9989", "loss": "0.002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:09.762570", "n_pass": [3157, 243, 242], "score": "0.9916", "loss": "0.011", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:12.597595", "n_pass": [3159, 244, 243], "score": "0.9921", "loss": "0.0462", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:15.397149", "n_pass": [3160, 245, 244], "score": "0.9979", "loss": "0.0055", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:18.686592", "n_pass": [3166, 246, 245], "score": "0.9765", "loss": "0.0566", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:21.515508", "n_pass": [3168, 247, 246], "score": "0.9897", "loss": "0.0197", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:24.831964", "n_pass": [3182, 248, 247], "score": "0.9846", "loss": "0.0584", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:27.792635", "n_pass": [3208, 249, 248], "score": "0.9976", "loss": "0.0059", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:30.706542", "n_pass": [3226, 250, 249], "score": "0.994", "loss": "0.0093", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:34.286983", "n_pass": [3279, 251, 250], "score": "0.9963", "loss": "0.0106", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:38.339860", "n_pass": [3333, 252, 251], "score": "0.844", "loss": "0.5234", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:43.062322", "n_pass": [3377, 253, 252], "score": "0.9934", "loss": "0.0076", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:45.947223", "n_pass": [3399, 254, 253], "score": "0.9964", "loss": "0.0041", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:48.821768", "n_pass": [3418, 255, 254], "score": "0.9931", "loss": "0.0157", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:51.646943", "n_pass": [3419, 256, 255], "score": "0.9989", "loss": "0.002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:54.533400", "n_pass": [3444, 257, 256], "score": "0.9737", "loss": "0.0371", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { ; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:24:57.346717", "n_pass": [3445, 258, 257], "score": "0.9956", "loss": "0.0073", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:18.244815", "n_pass": [4350, 259, 258], "score": "0.9993", "loss": "0.002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:21.062556", "n_pass": [4354, 260, 259], "score": "0.9925", "loss": "0.0161", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){ } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:23.871092", "n_pass": [4356, 261, 260], "score": "0.9685", "loss": "0.0366", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){} { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:26.687604", "n_pass": [4358, 262, 261], "score": "0.9906", "loss": "0.0107", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{ warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:29.501668", "n_pass": [4360, 263, 262], "score": "0.969", "loss": "0.052", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:32.335917", "n_pass": [4361, 264, 263], "score": "0.9997", "loss": "0.0007", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:35.162928", "n_pass": [4363, 265, 264], "score": "0.9989", "loss": "0.0018", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:37.970992", "n_pass": [4365, 266, 265], "score": "0.987", "loss": "0.0144", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:40.785671", "n_pass": [4369, 267, 266], "score": "0.9964", "loss": "0.0051", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");} } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:43.598296", "n_pass": [4371, 268, 267], "score": "0.999", "loss": "0.0025", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}} if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:46.409032", "n_pass": [4373, 269, 268], "score": "0.9834", "loss": "0.0297", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:49.219709", "n_pass": [4375, 270, 269], "score": "0.9961", "loss": "0.0086", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if(getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:52.058864", "n_pass": [4377, 271, 270], "score": "0.989", "loss": "0.0157", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:54.881988", "n_pass": [4381, 272, 271], "score": "0.9564", "loss": "0.0678", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)!= null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:26:57.729848", "n_pass": [4382, 273, 272], "score": "0.9919", "loss": "0.014", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)= null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:00.545593", "n_pass": [4383, 274, 273], "score": "0.9917", "loss": "0.0135", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER) null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:03.358517", "n_pass": [4384, 275, 274], "score": "0.9968", "loss": "0.0075", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:06.201626", "n_pass": [4385, 276, 275], "score": "0.994", "loss": "0.0098", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:09.014297", "n_pass": [4387, 277, 276], "score": "0.5979", "loss": "0.6198", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:11.824889", "n_pass": [4389, 278, 277], "score": "0.9877", "loss": "0.0246", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:14.637416", "n_pass": [4391, 279, 278], "score": "0.9102", "loss": "0.1316", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:17.469375", "n_pass": [4397, 280, 279], "score": "0.9959", "loss": "0.0086", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));} if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:20.298671", "n_pass": [4399, 281, 280], "score": "0.9994", "loss": "0.002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:23.107315", "n_pass": [4401, 282, 281], "score": "0.9942", "loss": "0.0091", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if(getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:25.920919", "n_pass": [4403, 283, 282], "score": "0.9957", "loss": "0.006", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:28.746339", "n_pass": [4407, 284, 283], "score": "0.9942", "loss": "0.0127", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)!= null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:31.556493", "n_pass": [4408, 285, 284], "score": "0.9789", "loss": "0.0284", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)= null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:34.368166", "n_pass": [4409, 286, 285], "score": "0.9076", "loss": "0.1151", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH) null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:37.176977", "n_pass": [4410, 287, 286], "score": "0.9792", "loss": "0.0396", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:39.986125", "n_pass": [4411, 288, 287], "score": "0.7857", "loss": "0.2951", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:42.801213", "n_pass": [4413, 289, 288], "score": "0.9934", "loss": "0.0123", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:45.641313", "n_pass": [4416, 290, 289], "score": "0.9991", "loss": "0.0025", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:48.485681", "n_pass": [4421, 291, 290], "score": "0.9938", "loss": "0.0191", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:51.312685", "n_pass": [4427, 292, 291], "score": "0.9859", "loss": "0.0227", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));} if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:54.140787", "n_pass": [4429, 293, 292], "score": "0.9946", "loss": "0.0108", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:56.951716", "n_pass": [4431, 294, 293], "score": "0.9725", "loss": "0.032", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if(getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:27:59.763031", "n_pass": [4433, 295, 294], "score": "0.9945", "loss": "0.0112", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:02.583439", "n_pass": [4437, 296, 295], "score": "0.9822", "loss": "0.0353", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)!= null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:05.382764", "n_pass": [4438, 297, 296], "score": "0.9974", "loss": "0.0066", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)= null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:08.203634", "n_pass": [4439, 298, 297], "score": "0.9641", "loss": "0.0552", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT) null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:11.004711", "n_pass": [4440, 299, 298], "score": "0.9905", "loss": "0.0154", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:13.800420", "n_pass": [4441, 300, 299], "score": "0.993", "loss": "0.0112", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:16.616381", "n_pass": [4443, 301, 300], "score": "0.9582", "loss": "0.0711", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:19.415834", "n_pass": [4445, 302, 301], "score": "0.9912", "loss": "0.0188", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:22.693268", "n_pass": [4452, 303, 302], "score": "0.9835", "loss": "0.023", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter(); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:25.534790", "n_pass": [4455, 304, 303], "score": "0.9918", "loss": "0.0199", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();} if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:28.369248", "n_pass": [4457, 305, 304], "score": "0.9973", "loss": "0.0199", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:31.179779", "n_pass": [4459, 306, 305], "score": "0.9745", "loss": "0.0558", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if(getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:33.989001", "n_pass": [4461, 307, 306], "score": "0.4041", "loss": "0.994", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:36.819665", "n_pass": [4465, 308, 307], "score": "0.9111", "loss": "0.1391", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)!= null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:39.621671", "n_pass": [4466, 309, 308], "score": "0.949", "loss": "0.0702", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)= null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:42.438413", "n_pass": [4467, 310, 309], "score": "0.9988", "loss": "0.0032", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED) null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:45.253433", "n_pass": [4468, 311, 310], "score": "0.9949", "loss": "0.0093", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:48.052277", "n_pass": [4469, 312, 311], "score": "0.9084", "loss": "0.1416", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:50.859748", "n_pass": [4471, 313, 312], "score": "0.9866", "loss": "0.0254", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:53.667494", "n_pass": [4474, 314, 313], "score": "0.9132", "loss": "0.1105", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:56.493092", "n_pass": [4480, 315, 314], "score": "0.9276", "loss": "0.1299", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));} if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:28:59.298229", "n_pass": [4482, 316, 315], "score": "0.8465", "loss": "0.2477", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:02.099900", "n_pass": [4484, 317, 316], "score": "0.9963", "loss": "0.0083", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if(filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:04.897473", "n_pass": [4486, 318, 317], "score": "0.9609", "loss": "0.0715", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:07.730802", "n_pass": [4490, 319, 318], "score": "0.7589", "loss": "0.3518", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)!= null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:10.525084", "n_pass": [4491, 320, 319], "score": "0.9733", "loss": "0.0479", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)= null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:13.321812", "n_pass": [4492, 321, 320], "score": "0.9267", "loss": "0.1315", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG) null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:16.119795", "n_pass": [4493, 322, 321], "score": "0.9809", "loss": "0.0498", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:18.912928", "n_pass": [4494, 323, 322], "score": "0.9965", "loss": "0.0211", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:21.739506", "n_pass": [4496, 324, 323], "score": "0.993", "loss": "0.0105", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:24.540168", "n_pass": [4498, 325, 324], "score": "0.9789", "loss": "0.0785", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:27.334600", "n_pass": [4499, 326, 325], "score": "0.9073", "loss": "0.1237", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){ } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:30.128223", "n_pass": [4500, 327, 326], "score": "0.9979", "loss": "0.0154", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){} if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:32.945150", "n_pass": [4502, 328, 327], "score": "0.9683", "loss": "0.0473", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:35.773916", "n_pass": [4504, 329, 328], "score": "0.9958", "loss": "0.0127", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if(System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:38.590999", "n_pass": [4506, 330, 329], "score": "0.9878", "loss": "0.0379", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:41.410448", "n_pass": [4510, 331, 330], "score": "0.9562", "loss": "0.0806", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)!= null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:44.234464", "n_pass": [4511, 332, 331], "score": "0.978", "loss": "0.1923", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)= null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:47.061613", "n_pass": [4512, 333, 332], "score": "0.9873", "loss": "0.0341", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM) null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:49.857361", "n_pass": [4513, 334, 333], "score": "0.9464", "loss": "0.0781", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:52.648202", "n_pass": [4514, 335, 334], "score": "0.9866", "loss": "0.0408", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:55.444508", "n_pass": [4516, 336, 335], "score": "0.9948", "loss": "0.0143", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:29:58.237364", "n_pass": [4518, 337, 336], "score": "0.9968", "loss": "0.0058", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:01.545805", "n_pass": [4525, 338, 337], "score": "0.9891", "loss": "0.02", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;} if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:04.345437", "n_pass": [4527, 339, 338], "score": "0.8397", "loss": "0.2138", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:07.142540", "n_pass": [4529, 340, 339], "score": "0.9963", "loss": "0.0053", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:09.955967", "n_pass": [4532, 341, 340], "score": "0.8466", "loss": "0.222", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty!= null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:12.752088", "n_pass": [4533, 342, 341], "score": "0.9836", "loss": "0.0365", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty= null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:15.549732", "n_pass": [4535, 343, 342], "score": "0.9929", "loss": "0.0103", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:18.375204", "n_pass": [4538, 344, 343], "score": "0.9387", "loss": "0.1028", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){ getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:21.176051", "n_pass": [4540, 345, 344], "score": "0.793", "loss": "0.3109", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:23.970468", "n_pass": [4541, 346, 345], "score": "0.9644", "loss": "0.0408", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:26.789434", "n_pass": [4546, 347, 346], "score": "0.9928", "loss": "0.0121", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);} if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:29.588993", "n_pass": [4548, 348, 347], "score": "0.9749", "loss": "0.0559", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:32.411699", "n_pass": [4550, 349, 348], "score": "0.9549", "loss": "0.152", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:35.216211", "n_pass": [4552, 350, 349], "score": "0.9586", "loss": "0.0754", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:38.032326", "n_pass": [4555, 351, 350], "score": "0.6558", "loss": "0.5482", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:40.848817", "n_pass": [4561, 352, 351], "score": "0.9712", "loss": "0.0468", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);} if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:43.649226", "n_pass": [4563, 353, 352], "score": "0.9959", "loss": "0.0237", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:46.443208", "n_pass": [4565, 354, 353], "score": "0.6172", "loss": "0.5713", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if(getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:49.239463", "n_pass": [4567, 355, 354], "score": "0.8167", "loss": "0.3816", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:52.039378", "n_pass": [4571, 356, 355], "score": "0.5498", "loss": "0.709", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)!= null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:54.863865", "n_pass": [4572, 357, 356], "score": "0.954", "loss": "0.0765", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)= null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:30:57.658209", "n_pass": [4573, 358, 357], "score": "0.917", "loss": "0.241", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD) null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:00.449314", "n_pass": [4574, 359, 358], "score": "0.9373", "loss": "0.3462", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:03.255921", "n_pass": [4575, 360, 359], "score": "0.997", "loss": "0.0083", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:06.063727", "n_pass": [4577, 361, 360], "score": "0.9643", "loss": "0.0937", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:08.864400", "n_pass": [4580, 362, 361], "score": "0.9736", "loss": "0.0502", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:11.680957", "n_pass": [4586, 363, 362], "score": "0.9313", "loss": "0.1942", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));} if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:14.476070", "n_pass": [4588, 364, 363], "score": "0.9647", "loss": "0.0672", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:17.296954", "n_pass": [4590, 365, 364], "score": "0.983", "loss": "0.0402", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:20.097926", "n_pass": [4594, 366, 365], "score": "0.8663", "loss": "0.2104", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){ valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:22.887098", "n_pass": [4596, 367, 366], "score": "0.7228", "loss": "0.4262", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:25.687808", "n_pass": [4597, 368, 367], "score": "0.9869", "loss": "0.0262", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:28.480133", "n_pass": [4599, 369, 368], "score": "0.8481", "loss": "0.4929", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:31.803476", "n_pass": [4609, 370, 369], "score": "0.9978", "loss": "0.022", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();} if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:34.589681", "n_pass": [4611, 371, 370], "score": "0.8617", "loss": "0.2343", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:37.383393", "n_pass": [4613, 372, 371], "score": "0.6117", "loss": "0.9494", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:40.201692", "n_pass": [4615, 373, 372], "score": "0.8902", "loss": "0.7958", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:42.994819", "n_pass": [4618, 374, 373], "score": "0.9744", "loss": "0.0464", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:48.563143", "n_pass": [4622, 376, 374], "score": "0.9527", "loss": "0.078", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile= valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:51.347592", "n_pass": [4624, 377, 375], "score": "0.4785", "loss": "0.827", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:54.127084", "n_pass": [4625, 378, 376], "score": "0.9873", "loss": "0.0227", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:31:59.672309", "n_pass": [4629, 380, 377], "score": "0.9937", "loss": "0.0148", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:02.514734", "n_pass": [4637, 381, 378], "score": "0.5001", "loss": "0.9805", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();} if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:05.321204", "n_pass": [4639, 382, 379], "score": "0.9768", "loss": "0.0554", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:08.109567", "n_pass": [4641, 383, 380], "score": "0.9607", "loss": "0.0751", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:10.923744", "n_pass": [4645, 384, 381], "score": "0.8849", "loss": "0.2348", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:13.711681", "n_pass": [4648, 385, 382], "score": "0.9314", "loss": "0.3162", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile= true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:16.535372", "n_pass": [4650, 386, 383], "score": "0.9224", "loss": "0.1136", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:19.332689", "n_pass": [4653, 387, 384], "score": "0.4399", "loss": "1.0292", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:22.132470", "n_pass": [4657, 388, 385], "score": "0.951", "loss": "0.1205", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:24.960061", "n_pass": [4665, 389, 386], "score": "0.9036", "loss": "0.3808", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:27.776881", "n_pass": [4667, 390, 387], "score": "0.9845", "loss": "0.0443", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if(getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:30.578298", "n_pass": [4669, 391, 388], "score": "0.6872", "loss": "0.5861", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:33.403998", "n_pass": [4673, 392, 389], "score": "0.6365", "loss": "0.5506", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)!= null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:36.183376", "n_pass": [4674, 393, 390], "score": "0.7793", "loss": "0.3032", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)= null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:41.752278", "n_pass": [4676, 395, 391], "score": "0.7511", "loss": "0.3817", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:44.570340", "n_pass": [4679, 396, 392], "score": "0.9937", "loss": "0.0252", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:47.396314", "n_pass": [4685, 397, 393], "score": "0.9861", "loss": "0.049", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);} if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:50.181157", "n_pass": [4687, 398, 394], "score": "0.8002", "loss": "0.3846", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:52.962154", "n_pass": [4689, 399, 395], "score": "0.8477", "loss": "0.3305", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if(getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:55.774671", "n_pass": [4691, 400, 396], "score": "0.9941", "loss": "0.0355", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:32:58.573737", "n_pass": [4695, 401, 397], "score": "0.9227", "loss": "0.2621", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)!= null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:01.361227", "n_pass": [4696, 402, 398], "score": "0.9901", "loss": "0.044", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)= null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:04.158622", "n_pass": [4697, 403, 399], "score": "0.8237", "loss": "0.7502", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN) null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:06.959702", "n_pass": [4698, 404, 400], "score": "0.9716", "loss": "0.0719", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:09.737123", "n_pass": [4699, 405, 401], "score": "0.6989", "loss": "0.4845", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:12.519187", "n_pass": [4701, 406, 402], "score": "0.954", "loss": "0.1327", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:15.321312", "n_pass": [4707, 407, 403], "score": "0.9391", "loss": "0.1405", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:18.155640", "n_pass": [4713, 408, 404], "score": "0.7464", "loss": "0.859", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:20.944083", "n_pass": [4715, 409, 405], "score": "0.6007", "loss": "0.6786", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:23.736069", "n_pass": [4717, 410, 406], "score": "0.9628", "loss": "0.0784", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:26.539878", "n_pass": [4719, 411, 407], "score": "0.8987", "loss": "0.293", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:29.342738", "n_pass": [4724, 412, 408], "score": "0.7915", "loss": "0.3781", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:32.151950", "n_pass": [4727, 413, 409], "score": "0.7782", "loss": "0.3519", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){ try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:34.932508", "n_pass": [4729, 414, 410], "score": "0.8291", "loss": "1.0742", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:37.732794", "n_pass": [4731, 415, 411], "score": "0.7504", "loss": "0.4765", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:40.542520", "n_pass": [4737, 416, 412], "score": "0.6062", "loss": "1.1825", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);} catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:43.320397", "n_pass": [4739, 417, 413], "score": "0.9977", "loss": "0.0107", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:46.105269", "n_pass": [4741, 418, 414], "score": "0.9914", "loss": "0.0203", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:48.921684", "n_pass": [4747, 419, 415], "score": "0.7078", "loss": "0.6847", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:51.713959", "n_pass": [4750, 420, 416], "score": "0.5563", "loss": "1.7017", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){( + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:54.487320", "n_pass": [4751, 421, 417], "score": "0.6846", "loss": "0.5482", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(+ \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:33:57.256813", "n_pass": [4752, 422, 418], "score": "0.9908", "loss": "0.0949", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){( \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:00.038601", "n_pass": [4753, 423, 419], "score": "0.8065", "loss": "0.5466", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:02.813568", "n_pass": [4755, 424, 420], "score": "0.9966", "loss": "0.0163", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:05.606636", "n_pass": [4757, 425, 421], "score": "0.7208", "loss": "0.5927", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+ allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:08.412086", "n_pass": [4759, 426, 422], "score": "0.9951", "loss": "0.0176", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:11.221068", "n_pass": [4764, 427, 423], "score": "0.9747", "loss": "0.0804", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}} (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:14.006712", "n_pass": [4766, 428, 424], "score": "0.8268", "loss": "0.2956", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 20:34:16.792584", "n_pass": [4768, 429, 425], "score": "0.9702", "loss": "0.0778", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null); getBoolean(); }"}
{"time": "2021-01-20 20:34:19.586725", "n_pass": [4772, 430, 426], "score": "0.4425", "loss": "0.9853", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean(); }"}
{"time": "2021-01-20 20:34:22.380367", "n_pass": [4777, 431, 427], "score": "0.6393", "loss": "0.6471", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:26.176132", "n_pass": [4824, 432, 428], "score": "0.8201", "loss": "0.5204", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths= null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:28.947296", "n_pass": [4826, 433, 429], "score": "0.9673", "loss": "0.0725", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:31.737411", "n_pass": [4829, 434, 430], "score": "0.9946", "loss": "0.0632", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){ contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:34.509004", "n_pass": [4831, 435, 431], "score": "0.5375", "loss": "0.7965", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:37.276492", "n_pass": [4833, 436, 432], "score": "0.9757", "loss": "0.1407", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:42.853084", "n_pass": [4841, 438, 433], "score": "0.5517", "loss": "0.8395", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:45.651813", "n_pass": [4843, 439, 434], "score": "0.9482", "loss": "0.1745", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{ }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:48.432060", "n_pass": [4844, 440, 435], "score": "0.9932", "loss": "0.0935", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{}; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:51.213520", "n_pass": [4847, 441, 436], "score": "0.3191", "loss": "1.7305", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};} (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:53.997207", "n_pass": [4849, 442, 437], "score": "0.3239", "loss": "1.411", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:56.786454", "n_pass": [4855, 443, 438], "score": "0.9932", "loss": "0.2156", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:34:59.575548", "n_pass": [4857, 444, 439], "score": "0.796", "loss": "0.6233", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:02.370399", "n_pass": [4859, 445, 440], "score": "0.9515", "loss": "0.2248", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:05.153692", "n_pass": [4862, 446, 441], "score": "0.3041", "loss": "1.494", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){ loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:07.939744", "n_pass": [4864, 447, 442], "score": "0.9791", "loss": "0.1478", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:10.720784", "n_pass": [4866, 448, 443], "score": "0.9954", "loss": "0.043", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths= new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:13.494959", "n_pass": [4868, 449, 444], "score": "0.6812", "loss": "1.6934", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:16.276584", "n_pass": [4874, 450, 445], "score": "0.6657", "loss": "0.7649", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{ \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:19.056058", "n_pass": [4876, 451, 446], "score": "0.8262", "loss": "0.9244", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:21.853444", "n_pass": [4878, 452, 447], "score": "0.4779", "loss": "2.5289", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:24.633428", "n_pass": [4880, 453, 448], "score": "0.4937", "loss": "0.8213", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"}; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:27.423621", "n_pass": [4883, 454, 449], "score": "0.9895", "loss": "0.0432", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};} if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:30.198603", "n_pass": [4885, 455, 450], "score": "0.27", "loss": "2.9966", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:32.996007", "n_pass": [4887, 456, 451], "score": "0.9316", "loss": "0.227", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:35.773198", "n_pass": [4889, 457, 452], "score": "0.7352", "loss": "0.6687", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:41.301820", "n_pass": [4894, 459, 453], "score": "0.9629", "loss": "0.1042", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:44.101320", "n_pass": [4896, 460, 454], "score": "0.8175", "loss": "0.2788", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions= new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:46.900341", "n_pass": [4898, 461, 455], "score": "0.5798", "loss": "0.692", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:49.687469", "n_pass": [4904, 462, 456], "score": "0.9846", "loss": "0.0328", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{ \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:52.459926", "n_pass": [4906, 463, 457], "score": "0.7683", "loss": "1.268", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:55.256122", "n_pass": [4910, 464, 458], "score": "0.9412", "loss": "0.232", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:35:58.030027", "n_pass": [4913, 465, 459], "score": "0.3369", "loss": "3.2571", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"}; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:00.814602", "n_pass": [4916, 466, 460], "score": "0.9041", "loss": "0.3456", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:03.611010", "n_pass": [4919, 467, 461], "score": "0.993", "loss": "0.0196", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:09.163719", "n_pass": [4923, 469, 462], "score": "0.936", "loss": "0.2132", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig() != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:11.935541", "n_pass": [4925, 470, 463], "score": "0.9983", "loss": "0.0045", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!= null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:15.151468", "n_pass": [4928, 471, 464], "score": "0.9986", "loss": "0.0028", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:17.926249", "n_pass": [4931, 472, 465], "score": "0.9994", "loss": "0.002", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){ if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:20.722219", "n_pass": [4933, 473, 466], "score": "0.8319", "loss": "0.2788", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:23.508133", "n_pass": [4935, 474, 467], "score": "0.4951", "loss": "1.9426", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:26.290420", "n_pass": [4942, 475, 468], "score": "0.3446", "loss": "1.3787", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){} if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:29.068461", "n_pass": [4945, 476, 469], "score": "0.9956", "loss": "0.0236", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if (\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:31.868487", "n_pass": [4947, 477, 470], "score": "0.7581", "loss": "0.7897", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase(s)) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:37.467030", "n_pass": [4955, 479, 471], "score": "0.9843", "loss": "0.0672", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()) { } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:40.258585", "n_pass": [4958, 480, 472], "score": "0.4768", "loss": "0.974", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){ } if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:43.034150", "n_pass": [4960, 481, 473], "score": "0.949", "loss": "0.1003", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if ((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:48.582823", "n_pass": [4964, 483, 474], "score": "0.5365", "loss": "0.889", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty=null){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:52.674546", "n_pass": [5067, 484, 475], "score": "0.3382", "loss": "1.5342", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getPropertynull){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:55.445698", "n_pass": [5068, 485, 476], "score": "0.9973", "loss": "0.0135", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){ uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:36:58.505544", "n_pass": [5121, 486, 477], "score": "0.6369", "loss": "0.6434", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile=(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:01.283580", "n_pass": [5123, 487, 478], "score": "0.9194", "loss": "0.1835", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile=true;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:04.152545", "n_pass": [5141, 488, 479], "score": "0.9822", "loss": "0.0616", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFiletrue;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:06.923989", "n_pass": [5142, 489, 480], "score": "0.6586", "loss": "1.3951", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)=null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:09.777865", "n_pass": [5159, 490, 481], "score": "0.9047", "loss": "0.2087", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)null){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:12.550305", "n_pass": [5160, 491, 482], "score": "0.8528", "loss": "0.2583", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:16.696882", "n_pass": [5271, 492, 483], "score": "0.9863", "loss": "0.0399", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:19.471878", "n_pass": [5272, 493, 484], "score": "0.9086", "loss": "0.1912", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths= new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:22.276284", "n_pass": [5277, 494, 485], "score": "0.9864", "loss": "0.0343", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) {contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:25.152180", "n_pass": [5314, 495, 486], "score": "0.8512", "loss": "0.2581", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:28.482706", "n_pass": [5354, 496, 487], "score": "0.421", "loss": "3.0411", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){} if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:31.280843", "n_pass": [5363, 497, 488], "score": "0.2452", "loss": "1.6567", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){uploadMaxPerFile(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:35.639408", "n_pass": [5519, 498, 489], "score": "0.6012", "loss": "0.6845", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){uploadMaxPerFile;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:38.513466", "n_pass": [5536, 499, 490], "score": "0.2956", "loss": "1.6979", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){;}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 20:37:41.286992", "n_pass": [5537, 500, 491], "score": "0.9127", "loss": "0.1488", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig()!=null){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){}(\"\");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}

Minimal simplified code:
void init()throws ServletException{appUrl("",null);chsDomain("",null);chsUrl("",null);useContentHostingDomain();("");if(contentPaths){contentPaths=new String[]{};}("");if(null){loginPaths=new String[]{""};}if(null){contentExceptions=new String[]{"",""};}if(filterConfig()!=null){if("".equalsIgnoreCase){}if("".equalsIgnoreCase()){}if((s)){}{("");}}if((USER)){((USER));}if((AUTH)){"".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){}("");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if("".equals()){try{(allowBypassSession);}catch(Exception e){(""+allowBypassSession);}}(null);getBoolean();}

