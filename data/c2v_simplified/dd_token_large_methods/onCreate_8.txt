
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysdk/src/main/java/org/renpy/android/PythonActivity_onCreate.java
method_name = onCreate
method_body = @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals("0")) { debugLog = false; } } String root = getIntent().getStringExtra(EXTRA_CONTENT_URL4); if (root != null) { File n = new File(root); if (n.exists()) { externalStorage = n; } else { externalStorage = new File(Environment.getExternalStorageDirectory(), root); } } else { externalStorage = new File(Environment.getExternalStorageDirectory(), "qpython"); } Log.d(TAG, "externalStorage:" + externalStorage); mScript = null; String act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals("execute")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, "main.py"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains("#qpy:fullscreen")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } if (p.fullscreen) { fullscreen = true; } } } else { String fn = getIntent().getStringExtra(EXTRA_CONTENT_URL2); if (fn == null) { isMain = true; fn = "/sdcard/qpython/launcher.py"; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, "main.py"); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains("#qpy:fullscreen")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, ".launch")); f.write("started"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, ".run.log"); if (logFile.exists()) { logFile.delete(); } String s = ""; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, "main.py"); if (f.exists()) { s = "main.py"; } else { f = new File(mPath, "main.pyo"); if (f.exists()) { s = "main.pyo"; } } } Log.d(TAG, "[RUN param:" + externalStorage.getAbsolutePath().toString() + "-" + mPath.getAbsolutePath().toString() + "-" + s + "]"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(".PythonActivity"); registerReceiver(mReceiver, filter); startPyScreen(); }
predict, score, loss = onCreate, 0.9996325969696045, 0.0003692421887535602

Trace of simplified code(s):
{"time": "2021-01-21 06:40:58.540567", "n_pass": [1, 1, 1], "score": "0.9892", "loss": "0.0117", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = getIntent().getStringExtra(EXTRA_CONTENT_URL4); if (root != null) { File n = new File(root); if (n.exists()) { externalStorage = n; } else { externalStorage = new File(Environment.getExternalStorageDirectory(), root); } } else { externalStorage = new File(Environment.getExternalStorageDirectory(), \"qpython\"); } Log.d(TAG, \"externalStorage:\" + externalStorage); mScript = null; String act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } if (p.fullscreen) { fullscreen = true; } } } else { String fn = getIntent().getStringExtra(EXTRA_CONTENT_URL2); if (fn == null) { isMain = true; fn = \"/sdcard/qpython/launcher.py\"; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, \"main.py\"); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (logFile.exists()) { logFile.delete(); } String s = \"\"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString() + \"-\" + mPath.getAbsolutePath().toString() + \"-\" + s + \"]\"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:01.545864", "n_pass": [21, 2, 2], "score": "0.9951", "loss": "0.0074", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } if (p.fullscreen) { fullscreen = true; } } } else { String fn = getIntent().getStringExtra(EXTRA_CONTENT_URL2); if (fn == null) { isMain = true; fn = \"/sdcard/qpython/launcher.py\"; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, \"main.py\"); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (logFile.exists()) { logFile.delete(); } String s = \"\"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString() + \"-\" + mPath.getAbsolutePath().toString() + \"-\" + s + \"]\"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:04.475335", "n_pass": [45, 3, 3], "score": "0.9383", "loss": "0.0888", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } \"/sdcard/qpython/launcher.py\"; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, \"main.py\"); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (logFile.exists()) { logFile.delete(); } String s = \"\"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString() + \"-\" + mPath.getAbsolutePath().toString() + \"-\" + s + \"]\"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:07.308521", "n_pass": [46, 4, 4], "score": "1.0", "loss": "0.0", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (logFile.exists()) { logFile.delete(); } String s = \"\"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString() + \"-\" + mPath.getAbsolutePath().toString() + \"-\" + s + \"]\"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:10.249603", "n_pass": [89, 5, 5], "score": "0.9957", "loss": "0.0045", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString() + \"-\" + mPath.getAbsolutePath().toString() + \"-\" + s + \"]\"); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:13.072027", "n_pass": [93, 6, 6], "score": "0.9718", "loss": "0.0592", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:15.896626", "n_pass": [97, 7, 7], "score": "0.9997", "loss": "0.0003", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:18.907027", "n_pass": [176, 8, 8], "score": "0.9601", "loss": "0.0426", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:21.775414", "n_pass": [187, 9, 9], "score": "0.9999", "loss": "0.0001", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { s = \"main.py\"; } else { f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:24.622913", "n_pass": [192, 10, 10], "score": "0.9877", "loss": "0.0124", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) {f = new File(mPath, \"main.pyo\"); if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:27.427851", "n_pass": [193, 11, 11], "score": "0.9892", "loss": "0.0112", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:30.261074", "n_pass": [198, 12, 12], "score": "0.9999", "loss": "0.0001", "code": "@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:33.072065", "n_pass": [202, 13, 13], "score": "0.9083", "loss": "0.113", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:36.467099", "n_pass": [319, 14, 14], "score": "0.9928", "loss": "0.0073", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:39.274299", "n_pass": [320, 15, 15], "score": "0.9416", "loss": "0.0606", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:42.064576", "n_pass": [325, 16, 16], "score": "0.9173", "loss": "0.0998", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:44.885365", "n_pass": [331, 17, 17], "score": "0.9592", "loss": "0.0433", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:47.723620", "n_pass": [347, 18, 18], "score": "0.9906", "loss": "0.0144", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:50.549326", "n_pass": [348, 19, 19], "score": "0.9558", "loss": "0.0836", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\")); f.write(\"started\"); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:53.360725", "n_pass": [353, 20, 20], "score": "0.9523", "loss": "0.0718", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:56.148677", "n_pass": [357, 21, 21], "score": "0.9395", "loss": "0.0749", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG, \"[RUN param:\" + externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:41:58.983951", "n_pass": [372, 22, 22], "score": "0.8864", "loss": "0.2497", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); registerReceiver(mReceiver, filter); startPyScreen(); }"}
{"time": "2021-01-21 06:42:01.778694", "n_pass": [378, 23, 23], "score": "0.9607", "loss": "0.0478", "code": "@Override protected void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:05.231353", "n_pass": [567, 24, 24], "score": "0.9826", "loss": "0.0197", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:08.017886", "n_pass": [575, 25, 25], "score": "0.9839", "loss": "0.0178", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlag != null) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:10.787933", "n_pass": [578, 26, 26], "score": "0.8395", "loss": "0.5319", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { debugLog = false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:13.581293", "n_pass": [584, 27, 27], "score": "0.9751", "loss": "0.0448", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String root = (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:16.341407", "n_pass": [587, 28, 28], "score": "0.9585", "loss": "0.0489", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_CONTENT_URL1); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:19.095959", "n_pass": [589, 29, 29], "score": "0.8734", "loss": "0.1864", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act != null && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:21.859028", "n_pass": [592, 30, 30], "score": "0.9086", "loss": "0.1263", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { mPath = new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:24.617970", "n_pass": [597, 31, 31], "score": "0.6769", "loss": "1.18", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(getIntent(2)); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:27.380351", "n_pass": [599, 32, 32], "score": "0.9807", "loss": "0.0299", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f.exists()) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:30.168195", "n_pass": [607, 33, 33], "score": "0.9422", "loss": "0.1122", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"#qpy:fullscreen\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:32.950509", "n_pass": [611, 34, 34], "score": "0.9783", "loss": "0.0508", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:35.741554", "n_pass": [621, 35, 35], "score": "0.9517", "loss": "0.0568", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:38.579867", "n_pass": [626, 36, 36], "score": "0.9616", "loss": "0.0434", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:41.330560", "n_pass": [630, 37, 37], "score": "0.9292", "loss": "0.0988", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) { fullscreen = true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:44.100976", "n_pass": [637, 38, 38], "score": "0.9211", "loss": "0.1615", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { getWindow(_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:46.869141", "n_pass": [641, 39, 39], "score": "0.9613", "loss": "0.0986", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toStringFEATURE_NO_TITLE); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:49.676606", "n_pass": [654, 40, 40], "score": "0.9091", "loss": "0.2158", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String full = getIntent(). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:52.443814", "n_pass": [656, 41, 41], "score": "0.9821", "loss": "0.022", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (). File(mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:55.176405", "n_pass": [657, 42, 42], "score": "0.5827", "loss": "0.6164", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) { s = mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:42:57.952489", "n_pass": [662, 43, 43], "score": "0.925", "loss": "0.0928", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {mScript.getName(); } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:00.713661", "n_pass": [663, 44, 44], "score": "0.9179", "loss": "0.0978", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG,+ externalStorage.getAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:03.515192", "n_pass": [679, 45, 45], "score": "0.9202", "loss": "0.1249", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAGgetAbsolutePath().toString); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:06.266667", "n_pass": [680, 46, 46], "score": "0.9724", "loss": "0.0382", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG); mView = new SDLSurfaceView(this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:09.021510", "n_pass": [682, 47, 47], "score": "0.7854", "loss": "0.3014", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d(TAG); mView (this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:14.746640", "n_pass": [983, 48, 48], "score": "0.9", "loss": "0.1144", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d; mView (this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:17.491858", "n_pass": [984, 49, 49], "score": "0.9618", "loss": "0.064", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this, mPath.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:20.229251", "n_pass": [986, 50, 50], "score": "0.921", "loss": "0.1008", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath()); IntentFilter filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:22.979136", "n_pass": [989, 51, 51], "score": "0.9756", "loss": "0.0308", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());filter = new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:25.707315", "n_pass": [990, 52, 52], "score": "0.9385", "loss": "0.1152", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath()); new IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:28.448540", "n_pass": [991, 53, 53], "score": "0.9065", "loss": "0.1092", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); startPyScreen(); }"}
{"time": "2021-01-21 06:43:31.184356", "n_pass": [995, 54, 54], "score": "0.7959", "loss": "0.2388", "code": " void onCreate(Bundle savedInstanceState) { superResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:34.342691", "n_pass": [1003, 55, 55], "score": "0.9423", "loss": "0.0712", "code": " void onCreate(Bundle savedInstanceState) { (this); String debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:37.076915", "n_pass": [1006, 56, 56], "score": "0.9385", "loss": "0.117", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent().getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:39.817493", "n_pass": [1010, 57, 57], "score": "0.9582", "loss": "0.0839", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent.getStringExtra(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:42.575345", "n_pass": [1011, 58, 58], "score": "0.9372", "loss": "0.0754", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (debugFlag.equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:45.322940", "n_pass": [1021, 59, 59], "score": "0.671", "loss": "0.7991", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) { false; } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:48.062443", "n_pass": [1027, 60, 60], "score": "0.8948", "loss": "0.144", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } String (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:50.804741", "n_pass": [1030, 61, 61], "score": "0.9481", "loss": "0.0618", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act  && act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:53.550873", "n_pass": [1037, 62, 62], "score": "0.9194", "loss": "0.16", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & act.equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:56.277291", "n_pass": [1039, 63, 63], "score": "0.8966", "loss": "0.1249", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { new File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:43:59.019052", "n_pass": [1045, 64, 64], "score": "0.893", "loss": "0.2642", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); File f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:01.806617", "n_pass": [1048, 65, 65], "score": "0.9493", "loss": "0.0984", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = new File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:04.552541", "n_pass": [1051, 66, 66], "score": "0.7099", "loss": "1.0141", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main.py\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:07.295044", "n_pass": [1056, 67, 67], "score": "0.6932", "loss": "0.5179", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper.getFileContents(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:10.055076", "n_pass": [1065, 68, 68], "score": "0.7398", "loss": "0.4559", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:12.804939", "n_pass": [1075, 69, 69], "score": "0.8853", "loss": "0.1847", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project.scanDirectory(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:15.534208", "n_pass": [1079, 70, 70], "score": "0.9583", "loss": "0.0652", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p.landscape) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:18.295149", "n_pass": [1089, 71, 71], "score": "0.9621", "loss": "0.0606", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(ORIENTATION_LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:21.047560", "n_pass": [1093, 72, 72], "score": "0.7794", "loss": "0.2837", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (FileHelper.getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:23.801044", "n_pass": [1103, 73, 73], "score": "0.9468", "loss": "0.0599", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(mScript.toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:26.549540", "n_pass": [1105, 74, 74], "score": "0.9564", "loss": "0.0566", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"#qpy:fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:29.280056", "n_pass": [1110, 75, 75], "score": "0.866", "loss": "0.1632", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\":fullscreen\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:32.019976", "n_pass": [1111, 76, 76], "score": "0.9249", "loss": "0.0972", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { ; } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:34.774041", "n_pass": [1122, 77, 77], "score": "0.9759", "loss": "0.0371", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { FileWriter f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:37.506526", "n_pass": [1126, 78, 78], "score": "0.9315", "loss": "0.1594", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = new FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:40.230307", "n_pass": [1129, 79, 79], "score": "0.9606", "loss": "0.0753", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(new File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:42.942110", "n_pass": [1131, 80, 80], "score": "0.9762", "loss": "0.0322", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File(mPath, \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:45.659796", "n_pass": [1133, 81, 81], "score": "0.9625", "loss": "0.0653", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \".launch\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:48.371788", "n_pass": [1135, 82, 82], "score": "0.7714", "loss": "0.3711", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));  f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:51.102143", "n_pass": [1138, 83, 83], "score": "0.8756", "loss": "0.2096", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));f.close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:53.810654", "n_pass": [1139, 84, 84], "score": "0.8805", "loss": "0.173", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".run.log\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:56.577319", "n_pass": [1154, 85, 85], "score": "0.9883", "loss": "0.0144", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else { File f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:44:59.308694", "n_pass": [1161, 86, 86], "score": "0.9836", "loss": "0.0214", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {f = new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:02.024570", "n_pass": [1162, 87, 87], "score": "0.9831", "loss": "0.0203", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else { new File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:04.731777", "n_pass": [1163, 88, 88], "score": "0.9876", "loss": "0.0235", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"main.py\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:07.469402", "n_pass": [1166, 89, 89], "score": "0.9789", "loss": "0.0319", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"main.pyo\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:10.241828", "n_pass": [1178, 90, 90], "score": "0.3771", "loss": "1.2021", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } } Log.d (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:12.987286", "n_pass": [1182, 91, 91], "score": "0.9296", "loss": "0.1003", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag = getIntent(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:16.150332", "n_pass": [1200, 92, 92], "score": "0.9631", "loss": "0.045", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag =(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p = Project(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:19.012585", "n_pass": [1256, 93, 93], "score": "0.9425", "loss": "0.0914", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag =(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p =(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:22.422316", "n_pass": [1355, 94, 94], "score": "0.9727", "loss": "0.0339", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p =(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:25.271359", "n_pass": [1410, 95, 95], "score": "0.7595", "loss": "0.4003", "code": " void onCreate(Bundle savedInstanceState) { (this); debugFlag(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:28.829355", "n_pass": [1508, 96, 96], "score": "0.4996", "loss": "1.0038", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } } p(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:45:31.648720", "n_pass": [1562, 97, 97], "score": "0.9584", "loss": "0.0869", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath); if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:10.776961", "n_pass": [2017, 98, 98], "score": "0.6555", "loss": "0.5174", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if (p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:13.490321", "n_pass": [2018, 99, 99], "score": "0.9127", "loss": "0.2451", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p ) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:16.226699", "n_pass": [2021, 100, 100], "score": "0.582", "loss": "0.6592", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p) { if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:18.945296", "n_pass": [2023, 101, 101], "score": "0.9172", "loss": "0.0956", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){ if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:21.663496", "n_pass": [2025, 102, 102], "score": "0.8452", "loss": "0.2253", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if (p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:24.380613", "n_pass": [2027, 103, 103], "score": "0.7791", "loss": "0.2604", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p) { setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:27.134199", "n_pass": [2031, 104, 104], "score": "0.7957", "loss": "0.3623", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){ setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:29.858560", "n_pass": [2033, 105, 105], "score": "0.3033", "loss": "1.7959", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){setRequestedOrientation(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:32.572742", "n_pass": [2034, 106, 106], "score": "0.7907", "loss": "0.252", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE); }; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:35.305713", "n_pass": [2039, 107, 107], "score": "0.593", "loss": "0.5801", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}; } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:38.028011", "n_pass": [2041, 108, 108], "score": "0.6311", "loss": "0.5018", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);} } mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:40.758070", "n_pass": [2042, 109, 109], "score": "0.6806", "loss": "0.4118", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}} mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:43.483076", "n_pass": [2044, 110, 110], "score": "0.7266", "loss": "0.394", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath (); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:46.211021", "n_pass": [2046, 111, 111], "score": "0.8014", "loss": "0.2596", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath(); if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:48.946602", "n_pass": [2050, 112, 112], "score": "0.6289", "loss": "0.4923", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if (getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:51.662902", "n_pass": [2052, 113, 113], "score": "0.8639", "loss": "0.1549", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if(getFileContents(toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:54.382088", "n_pass": [2054, 114, 114], "score": "0.7227", "loss": "0.3734", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")) {true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:57.146657", "n_pass": [2067, 115, 115], "score": "0.9362", "loss": "0.0773", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){true; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:46:59.867287", "n_pass": [2069, 116, 116], "score": "0.6181", "loss": "0.5384", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){; } } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:05.297477", "n_pass": [2071, 118, 117], "score": "0.8871", "loss": "0.1517", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;} } if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:08.024092", "n_pass": [2073, 119, 118], "score": "0.3599", "loss": "1.1338", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}} if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:10.755406", "n_pass": [2075, 120, 119], "score": "0.892", "loss": "0.1574", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if (fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:13.494281", "n_pass": [2077, 121, 120], "score": "0.4842", "loss": "0.7977", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen) { } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:16.220241", "n_pass": [2081, 122, 121], "score": "0.7369", "loss": "0.3554", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){ } try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:18.949554", "n_pass": [2083, 123, 122], "score": "0.828", "loss": "0.2539", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){} try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:21.664541", "n_pass": [2085, 124, 123], "score": "0.4896", "loss": "0.8395", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try { f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:24.374968", "n_pass": [2087, 125, 124], "score": "0.8033", "loss": "0.2623", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{ f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:27.086170", "n_pass": [2089, 126, 125], "score": "0.4107", "loss": "1.1189", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f = FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:29.813443", "n_pass": [2091, 127, 126], "score": "0.8789", "loss": "0.245", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f= FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:32.548604", "n_pass": [2093, 128, 127], "score": "0.7813", "loss": "0.4328", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=FileWriter(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:35.278852", "n_pass": [2094, 129, 128], "score": "0.7177", "loss": "0.3811", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=(File( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:37.987279", "n_pass": [2096, 130, 129], "score": "0.8178", "loss": "0.2168", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=(( \"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:40.708623", "n_pass": [2098, 131, 130], "score": "0.8522", "loss": "0.1953", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close(); } catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:43.439843", "n_pass": [2108, 132, 131], "score": "0.586", "loss": "0.5454", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();} catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:46.158334", "n_pass": [2110, 133, 132], "score": "0.7723", "loss": "0.4008", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch (IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:48.862518", "n_pass": [2112, 134, 133], "score": "0.7544", "loss": "0.3344", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e) { } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:51.586896", "n_pass": [2118, 135, 134], "score": "0.3868", "loss": "1.0459", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){ } updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:54.310304", "n_pass": [2120, 136, 135], "score": "0.3336", "loss": "1.258", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){} updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:57.037619", "n_pass": [2122, 137, 136], "score": "0.8028", "loss": "0.2412", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}updateNotification(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:47:59.736739", "n_pass": [2123, 138, 137], "score": "0.6315", "loss": "0.4659", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath.toString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:02.448749", "n_pass": [2126, 139, 138], "score": "0.5888", "loss": "0.536", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPathtoString); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:05.155588", "n_pass": [2127, 140, 139], "score": "0.5458", "loss": "0.6137", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath); String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:08.272856", "n_pass": [2130, 141, 140], "score": "0.5024", "loss": "0.7008", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String (mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:11.013069", "n_pass": [2132, 142, 141], "score": "0.932", "loss": "0.0728", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath, \".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:13.721381", "n_pass": [2136, 143, 142], "score": "0.6362", "loss": "0.4898", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\".\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:16.424642", "n_pass": [2138, 144, 143], "score": "0.9312", "loss": "0.0847", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\"); if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:19.148180", "n_pass": [2142, 145, 144], "score": "0.9776", "loss": "0.0315", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if (null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:21.868318", "n_pass": [2144, 146, 145], "score": "0.9732", "loss": "0.0283", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null) {; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:24.580540", "n_pass": [2148, 147, 146], "score": "0.9596", "loss": "0.0419", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){; } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:27.311150", "n_pass": [2150, 148, 147], "score": "0.7667", "loss": "0.2828", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){ } else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:30.023610", "n_pass": [2151, 149, 148], "score": "0.8302", "loss": "0.1917", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){} else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:32.728924", "n_pass": [2153, 150, 149], "score": "0.7027", "loss": "0.3962", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}else {File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:35.434404", "n_pass": [2154, 151, 150], "score": "0.3752", "loss": "1.0022", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (f.exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:38.154913", "n_pass": [2162, 152, 151], "score": "0.4904", "loss": "0.7279", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (f.exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:40.873250", "n_pass": [2168, 153, 152], "score": "0.836", "loss": "0.1873", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }  (this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:43.608103", "n_pass": [2179, 154, 153], "score": "0.8335", "loss": "0.1909", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); ; }"}
{"time": "2021-01-21 06:48:49.456820", "n_pass": [2188, 156, 154], "score": "0.9695", "loss": "0.0361", "code": " void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:48:52.158273", "n_pass": [2190, 157, 155], "score": "0.6183", "loss": "0.4834", "code": "void onCreate(Bundle savedInstanceState) { (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:48:55.867018", "n_pass": [2199, 158, 156], "score": "0.6539", "loss": "0.4348", "code": "void onCreate(Bundle savedInstanceState){ (this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:48:58.586923", "n_pass": [2201, 159, 157], "score": "0.7106", "loss": "0.3474", "code": "void onCreate(Bundle savedInstanceState){(this);(EXTRA5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:01.315828", "n_pass": [2207, 160, 158], "score": "0.9729", "loss": "0.0284", "code": "void onCreate(Bundle savedInstanceState){(this);(5); if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:04.019605", "n_pass": [2211, 161, 159], "score": "0.852", "loss": "0.1649", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if (debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:06.748023", "n_pass": [2213, 162, 160], "score": "0.6313", "loss": "0.4654", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlagnull) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:12.142786", "n_pass": [2216, 164, 161], "score": "0.9116", "loss": "0.1049", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag) { if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:14.839123", "n_pass": [2218, 165, 162], "score": "0.982", "loss": "0.0197", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){ if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:17.543058", "n_pass": [2220, 166, 163], "score": "0.5395", "loss": "0.631", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if (equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:20.248020", "n_pass": [2222, 167, 164], "score": "0.6767", "loss": "0.4025", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if(equals(\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:22.952416", "n_pass": [2224, 168, 165], "score": "0.9857", "loss": "0.0167", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"0\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:25.655592", "n_pass": [2227, 169, 166], "score": "0.9775", "loss": "0.0234", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")) {  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:28.359928", "n_pass": [2231, 170, 167], "score": "0.9875", "loss": "0.0136", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){  } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:31.061436", "n_pass": [2233, 171, 168], "score": "0.9805", "loss": "0.0212", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){ } } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:33.762240", "n_pass": [2234, 172, 169], "score": "0.9725", "loss": "0.0295", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){} } (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:36.465389", "n_pass": [2236, 173, 170], "score": "0.9694", "loss": "0.039", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}} (EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:39.192563", "n_pass": [2238, 174, 171], "score": "0.9734", "loss": "0.0278", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(EXTRA_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:41.893744", "n_pass": [2240, 175, 172], "score": "0.9488", "loss": "0.0545", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_); if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:44.612698", "n_pass": [2244, 176, 173], "score": "0.9829", "loss": "0.0188", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if (act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:47.309693", "n_pass": [2246, 177, 174], "score": "0.9908", "loss": "0.0097", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act & equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:50.024236", "n_pass": [2249, 178, 175], "score": "0.972", "loss": "0.0303", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act& equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:52.723877", "n_pass": [2251, 179, 176], "score": "0.9776", "loss": "0.0247", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&equals(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:55.419047", "n_pass": [2252, 180, 177], "score": "0.9802", "loss": "0.0253", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"execute\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:49:58.112695", "n_pass": [2255, 181, 178], "score": "0.9789", "loss": "0.0219", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")) { File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:00.845235", "n_pass": [2259, 182, 179], "score": "0.9802", "loss": "0.0235", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){ File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:03.546985", "n_pass": [2261, 183, 180], "score": "0.9472", "loss": "0.0635", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File(); f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:06.285239", "n_pass": [2266, 184, 181], "score": "0.9886", "loss": "0.0129", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f = File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:09.011376", "n_pass": [2268, 185, 182], "score": "0.9866", "loss": "0.0153", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f= File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:11.712662", "n_pass": [2270, 186, 183], "score": "0.9805", "loss": "0.0205", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath, \"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:14.422979", "n_pass": [2275, 187, 184], "score": "0.9784", "loss": "0.0224", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"main\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:17.138026", "n_pass": [2277, 188, 185], "score": "0.9883", "loss": "0.0126", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\"); if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:19.831782", "n_pass": [2281, 189, 186], "score": "0.9867", "loss": "0.015", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if (f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:22.550759", "n_pass": [2283, 190, 187], "score": "0.9741", "loss": "0.0291", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f) { if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:25.269363", "n_pass": [2287, 191, 188], "score": "0.9875", "loss": "0.0129", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){ if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:27.968591", "n_pass": [2289, 192, 189], "score": "0.9694", "loss": "0.0383", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if (FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:30.670260", "n_pass": [2291, 193, 190], "score": "0.9668", "loss": "0.0347", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if(FileHelper(\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:33.390561", "n_pass": [2293, 194, 191], "score": "0.984", "loss": "0.0172", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")) { fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:36.121775", "n_pass": [2299, 195, 192], "score": "0.9189", "loss": "0.1499", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){ fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:38.814678", "n_pass": [2301, 196, 193], "score": "0.9754", "loss": "0.0259", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen = true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:41.521870", "n_pass": [2303, 197, 194], "score": "0.9824", "loss": "0.0213", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen= true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:44.219895", "n_pass": [2305, 198, 195], "score": "0.9858", "loss": "0.0149", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true; } }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:46.924707", "n_pass": [2308, 199, 196], "score": "0.9841", "loss": "0.0181", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;} }(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:49.617263", "n_pass": [2310, 200, 197], "score": "0.9693", "loss": "0.032", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){;}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:52.416969", "n_pass": [2351, 201, 198], "score": "0.9831", "loss": "0.0177", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f=((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:55.172520", "n_pass": [2363, 202, 199], "score": "0.9833", "loss": "0.0185", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath());IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:50:58.869005", "n_pass": [2426, 203, 200], "score": "0.9841", "loss": "0.0196", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act&(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:02.473597", "n_pass": [2472, 204, 201], "score": "0.974", "loss": "0.0285", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f=File(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:05.267590", "n_pass": [2484, 205, 202], "score": "0.9596", "loss": "0.0417", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();fFile(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:07.961584", "n_pass": [2485, 206, 203], "score": "0.9799", "loss": "0.0214", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreen=true;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:10.680000", "n_pass": [2507, 207, 204], "score": "0.9718", "loss": "0.0296", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreentrue;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:13.391981", "n_pass": [2508, 208, 205], "score": "0.8769", "loss": "0.1878", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreen;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{f((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:16.201262", "n_pass": [2561, 209, 206], "score": "0.9421", "loss": "0.0617", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreen;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this.getAbsolutePath);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:19.478329", "n_pass": [2623, 210, 207], "score": "0.9353", "loss": "0.0769", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if(act(\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreen;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:23.052556", "n_pass": [2668, 211, 208], "score": "0.9744", "loss": "0.0264", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){fullscreen;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:25.788852", "n_pass": [2700, 212, 209], "score": "0.9809", "loss": "0.021", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){;}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:28.470206", "n_pass": [2701, 213, 210], "score": "0.9795", "loss": "0.0212", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath, \"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:39.731842", "n_pass": [2952, 214, 211], "score": "0.9772", "loss": "0.0245", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\"); if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:42.417146", "n_pass": [2957, 215, 212], "score": "0.9445", "loss": "0.0608", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if (exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:45.139668", "n_pass": [2959, 216, 213], "score": "0.9731", "loss": "0.0279", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()) { if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:47.860993", "n_pass": [2965, 217, 214], "score": "0.9837", "loss": "0.0169", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){ if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:50.558192", "n_pass": [2967, 218, 215], "score": "0.955", "loss": "0.0472", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if (exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:53.254886", "n_pass": [2969, 219, 216], "score": "0.9677", "loss": "0.0506", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()) { s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:55.967660", "n_pass": [2975, 220, 217], "score": "0.9772", "loss": "0.0238", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){ s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:51:58.649758", "n_pass": [2977, 221, 218], "score": "0.9774", "loss": "0.0252", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s = \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:01.369380", "n_pass": [2979, 222, 219], "score": "0.9859", "loss": "0.0147", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s= \"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:04.050220", "n_pass": [2981, 223, 220], "score": "0.9737", "loss": "0.0341", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\"; } } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:06.749257", "n_pass": [2985, 224, 221], "score": "0.95", "loss": "0.0564", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";} } }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:09.428113", "n_pass": [2987, 225, 222], "score": "0.983", "loss": "0.0176", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}} }(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:12.131258", "n_pass": [2989, 226, 223], "score": "0.9832", "loss": "0.0172", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}}}(this);IntentFilter(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:14.829328", "n_pass": [2995, 227, 224], "score": "0.9745", "loss": "0.0264", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}}}(this);(\".PythonActivity\"); }"}
{"time": "2021-01-21 06:52:17.536235", "n_pass": [2998, 228, 225], "score": "0.947", "loss": "0.0686", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}}}(this);(\"PythonActivity\"); }"}
{"time": "2021-01-21 06:52:20.229585", "n_pass": [2999, 229, 226], "score": "0.9618", "loss": "0.0404", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}}}(this);(\"\"); }"}
{"time": "2021-01-21 06:52:22.923446", "n_pass": [3003, 230, 227], "score": "0.9677", "loss": "0.0355", "code": "void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if((\"\")){}}(_);if((\"\")){File();f(mPath,\"\");if(f){if((\"\")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains(\"\")){}}if(fullscreen){}try{((\"\"));close();}catch(IOException e){}(mPath);String(mPath,\"\");if(null){}{File(mPath,\"\");if(exists()){if(exists()){s=\"\";}}}(this);(\"\");}"}

Minimal simplified code:
void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if(("")){}}(_);if(("")){File();f(mPath,"");if(f){if(("")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains("")){}}if(fullscreen){}try{((""));close();}catch(IOException e){}(mPath);String(mPath,"");if(null){}{File(mPath,"");if(exists()){if(exists()){s="";}}}(this);("");}

