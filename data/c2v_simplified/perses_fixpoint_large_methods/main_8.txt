
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/tools/emm-qsg/src/main/java/org/wso2/mdm/qsg/QSGExecutor_main.java
method_name = main
method_body = public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print("Enter your email address and press enter : "); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print("Please enter a valid email address and press enter : "); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println("Unable to get the OAuth token. Please check the config.properties file."); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser("tom", "tom@mobx.com", true); if (!status) { System.out.println("Unable to create the admin user. Please check the config.properties file."); System.exit(0); } status = UserOperations.changePassword("tom", "tomemm"); if (!status) { System.out.println("Unable to change the password of the admin user. Terminating the EMM QSG now."); System.exit(0); } status = UserOperations.createUser("kim", email, false); if (!status) { System.out.println("Unable to create the emm user Kim. Terminating the EMM QSG now."); System.exit(0); } status = UserOperations.changePassword("kim", "kimemm"); if (!status) { System.out.println("Unable to change the password of the emm user. Terminating the EMM QSG now."); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { "kim" }); if (!status) { System.out.println("Unable to create the emm user role. Terminating the EMM QSG now."); System.exit(0); } status = PolicyOperations.createPasscodePolicy("android-passcode-policy1", Constants.DeviceType.ANDROID); if (!status) { System.out.println("Unable to create the android passcode policy. Terminating the EMM QSG now."); System.exit(0); } status = PolicyOperations.createPasscodePolicy("windows-passcode-policy1", Constants.DeviceType.WINDOWS); if (!status) { System.out.println("Unable to create the windows passcode policy. Terminating the EMM QSG now."); System.exit(0); } status = PolicyOperations.createPasscodePolicy("ios-passcode-policy1", Constants.DeviceType.IOS); if (!status) { System.out.println("Unable to create the ios passcode policy. Terminating the EMM QSG now."); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, "catalog.apk", "application/vnd.android.package-archive"); if (application == null) { System.out.println("Unable to upload the sample android application. Terminating the EMM QSG now."); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println("Unable to upload the assets for sample android application. Terminating the EMM QSG now."); System.exit(0); } status = AppOperations.addApplication("Catalog", application, true); if (!status) { System.out.println("Unable to create the mobile application. Terminating the EMM QSG now."); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, "PNDemo.ipa", "application/octet-stream"); iOSApplication.setVersion("1.0.0"); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println("Unable to upload the assets for sample iOS application. Terminating the EMM QSG now."); System.exit(0); } status = AppOperations.addApplication("WSO2Con", iOSApplication, true); if (!status) { System.out.println("Unable to create the mobile application. Terminating the EMM QSG now."); System.exit(0); } }

Trace of simplified code(s):

{"time": "2021-01-25 17:49:08.763774", "score": "0.9733", "loss": "0.0511", "code": "class T { public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print(\"Enter your email address and press enter : \"); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print(\"Please enter a valid email address and press enter : \"); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println(\"Unable to get the OAuth token. Please check the config.properties file.\"); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser(\"tom\", \"tom@mobx.com\", true); if (!status) { System.out.println(\"Unable to create the admin user. Please check the config.properties file.\"); System.exit(0); } status = UserOperations.changePassword(\"tom\", \"tomemm\"); if (!status) { System.out.println(\"Unable to change the password of the admin user. Terminating the EMM QSG now.\"); System.exit(0); } status = UserOperations.createUser(\"kim\", email, false); if (!status) { System.out.println(\"Unable to create the emm user Kim. Terminating the EMM QSG now.\"); System.exit(0); } status = UserOperations.changePassword(\"kim\", \"kimemm\"); if (!status) { System.out.println(\"Unable to change the password of the emm user. Terminating the EMM QSG now.\"); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { \"kim\" }); if (!status) { System.out.println(\"Unable to create the emm user role. Terminating the EMM QSG now.\"); System.exit(0); } status = PolicyOperations.createPasscodePolicy(\"android-passcode-policy1\", Constants.DeviceType.ANDROID); if (!status) { System.out.println(\"Unable to create the android passcode policy. Terminating the EMM QSG now.\"); System.exit(0); } status = PolicyOperations.createPasscodePolicy(\"windows-passcode-policy1\", Constants.DeviceType.WINDOWS); if (!status) { System.out.println(\"Unable to create the windows passcode policy. Terminating the EMM QSG now.\"); System.exit(0); } status = PolicyOperations.createPasscodePolicy(\"ios-passcode-policy1\", Constants.DeviceType.IOS); if (!status) { System.out.println(\"Unable to create the ios passcode policy. Terminating the EMM QSG now.\"); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, \"catalog.apk\", \"application/vnd.android.package-archive\"); if (application == null) { System.out.println(\"Unable to upload the sample android application. Terminating the EMM QSG now.\"); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println(\"Unable to upload the assets for sample android application. Terminating the EMM QSG now.\"); System.exit(0); } status = AppOperations.addApplication(\"Catalog\", application, true); if (!status) { System.out.println(\"Unable to create the mobile application. Terminating the EMM QSG now.\"); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, \"PNDemo.ipa\", \"application/octet-stream\"); iOSApplication.setVersion(\"1.0.0\"); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println(\"Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.\"); System.exit(0); } status = AppOperations.addApplication(\"WSO2Con\", iOSApplication, true); if (!status) { System.out.println(\"Unable to create the mobile application. Terminating the EMM QSG now.\"); System.exit(0); } } }"}
{"time": "2021-01-25 17:51:41.593008", "score": "1.0", "loss": "0.0001", "code": "class T { public static void main(String[] args) { System.out.println(\"Unable to create the admin user. Please check the config.properties file.\"); System.exit(0); } }"}
{"time": "2021-01-25 17:53:27.069829", "score": "1.0", "loss": "0.0", "code": "class T { public static void main(String[] args) { System.out.println(\"Unable to create the admin user. Please check the config.properties file.\"); } }"}
{"time": "2021-01-25 17:55:22.422771", "score": "0.997", "loss": "0.0046", "code": "class T { public static void main(String args) { System.out.println(\"Unable to create the admin user. Please check the config.properties file.\"); } }"}
{"time": "2021-01-25 17:56:41.137911", "score": "0.997", "loss": "0.0046", "code": "class T { void main(String args) { System.out.println(\"Unable to create the admin user. Please check the config.properties file.\"); } }"}
{"time": "2021-01-25 17:57:20.972750", "score": "0.9623", "loss": "0.0525", "code": "class T { void main(String args) { System.out.println( ); } }"}

Minimal simplified code:
class T {
              void main(String   args{ System.out.println(                                                                           );                 }
}


