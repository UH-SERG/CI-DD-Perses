
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyGenerationParameters_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }

Trace of simplified code(s):

{"time": "2021-01-25 18:24:52.205880", "score": "0.9975", "loss": "0.0046", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; } }"}
{"time": "2021-01-25 18:29:22.985407", "score": "0.9998", "loss": "0.0002", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } } }"}
{"time": "2021-01-25 18:30:39.593313", "score": "1.0", "loss": "0.0", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } } }"}
{"time": "2021-01-25 18:31:56.538884", "score": "1.0", "loss": "0.0", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; } }"}
{"time": "2021-01-25 18:33:13.321852", "score": "0.9999", "loss": "0.0002", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } } }"}
{"time": "2021-01-25 18:34:29.748719", "score": "0.9908", "loss": "0.0193", "code": "class T { public boolean equals(Object obj) { if (this == obj) { return true; } } }"}
{"time": "2021-01-25 18:36:29.896718", "score": "0.9974", "loss": "0.0034", "code": "class T { public boolean equals(Object obj) { if (this == obj) return true; } }"}
{"time": "2021-01-25 18:37:09.768281", "score": "0.8388", "loss": "0.2039", "code": "class T { public boolean equals(Object obj) { if ( obj) return true; } }"}
{"time": "2021-01-25 18:38:29.560623", "score": "0.8894", "loss": "0.1428", "code": "class T { public boolean equals(Object obj) { if ( obj) return ; } }"}
{"time": "2021-01-25 18:39:09.419727", "score": "0.8894", "loss": "0.1428", "code": "class T { boolean equals(Object obj) { if ( obj) return ; } }"}
{"time": "2021-01-25 18:42:13.704828", "score": "0.7378", "loss": "0.3573", "code": "class T { boolean equals(Object obj) { return ; } }"}

Minimal simplified code:
class T {
       boolean equals(Object obj) {                    return}
}


