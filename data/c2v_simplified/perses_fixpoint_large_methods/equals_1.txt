
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/samigo/samigo-api/src/java/org/sakaiproject/tool/assessment/data/dao/grading/GradingAttachmentData_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; }

Trace of simplified code(s):

{"time": "2021-01-25 14:14:51.811257", "score": "1.0", "loss": "0.0", "code": "class T { @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; } }"}
{"time": "2021-01-25 14:19:02.527631", "score": "0.9979", "loss": "0.0027", "code": "class T { @Override public boolean equals(Object obj) { if (other.resourceId != null) return false; } }"}
{"time": "2021-01-25 14:20:18.950583", "score": "0.9664", "loss": "0.0383", "code": "class T { @Override public boolean equals(Object obj) { return false; } }"}
{"time": "2021-01-25 14:21:35.060229", "score": "0.986", "loss": "0.0173", "code": "class T { boolean equals(Object obj) { return false; } }"}
{"time": "2021-01-25 14:22:54.751915", "score": "0.7378", "loss": "0.3573", "code": "class T { boolean equals(Object obj) { return ; } }"}

Minimal simplified code:
class T {
                 boolean equals(Object obj{                               return      ; }
}


