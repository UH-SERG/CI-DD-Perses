
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/launch/webapps/examples/WEB-INF/classes/filters/ExampleFilter_toString.java
method_name = toString
method_body = @Override public String toString() { if (filterConfig == null) return ("TimingFilter()"); StringBuilder sb = new StringBuilder("TimingFilter("); sb.append(filterConfig); sb.append(")"); return (sb.toString()); }
predict, score, loss = toString, 0.9916581511497498, 0.01021986361593008

Trace of simplified code(s):
{"time": "2020-12-26 23:04:23.794415", "n_pass": [1, 1, 1], "score": "0.9917", "loss": "0.0102", "code": "@Override public String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder sb = new StringBuilder(\"TimingFilter(\"); sb.append(filterConfig); sb.append(\")\"); return (sb.toString()); }"}
{"time": "2020-12-26 23:04:26.994120", "n_pass": [26, 2, 2], "score": "0.4823", "loss": "1.4079", "code": "@Override public String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder sb = new StringBuilder(\"TimingFilter(\"); sb.append(filterConfig);  (sb.toString()); }"}
{"time": "2020-12-26 23:04:35.604213", "n_pass": [61, 5, 3], "score": "0.9614", "loss": "0.0554", "code": "@Override public String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder sb = new StringBuilder(\"TimingFilter(\"); sb.append (sb.toString()); }"}
{"time": "2020-12-26 23:04:38.292413", "n_pass": [64, 6, 4], "score": "0.4444", "loss": "1.515", "code": "String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder sb = new StringBuilder(\"TimingFilter(\"); sb.append (sb.toString()); }"}
{"time": "2020-12-26 23:04:41.412554", "n_pass": [71, 7, 5], "score": "0.3879", "loss": "1.7123", "code": "String toString() { if (filterConfig == null) return (\"TimingFilter()\");  new StringBuilder(\"TimingFilter(\"); sb.append (sb.toString()); }"}
{"time": "2020-12-26 23:04:44.523744", "n_pass": [106, 8, 6], "score": "0.2127", "loss": "2.8685", "code": "String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder(\"TimingFilter(\"); sb.append (sb.toString()); }"}
{"time": "2020-12-26 23:04:47.204087", "n_pass": [110, 9, 7], "score": "0.2763", "loss": "2.5043", "code": "String toString() { if (filterConfig == null) return (\"TimingFilter()\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:04:55.770117", "n_pass": [124, 12, 8], "score": "0.2763", "loss": "2.5043", "code": "String toString() { if (filterConfig == null) (\"TimingFilter()\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:04:58.432311", "n_pass": [126, 13, 9], "score": "0.2892", "loss": "2.4398", "code": "String toString() { if (filterConfig == null) (\"\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:01.528356", "n_pass": [141, 14, 10], "score": "0.1421", "loss": "3.9377", "code": "String toString() { if (filterConfig= null) (\"\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:04.451942", "n_pass": [142, 15, 11], "score": "0.3374", "loss": "1.7968", "code": "String toString() { if (filterConfignull) (\"\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:13.447230", "n_pass": [193, 17, 12], "score": "0.3374", "loss": "1.7968", "code": "String toString() { if (filterConfignull)(\"\"); StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:16.110937", "n_pass": [199, 18, 13], "score": "0.3374", "loss": "1.7968", "code": "String toString() { if (filterConfignull)(\"\");StringBuilder(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:18.751198", "n_pass": [200, 19, 14], "score": "0.978", "loss": "0.0334", "code": "String toString() { if (filterConfignull)(\"\");(\"TimingFilter(\");append (sb.toString()); }"}
{"time": "2020-12-26 23:05:21.398777", "n_pass": [205, 20, 15], "score": "0.6185", "loss": "0.663", "code": "String toString() { if (filterConfignull)(\"\");(\"TimingFilter(\");(sb.toString()); }"}
{"time": "2020-12-26 23:05:26.822227", "n_pass": [208, 22, 16], "score": "0.5532", "loss": "0.8071", "code": "String toString() { if (filterConfignull)(\"\");(\"TimingFilter(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:30.924348", "n_pass": [216, 23, 17], "score": "0.5532", "loss": "0.8071", "code": "String toString(){ if (filterConfignull)(\"\");(\"TimingFilter(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:33.672683", "n_pass": [218, 24, 18], "score": "0.5532", "loss": "0.8071", "code": "String toString(){if (filterConfignull)(\"\");(\"TimingFilter(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:36.849137", "n_pass": [220, 25, 19], "score": "0.5532", "loss": "0.8071", "code": "String toString(){if(filterConfignull)(\"\");(\"TimingFilter(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:39.592491", "n_pass": [222, 26, 20], "score": "0.666", "loss": "0.7522", "code": "String toString(){if(null)(\"\");(\"TimingFilter(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:47.347427", "n_pass": [261, 28, 21], "score": "0.6338", "loss": "0.9036", "code": "String toString(){if(null)(\"\");(\"(\");(sb.toString); }"}
{"time": "2020-12-26 23:05:50.008958", "n_pass": [262, 29, 22], "score": "0.643", "loss": "0.8152", "code": "String toString(){if(null)(\"\");(\"\");(sb.toString); }"}
{"time": "2020-12-26 23:05:55.291555", "n_pass": [272, 31, 23], "score": "0.643", "loss": "0.8152", "code": "String toString(){if(null)(\"\");(\"\");(sb.toString);}"}

Minimal simplified code:
String toString(){if(null)("");("");(sb.toString);}

