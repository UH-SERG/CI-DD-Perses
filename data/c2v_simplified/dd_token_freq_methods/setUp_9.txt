
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }
predict, score, loss = setUp, 0.9998689889907837, 0.00014852374442853034

Trace of simplified code(s):
{"time": "2020-12-26 23:09:12.384134", "n_pass": [1, 1, 1], "score": "0.9999", "loss": "0.0001", "code": "@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:15.503808", "n_pass": [47, 2, 2], "score": "0.9999", "loss": "0.0002", "code": "@Before public void setUp() throws Exception { channel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:18.191056", "n_pass": [48, 3, 3], "score": "0.9999", "loss": "0.0002", "code": "@Before public void setUp() throws Exception { channel= new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:20.900330", "n_pass": [49, 4, 4], "score": "0.9999", "loss": "0.0001", "code": "@Before public void setUp() throws Exception { channel; listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:23.628757", "n_pass": [51, 5, 5], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:26.312076", "n_pass": [55, 6, 6], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:29.007942", "n_pass": [57, 7, 7], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channel; listener1 = channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:32.127966", "n_pass": [63, 8, 8], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channelchannel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:35.241744", "n_pass": [91, 9, 9], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:37.950949", "n_pass": [94, 10, 10], "score": "0.9999", "loss": "0.0001", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); channel1; channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:40.622021", "n_pass": [99, 11, 11], "score": "0.9999", "loss": "0.0001", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); channel2.start(Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:43.315484", "n_pass": [100, 12, 12], "score": "1.0", "loss": "0.0", "code": "@Before public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:45.967371", "n_pass": [103, 13, 13], "score": "0.9998", "loss": "0.0002", "code": "public void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:50.691495", "n_pass": [143, 14, 14], "score": "0.9998", "loss": "0.0002", "code": " void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:53.372171", "n_pass": [144, 15, 15], "score": "0.9998", "loss": "0.0002", "code": "void setUp() throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:56.482524", "n_pass": [149, 16, 16], "score": "0.9998", "loss": "0.0002", "code": "void setUp()throws Exception { channeladdChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:09:59.169802", "n_pass": [153, 17, 17], "score": "0.9992", "loss": "0.0011", "code": "void setUp()throws Exception {addChannelListener(listener1);addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:10:01.855907", "n_pass": [155, 18, 18], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[] { }); (Channel.DEFAULT); }"}
{"time": "2020-12-26 23:10:04.523287", "n_pass": [165, 19, 19], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[] { }); (Channel); }"}
{"time": "2020-12-26 23:10:12.127584", "n_pass": [216, 20, 20], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception {addChannelListener();addRandomDomain(new ManagedChannel[] { }); (Channel);}"}
{"time": "2020-12-26 23:10:15.627168", "n_pass": [225, 21, 21], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[] { }); (Channel);}"}
{"time": "2020-12-26 23:10:20.982164", "n_pass": [238, 23, 22], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{ }); (Channel);}"}
{"time": "2020-12-26 23:10:23.661389", "n_pass": [240, 24, 23], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{}); (Channel);}"}
{"time": "2020-12-26 23:10:26.343365", "n_pass": [244, 25, 24], "score": "0.9997", "loss": "0.0003", "code": "void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);}"}

Minimal simplified code:
void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);}

