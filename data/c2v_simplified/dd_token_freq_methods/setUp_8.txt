
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/tomcat/util/net/TestClientCert_setUp.java
method_name = setUp
method_body = @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty("sun.security.ssl.allowUnsafeRenegotiation", "true"); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }
predict, score, loss = setUp, 0.9695265293121338, 0.03573530167341232

Trace of simplified code(s):
{"time": "2020-12-26 22:59:14.074997", "n_pass": [1, 1, 1], "score": "0.9695", "loss": "0.0357", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:17.204202", "n_pass": [48, 2, 2], "score": "0.9695", "loss": "0.0357", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:22.606629", "n_pass": [54, 4, 3], "score": "0.9959", "loss": "0.0046", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:25.318865", "n_pass": [55, 5, 4], "score": "0.9957", "loss": "0.0043", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); TomcatconfigureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:28.021331", "n_pass": [56, 6, 5], "score": "0.9984", "loss": "0.0016", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat.start(); TesterSupport.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:30.688150", "n_pass": [57, 7, 6], "score": "0.9987", "loss": "0.0013", "code": "@Override public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:33.820242", "n_pass": [93, 8, 7], "score": "0.9993", "loss": "0.0007", "code": "public void setUp() throws Exception { if (!TesterSupport.RFCSUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:36.601053", "n_pass": [99, 9, 8], "score": "0.9987", "loss": "0.0013", "code": "public void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun.security.ssl.allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:39.294133", "n_pass": [104, 10, 9], "score": "0.9987", "loss": "0.0013", "code": "public void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); } super.setUp(); Tomcat.configureClientSsl(); }"}
{"time": "2020-12-26 22:59:44.626841", "n_pass": [111, 12, 10], "score": "0.9901", "loss": "0.0102", "code": "public void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); } super.setUp().configureClientSsl(); }"}
{"time": "2020-12-26 22:59:47.720554", "n_pass": [128, 13, 11], "score": "0.9558", "loss": "0.0472", "code": "public void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 22:59:53.579501", "n_pass": [186, 14, 12], "score": "0.9558", "loss": "0.0472", "code": " void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 22:59:56.261449", "n_pass": [187, 15, 13], "score": "0.9558", "loss": "0.0472", "code": "void setUp() throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 22:59:59.343174", "n_pass": [192, 16, 14], "score": "0.9558", "loss": "0.0472", "code": "void setUp()throws Exception { if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:02.028526", "n_pass": [196, 17, 15], "score": "0.9558", "loss": "0.0472", "code": "void setUp()throws Exception{ if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:04.750704", "n_pass": [198, 18, 16], "score": "0.9558", "loss": "0.0472", "code": "void setUp()throws Exception{if (!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:07.402956", "n_pass": [200, 19, 17], "score": "0.9558", "loss": "0.0472", "code": "void setUp()throws Exception{if(!SUPPORTED) { System.setProperty(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:10.054753", "n_pass": [205, 20, 18], "score": "0.8914", "loss": "0.1227", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\"sun..allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:12.734783", "n_pass": [207, 21, 19], "score": "0.8914", "loss": "0.1227", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\".allowUnsafeRenegotiation\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:15.417908", "n_pass": [208, 22, 20], "score": "0.9066", "loss": "0.1016", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\"\", \"true\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:21.710032", "n_pass": [264, 23, 21], "score": "0.9543", "loss": "0.0474", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\"\", \"\"); }setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:24.397266", "n_pass": [267, 24, 22], "score": "0.9543", "loss": "0.0474", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\"\", \"\");}setUp().configureClientSsl(); }"}
{"time": "2020-12-26 23:00:27.091153", "n_pass": [277, 25, 23], "score": "0.9543", "loss": "0.0474", "code": "void setUp()throws Exception{if(!SUPPORTED) { System(\"\", \"\");}setUp().configureClientSsl();}"}
{"time": "2020-12-26 23:00:30.582079", "n_pass": [290, 26, 24], "score": "0.878", "loss": "0.1302", "code": "void setUp()throws Exception{if(SUPPORTED) { System(\"\", \"\");}setUp().configureClientSsl();}"}
{"time": "2020-12-26 23:00:33.245842", "n_pass": [293, 27, 25], "score": "0.878", "loss": "0.1302", "code": "void setUp()throws Exception{if(SUPPORTED){ System(\"\", \"\");}setUp().configureClientSsl();}"}
{"time": "2020-12-26 23:00:35.921095", "n_pass": [295, 28, 26], "score": "0.878", "loss": "0.1302", "code": "void setUp()throws Exception{if(SUPPORTED){System(\"\", \"\");}setUp().configureClientSsl();}"}
{"time": "2020-12-26 23:00:38.557429", "n_pass": [301, 29, 27], "score": "0.878", "loss": "0.1302", "code": "void setUp()throws Exception{if(SUPPORTED){System(\"\",\"\");}setUp().configureClientSsl();}"}

Minimal simplified code:
void setUp()throws Exception{if(SUPPORTED){System("","");}setUp().configureClientSsl();}

