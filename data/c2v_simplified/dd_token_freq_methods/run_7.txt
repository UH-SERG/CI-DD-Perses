
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/tomcat/util/threads/TestLimitLatch_run.java
method_name = run
method_body = @Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } }
predict, score, loss = run, 0.9984884262084961, 0.002946917898952961

Trace of simplified code(s):
{"time": "2020-12-26 23:06:04.572790", "n_pass": [1, 1, 1], "score": "0.9985", "loss": "0.0029", "code": "@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:07.679612", "n_pass": [23, 2, 2], "score": "0.9962", "loss": "0.0074", "code": "@Override public void run() { try { latch.countUpOrAwait(); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:10.774802", "n_pass": [46, 3, 3], "score": "0.9888", "loss": "0.0211", "code": "@Override public void run() { try { latch.countUpOrAwait(); latch; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:13.463081", "n_pass": [53, 4, 4], "score": "0.649", "loss": "0.7039", "code": "public void run() { try { latch.countUpOrAwait(); latch; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:17.373395", "n_pass": [90, 5, 5], "score": "0.649", "loss": "0.7039", "code": " void run() { try { latch.countUpOrAwait(); latch; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:20.062256", "n_pass": [91, 6, 6], "score": "0.649", "loss": "0.7039", "code": "void run() { try { latch.countUpOrAwait(); latch; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:23.143460", "n_pass": [98, 7, 7], "score": "0.804", "loss": "0.5674", "code": "void run() { try { countUpOrAwait(); latch; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:25.824841", "n_pass": [101, 8, 8], "score": "0.7401", "loss": "0.7436", "code": "void run() { try { countUpOrAwait();; } catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:28.506552", "n_pass": [102, 9, 9], "score": "0.7401", "loss": "0.7436", "code": "void run() { try { countUpOrAwait();} catch (InterruptedException x) { x.printStackTrace(); } }"}
{"time": "2020-12-26 23:06:31.157466", "n_pass": [109, 10, 10], "score": "0.6677", "loss": "1.0541", "code": "void run() { try { countUpOrAwait();} catch (InterruptedException x) { printStackTrace(); } }"}
{"time": "2020-12-26 23:06:39.795201", "n_pass": [168, 11, 11], "score": "0.6677", "loss": "1.0541", "code": "void run() { try { countUpOrAwait();} catch (InterruptedException x) { printStackTrace();} }"}
{"time": "2020-12-26 23:06:42.448270", "n_pass": [169, 12, 12], "score": "0.6677", "loss": "1.0541", "code": "void run() { try { countUpOrAwait();} catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:45.930363", "n_pass": [176, 13, 13], "score": "0.6677", "loss": "1.0541", "code": "void run(){ try { countUpOrAwait();} catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:48.605922", "n_pass": [178, 14, 14], "score": "0.6677", "loss": "1.0541", "code": "void run(){try { countUpOrAwait();} catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:51.274079", "n_pass": [180, 15, 15], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{ countUpOrAwait();} catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:53.955279", "n_pass": [182, 16, 16], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{countUpOrAwait();} catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:56.632357", "n_pass": [188, 17, 17], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{countUpOrAwait();}catch (InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:06:59.304945", "n_pass": [190, 18, 18], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{countUpOrAwait();}catch(InterruptedException x) { printStackTrace();}}"}
{"time": "2020-12-26 23:07:01.984930", "n_pass": [196, 19, 19], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{countUpOrAwait();}catch(InterruptedException x){ printStackTrace();}}"}
{"time": "2020-12-26 23:07:04.632901", "n_pass": [198, 20, 20], "score": "0.6677", "loss": "1.0541", "code": "void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}}"}

Minimal simplified code:
void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}}

