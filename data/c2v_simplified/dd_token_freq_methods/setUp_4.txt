
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/yandex-qatools__postgresql-embedded/src/test/java/ru/yandex/qatools/embed/postgresql/TestPostgresWithPgCtl_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net("localhost", findFreePort()), new AbstractPostgresConfig.Storage("test"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials("user", "password"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList("-E", "SQL_ASCII", "--locale=C", "--lc-collate=C", "--lc-ctype=C")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format("jdbc:postgresql://%s:%s/%s?user=%s&password=%s", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }
predict, score, loss = setUp, 0.6782158613204956, 0.7506763339042664

Trace of simplified code(s):
{"time": "2020-12-26 22:26:14.598913", "n_pass": [1, 1, 1], "score": "0.4114", "loss": "1.0723", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", findFreePort()), new AbstractPostgresConfig.Storage(\"test\"), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(\"user\", \"password\"), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(\"-E\", \"SQL_ASCII\", \"--locale=C\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:17.500663", "n_pass": [9, 2, 2], "score": "0.5844", "loss": "0.8452", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=C\", \"--lc-ctype=C\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:23.268757", "n_pass": [73, 4, 3], "score": "0.2973", "loss": "1.6221", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:26.102091", "n_pass": [76, 5, 4], "score": "0.7778", "loss": "0.38", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc:postgresql://%s:%s/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:31.837761", "n_pass": [79, 7, 5], "score": "0.2157", "loss": "3.0336", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc/%s?user=%s&password=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:34.686620", "n_pass": [80, 8, 6], "score": "0.2921", "loss": "2.2853", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc=%s\", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:37.545373", "n_pass": [83, 9, 7], "score": "0.6572", "loss": "0.7711", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc=%s\", config.net().host(), config.net().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:40.397281", "n_pass": [84, 10, 8], "score": "0.8459", "loss": "0.2832", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc=%s\", config.net().host(), config.net().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:43.272324", "n_pass": [85, 11, 9], "score": "0.6332", "loss": "0.7332", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  sleep(2000); String url = format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:46.602154", "n_pass": [99, 12, 10], "score": "0.6307", "loss": "0.5256", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config); String url = format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:26:49.975021", "n_pass": [148, 13, 11], "score": "0.3806", "loss": "1.1738", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:27:01.894715", "n_pass": [165, 17, 12], "score": "0.8152", "loss": "0.2903", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:27:04.776856", "n_pass": [171, 18, 13], "score": "0.8622", "loss": "0.2524", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION,Net(\"localhost\", \"--lc-collate=CC\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:27:07.595374", "n_pass": [174, 19, 14], "score": "0.8102", "loss": "0.4127", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION,Net(\"localhost\", \"--C\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn = DriverManager.getConnection(url); }"}
{"time": "2020-12-26 22:27:10.433735", "n_pass": [186, 20, 15], "score": "0.713", "loss": "0.8285", "code": "@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION,Net(\"localhost\", \"--C\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:13.241247", "n_pass": [188, 21, 16], "score": "0.2799", "loss": "3.6194", "code": "void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION,Net(\"localhost\", \"--C\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:19.306975", "n_pass": [200, 23, 17], "score": "0.1646", "loss": "3.9961", "code": "void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable exec = runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:28.665142", "n_pass": [286, 26, 18], "score": "0.2819", "loss": "2.6811", "code": "void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:46.145784", "n_pass": [311, 32, 19], "score": "0.2948", "loss": "2.4852", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:49.388710", "n_pass": [316, 33, 20], "score": "0.2892", "loss": "2.4391", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(new RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:52.193519", "n_pass": [318, 34, 21], "score": "0.261", "loss": "2.5694", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().defaults.build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:54.980016", "n_pass": [321, 35, 22], "score": "0.3089", "loss": "2.4207", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); final PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:27:57.775208", "n_pass": [325, 36, 23], "score": "0.3089", "loss": "2.4207", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); PostgresConfig config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:00.594983", "n_pass": [326, 37, 24], "score": "0.4244", "loss": "1.2697", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"--C\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:03.471403", "n_pass": [333, 38, 25], "score": "0.4154", "loss": "1.2841", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable= runtime.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:06.699171", "n_pass": [336, 39, 26], "score": "0.4089", "loss": "1.5023", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net().host(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:12.355234", "n_pass": [344, 41, 27], "score": "0.3731", "loss": "1.8951", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.nethost(), config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:15.167877", "n_pass": [345, 42, 28], "score": "0.3671", "loss": "1.3478", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net, config.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:17.975138", "n_pass": [346, 43, 29], "score": "0.468", "loss": "1.0989", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); conn(url); }"}
{"time": "2020-12-26 22:28:20.807361", "n_pass": [351, 44, 30], "score": "0.4294", "loss": "1.1856", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); conn; }"}
{"time": "2020-12-26 22:28:30.557098", "n_pass": [388, 47, 31], "score": "0.4424", "loss": "1.1461", "code": "void setUp() throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:28:47.997587", "n_pass": [504, 50, 32], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception { PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:28:50.852121", "n_pass": [508, 51, 33], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{ PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:28:53.616348", "n_pass": [510, 52, 34], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{PostgresStarter< PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:28:56.413918", "n_pass": [513, 53, 35], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess> runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:28:59.213251", "n_pass": [516, 54, 36], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime = getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:02.022260", "n_pass": [518, 55, 37], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime= getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:04.809511", "n_pass": [520, 56, 38], "score": "0.4424", "loss": "1.1461", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=getInstance(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:07.607795", "n_pass": [521, 57, 39], "score": "0.4391", "loss": "1.1819", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build()); config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:10.432622", "n_pass": [532, 58, 40], "score": "0.4391", "loss": "1.1819", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config = new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:13.225000", "n_pass": [534, 59, 41], "score": "0.4391", "loss": "1.1819", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config= new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:16.081936", "n_pass": [536, 60, 42], "score": "0.4391", "loss": "1.1819", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(VersionNet(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:24.469583", "n_pass": [541, 63, 43], "score": "0.4503", "loss": "1.3779", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\", \"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:30.045104", "n_pass": [548, 65, 44], "score": "0.4503", "loss": "1.3779", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"jdbc=%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:35.721810", "n_pass": [560, 67, 45], "score": "0.6201", "loss": "0.9058", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"%s\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:38.521396", "n_pass": [561, 68, 46], "score": "0.6124", "loss": "0.7256", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config.net.net().password()); }"}
{"time": "2020-12-26 22:29:41.316497", "n_pass": [564, 69, 47], "score": "0.6197", "loss": "0.7", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config.net().password()); }"}
{"time": "2020-12-26 22:29:44.093812", "n_pass": [565, 70, 48], "score": "0.6407", "loss": "0.576", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config().password()); }"}
{"time": "2020-12-26 22:29:46.907465", "n_pass": [566, 71, 49], "score": "0.6463", "loss": "0.5714", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config.password()); }"}
{"time": "2020-12-26 22:29:49.695274", "n_pass": [567, 72, 50], "score": "0.5974", "loss": "0.5832", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config()); }"}
{"time": "2020-12-26 22:29:52.514253", "n_pass": [568, 73, 51], "score": "0.6884", "loss": "0.4517", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=new PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:29:57.953886", "n_pass": [598, 74, 52], "score": "0.6732", "loss": "1.0338", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config= PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:30:00.772923", "n_pass": [599, 75, 53], "score": "0.6732", "loss": "1.0338", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\")); PostgresExecutable.prepare(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:30:20.818369", "n_pass": [673, 80, 54], "score": "0.6732", "loss": "1.0338", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable.prepare(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:30:23.670269", "n_pass": [675, 81, 55], "score": "0.7068", "loss": "1.1081", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutableprepare(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:30:26.533291", "n_pass": [676, 82, 56], "score": "0.7068", "loss": "1.1081", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable(config);  format(\"\", config); }"}
{"time": "2020-12-26 22:30:29.347869", "n_pass": [678, 83, 57], "score": "0.7202", "loss": "1.0229", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable();  format(\"\", config); }"}
{"time": "2020-12-26 22:30:32.156089", "n_pass": [681, 84, 58], "score": "0.7202", "loss": "1.0229", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable(); format(\"\", config); }"}
{"time": "2020-12-26 22:30:34.988018", "n_pass": [682, 85, 59], "score": "0.7202", "loss": "1.0229", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable();format(\"\", config); }"}
{"time": "2020-12-26 22:30:37.822342", "n_pass": [688, 86, 60], "score": "0.7202", "loss": "1.0229", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable();format(\"\",config); }"}
{"time": "2020-12-26 22:30:40.649229", "n_pass": [692, 87, 61], "score": "0.7202", "loss": "1.0229", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=PostgresConfig(Net(\"localhost\",\"\"));PostgresExecutable();format(\"\",config);}"}
{"time": "2020-12-26 22:30:48.924599", "n_pass": [721, 89, 62], "score": "0.3977", "loss": "2.2115", "code": "void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=(Net(\"localhost\",\"\"));PostgresExecutable();format(\"\",config);}"}

Minimal simplified code:
void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=(Net("localhost",""));PostgresExecutable();format("",config);}

