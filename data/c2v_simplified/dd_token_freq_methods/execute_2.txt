
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/ant/FindLeaksTask_execute.java
method_name = execute
method_body = @Override public void execute() throws BuildException { super.execute(); execute("/findleaks?statusLine=" + Boolean.toString(statusLine)); }
predict, score, loss = execute, 0.9996827840805054, 0.0004080893413629383

Trace of simplified code(s):
{"time": "2020-12-26 21:58:40.226780", "n_pass": [1, 1, 1], "score": "0.9997", "loss": "0.0004", "code": "@Override public void execute() throws BuildException { super.execute(); execute(\"/findleaks?statusLine=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-26 21:58:42.944628", "n_pass": [20, 2, 2], "score": "1.0", "loss": "0.0", "code": "void execute() throws BuildException { super.execute(); execute(\"/findleaks?statusLine=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-26 21:58:45.646043", "n_pass": [23, 3, 3], "score": "0.9999", "loss": "0.0001", "code": "void execute() throws BuildException {; execute(\"/findleaks?statusLine=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-26 21:58:48.378130", "n_pass": [42, 4, 4], "score": "0.4784", "loss": "1.0025", "code": "void execute() throws BuildException {(\"/findleaks?statusLine=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-26 21:58:51.104752", "n_pass": [43, 5, 5], "score": "0.3896", "loss": "1.2941", "code": "void execute() throws BuildException {(\"/=\" + Boolean.toString(statusLine)); }"}
{"time": "2020-12-26 21:58:53.781317", "n_pass": [45, 6, 6], "score": "0.6405", "loss": "1.1006", "code": "void execute() throws BuildException {(\"/=\" .toString(statusLine)); }"}
{"time": "2020-12-26 21:58:59.375269", "n_pass": [84, 7, 7], "score": "0.6405", "loss": "1.1006", "code": "void execute()throws BuildException {(\"/=\" .toString(statusLine)); }"}
{"time": "2020-12-26 21:59:02.107185", "n_pass": [88, 8, 8], "score": "0.6405", "loss": "1.1006", "code": "void execute()throws BuildException{(\"/=\" .toString(statusLine)); }"}
{"time": "2020-12-26 21:59:06.909031", "n_pass": [121, 9, 9], "score": "0.7879", "loss": "0.5775", "code": "void execute()throws BuildException{(\"/\" .toString(statusLine)); }"}
{"time": "2020-12-26 21:59:09.604417", "n_pass": [122, 10, 10], "score": "0.7879", "loss": "0.5775", "code": "void execute()throws BuildException{(\"/\".toString(statusLine)); }"}
{"time": "2020-12-26 21:59:12.318100", "n_pass": [126, 11, 11], "score": "0.4621", "loss": "1.1941", "code": "void execute()throws BuildException{(\"/\".toString()); }"}
{"time": "2020-12-26 21:59:15.061164", "n_pass": [130, 12, 12], "score": "0.4621", "loss": "1.1941", "code": "void execute()throws BuildException{(\"/\".toString());}"}
{"time": "2020-12-26 21:59:18.612048", "n_pass": [143, 13, 13], "score": "0.2892", "loss": "1.6811", "code": "void execute()throws BuildException{(\"\".toString());}"}

Minimal simplified code:
void execute()throws BuildException{("".toString());}

