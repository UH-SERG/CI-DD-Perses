
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/tomcat/util/collections/TesterPerformanceSynchronizedQueue_run.java
method_name = run
method_body = @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); }
predict, score, loss = run, 0.9991298317909241, 0.0010785006452351809

Trace of simplified code(s):
{"time": "2020-12-26 22:07:16.116814", "n_pass": [1, 1, 1], "score": "0.9991", "loss": "0.0011", "code": "@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); }"}
{"time": "2020-12-26 22:07:19.394648", "n_pass": [48, 2, 2], "score": "0.999", "loss": "0.0012", "code": "@Override public void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); }"}
{"time": "2020-12-26 22:07:22.264659", "n_pass": [54, 3, 3], "score": "0.999", "loss": "0.0012", "code": "@Override public void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } QUEUE.offer(obj); } super.run(); }"}
{"time": "2020-12-26 22:07:25.086111", "n_pass": [56, 4, 4], "score": "0.999", "loss": "0.0012", "code": "@Override public void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; } super.run(); }"}
{"time": "2020-12-26 22:07:28.380449", "n_pass": [97, 5, 5], "score": "0.9989", "loss": "0.0014", "code": "@Override public void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }run(); }"}
{"time": "2020-12-26 22:07:31.627244", "n_pass": [98, 6, 6], "score": "0.9945", "loss": "0.0063", "code": "@Override public void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:07:46.193218", "n_pass": [176, 9, 7], "score": "0.9945", "loss": "0.0063", "code": "@Override  void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:07:48.967124", "n_pass": [177, 10, 8], "score": "0.9945", "loss": "0.0063", "code": "@Override void run() { for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:07:52.205385", "n_pass": [182, 11, 9], "score": "0.9945", "loss": "0.0063", "code": "@Override void run(){ for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:07:55.024370", "n_pass": [184, 12, 10], "score": "0.9945", "loss": "0.0063", "code": "@Override void run(){for (int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:07:57.799626", "n_pass": [186, 13, 11], "score": "0.9945", "loss": "0.0063", "code": "@Override void run(){for(int i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:00.634732", "n_pass": [188, 14, 12], "score": "0.9787", "loss": "0.0242", "code": "@Override void run(){for( i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:03.471408", "n_pass": [189, 15, 13], "score": "0.9787", "loss": "0.0242", "code": "@Override void run(){for(i = 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:06.262701", "n_pass": [191, 16, 14], "score": "0.9787", "loss": "0.0242", "code": "@Override void run(){for(i= 0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:09.067441", "n_pass": [193, 17, 15], "score": "0.9787", "loss": "0.0242", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:17.436970", "n_pass": [204, 20, 16], "score": "0.8885", "loss": "0.1529", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE(); if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:20.246434", "n_pass": [205, 21, 17], "score": "0.9964", "loss": "0.004", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE; if (obj == null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:23.010268", "n_pass": [209, 22, 18], "score": "0.9709", "loss": "0.0364", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE; if (obj= null) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:25.804988", "n_pass": [210, 23, 19], "score": "0.6007", "loss": "0.615", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE; if (objnull) { obj(); } ; }; }"}
{"time": "2020-12-26 22:08:28.578195", "n_pass": [214, 24, 20], "score": "0.609", "loss": "0.602", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE; if (objnull) { obj; } ; }; }"}
{"time": "2020-12-26 22:08:31.355668", "n_pass": [217, 25, 21], "score": "0.609", "loss": "0.602", "code": "@Override void run(){for(i=0;; i++) { Object obj = QUEUE; if (objnull) { obj; } }; }"}
{"time": "2020-12-26 22:08:35.438724", "n_pass": [232, 26, 22], "score": "0.6276", "loss": "0.5891", "code": "@Override void run(){for(i0;; i++) { Object obj = QUEUE; if (objnull) { obj; } }; }"}
{"time": "2020-12-26 22:08:38.243644", "n_pass": [233, 27, 23], "score": "0.6276", "loss": "0.5891", "code": "@Override void run(){for(i;; i++) { Object obj = QUEUE; if (objnull) { obj; } }; }"}
{"time": "2020-12-26 22:08:46.593523", "n_pass": [248, 30, 24], "score": "0.6401", "loss": "0.5577", "code": "@Override void run(){for(i;; i++) { Object obj = QUEUE; if (objnull) {; } }; }"}
{"time": "2020-12-26 22:08:49.362475", "n_pass": [249, 31, 25], "score": "0.6401", "loss": "0.5577", "code": "@Override void run(){for(i;; i++) { Object obj = QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:08:53.435360", "n_pass": [264, 32, 26], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++) { Object obj = QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:08.793462", "n_pass": [326, 35, 27], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){ Object obj = QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:11.578098", "n_pass": [327, 36, 28], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){Object obj = QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:22.706994", "n_pass": [331, 40, 29], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){Object obj= QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:25.499462", "n_pass": [333, 41, 30], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){Object obj=QUEUE; if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:28.267854", "n_pass": [336, 42, 31], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if (objnull) {} }; }"}
{"time": "2020-12-26 22:09:31.037769", "n_pass": [338, 43, 32], "score": "0.6492", "loss": "0.5399", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(objnull) {} }; }"}
{"time": "2020-12-26 22:09:33.841337", "n_pass": [340, 44, 33], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(null) {} }; }"}
{"time": "2020-12-26 22:09:36.641526", "n_pass": [343, 45, 34], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(null){} }; }"}
{"time": "2020-12-26 22:09:39.442442", "n_pass": [346, 46, 35], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(null){}}; }"}
{"time": "2020-12-26 22:09:42.248376", "n_pass": [348, 47, 36], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(null){}} }"}
{"time": "2020-12-26 22:09:45.034327", "n_pass": [349, 48, 37], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;; i++){Object obj=QUEUE;if(null){}}}"}
{"time": "2020-12-26 22:09:49.152480", "n_pass": [364, 49, 38], "score": "0.9984", "loss": "0.0018", "code": "@Override void run(){for(;;i++){Object obj=QUEUE;if(null){}}}"}
{"time": "2020-12-26 22:09:57.490831", "n_pass": [372, 52, 39], "score": "0.3622", "loss": "1.7252", "code": "@Override void run(){for(;;i++){Object =QUEUE;if(null){}}}"}
{"time": "2020-12-26 22:10:00.290551", "n_pass": [373, 53, 40], "score": "0.9744", "loss": "0.0413", "code": "@Override void run(){for(;;i++){Object QUEUE;if(null){}}}"}
{"time": "2020-12-26 22:10:03.074564", "n_pass": [374, 54, 41], "score": "0.3409", "loss": "1.4588", "code": "@Override void run(){for(;;i++){Object ;if(null){}}}"}
{"time": "2020-12-26 22:10:07.119105", "n_pass": [402, 55, 42], "score": "0.3241", "loss": "1.5621", "code": "@Override void run(){for(;;i++){ ;if(null){}}}"}
{"time": "2020-12-26 22:10:09.876855", "n_pass": [403, 56, 43], "score": "0.3241", "loss": "1.5621", "code": "@Override void run(){for(;;i++){;if(null){}}}"}
{"time": "2020-12-26 22:10:12.644508", "n_pass": [404, 57, 44], "score": "0.3241", "loss": "1.5621", "code": "@Override void run(){for(;;i++){if(null){}}}"}

Minimal simplified code:
@Override void run(){for(;;i++){if(null){}}}

