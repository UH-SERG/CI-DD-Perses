
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/facebook__stetho/stetho/src/main/java/com/facebook/stetho/inspector/elements/android/ViewGroupDescriptor_onGetChildren.java
method_name = onGetChildren
method_body = @Override protected void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }
predict, score, loss = onGetChildren, 0.27542129158973694, 2.2649848461151123

Trace of simplified code(s):
{"time": "2021-01-23 15:29:15.168010", "n_pass": [1, 1, 1], "score": "0.3129", "loss": "2.1486", "code": "@Override protected void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:17.844872", "n_pass": [44, 2, 2], "score": "0.298", "loss": "2.1323", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:26.343725", "n_pass": [100, 5, 3], "score": "0.2588", "loss": "2.2393", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:28.992597", "n_pass": [103, 6, 4], "score": "0.273", "loss": "2.2408", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { fchildView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:31.635226", "n_pass": [104, 7, 5], "score": "0.2583", "loss": "2.2835", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { f= element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:34.294671", "n_pass": [105, 8, 6], "score": "0.2408", "loss": "2.3564", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { fgetChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:36.945234", "n_pass": [106, 9, 7], "score": "0.2248", "loss": "2.4005", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { f(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:44.878044", "n_pass": [112, 12, 8], "score": "0.2251", "loss": "2.3978", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { f(i); if (isChildVisible(childView)) { final Object c = getElementForView(element, childView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:47.530501", "n_pass": [115, 13, 9], "score": "0.3125", "loss": "2.0998", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { f(i); if (isChildVisible(childView)) { final Object c = getElementForView(eldView); children.store(childElement); } } }"}
{"time": "2021-01-23 15:29:50.172673", "n_pass": [117, 14, 10], "score": "0.4724", "loss": "1.75", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.get(); i < N; ++i) { f(i); if (isChildVisible(childView)) { final Object c = getElementForView(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:29:53.249693", "n_pass": [129, 15, 11], "score": "0.4142", "loss": "1.9855", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { final Object c = getElementForView(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:29:58.539059", "n_pass": [136, 17, 12], "score": "0.2192", "loss": "2.6885", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fin = getElementForView(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:30:01.165327", "n_pass": [137, 18, 13], "score": "0.4001", "loss": "2.0563", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { finntForView(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:30:06.870280", "n_pass": [195, 20, 14], "score": "0.4001", "loss": "2.0563", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { firView(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:30:09.508134", "n_pass": [196, 21, 15], "score": "0.4085", "loss": "2.0116", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(childElement); } } }"}
{"time": "2021-01-23 15:30:12.165717", "n_pass": [200, 22, 16], "score": "0.4038", "loss": "1.9412", "code": "void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:18.710703", "n_pass": [209, 24, 17], "score": "0.3122", "loss": "2.4174", "code": "void onGetChildren(ViewGroup et, Accumulator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:21.367042", "n_pass": [211, 25, 18], "score": "0.3122", "loss": "2.4174", "code": "void onGetChildren(ViewGroup et, Acator<Object> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:24.001616", "n_pass": [213, 26, 19], "score": "0.3258", "loss": "2.4081", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); i < N; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:29.294702", "n_pass": [222, 28, 20], "score": "0.3394", "loss": "2.3237", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ; ++i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:47.172564", "n_pass": [320, 34, 21], "score": "0.3378", "loss": "2.29", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f(i); if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:30:49.810238", "n_pass": [323, 35, 22], "score": "0.4291", "loss": "1.8818", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(childView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:31:03.004497", "n_pass": [331, 40, 23], "score": "0.4013", "loss": "1.6292", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(ldView)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:31:05.645238", "n_pass": [332, 41, 24], "score": "0.4013", "loss": "1.6292", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(eldView); che(chment); } } }"}
{"time": "2021-01-23 15:31:10.908320", "n_pass": [337, 43, 25], "score": "0.4013", "loss": "1.6292", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(eiew); che(chment); } } }"}
{"time": "2021-01-23 15:31:13.558061", "n_pass": [338, 44, 26], "score": "0.4098", "loss": "1.5644", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); che(chment); } } }"}
{"time": "2021-01-23 15:31:16.196830", "n_pass": [340, 45, 27], "score": "0.4024", "loss": "1.4162", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (chment); } } }"}
{"time": "2021-01-23 15:31:18.839948", "n_pass": [342, 46, 28], "score": "0.3967", "loss": "1.4883", "code": "void onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:31:21.476358", "n_pass": [346, 47, 29], "score": "0.1381", "loss": "3.0105", "code": "id onGetChildren(ViewGroup et, Acator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:31:37.962269", "n_pass": [362, 52, 30], "score": "0.1381", "loss": "3.0105", "code": "id onGetChildren(ViewGroup et,cator<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:31:40.593659", "n_pass": [363, 53, 31], "score": "0.1381", "loss": "3.0105", "code": "id onGetChildren(ViewGroup et,tor<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:31:43.226073", "n_pass": [364, 54, 32], "score": "0.1381", "loss": "3.0105", "code": "id onGetChildren(ViewGroup et,r<t> children) { for (int i = 0, N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:31:59.046484", "n_pass": [377, 60, 33], "score": "0.1389", "loss": "2.9742", "code": "id onGetChildren(ViewGroup et,r<t> children) { for (int i , N = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:32:01.673917", "n_pass": [378, 61, 34], "score": "0.139", "loss": "2.9698", "code": "id onGetChildren(ViewGroup et,r<t> children) { for (int i  = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:32:41.841324", "n_pass": [425, 75, 35], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for ( i  = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:28.402872", "n_pass": [567, 89, 36], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for( i  = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:31.052670", "n_pass": [569, 90, 37], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i  = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:33.676047", "n_pass": [571, 91, 38], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i = t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:36.309636", "n_pass": [572, 92, 39], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i= t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:38.937542", "n_pass": [574, 93, 40], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t(); ;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:41.556665", "n_pass": [579, 94, 41], "score": "0.2064", "loss": "2.7045", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;i) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:44.180664", "n_pass": [581, 95, 42], "score": "0.208", "loss": "2.6864", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;) { f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:46.820110", "n_pass": [583, 96, 43], "score": "0.208", "loss": "2.6864", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){ f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:49.478650", "n_pass": [585, 97, 44], "score": "0.208", "loss": "2.6864", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){f; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:52.106034", "n_pass": [586, 98, 45], "score": "0.2088", "loss": "2.6611", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){; if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:33:54.716546", "n_pass": [587, 99, 46], "score": "0.2088", "loss": "2.6611", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){if (isChildVisible(iew)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:34:15.726882", "n_pass": [598, 107, 47], "score": "0.1999", "loss": "2.624", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){if (isChildVisible(i)) { fi(e); (cht); } } }"}
{"time": "2021-01-23 15:34:18.344772", "n_pass": [601, 108, 48], "score": "0.193", "loss": "2.636", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){if (isChildVisible(i)) {i(e); (cht); } } }"}
{"time": "2021-01-23 15:34:20.947263", "n_pass": [606, 109, 49], "score": "0.1931", "loss": "2.6096", "code": "id onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:34:23.581093", "n_pass": [611, 110, 50], "score": "0.344", "loss": "1.5782", "code": "d onGetChildren(ViewGroup et,r<t> children) { for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:34:55.984643", "n_pass": [638, 120, 51], "score": "0.332", "loss": "1.5499", "code": "d onGetChildren(ViewGroup t,r<t> children) { for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:34:58.593946", "n_pass": [645, 121, 52], "score": "0.332", "loss": "1.5499", "code": "d onGetChildren(ViewGroup t,r<t>children) { for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:35:22.287298", "n_pass": [655, 130, 53], "score": "0.332", "loss": "1.5499", "code": "d onGetChildren(ViewGroup t,r<t>children){ for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:35:24.926014", "n_pass": [657, 131, 54], "score": "0.332", "loss": "1.5499", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i=t();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:35:27.569869", "n_pass": [663, 132, 55], "score": "0.3197", "loss": "1.5271", "code": "d onGetChildren(ViewGroup t,r<t>children){for(it();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:35:30.217927", "n_pass": [664, 133, 56], "score": "0.3237", "loss": "1.5134", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)) {i(e); (c); } } }"}
{"time": "2021-01-23 15:37:18.880619", "n_pass": [794, 171, 57], "score": "0.3237", "loss": "1.5134", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){i(e); (c); } } }"}
{"time": "2021-01-23 15:37:21.516240", "n_pass": [795, 172, 58], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){(e); (c); } } }"}
{"time": "2021-01-23 15:37:24.536422", "n_pass": [800, 173, 59], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){(e);(c); } } }"}
{"time": "2021-01-23 15:37:27.160440", "n_pass": [805, 174, 60], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){(e);(c);} } }"}
{"time": "2021-01-23 15:37:29.768672", "n_pass": [807, 175, 61], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){(e);(c);}} }"}
{"time": "2021-01-23 15:37:32.379583", "n_pass": [809, 176, 62], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if (isChildVisible(i)){(e);(c);}}}"}
{"time": "2021-01-23 15:38:25.584910", "n_pass": [866, 194, 63], "score": "0.3265", "loss": "1.4927", "code": "d onGetChildren(ViewGroup t,r<t>children){for(i();;){if(isChildVisible(i)){(e);(c);}}}"}

Minimal simplified code:
d onGetChildren(ViewGroup t,r<t>children){for(i();;){if(isChildVisible(i)){(e);(c);}}}

