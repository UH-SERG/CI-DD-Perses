
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/toolbox/ImageRequestTest_verifyResize.java
method_name = verifyResize
method_body = private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest("", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }
predict, score, loss = verifyResize, 0.9994632601737976, 0.002528210636228323

Trace of simplified code(s):
{"time": "2021-01-23 19:42:31.166850", "n_pass": [1, 1, 1], "score": "0.9994", "loss": "0.0043", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:37.336535", "n_pass": [25, 3, 2], "score": "0.9994", "loss": "0.0031", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNponse.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:42.648227", "n_pass": [47, 5, 3], "score": "0.9992", "loss": "0.0038", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNponse.result; assertNotNull(bitmapmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:45.318547", "n_pass": [48, 6, 4], "score": "0.9929", "loss": "0.0212", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNponse.result; assertNotNull(bitmapctedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:48.012987", "n_pass": [52, 7, 5], "score": "0.9994", "loss": "0.0026", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWieType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNponse.result; assertNotNull(bitmapctedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:53.323256", "n_pass": [56, 9, 6], "score": "0.9994", "loss": "0.0025", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWieType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNponse.result; assertNotNull(bitmapctedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:42:56.377357", "n_pass": [59, 10, 7], "score": "0.9434", "loss": "0.1465", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWieType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse.result; assertNotNull(bitmapctedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:43:02.073223", "n_pass": [87, 12, 8], "score": "0.9334", "loss": "0.1542", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWieType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResertNotNull(bitmapctedHeight, bitmap.getHeight()); }"}
{"time": "2021-01-23 19:43:04.699636", "n_pass": [88, 13, 9], "score": "0.9345", "loss": "0.151", "code": "private void verifyResize(NetworkResponse networkResponse, int maxWieType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:07.764386", "n_pass": [93, 14, 10], "score": "0.9381", "loss": "0.1323", "code": "private void verifyResize(NetworkResponse networkReeType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:10.396076", "n_pass": [94, 15, 11], "score": "0.5307", "loss": "0.76", "code": "private void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); Response<Bitmap> response = request.parseNetworkResertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:18.284483", "n_pass": [101, 18, 12], "score": "0.5136", "loss": "0.8307", "code": "private void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); response = request.parseNetworkResertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:20.902071", "n_pass": [102, 19, 13], "score": "0.5769", "loss": "0.7233", "code": "private void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); t.parseNetworkResertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:23.536777", "n_pass": [103, 20, 14], "score": "0.5149", "loss": "0.8343", "code": "private void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); ertNotNull(bitmapp.getHeight()); }"}
{"time": "2021-01-23 19:43:31.881903", "n_pass": [139, 23, 15], "score": "0.5424", "loss": "0.7457", "code": "private void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:43:34.509440", "n_pass": [141, 24, 16], "score": "0.5424", "loss": "0.7457", "code": "void verifyResize(NetworkResponse networkReedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:43:40.601257", "n_pass": [147, 26, 17], "score": "0.5424", "loss": "0.7457", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxW.RGB_565, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:43:48.485796", "n_pass": [152, 29, 18], "score": "0.4482", "loss": "2.4416", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", null, maxW.RGB_565, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:43:53.771329", "n_pass": [157, 31, 19], "score": "0.6236", "loss": "1.4298", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", null, m65, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:44:07.754750", "n_pass": [209, 36, 20], "score": "0.2677", "loss": "2.7311", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", nul5, null); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:44:10.373394", "n_pass": [210, 37, 21], "score": "0.4291", "loss": "1.5601", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", nulll); ertNotNull(bitmaght()); }"}
{"time": "2021-01-23 19:44:15.625796", "n_pass": [213, 39, 22], "score": "0.4291", "loss": "1.5601", "code": "void verifyResize(NetworkResponse networth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:27.758974", "n_pass": [226, 43, 23], "score": "0.4291", "loss": "1.5601", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { ImageRquest = new ImageRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:38.280954", "n_pass": [234, 47, 24], "score": "0.4291", "loss": "1.5601", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imquest = new ImageRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:40.906325", "n_pass": [235, 48, 25], "score": "0.4267", "loss": "1.4898", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = new ImageRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:43.545483", "n_pass": [237, 49, 26], "score": "0.7127", "loss": "1.638", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = ImageRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:46.176361", "n_pass": [238, 50, 27], "score": "0.3584", "loss": "3.1956", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = eRequest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:48.791778", "n_pass": [239, 51, 28], "score": "0.344", "loss": "3.277", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = uest(\"\", nulll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:51.413043", "n_pass": [242, 52, 29], "score": "0.4407", "loss": "2.3649", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = uest(\"\",ll); ertNo(bitmaght()); }"}
{"time": "2021-01-23 19:44:54.013077", "n_pass": [244, 53, 30], "score": "0.4575", "loss": "2.0493", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imt = uest(\"\",ll); (bitmaght()); }"}
{"time": "2021-01-23 19:45:13.989464", "n_pass": [264, 60, 31], "score": "0.3893", "loss": "2.6274", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Imuest(\"\",ll); (bitmaght()); }"}
{"time": "2021-01-23 19:45:16.631783", "n_pass": [265, 61, 32], "score": "0.3033", "loss": "3.0206", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Im(\"\",ll); (bitmaght()); }"}
{"time": "2021-01-23 19:45:36.595992", "n_pass": [334, 68, 33], "score": "0.3033", "loss": "3.0206", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Im(\"\",ll); (tmaght()); }"}
{"time": "2021-01-23 19:45:39.217733", "n_pass": [335, 69, 34], "score": "0.3033", "loss": "3.0206", "code": "void verifyResize(NetworkResponse neth, int expectedHeight) { Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:45:41.824254", "n_pass": [339, 70, 35], "score": "0.2426", "loss": "3.4816", "code": "id verifyResize(NetworkResponse neth, int expectedHeight) { Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:46:05.601364", "n_pass": [356, 78, 36], "score": "0.224", "loss": "3.6036", "code": "id verifyResize(NetworkResponse th, int expectedHeight) { Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:46:08.208947", "n_pass": [359, 79, 37], "score": "0.2031", "loss": "3.7542", "code": "id verifyResize(NetworkResponse th, t expectedHeight) { Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:47:29.905540", "n_pass": [488, 108, 38], "score": "0.2031", "loss": "3.7542", "code": "id verifyResize(NetworkResponse th, t expectedHeight){ Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:47:32.510612", "n_pass": [490, 109, 39], "score": "0.2031", "loss": "3.7542", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",ll); (ght()); }"}
{"time": "2021-01-23 19:47:40.357738", "n_pass": [497, 112, 40], "score": "0.2092", "loss": "3.7754", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l); (ght()); }"}
{"time": "2021-01-23 19:47:42.967584", "n_pass": [501, 113, 41], "score": "0.2092", "loss": "3.7754", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l);(ght()); }"}
{"time": "2021-01-23 19:47:45.597607", "n_pass": [503, 114, 42], "score": "0.2098", "loss": "3.7714", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l);(ht()); }"}
{"time": "2021-01-23 19:47:48.213709", "n_pass": [504, 115, 43], "score": "0.2084", "loss": "3.7801", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l);(t()); }"}
{"time": "2021-01-23 19:47:50.822600", "n_pass": [506, 116, 44], "score": "0.2084", "loss": "3.7801", "code": "id verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l);(t); }"}
{"time": "2021-01-23 19:47:56.033276", "n_pass": [510, 118, 45], "score": "0.2039", "loss": "3.6677", "code": "i verifyResize(NetworkResponse th, t expectedHeight){Im(\"\",l);(t); }"}
{"time": "2021-01-23 19:48:43.178101", "n_pass": [541, 134, 46], "score": "0.1954", "loss": "3.6768", "code": "i verifyResize(NetworkResponse h, t expectedHeight){Im(\"\",l);(t); }"}
{"time": "2021-01-23 19:48:45.810487", "n_pass": [544, 135, 47], "score": "0.1954", "loss": "3.6768", "code": "i verifyResize(NetworkResponse h,t expectedHeight){Im(\"\",l);(t); }"}
{"time": "2021-01-23 19:49:27.618075", "n_pass": [564, 151, 48], "score": "0.225", "loss": "3.3745", "code": "i verifyResize(NetworkResponse h,t expectedHeight){I(\"\",l);(t); }"}
{"time": "2021-01-23 19:50:52.466592", "n_pass": [634, 181, 49], "score": "0.225", "loss": "3.3745", "code": "i verifyResize(NetworkResponse h,t expectedHeight){I(\"\",l);(t);}"}

Minimal simplified code:
i verifyResize(NetworkResponse h,t expectedHeight){I("",l);(t);}

