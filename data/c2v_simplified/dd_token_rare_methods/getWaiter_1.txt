
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/signup/api/src/java/org/sakaiproject/signup/model/SignupTimeslot_getWaiter.java
method_name = getWaiter
method_body = public SignupAttendee getWaiter(String attendeeId) { if (waitingList == null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; }
predict, score, loss = getWaiter, 0.16529938578605652, 4.808386325836182

Trace of simplified code(s):
{"time": "2021-01-20 06:58:34.554488", "n_pass": [1, 1, 1], "score": "0.1653", "loss": "4.8084", "code": "public SignupAttendee getWaiter(String attendeeId) { if (waitingList == null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; }"}
{"time": "2021-01-20 06:58:37.618078", "n_pass": [48, 2, 2], "score": "0.2021", "loss": "4.0984", "code": "public SignupAttendee getWaiter(String attendeeId) { if ( null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; }"}
{"time": "2021-01-20 06:58:40.255639", "n_pass": [50, 3, 3], "score": "0.3266", "loss": "2.9973", "code": "public SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; }"}
{"time": "2021-01-20 06:58:42.923561", "n_pass": [56, 4, 4], "score": "0.3648", "loss": "3.2135", "code": "public SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId()) return waiter; } return null; }"}
{"time": "2021-01-20 06:58:45.984700", "n_pass": [100, 5, 5], "score": "0.5821", "loss": "2.1854", "code": "public SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId()) return waiter; } ; }"}
{"time": "2021-01-20 06:58:48.627764", "n_pass": [102, 6, 6], "score": "0.5821", "loss": "2.1854", "code": "SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId()) return waiter; } ; }"}
{"time": "2021-01-20 06:58:51.705944", "n_pass": [121, 7, 7], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId()) return waiter; } ; }"}
{"time": "2021-01-20 06:59:01.276282", "n_pass": [195, 8, 8], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } ; }"}
{"time": "2021-01-20 06:59:06.576615", "n_pass": [199, 10, 9], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId) { if ( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:10.446537", "n_pass": [209, 11, 10], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){ if ( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:13.089371", "n_pass": [211, 12, 11], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if ( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:15.739311", "n_pass": [213, 13, 12], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if( null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:18.394593", "n_pass": [215, 14, 13], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)  for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:21.116772", "n_pass": [218, 15, 14], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null) for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:23.741957", "n_pass": [219, 16, 15], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for (SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:26.406684", "n_pass": [221, 17, 16], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter : waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:29.039831", "n_pass": [226, 18, 17], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter: waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:31.674839", "n_pass": [228, 19, 18], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList) { if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:34.322916", "n_pass": [231, 20, 19], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){ if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:36.965711", "n_pass": [233, 21, 20], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if (getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:39.598283", "n_pass": [235, 22, 21], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if(getAttendeeUserId())return waiter; } }"}
{"time": "2021-01-20 06:59:55.631159", "n_pass": [280, 27, 22], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if(getAttendeeUserId())return waiter;} }"}
{"time": "2021-01-20 06:59:58.291368", "n_pass": [281, 28, 23], "score": "0.3412", "loss": "3.2905", "code": "SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if(getAttendeeUserId())return waiter;}}"}

Minimal simplified code:
SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if(getAttendeeUserId())return waiter;}}

