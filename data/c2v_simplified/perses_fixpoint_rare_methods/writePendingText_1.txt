
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-liberty-schema/src/main/java/com/sun/identity/federation/jaxb/entityconfig/impl/runtime/MSVValidator_writePendingText.java
method_name = writePendingText
method_body = private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } if (buf.length() > 1024) buf = new StringBuffer(); else buf.setLength(0); }

Trace of simplified code(s):

{"time": "2021-01-24 19:59:16.868159", "score": "0.4279", "loss": "1.728", "code": "class T { private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } if (buf.length() > 1024) buf = new StringBuffer(); else buf.setLength(0); } }"}
{"time": "2021-01-24 20:02:58.675566", "score": "0.9943", "loss": "0.0074", "code": "class T { private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } } }"}
{"time": "2021-01-24 20:05:39.314830", "score": "0.6536", "loss": "0.5644", "code": "class T { private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { } } }"}
{"time": "2021-01-24 20:07:51.892641", "score": "0.8881", "loss": "0.163", "code": "class T { private void writePendingText() throws SAXException { if (!acceptor.onText2( )) { } } }"}
{"time": "2021-01-24 20:09:10.870175", "score": "0.8881", "loss": "0.163", "code": "class T { void writePendingText() throws SAXException { if (!acceptor.onText2( )) { } } }"}
{"time": "2021-01-24 20:13:28.324371", "score": "0.8095", "loss": "0.2653", "code": "class T { void writePendingText() throws SAXException { if ( acceptor.onText2( )) { } } }"}

Minimal simplified code:
class T {
        void writePendingText() throws SAXException { if ( acceptor.onText2(                                )) {                                                                                                                           }                                                                           }
}


