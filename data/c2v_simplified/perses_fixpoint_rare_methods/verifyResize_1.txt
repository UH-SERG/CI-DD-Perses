
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/toolbox/ImageRequestTest_verifyResize.java
method_name = verifyResize
method_body = private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest("", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }

Trace of simplified code(s):

{"time": "2021-01-24 22:19:21.275381", "score": "0.9957", "loss": "0.0127", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); } }"}
{"time": "2021-01-24 22:22:30.471945", "score": "0.9993", "loss": "0.0024", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); } }"}
{"time": "2021-01-24 22:23:51.128199", "score": "0.9992", "loss": "0.0028", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); } }"}
{"time": "2021-01-24 22:25:12.994186", "score": "0.8686", "loss": "0.2871", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest(\"\", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); } }"}
{"time": "2021-01-24 22:32:26.416984", "score": "0.8842", "loss": "0.243", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest( ); } }"}
{"time": "2021-01-24 22:33:08.235702", "score": "0.6762", "loss": "0.5045", "code": "class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest( ); } }"}
{"time": "2021-01-24 22:39:25.287621", "score": "0.8129", "loss": "0.4765", "code": "class T { private void verifyResize(NetworkResponse networkResponse , int expectedHeight) { ImageRequest request ; } }"}
{"time": "2021-01-24 22:40:05.517929", "score": "0.8129", "loss": "0.4765", "code": "class T { void verifyResize(NetworkResponse networkResponse , int expectedHeight) { ImageRequest request ; } }"}

Minimal simplified code:
class T {
        void verifyResize(NetworkResponse networkResponse                                                                     , int expectedHeight) { ImageRequest request                                                                                   ;                                                                                                                                                                                                                                                                                                 }
}


