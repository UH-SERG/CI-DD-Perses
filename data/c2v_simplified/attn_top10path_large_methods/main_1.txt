
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/demos/LoadTest_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { "-help" }; } for (int i = 0; i < args.length; i++) { if ("-threads".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if ("-count".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println("Sending " + count + " messages."); } else if ("-pause".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if ("-break".equals(args[i])) { breakOnEx = true; } else if ("-shutdown".equals(args[i])) { shutdown = true; } else if ("-stats".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println("Stats every " + stats + " message"); } else if ("-sendoptions".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println("Setting send options to " + channelOptions); } else if ("-startoptions".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println("Setting start options to " + startoptions); } else if ("-size".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println("Message size will be:" + (size + 4) + " bytes"); } else if ("-mode".equals(args[i])) { if ("receive".equals(args[++i])) send = false; } else if ("-debug".equals(args[i])) { debug = true; } else if ("-help".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println("System test complete, sleeping to let threads finish."); Thread.sleep(60 * 1000 * 60); }

topk path-contexts:
[0.2583] string,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(StringLiteralExpr0),threads
[0.0650] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(MethodCallExpr0)_(NameExpr2),getruntime
[0.0630] string,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr2),test
[0.0618] string,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),startoptions
[0.0580] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),channel
[0.0576] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),count
[0.0476] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),test
[0.0461] string,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int
[0.0242] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length
[0.0223] args,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(NameExpr1),channel

topk terminals:
['string', 'threads', 'args', 'getruntime', 'string', 'test', 'string', 'startoptions', 'args', 'channel', 'args', 'count', 'args', 'test', 'string', 'int', 'args', 'length', 'args', 'channel']

