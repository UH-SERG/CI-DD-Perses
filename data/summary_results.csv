model,task,reduction_type,sample_type,exp_type,filename,score,loss,reduction_pass,reduction_time,initial_program,final_program,len_initial_chars,len_final_chars,len_minimal_chars,len_removed_chars,per_removed_chars,initial_tokens,final_tokens,len_initial_tokens,len_final_tokens,len_minimal_tokens,len_removed_tokens,per_removed_tokens
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 144, 'n_valid': 15, 'n_correct': 12}",46.726471,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },void onCreate(Bundle savedInstanceState){(savedInstanceState);(layout.onboarding);},134,83,14,51,42.5,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'savedInstanceState', ')', ';', '(', 'layout', '.', 'onboarding', ')', ';', '}']",27,18,6,9,42.85714285714285
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 272, 'n_valid': 31, 'n_correct': 23}",91.49714,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");("""");(sb.toString);}",211,51,14,160,81.21827411167513,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,24,6,28,60.86956521739131
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 199, 'n_valid': 22, 'n_correct': 22}",68.628955,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(null)return""""+"""";toString();}",135,50,14,85,70.24793388429752,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', 'return', '""""', '+', '""""', ';', 'toString', '(', ')', ';', '}']",29,19,6,10,43.47826086956522
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 361, 'n_valid': 35, 'n_correct': 33}",108.679374,"@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } }",void onCreate(Bundle savedInstanceState){onCreate();(layout);if((OnboardingFragment)){((this));}},365,97,14,268,76.35327635327636,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', '(', 'layout', ')', ';', 'if', '(', '(', 'OnboardingFragment', ')', ')', '{', '(', '(', 'this', ')', ')', ';', '}', '}']",66,30,6,36,60.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 202, 'n_valid': 20, 'n_correct': 15}",59.608558,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(){if(other instanceof Stock){(((Stock)).symbol);}return false;},146,78,12,68,50.74626865671642,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 202, 'n_valid': 20, 'n_correct': 15}",62.520592,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(){if(other instanceof Stock){(((Stock)).symbol);}return false;},146,78,12,68,50.74626865671642,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 135, 'n_valid': 12, 'n_correct': 11}",35.835747,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },void onCreate(Bundle savedInstanceState){onCreate();setContentView();},144,70,14,74,56.92307692307692,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 23, 'n_correct': 23}",68.334135,"@Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; }",String toString(){if(image){}},183,30,14,153,90.53254437869822,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'image', ')', '{', '}', '}']",43,12,6,31,83.78378378378379
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 261, 'n_valid': 28, 'n_correct': 27}",80.191432,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","String toString(){("""").append("""");(filterClass).append(sb());}",242,62,14,180,78.94736842105263,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', '(', '""""', ')', '.', 'append', '(', '""""', ')', ';', '(', 'filterClass', ')', '.', 'append', '(', 'sb', '(', ')', ')', ';', '}']",66,26,6,40,66.66666666666666
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 342, 'n_valid': 36, 'n_correct': 34}",105.765034,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",boolean equals(Object o){if(this==o){}if(getClass()){}other=(TldResourcePath)equals();},309,87,12,222,74.74747474747475,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'other', '=', '(', 'TldResourcePath', ')', 'equals', '(', ')', ';', '}']",83,33,6,50,64.93506493506493
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 185, 'n_valid': 20, 'n_correct': 19}",59.180334,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(){if(obj){equals(((CharEntry)).value);}},141,55,12,86,66.66666666666666,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'CharEntry', ')', ')', '.', 'value', ')', ';', '}', '}']",37,23,6,14,45.16129032258064
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 119, 'n_valid': 14, 'n_correct': 10}",42.174016,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },void init()throws ServletException{super.init;incrementAndGet();},99,65,10,34,38.20224719101123,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', ';', 'incrementAndGet', '(', ')', ';', '}']",23,16,6,7,41.17647058823529
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_2.txt,0.9894,0.0222,"{'n_total': 458, 'n_valid': 52, 'n_correct': 48}",162.098026,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","String toString(){StringWriter=(sw)("""");count();for(;;){((i));}toString();}",270,75,14,195,76.171875,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'StringWriter', '=', '(', 'sw', ')', '(', '""""', ')', ';', 'count', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",77,36,6,41,57.74647887323944
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 110, 'n_valid': 14, 'n_correct': 12}",38.963885,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },void onCreate(){onCreate();InitViewPager();},172,44,14,128,81.0126582278481,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']",39,14,6,25,75.75757575757575
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 142, 'n_valid': 17, 'n_correct': 15}",48.404425,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","void onCreate(){(""onCreate"");}",215,30,14,185,92.03980099502488,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', '(', '""onCreate""', ')', ';', '}']",52,10,6,42,91.30434782608695
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 224, 'n_valid': 32, 'n_correct': 27}",96.040559,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 209, 'n_valid': 21, 'n_correct': 19}",64.481471,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(Object obj){if(obj instanceof Function){}},136,57,12,79,63.70967741935484,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', '}', '}']",35,16,6,19,65.51724137931035
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 226, 'n_valid': 22, 'n_correct': 22}",66.193824,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },boolean equals(Object o){if(this==o)if((Column))(column);},186,58,12,128,73.5632183908046,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'if', '(', '(', 'Column', ')', ')', '(', 'column', ')', ';', '}']",50,24,6,26,59.09090909090909
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 206, 'n_valid': 19, 'n_correct': 18}",55.368624,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws Exception{{System("""","""");}setUp();}",181,54,11,127,74.70588235294117,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_10.txt,0.9999,0.0002,"{'n_total': 235, 'n_valid': 30, 'n_correct': 28}",90.434511,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },boolean equals(Object other){if(other instanceof Mark){}},247,57,12,190,80.85106382978722,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', '}', '}']",71,16,6,55,84.61538461538461
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 180, 'n_valid': 19, 'n_correct': 15}",61.363081,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","@Override String toString(){("""");(""]"");(sb);}",132,45,14,87,73.72881355932203,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'Override', 'String', 'toString', '(', ')', '{', '(', '""""', ')', ';', '(', '""]""', ')', ';', '(', 'sb', ')', ';', '}']",34,20,6,14,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 215, 'n_valid': 23, 'n_correct': 19}",68.131171,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } }","void onCreate(Bundle savedInstanceState){if(savedInstanceState){GuidedStepFragment.addAsRoot(FirstStepFragment(),android);}}",219,124,14,95,46.34146341463415,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'FirstStepFragment', '(', ')', ',', 'android', ')', ';', '}', '}']",46,25,6,21,52.5
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 159, 'n_valid': 25, 'n_correct': 19}",72.956425,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },boolean onCreate(){mOpenHelper=new VideoDbHelper(context);},175,59,14,116,72.04968944099379,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['boolean', 'onCreate', '(', ')', '{', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', '}']",35,14,6,21,72.41379310344827
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 378, 'n_valid': 30, 'n_correct': 30}",90.152106,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",boolean equals(Object obj){if((obj instanceof URL))(false);if(sameFile)((getRef()));},190,85,12,105,58.98876404494382,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '(', 'obj', 'instanceof', 'URL', ')', ')', '(', 'false', ')', ';', 'if', '(', 'sameFile', ')', '(', '(', 'getRef', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",87.077263,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 165, 'n_valid': 17, 'n_correct': 17}",50.455227,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",void execute()throws BuildException{execute();createLink();(sb);},165,65,13,100,65.78947368421053,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', ')', ';', 'createLink', '(', ')', ';', '(', 'sb', ')', ';', '}']",44,20,6,24,63.1578947368421
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 113, 'n_valid': 14, 'n_correct': 11}",42.474512,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },void setUp()throws Exception{super.setUp();},114,44,11,70,67.96116504854369,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}']",27,14,6,13,61.90476190476191
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 199, 'n_valid': 25, 'n_correct': 24}",72.105974,"@Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); }",void init()throws ServletException{messageSender();},278,52,10,226,84.32835820895522,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '(', ')', ';', '}']",52,12,6,40,86.95652173913044
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 369, 'n_valid': 33, 'n_correct': 31}",98.330635,"@Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); }","<T>T get(String name,Class<T>clazz){(name);if(index=null){(""""+"""");}get(intValue(),clazz);}",236,90,9,146,64.31718061674009,"['@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']","['<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', '(', 'name', ')', ';', 'if', '(', 'index', '=', 'null', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'get', '(', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']",61,44,6,17,30.909090909090907
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 278, 'n_valid': 22, 'n_correct': 22}",63.093187,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","void main(String[]args)throws Exception{((""""));(("""".getBytes()));}",179,66,10,113,66.86390532544378,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', '(', '""""', ')', ')', ';', '(', '(', '""""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']",50,28,6,22,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 209, 'n_valid': 18, 'n_correct': 18}",54.949028,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },void main(String[]args){try{(getSystemLookAndFeelClassName());}catch(Exception e){}GUI();},154,90,10,64,44.44444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', '(', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'GUI', '(', ')', ';', '}']",38,30,6,8,25.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 190, 'n_valid': 26, 'n_correct': 16}",77.046176,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(value==null){NoSuchElementException("""");}return value;}",109,66,9,43,43.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'NoSuchElementException', '(', '""""', ')', ';', '}', 'return', 'value', ';', '}']",25,22,6,3,15.789473684210526
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_3.txt,0.8094,0.2561,"{'n_total': 259, 'n_valid': 35, 'n_correct': 30}",104.341943,"@Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); }","void init(){("""");(XmlIdentifiers).put();}",365,41,10,324,91.26760563380282,"['@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}']","['void', 'init', '(', ')', '{', '(', '""""', ')', ';', '(', 'XmlIdentifiers', ')', '.', 'put', '(', ')', ';', '}']",61,18,6,43,78.18181818181819
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 164, 'n_valid': 27, 'n_correct': 11}",81.270734,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },void setUp(){session=mock(Session.class);processor=new HibernateProcessor(session);},107,84,11,23,23.958333333333336,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']",26,23,6,3,15.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 212, 'n_valid': 21, 'n_correct': 20}",60.051809,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }","void execute(Map<Object>context){("""");context("""",RootContextPath());}",201,69,13,132,70.2127659574468,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['void', 'execute', '(', 'Map', '<', 'Object', '>', 'context', ')', '{', '(', '""""', ')', ';', 'context', '(', '""""', ',', 'RootContextPath', '(', ')', ')', ';', '}']",42,24,6,18,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 239, 'n_valid': 34, 'n_correct': 25}",98.416739,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },void run(){try{client();client();}catch(Exception x){}},127,55,9,72,61.01694915254237,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'client', '(', ')', ';', 'client', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",33,24,6,9,33.33333333333333
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 212, 'n_valid': 21, 'n_correct': 20}",60.884131,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }","void execute(Map<Object>context){("""");context("""",RootContextPath());}",201,69,13,132,70.2127659574468,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['void', 'execute', '(', 'Map', '<', 'Object', '>', 'context', ')', '{', '(', '""""', ')', ';', 'context', '(', '""""', ',', 'RootContextPath', '(', ')', ')', ';', '}']",42,24,6,18,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 121, 'n_valid': 10, 'n_correct': 10}",28.98947,"@Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); }","void init(){("""").addBeforeOrdering("""");}",108,40,10,68,69.38775510204081,"['@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}']","['void', 'init', '(', ')', '{', '(', '""""', ')', '.', 'addBeforeOrdering', '(', '""""', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 210, 'n_valid': 23, 'n_correct': 23}",70.521066,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","Object get(Map<Object>key,Object defaultv){if(null){}}",166,54,9,112,71.3375796178344,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['Object', 'get', '(', 'Map', '<', 'Object', '>', 'key', ',', 'Object', 'defaultv', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",46,20,6,26,65.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 316, 'n_valid': 35, 'n_correct': 30}",106.556948,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","void main(String[]args)throws IOException{(JerseyApplication());("""");}",251,70,10,181,75.10373443983403,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', '(', 'JerseyApplication', '(', ')', ')', ';', '(', '""""', ')', ';', '}']",53,22,6,31,65.95744680851064
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 149, 'n_valid': 17, 'n_correct': 17}",51.113323,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },void main(String[]args){sender();},132,34,10,98,80.32786885245902,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'sender', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 379, 'n_valid': 38, 'n_correct': 34}",120.978693,"@Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); }","Integer get(long timeout,TimeUnit unit)throws TimeoutException{(unit);if(VALUE){ExecutionException(getString("""",result),null);}(result);}",350,137,9,213,62.4633431085044,"['@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}']","['Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'TimeoutException', '{', '(', 'unit', ')', ';', 'if', '(', 'VALUE', ')', '{', 'ExecutionException', '(', 'getString', '(', '""""', ',', 'result', ')', ',', 'null', ')', ';', '}', '(', 'result', ')', ';', '}']",73,39,6,34,50.74626865671642
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 135, 'n_valid': 14, 'n_correct': 14}",40.031923,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }","void setUp(){Solo(getInstrumentation(),getActivity);}",122,53,11,69,62.16216216216216,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', ')', ';', '}']",31,15,6,16,64.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_5.txt,0.9712,0.0324,"{'n_total': 364, 'n_valid': 43, 'n_correct': 30}",126.283775,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","void execute(){getStringByField("""");Metadata=(Metadata)("""");collector.emit(com,Values());(tuple);}",305,98,13,207,70.8904109589041,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'getStringByField', '(', '""""', ')', ';', 'Metadata', '=', '(', 'Metadata', ')', '(', '""""', ')', ';', 'collector', '.', 'emit', '(', 'com', ',', 'Values', '(', ')', ')', ';', '(', 'tuple', ')', ';', '}']",70,35,6,35,54.6875
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 236, 'n_valid': 21, 'n_correct': 20}",63.78331,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{sleep();}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 183, 'n_valid': 25, 'n_correct': 20}",73.324829,@Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); },V get(){if(keynull){}((key));},110,30,9,80,79.20792079207921,"['@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}']","['V', 'get', '(', ')', '{', 'if', '(', 'keynull', ')', '{', '}', '(', '(', 'key', ')', ')', ';', '}']",33,18,6,15,55.55555555555556
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 218, 'n_valid': 22, 'n_correct': 18}",68.911967,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","void run(){try{draw();}catch(Throwable t){logger(""""+getMessage());}}",149,68,9,81,57.85714285714286,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']",36,29,6,7,23.33333333333333
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 143, 'n_valid': 21, 'n_correct': 17}",60.493032,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },int hashCode(){result.hashCode();},174,34,14,140,87.5,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '.', 'hashCode', '(', ')', ';', '}']",45,12,6,33,84.61538461538461
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",48.692305,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }","void execute(){execute();((""""));}",123,33,13,90,81.81818181818183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 136, 'n_valid': 19, 'n_correct': 16}",55.741796,public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); },void init(){barPaint(true).setStyle();},152,39,10,113,79.5774647887324,"['public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}']","['void', 'init', '(', ')', '{', 'barPaint', '(', 'true', ')', '.', 'setStyle', '(', ')', ';', '}']",39,15,6,24,72.72727272727273
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 151, 'n_valid': 14, 'n_correct': 14}",44.207909,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","void setUp()throws Exception{("""");setUp();}",149,43,11,106,76.81159420289855,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_1.txt,0.9996,0.0007,"{'n_total': 419, 'n_valid': 44, 'n_correct': 44}",129.168368,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","void main(String[]args){(""""+getServerInfo());(""""+getServerBuilt());(""""+getServerNumber());(""""+(""""));}",579,101,10,478,84.00702987697716,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', '+', 'getServerInfo', '(', ')', ')', ';', '(', '""""', '+', 'getServerBuilt', '(', ')', ')', ';', '(', '""""', '+', 'getServerNumber', '(', ')', ')', ';', '(', '""""', '+', '(', '""""', ')', ')', ';', '}']",131,42,6,89,71.2
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_4.txt,0.4114,1.0723,"{'n_total': 721, 'n_valid': 89, 'n_correct': 62}",274.325686,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=(Net(""localhost"",""""));PostgresExecutable();format("""",config);}",946,171,11,775,82.88770053475936,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresProcess', '>', 'runtime', '=', '(', 'RuntimeConfigBuilder', '(', ')', '.', 'build', '(', ')', ')', ';', 'config', '=', '(', 'Net', '(', '""localhost""', ',', '""""', ')', ')', ';', 'PostgresExecutable', '(', ')', ';', 'format', '(', '""""', ',', 'config', ')', ';', '}']",207,46,6,161,80.09950248756219
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 121, 'n_valid': 10, 'n_correct': 10}",31.259259,"@Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); }","void init(FilterConfig fConfig)throws ServletException{("""");}",161,61,10,100,66.22516556291392,"['@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}']","['void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', '(', '""""', ')', ';', '}']",30,14,6,16,66.66666666666666
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 312, 'n_valid': 32, 'n_correct': 26}",95.1549,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(long timeout,TimeUnit unit){if((0)){(""""+timeout);}}",248,57,9,191,79.9163179916318,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', 'if', '(', '(', '0', ')', ')', '{', '(', '""""', '+', 'timeout', ')', ';', '}', '}']",51,25,6,26,57.77777777777777
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 354, 'n_valid': 40, 'n_correct': 40}",117.690705,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){((null)?0:hashCode());((null)?0:hashCode());},262,60,14,202,81.45161290322581,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",75,30,6,45,65.21739130434783
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 404, 'n_valid': 57, 'n_correct': 44}",176.527694,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 236, 'n_valid': 21, 'n_correct': 20}",68.203635,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{sleep();}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 143, 'n_valid': 13, 'n_correct': 13}",38.385268,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }","void execute()throws BuildException{("""".toString());}",140,53,13,87,68.50393700787401,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""""', '.', 'toString', '(', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 554, 'n_valid': 52, 'n_correct': 42}",162.117258,"@SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } }","<T>Expression<T>get(Expression<?>name){try{Class<?>clazz=getClass();return(Expression<T>)field.get(path);}catch(IllegalAccessException e){("""");}}",405,145,9,260,65.65656565656566,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}']","['<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'getClass', '(', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",94,55,6,39,44.31818181818182
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 195, 'n_valid': 21, 'n_correct': 18}",61.887244,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },void setUp()throws Exception{setUp();tomcat=(JreMemoryLeakPreventionListener());},182,81,11,101,59.06432748538012,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'setUp', '(', ')', ';', 'tomcat', '=', '(', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']",38,20,6,18,56.25
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 107, 'n_valid': 15, 'n_correct': 14}",44.792134,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },void init(ProcessingEnvironment env){;},193,39,10,154,84.15300546448088,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', ';', '}']",49,9,6,40,93.02325581395348
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 139, 'n_valid': 11, 'n_correct': 11}",35.241377,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },void main(String[]args){CreateTestTable().testPopulateData();},147,62,10,85,62.04379562043796,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'CreateTestTable', '(', ')', '.', 'testPopulateData', '(', ')', ';', '}']",32,18,6,14,53.84615384615385
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 171, 'n_valid': 15, 'n_correct': 15}",44.268488,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","void main(String[]args){("""");(args);}",136,37,10,99,78.57142857142857,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', 'args', ')', ';', '}']",30,18,6,12,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 229, 'n_valid': 21, 'n_correct': 21}",61.478379,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","void main(String[]args)throws Exception{(PostgresConfig(Version,"""")).info("""");}",273,79,10,194,73.76425855513308,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', 'PostgresConfig', '(', 'Version', ',', '""""', ')', ')', '.', 'info', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 269, 'n_valid': 24, 'n_correct': 24}",74.667628,@Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); },void init(WebConnection connection){try{}catch(IOException ioe){(ioe);}(EchoWriteListener());},293,94,10,199,70.31802120141343,"['@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}']","['void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', 'ioe', ')', ';', '}', '(', 'EchoWriteListener', '(', ')', ')', ';', '}']",64,28,6,36,62.06896551724138
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 365, 'n_valid': 40, 'n_correct': 31}",120.263394,"public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } }","String get(String key,Object...args){try{if(messageSource){getMessage();}return key;}catch(NoSuchMessageException e){}}",222,119,9,103,48.35680751173709,"['public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}']","['String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', ')', '{', 'getMessage', '(', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', '}', '}']",55,35,6,20,40.81632653061224
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 99, 'n_valid': 10, 'n_correct': 8}",29.153646,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","void execute()throws BuildException{(""serverinfo"");}",98,52,13,46,54.11764705882353,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""serverinfo""', ')', ';', '}']",22,12,6,10,62.5
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 198, 'n_valid': 20, 'n_correct': 20}",60.060111,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}},162,83,9,79,51.63398692810458,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'countUpOrAwait', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",44,24,6,20,52.63157894736842
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 228, 'n_valid': 27, 'n_correct': 27}",80.471974,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },int hashCode(){((null)?0:hashCode());},239,38,14,201,89.33333333333333,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",66,18,6,48,80.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 157, 'n_valid': 19, 'n_correct': 12}",56.52444,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }",void run(){dataRefresh();postDelayed(thisdelaytime);updateViewLayout();},150,72,9,78,55.319148936170215,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'postDelayed', '(', 'thisdelaytime', ')', ';', 'updateViewLayout', '(', ')', ';', '}']",33,19,6,14,51.85185185185185
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 241, 'n_valid': 29, 'n_correct': 29}",85.236038,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },int hashCode(){((name)?0:hashCode);},154,36,14,118,84.28571428571429,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'name', ')', '?', '0', ':', 'hashCode', ')', ';', '}']",45,16,6,29,74.35897435897436
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 272, 'n_valid': 31, 'n_correct': 23}",90.312044,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");("""");(sb.toString);}",211,51,14,160,81.21827411167513,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,24,6,28,60.86956521739131
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",86.903771,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 134, 'n_valid': 23, 'n_correct': 13}",69.834131,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){int result=x+y;},92,31,14,61,78.2051282051282,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', '+', 'y', ';', '}']",25,13,6,12,63.1578947368421
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",120.702465,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },int hashCode(){((key)hashCode());((null)?0:hashCode());},220,56,14,164,79.6116504854369,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'key', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 244, 'n_valid': 25, 'n_correct': 24}",73.959231,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);},317,101,11,216,70.58823529411765,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'addChannelListener', '(', ')', ';', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', '}', ')', ';', '(', 'Channel', ')', ';', '}']",72,26,6,46,69.6969696969697
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 107, 'n_valid': 13, 'n_correct': 11}",37.20624,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },void init(ServletConfig config)throws ServletException{;},107,57,10,50,51.546391752577314,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', ';', '}']",24,11,6,13,72.22222222222221
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 269, 'n_valid': 27, 'n_correct': 24}",78.200223,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },void init()throws ServletException{((_)).valueOf(getServletConfig().getInitParameter());},344,89,10,255,76.34730538922156,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', '(', '(', '_', ')', ')', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', ')', ')', ';', '}']",71,25,6,46,70.76923076923077
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 301, 'n_valid': 29, 'n_correct': 27}",84.482432,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","void setUp()throws Exception{if(SUPPORTED){System("""","""");}setUp().configureClientSsl();}",320,88,11,232,75.08090614886731,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'SUPPORTED', ')', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', '.', 'configureClientSsl', '(', ')', ';', '}']",61,29,6,32,58.18181818181818
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 134, 'n_valid': 23, 'n_correct': 13}",69.73585,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){int result=x+y;},92,31,14,61,78.2051282051282,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', '+', 'y', ';', '}']",25,13,6,12,63.1578947368421
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 404, 'n_valid': 57, 'n_correct': 44}",170.310907,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 135, 'n_valid': 16, 'n_correct': 13}",46.209987,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","void execute()throws BuildException{(("""").toString);}",122,53,13,69,63.30275229357798,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '(', '""""', ')', '.', 'toString', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",49.059502,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","void execute(){execute();((""""));}",126,33,13,93,82.30088495575221,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 143, 'n_valid': 21, 'n_correct': 17}",59.776032,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },int hashCode(){result.hashCode();},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '.', 'hashCode', '(', ')', ';', '}']",45,12,6,33,84.61538461538461
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 180, 'n_valid': 22, 'n_correct': 18}",67.854817,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },CBuffer get(CharSequence key){getEntry();return(entry=null)?null:value;},114,72,9,42,40.0,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'getEntry', '(', ')', ';', 'return', '(', 'entry', '=', 'null', ')', '?', 'null', ':', 'value', ';', '}']",30,23,6,7,29.166666666666668
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 415, 'n_valid': 40, 'n_correct': 40}",120.128382,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","void main(String args){try{langTools("""",langTools);(null);}catch(Exception e){(Level);}}",295,88,10,207,72.63157894736842,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', 'langTools', '(', '""""', ',', 'langTools', ')', ';', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'Level', ')', ';', '}', '}']",78,33,6,45,62.5
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 136, 'n_valid': 12, 'n_correct': 12}",36.493422,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",void main(String[]args)throws Exception{run();},124,47,10,77,67.54385964912281,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'run', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 245, 'n_valid': 31, 'n_correct': 21}",94.967421,public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; },int get(){if(start+off>=end){new ArrayIndexOutOfBoundsException();}return buff[off]&xFF;},132,89,9,43,34.959349593495936,"['public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}']","['int', 'get', '(', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'off', ']', '&', 'xFF', ';', '}']",35,29,6,6,20.689655172413797
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",50.276434,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","void execute(){execute();((""""));}",126,33,13,93,82.30088495575221,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 392, 'n_valid': 41, 'n_correct': 40}",123.181738,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },int hashCode(){((matches)hashCode());((null)?0:hashCode());},236,60,14,176,79.27927927927928,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'matches', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 211, 'n_valid': 29, 'n_correct': 27}",90.868266,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },int hashCode(){result=1*(completed?1:0);},213,41,14,172,86.4321608040201,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', '1', '*', '(', 'completed', '?', '1', ':', '0', ')', ';', '}']",59,18,6,41,77.35849056603774
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_9.txt,0.9999,0.0001,"{'n_total': 359, 'n_valid': 34, 'n_correct': 34}",100.459748,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(Object o){if(o){}if(getClass()){}that=(Key)(id);},268,64,12,204,79.6875,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'that', '=', '(', 'Key', ')', '(', 'id', ')', ';', '}']",85,31,6,54,68.35443037974683
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 202, 'n_valid': 21, 'n_correct': 21}",62.113557,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },boolean equals(){if(obj){(((NamingEntry)).name);}{}},152,52,12,100,71.42857142857143,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', '(', '(', '(', 'NamingEntry', ')', ')', '.', 'name', ')', ';', '}', '{', '}', '}']",40,24,6,16,47.05882352941176
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 318, 'n_valid': 25, 'n_correct': 23}",77.608816,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },void onCreate(Bundle savedInstanceState){super.onCreate(VideoCursorMapper());(getString());if(savedInstanceState){prepareEntranceTransition();}},319,144,14,175,57.377049180327866,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'VideoCursorMapper', '(', ')', ')', ';', '(', 'getString', '(', ')', ')', ';', 'if', '(', 'savedInstanceState', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', '}']",61,33,6,28,50.90909090909091
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 175, 'n_valid': 28, 'n_correct': 20}",80.989929,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },@Override void onCreate(){if(mNotifManager=null){getSystemService(Context);}},171,77,14,94,59.87261146496815,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['@', 'Override', 'void', 'onCreate', '(', ')', '{', 'if', '(', 'mNotifManager', '=', 'null', ')', '{', 'getSystemService', '(', 'Context', ')', ';', '}', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 135, 'n_valid': 12, 'n_correct': 11}",35.574046,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },void onCreate(Bundle savedInstanceState){onCreate();setContentView();},140,70,14,70,55.55555555555556,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 201, 'n_valid': 20, 'n_correct': 20}",59.477882,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },String toString(){for(Node n:children){(toString());}toString();},165,65,14,100,66.22516556291392,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', '(', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",44,25,6,19,50.0
code2vec,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 224, 'n_valid': 32, 'n_correct': 27}",93.611121,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,findMappings_1.txt,0.178,2.4832,"{'n_total': 332, 'n_valid': 50, 'n_correct': 14}",137.143532,@Override public String[] findMappings() { try { mappingsLock.readLock().lock(); return mappings.toArray(new String[mappings.size()]); } finally { mappingsLock.readLock().unlock(); } },@Override String[]findMappings(){try{mappingsLock.readLock().lock();return mappings.toArray(new String[mappings.size()]);}finally{readLock().unlock();}},184,152,18,32,19.27710843373494,"['@', 'Override', 'public', 'String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'return', 'mappings', '.', 'toArray', '(', 'new', 'String', '[', 'mappings', '.', 'size', '(', ')', ']', ')', ';', '}', 'finally', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']","['@', 'Override', 'String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'return', 'mappings', '.', 'toArray', '(', 'new', 'String', '[', 'mappings', '.', 'size', '(', ')', ']', ')', ';', '}', 'finally', '{', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']",53,50,6,3,6.382978723404255
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,releaseObject_1.txt,0.4315,1.8319,"{'n_total': 275, 'n_valid': 32, 'n_correct': 21}",90.506127,"@ChromeDevtoolsMethod public void releaseObject(JsonRpcPeer peer, JSONObject params) throws JSONException { String objectId = params.getString(""objectId""); getSession(peer).getObjects().removeObjectById(Integer.parseInt(objectId)); }","void releaseObject(JsonRpcPeer peer,JSONObject params){("""");getObjects().removeObjectById((objectId));}",233,103,19,130,60.74766355140186,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'releaseObject', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', 'throws', 'JSONException', '{', 'String', 'objectId', '=', 'params', '.', 'getString', '(', '""objectId""', ')', ';', 'getSession', '(', 'peer', ')', '.', 'getObjects', '(', ')', '.', 'removeObjectById', '(', 'Integer', '.', 'parseInt', '(', 'objectId', ')', ')', ';', '}']","['void', 'releaseObject', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', '(', '""""', ')', ';', 'getObjects', '(', ')', '.', 'removeObjectById', '(', '(', 'objectId', ')', ')', ';', '}']",45,26,6,19,48.71794871794872
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,clearUndo_1.txt,0.491,0.7137,"{'n_total': 110, 'n_valid': 14, 'n_correct': 8}",39.525113,@Override public void clearUndo() { m_UndoList = new Vector<File>(); },@Override void clearUndo(){mUndoList=new Vector<File>();},70,57,15,13,23.63636363636364,"['@', 'Override', 'public', 'void', 'clearUndo', '(', ')', '{', 'm_UndoList', '=', 'new', 'Vector', '<', 'File', '>', '(', ')', ';', '}']","['@', 'Override', 'void', 'clearUndo', '(', ')', '{', 'mUndoList', '=', 'new', 'Vector', '<', 'File', '>', '(', ')', ';', '}']",19,18,6,1,7.6923076923076925
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getStatusDetail_1.txt,0.4784,1.1596,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",24.946733,public Element getStatusDetail() { return statusDetail; },Element getStatusDetail(){return statusDetail;},57,47,21,10,27.77777777777778,"['public', 'Element', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}']","['Element', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getServiceTypeName_1.txt,0.4639,0.8241,"{'n_total': 68, 'n_valid': 10, 'n_correct': 6}",28.425272,public String getServiceTypeName() { return (serviceTypeName); },String getServiceTypeName(){return(serviceTypeName);},64,53,24,11,27.500000000000004,"['public', 'String', 'getServiceTypeName', '(', ')', '{', 'return', '(', 'serviceTypeName', ')', ';', '}']","['String', 'getServiceTypeName', '(', ')', '{', 'return', '(', 'serviceTypeName', ')', ';', '}']",12,11,6,1,16.666666666666664
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getOpenSessions_1.txt,0.2266,3.0289,"{'n_total': 124, 'n_valid': 18, 'n_correct': 13}",48.703444,@Override public Set<Session> getOpenSessions() { checkState(); return webSocketContainer.getOpenSessions(localEndpoint.getClass()); },Set<Session>getOpenSessions(){getOpenSessions(localEndpoint);},134,62,21,72,63.71681415929204,"['@', 'Override', 'public', 'Set', '<', 'Session', '>', 'getOpenSessions', '(', ')', '{', 'checkState', '(', ')', ';', 'return', 'webSocketContainer', '.', 'getOpenSessions', '(', 'localEndpoint', '.', 'getClass', '(', ')', ')', ';', '}']","['Set', '<', 'Session', '>', 'getOpenSessions', '(', ')', '{', 'getOpenSessions', '(', 'localEndpoint', ')', ';', '}']",28,14,6,14,63.63636363636363
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getJoinClause_1.txt,0.3672,1.7936,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",25.03761,public ValueNode getJoinClause() { return joinClause; },ValueNode getJoinClause(){return joinClause;},55,45,19,10,27.77777777777778,"['public', 'ValueNode', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}']","['ValueNode', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onCancelProgress_1.txt,0.4463,0.9729,"{'n_total': 140, 'n_valid': 17, 'n_correct': 10}",47.720179,@Override public void onCancelProgress() { if (!this.isUnsubscribed()) { this.unsubscribe(); } },void onCancelProgress(){if(!this.isUnsubscribed()){this.unsubscribe();}},96,72,22,24,32.432432432432435,"['@', 'Override', 'public', 'void', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'isUnsubscribed', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}']","['void', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'isUnsubscribed', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}']",26,23,6,3,15.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,drawCachedBitmapWithRootAlpha_1.txt,0.4204,1.5179,"{'n_total': 262, 'n_valid': 37, 'n_correct': 24}",105.253144,"public void drawCachedBitmapWithRootAlpha(Canvas canvas, ColorFilter filter, Rect originalBounds) { final Paint p = getPaint(filter); canvas.drawBitmap(mCachedBitmap, null, originalBounds, p); }","void drawCachedBitmapWithRootAlpha(Canvas canvas,ColorFilter filter,Rect originalBounds){p().drawBitmap(mCachedBitmap,null);}",194,125,35,69,43.39622641509434,"['public', 'void', 'drawCachedBitmapWithRootAlpha', '(', 'Canvas', 'canvas', ',', 'ColorFilter', 'filter', ',', 'Rect', 'originalBounds', ')', '{', 'final', 'Paint', 'p', '=', 'getPaint', '(', 'filter', ')', ';', 'canvas', '.', 'drawBitmap', '(', 'mCachedBitmap', ',', 'null', ',', 'originalBounds', ',', 'p', ')', ';', '}']","['void', 'drawCachedBitmapWithRootAlpha', '(', 'Canvas', 'canvas', ',', 'ColorFilter', 'filter', ',', 'Rect', 'originalBounds', ')', '{', 'p', '(', ')', '.', 'drawBitmap', '(', 'mCachedBitmap', ',', 'null', ')', ';', '}']",37,25,6,12,38.70967741935484
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getIdForObject_1.txt,0.2976,2.555,"{'n_total': 142, 'n_valid': 17, 'n_correct': 10}",49.511369,@Nullable public Integer getIdForObject(Object object) { synchronized (mSync) { return mObjectToIdMap.get(object); } },Integer getIdForObject(Object object){synchronized(mSync){return mObjectToIdMap.get(object);}},118,94,20,24,24.489795918367346,"['@', 'Nullable', 'public', 'Integer', 'getIdForObject', '(', 'Object', 'object', ')', '{', 'synchronized', '(', 'mSync', ')', '{', 'return', 'mObjectToIdMap', '.', 'get', '(', 'object', ')', ';', '}', '}']","['Integer', 'getIdForObject', '(', 'Object', 'object', ')', '{', 'synchronized', '(', 'mSync', ')', '{', 'return', 'mObjectToIdMap', '.', 'get', '(', 'object', ')', ';', '}', '}']",25,22,6,3,15.789473684210526
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getVariantProperty_1.txt,0.4638,1.6677,"{'n_total': 79, 'n_valid': 8, 'n_correct': 7}",21.772749,public PropertyEnum getVariantProperty(int pageNum) { return this.pageNumToProperty.get(pageNum); },PropertyEnum getVariantProperty(int pageNum){(pageNum);},99,56,24,43,57.333333333333336,"['public', 'PropertyEnum', 'getVariantProperty', '(', 'int', 'pageNum', ')', '{', 'return', 'this', '.', 'pageNumToProperty', '.', 'get', '(', 'pageNum', ')', ';', '}']","['PropertyEnum', 'getVariantProperty', '(', 'int', 'pageNum', ')', '{', '(', 'pageNum', ')', ';', '}']",19,12,6,7,53.84615384615385
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,acceptSocket_1.txt,0.3392,1.1936,"{'n_total': 355, 'n_valid': 34, 'n_correct': 30}",103.475146,"@Override public Socket acceptSocket(ServerSocket socket) throws IOException { SSLSocket asock = null; try { asock = (SSLSocket) socket.accept(); } catch (SSLException e) { throw new SocketException(""SSL handshake error"" + e.toString()); } return asock; }","@Override Socket acceptSocket(ServerSocket socket){try{asock=(SSLSocket)accept();}catch(SSLException e){("""");}}",255,111,18,144,60.75949367088608,"['@', 'Override', 'public', 'Socket', 'acceptSocket', '(', 'ServerSocket', 'socket', ')', 'throws', 'IOException', '{', 'SSLSocket', 'asock', '=', 'null', ';', 'try', '{', 'asock', '=', '(', 'SSLSocket', ')', 'socket', '.', 'accept', '(', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'throw', 'new', 'SocketException', '(', '""SSL handshake error""', '+', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'asock', ';', '}']","['@', 'Override', 'Socket', 'acceptSocket', '(', 'ServerSocket', 'socket', ')', '{', 'try', '{', 'asock', '=', '(', 'SSLSocket', ')', 'accept', '(', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",55,33,6,22,44.89795918367347
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setScalingType_1.txt,0.3675,3.4159,"{'n_total': 114, 'n_valid': 14, 'n_correct': 12}",39.301713,"public void setScalingType(RendererCommon.ScalingType scalingTypeMatchOrientation, RendererCommon.ScalingType scalingTypeMismatchOrientation) { ThreadUtils.checkIsOnMainThread(); videoLayoutMeasure.setScalingType(scalingTypeMatchOrientation, scalingTypeMismatchOrientation); requestLayout(); }",void setScalingType(RendererCommon scalingTypeMismatchOrientation){setScalingType(scalingTypeMatchOrientation);},293,112,20,181,66.30036630036629,"['public', 'void', 'setScalingType', '(', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMatchOrientation', ',', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMismatchOrientation', ')', '{', 'ThreadUtils', '.', 'checkIsOnMainThread', '(', ')', ';', 'videoLayoutMeasure', '.', 'setScalingType', '(', 'scalingTypeMatchOrientation', ',', 'scalingTypeMismatchOrientation', ')', ';', 'requestLayout', '(', ')', ';', '}']","['void', 'setScalingType', '(', 'RendererCommon', 'scalingTypeMismatchOrientation', ')', '{', 'setScalingType', '(', 'scalingTypeMatchOrientation', ')', ';', '}']",35,13,6,22,75.86206896551724
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setSpout_1.txt,0.3596,1.5657,"{'n_total': 302, 'n_valid': 27, 'n_correct': 25}",80.770311,"public SpoutDeclarer setSpout(String id, IRichSpout spout, Number parallelismHint) { validateComponentName(id); SpoutDeclarer s = new SpoutDeclarer(id, spout, parallelismHint); spouts.put(id, s); return s; }","SpoutDeclarer setSpout(String id,IRichSpout spout,Number parallelismHint){(spout);(s);}",207,87,14,120,62.17616580310881,"['public', 'SpoutDeclarer', 'setSpout', '(', 'String', 'id', ',', 'IRichSpout', 'spout', ',', 'Number', 'parallelismHint', ')', '{', 'validateComponentName', '(', 'id', ')', ';', 'SpoutDeclarer', 's', '=', 'new', 'SpoutDeclarer', '(', 'id', ',', 'spout', ',', 'parallelismHint', ')', ';', 'spouts', '.', 'put', '(', 'id', ',', 's', ')', ';', 'return', 's', ';', '}']","['SpoutDeclarer', 'setSpout', '(', 'String', 'id', ',', 'IRichSpout', 'spout', ',', 'Number', 'parallelismHint', ')', '{', '(', 'spout', ')', ';', '(', 's', ')', ';', '}']",45,22,6,23,58.97435897435898
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setActionMode_1.txt,0.3428,1.1626,"{'n_total': 95, 'n_valid': 12, 'n_correct': 9}",34.92482,private void setActionMode(int actionMode) { this.actionMode = actionMode; },void setActionMode(int actionMode){actionModeactionMode;},76,57,19,19,33.33333333333333,"['private', 'void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'this', '.', 'actionMode', '=', 'actionMode', ';', '}']","['void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'actionModeactionMode', ';', '}']",15,10,6,5,55.55555555555556
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getCurrentNetworkState_1.txt,0.4761,1.2122,"{'n_total': 76, 'n_valid': 10, 'n_correct': 5}",28.66297,public NetworkState getCurrentNetworkState() { return connectivityManagerDelegate.getNetworkState(); },NetworkState getCurrentNetworkState(){return connectivityManagerDelegate.getNetworkState();},102,92,28,10,13.513513513513514,"['public', 'NetworkState', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}']","['NetworkState', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}']",14,13,6,1,12.5
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setWrapStyleWord_1.txt,0.3973,2.0067,"{'n_total': 90, 'n_valid': 14, 'n_correct': 6}",37.451818,public void setWrapStyleWord(boolean value) { m_TextCode.setWrapStyleWord(value); },void setWrapStyleWord(boolean value){TextCode.setWrapStyleWord(value);},83,71,22,12,19.672131147540984,"['public', 'void', 'setWrapStyleWord', '(', 'boolean', 'value', ')', '{', 'm_TextCode', '.', 'setWrapStyleWord', '(', 'value', ')', ';', '}']","['void', 'setWrapStyleWord', '(', 'boolean', 'value', ')', '{', 'TextCode', '.', 'setWrapStyleWord', '(', 'value', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,closeAllShells_1.txt,0.4807,0.7569,"{'n_total': 84, 'n_valid': 10, 'n_correct': 7}",28.557429,public static void closeAllShells() throws IOException { Shell.closeAll(); },void closeAllShells()throws IOException{Shell.closeAll();},76,58,20,18,32.142857142857146,"['public', 'static', 'void', 'closeAllShells', '(', ')', 'throws', 'IOException', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}']","['void', 'closeAllShells', '(', ')', 'throws', 'IOException', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}']",16,14,6,2,20.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,applyExternalChanges_1.txt,0.407,2.5797,"{'n_total': 223, 'n_valid': 18, 'n_correct': 14}",53.161628,"@Override public void applyExternalChanges(User existingObject, APIUser object) throws GuacamoleException { if (object.getPassword() != null) existingObject.setPassword(object.getPassword()); existingObject.setAttributes(object.getAttributes()); }","@Override void applyExternalChanges(User existingObject,APIUser object)throws GuacamoleException{if(getPassword())(getAttributes());}",247,133,26,114,51.58371040723983,"['@', 'Override', 'public', 'void', 'applyExternalChanges', '(', 'User', 'existingObject', ',', 'APIUser', 'object', ')', 'throws', 'GuacamoleException', '{', 'if', '(', 'object', '.', 'getPassword', '(', ')', '!=', 'null', ')', 'existingObject', '.', 'setPassword', '(', 'object', '.', 'getPassword', '(', ')', ')', ';', 'existingObject', '.', 'setAttributes', '(', 'object', '.', 'getAttributes', '(', ')', ')', ';', '}']","['@', 'Override', 'void', 'applyExternalChanges', '(', 'User', 'existingObject', ',', 'APIUser', 'object', ')', 'throws', 'GuacamoleException', '{', 'if', '(', 'getPassword', '(', ')', ')', '(', 'getAttributes', '(', ')', ')', ';', '}']",48,27,6,21,50.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setHttpSession_1.txt,0.3168,1.6247,"{'n_total': 77, 'n_valid': 8, 'n_correct': 6}",24.188807,void setHttpSession(HttpSession hSession) { httpSession = hSession; },void setHttpSession(HttpSession hSession){httpSession;},69,55,20,14,28.57142857142857,"['void', 'setHttpSession', '(', 'HttpSession', 'hSession', ')', '{', 'httpSession', '=', 'hSession', ';', '}']","['void', 'setHttpSession', '(', 'HttpSession', 'hSession', ')', '{', 'httpSession', ';', '}']",12,10,6,2,33.33333333333333
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,upperFirstLetter_1.txt,0.2945,1.7626,"{'n_total': 361, 'n_valid': 40, 'n_correct': 25}",119.812434,"public static String upperFirstLetter(final String s) { if (s == null || s.length() == 0) return """"; if (!Character.isLowerCase(s.charAt(0))) return s; return String.valueOf((char) (s.charAt(0) - 32)) + s.substring(1); }",String upperFirstLetter(String s){if(s==Character.isLowerCase((0)))return String.valueOf((char)((0)-2))+(1);},220,109,22,111,56.060606060606055,"['public', 'static', 'String', 'upperFirstLetter', '(', 'final', 'String', 's', ')', '{', 'if', '(', 's', '==', 'null', '||', 's', '.', 'length', '(', ')', '==', '0', ')', 'return', '""""', ';', 'if', '(', '!', 'Character', '.', 'isLowerCase', '(', 's', '.', 'charAt', '(', '0', ')', ')', ')', 'return', 's', ';', 'return', 'String', '.', 'valueOf', '(', '(', 'char', ')', '(', 's', '.', 'charAt', '(', '0', ')', '-', '32', ')', ')', '+', 's', '.', 'substring', '(', '1', ')', ';', '}']","['String', 'upperFirstLetter', '(', 'String', 's', ')', '{', 'if', '(', 's', '==', 'Character', '.', 'isLowerCase', '(', '(', '0', ')', ')', ')', 'return', 'String', '.', 'valueOf', '(', '(', 'char', ')', '(', '(', '0', ')', '-', '2', ')', ')', '+', '(', '1', ')', ';', '}']",73,42,6,31,46.26865671641791
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setLastState_1.txt,0.4192,1.4964,"{'n_total': 81, 'n_valid': 10, 'n_correct': 7}",28.112028,protected void setLastState(int lastState) { this.lastState = lastState; },void setLastState(int lastState){this.lastState=lastState;},74,59,18,15,26.785714285714285,"['protected', 'void', 'setLastState', '(', 'int', 'lastState', ')', '{', 'this', '.', 'lastState', '=', 'lastState', ';', '}']","['void', 'setLastState', '(', 'int', 'lastState', ')', '{', 'this', '.', 'lastState', '=', 'lastState', ';', '}']",15,14,6,1,11.11111111111111
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getInsertPosition_1.txt,0.3956,1.9575,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",25.010172,public String getInsertPosition() { return insertPosition; },String getInsertPosition(){return insertPosition;},60,50,23,10,27.027027027027028,"['public', 'String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}']","['String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,launchTasks_1.txt,0.4094,1.3146,"{'n_total': 127, 'n_valid': 15, 'n_correct': 12}",44.48674,"@Override public Protos.Status launchTasks(Protos.OfferID offerId, Collection<Protos.TaskInfo> tasks) { return null; }","Protos launchTasks(Protos offerId,Collection<TaskInfo>tasks){;}",118,63,17,55,54.45544554455446,"['@', 'Override', 'public', 'Protos', '.', 'Status', 'launchTasks', '(', 'Protos', '.', 'OfferID', 'offerId', ',', 'Collection', '<', 'Protos', '.', 'TaskInfo', '>', 'tasks', ')', '{', 'return', 'null', ';', '}']","['Protos', 'launchTasks', '(', 'Protos', 'offerId', ',', 'Collection', '<', 'TaskInfo', '>', 'tasks', ')', '{', ';', '}']",26,15,6,11,55.00000000000001
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,presentationTimeMicroseconds_1.txt,0.4425,1.78,"{'n_total': 96, 'n_valid': 15, 'n_correct': 7}",40.370748,"@CalledByNative(""DequeueOutputResult"") private long presentationTimeMicroseconds() { return mPresentationTimeMicroseconds; }","@CalledByNative(""DequeueOutputResult"")long presentationTimeMicroseconds(){;}",124,76,34,48,53.333333333333336,"['@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'private', 'long', 'presentationTimeMicroseconds', '(', ')', '{', 'return', 'mPresentationTimeMicroseconds', ';', '}']","['@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'long', 'presentationTimeMicroseconds', '(', ')', '{', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getUserHistory_1.txt,0.3649,1.4313,"{'n_total': 151, 'n_valid': 13, 'n_correct': 8}",38.200925,@Override public ActivityRecordSet<ActivityRecord> getUserHistory() throws GuacamoleException { return new SimpleActivityRecordSet<ActivityRecord>(); },@Override ActivityRecordSet<ActivityRecord>getUserHistory()throws GuacamoleException{new SimpleActivityRecordSet<ActivityRecord>();},151,132,20,19,14.50381679389313,"['@', 'Override', 'public', 'ActivityRecordSet', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'SimpleActivityRecordSet', '<', 'ActivityRecord', '>', '(', ')', ';', '}']","['@', 'Override', 'ActivityRecordSet', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'new', 'SimpleActivityRecordSet', '<', 'ActivityRecord', '>', '(', ')', ';', '}']",23,21,6,2,11.76470588235294
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onFragmentDetached_1.txt,0.3826,1.1065,"{'n_total': 286, 'n_valid': 40, 'n_correct': 27}",112.523346,"public void onFragmentDetached(String tag) { FragmentManager fragmentManager = getSupportFragmentManager(); Fragment fragment = fragmentManager.findFragmentByTag(tag); if (fragment != null) { fragmentManager.beginTransaction().disallowAddToBackStack().setCustomAnimations(R.anim.slide_left, R.anim.slide_right).remove(fragment).commitNow(); unlockDrawer(); } }",void onFragmentDetached(){if(null){(right).remove(fragment).commitNow;}},360,72,24,288,85.71428571428571,"['public', 'void', 'onFragmentDetached', '(', 'String', 'tag', ')', '{', 'FragmentManager', 'fragmentManager', '=', 'getSupportFragmentManager', '(', ')', ';', 'Fragment', 'fragment', '=', 'fragmentManager', '.', 'findFragmentByTag', '(', 'tag', ')', ';', 'if', '(', 'fragment', '!=', 'null', ')', '{', 'fragmentManager', '.', 'beginTransaction', '(', ')', '.', 'disallowAddToBackStack', '(', ')', '.', 'setCustomAnimations', '(', 'R', '.', 'anim', '.', 'slide_left', ',', 'R', '.', 'anim', '.', 'slide_right', ')', '.', 'remove', '(', 'fragment', ')', '.', 'commitNow', '(', ')', ';', 'unlockDrawer', '(', ')', ';', '}', '}']","['void', 'onFragmentDetached', '(', ')', '{', 'if', '(', 'null', ')', '{', '(', 'right', ')', '.', 'remove', '(', 'fragment', ')', '.', 'commitNow', ';', '}', '}']",72,23,6,49,74.24242424242425
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onGetChildren_1.txt,0.3127,2.1598,"{'n_total': 444, 'n_valid': 43, 'n_correct': 38}",126.92786,"@Override protected void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }","void onGetChildren(ViewGroup element,Accumulator children){for(;;){(i);if(isChildVisible(childView)){(childElement);}}}",330,119,19,211,67.84565916398714,"['@', 'Override', 'protected', 'void', 'onGetChildren', '(', 'ViewGroup', 'element', ',', 'Accumulator', '<', 'Object', '>', 'children', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'N', '=', 'element', '.', 'getChildCount', '(', ')', ';', 'i', '<', 'N', ';', '++', 'i', ')', '{', 'final', 'View', 'childView', '=', 'element', '.', 'getChildAt', '(', 'i', ')', ';', 'if', '(', 'isChildVisible', '(', 'childView', ')', ')', '{', 'final', 'Object', 'childElement', '=', 'getElementForView', '(', 'element', ',', 'childView', ')', ';', 'children', '.', 'store', '(', 'childElement', ')', ';', '}', '}', '}']","['void', 'onGetChildren', '(', 'ViewGroup', 'element', ',', 'Accumulator', 'children', ')', '{', 'for', '(', ';', ';', ')', '{', '(', 'i', ')', ';', 'if', '(', 'isChildVisible', '(', 'childView', ')', ')', '{', '(', 'childElement', ')', ';', '}', '}', '}']",79,35,6,44,60.273972602739725
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getEntityDescriptor_1.txt,0.3199,1.3808,"{'n_total': 80, 'n_valid': 14, 'n_correct': 6}",36.56861,public java.util.List getEntityDescriptor() { return _getEntityDescriptor(); },java.util.List getEntityDescriptor(){return getEntityDescriptor();},78,67,25,11,20.75471698113208,"['public', 'java', '.', 'util', '.', 'List', 'getEntityDescriptor', '(', ')', '{', 'return', '_getEntityDescriptor', '(', ')', ';', '}']","['java', '.', 'util', '.', 'List', 'getEntityDescriptor', '(', ')', '{', 'return', 'getEntityDescriptor', '(', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getHavingClause_1.txt,0.4955,1.1377,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",24.964954,public ValueNode getHavingClause() { return havingClause; },ValueNode getHavingClause(){return havingClause;},59,49,21,10,26.31578947368421,"['public', 'ValueNode', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}']","['ValueNode', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getServerSessionContext_1.txt,0.1495,3.4322,"{'n_total': 50, 'n_valid': 8, 'n_correct': 4}",21.690123,ProvSSLSessionContext getServerSessionContext() { return serverSessionContext; },ProvSSLSessionContext getServerSessionContext(){return serverSessionContext;},80,77,29,3,5.88235294117647,"['ProvSSLSessionContext', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}']","['ProvSSLSessionContext', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}']",9,9,6,0,0.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,toValueArray_1.txt,0.3435,1.7992,"{'n_total': 461, 'n_valid': 57, 'n_correct': 44}",161.295872,private static String[] toValueArray(Vector values) { String[] tmp = new String[values.size()]; for (int i = 0; i != tmp.length; i++) { tmp[i] = (String) values.elementAt(i); } return tmp; },String[]toValueArray(Vector values){tmp[values()];for(;;i++){tmp[i]=(String)(i);}return tmp;},190,93,18,97,56.395348837209305,"['private', 'static', 'String', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'String', '[', ']', 'tmp', '=', 'new', 'String', '[', 'values', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '!=', 'tmp', '.', 'length', ';', 'i', '++', ')', '{', 'tmp', '[', 'i', ']', '=', '(', 'String', ')', 'values', '.', 'elementAt', '(', 'i', ')', ';', '}', 'return', 'tmp', ';', '}']","['String', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'tmp', '[', 'values', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'tmp', '[', 'i', ']', '=', '(', 'String', ')', '(', 'i', ')', ';', '}', 'return', 'tmp', ';', '}']",63,41,6,22,38.59649122807017
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setPss_1.txt,0.3612,2.8434,"{'n_total': 87, 'n_valid': 9, 'n_correct': 7}",26.819277,public void setPss(int pss) { this.pss = pss; },void setPss(int pss){pss pss;},47,30,12,17,48.57142857142857,"['public', 'void', 'setPss', '(', 'int', 'pss', ')', '{', 'this', '.', 'pss', '=', 'pss', ';', '}']","['void', 'setPss', '(', 'int', 'pss', ')', '{', 'pss', 'pss', ';', '}']",15,11,6,4,44.44444444444444
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setLogError_1.txt,0.3029,1.4257,"{'n_total': 101, 'n_valid': 14, 'n_correct': 11}",40.439215,public void setLogError(final boolean logError) { this.logError = logError; },void setLogError(boolean logError){logError=logError;},77,54,17,23,38.333333333333336,"['public', 'void', 'setLogError', '(', 'final', 'boolean', 'logError', ')', '{', 'this', '.', 'logError', '=', 'logError', ';', '}']","['void', 'setLogError', '(', 'boolean', 'logError', ')', '{', 'logError', '=', 'logError', ';', '}']",16,12,6,4,40.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setDirective_1.txt,0.4032,0.9317,"{'n_total': 150, 'n_valid': 18, 'n_correct': 13}",51.552683,"public void setDirective(Directive directive, String value) { directives.put(directive, value); }","void setDirective(Directive directive,String value){directives();}",97,66,18,31,39.24050632911392,"['public', 'void', 'setDirective', '(', 'Directive', 'directive', ',', 'String', 'value', ')', '{', 'directives', '.', 'put', '(', 'directive', ',', 'value', ')', ';', '}']","['void', 'setDirective', '(', 'Directive', 'directive', ',', 'String', 'value', ')', '{', 'directives', '(', ')', ';', '}']",21,15,6,6,40.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,finishCommand_1.txt,0.3903,1.1902,"{'n_total': 121, 'n_valid': 20, 'n_correct': 11}",55.668799,protected final void finishCommand() { this.executing = false; this.finished = true; this.notifyAll(); },void finishCommand(){this.executing=finished=notifyAll();},104,58,19,46,54.11764705882353,"['protected', 'final', 'void', 'finishCommand', '(', ')', '{', 'this', '.', 'executing', '=', 'false', ';', 'this', '.', 'finished', '=', 'true', ';', 'this', '.', 'notifyAll', '(', ')', ';', '}']","['void', 'finishCommand', '(', ')', '{', 'this', '.', 'executing', '=', 'finished', '=', 'notifyAll', '(', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,fromFlags_1.txt,0.4012,1.4482,"{'n_total': 93, 'n_valid': 8, 'n_correct': 8}",24.235109,public static final RedNetConnectionType fromFlags(short flags) { return connections.get(flags); },RedNetConnectionType fromFlags(short flags){(flags);},98,53,15,45,54.21686746987952,"['public', 'static', 'final', 'RedNetConnectionType', 'fromFlags', '(', 'short', 'flags', ')', '{', 'return', 'connections', '.', 'get', '(', 'flags', ')', ';', '}']","['RedNetConnectionType', 'fromFlags', '(', 'short', 'flags', ')', '{', '(', 'flags', ')', ';', '}']",19,12,6,7,53.84615384615385
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,preAnimateRemoveImpl_1.txt,0.4428,0.9425,"{'n_total': 124, 'n_valid': 15, 'n_correct': 11}",41.089117,"@Override protected void preAnimateRemoveImpl(RecyclerView.ViewHolder holder) { ViewCompat.setPivotX(holder.itemView, holder.itemView.getWidth()); }",void preAnimateRemoveImpl(RecyclerView holder){ViewCompat.setPivotX(holder);},148,77,26,71,58.19672131147541,"['@', 'Override', 'protected', 'void', 'preAnimateRemoveImpl', '(', 'RecyclerView', '.', 'ViewHolder', 'holder', ')', '{', 'ViewCompat', '.', 'setPivotX', '(', 'holder', '.', 'itemView', ',', 'holder', '.', 'itemView', '.', 'getWidth', '(', ')', ')', ';', '}']","['void', 'preAnimateRemoveImpl', '(', 'RecyclerView', 'holder', ')', '{', 'ViewCompat', '.', 'setPivotX', '(', 'holder', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setDefaultUri_1.txt,0.4727,1.2875,"{'n_total': 88, 'n_valid': 11, 'n_correct': 8}",32.293565,public final void setDefaultUri(String uri) { webServiceTemplate.setDefaultUri(uri); },void setDefaultUri(String uri){setDefaultUri;},86,46,19,40,59.70149253731343,"['public', 'final', 'void', 'setDefaultUri', '(', 'String', 'uri', ')', '{', 'webServiceTemplate', '.', 'setDefaultUri', '(', 'uri', ')', ';', '}']","['void', 'setDefaultUri', '(', 'String', 'uri', ')', '{', 'setDefaultUri', ';', '}']",17,10,6,7,63.63636363636363
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,removeLocationListener_1.txt,0.4702,0.7736,"{'n_total': 80, 'n_valid': 11, 'n_correct': 7}",30.829843,public synchronized void removeLocationListener(LocationListener listener) { locationListeners.remove(listener); },void removeLocationListener(LocationListener listener){locationListeners.remove;},114,81,28,33,38.372093023255815,"['public', 'synchronized', 'void', 'removeLocationListener', '(', 'LocationListener', 'listener', ')', '{', 'locationListeners', '.', 'remove', '(', 'listener', ')', ';', '}']","['void', 'removeLocationListener', '(', 'LocationListener', 'listener', ')', '{', 'locationListeners', '.', 'remove', ';', '}']",17,12,6,5,45.45454545454545
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,supportsReturnType_1.txt,0.4893,1.7947,"{'n_total': 323, 'n_valid': 36, 'n_correct': 28}",106.772564,"@Override public final boolean supportsReturnType(MethodParameter returnType) { Assert.isTrue(returnType.getParameterIndex() == -1, ""Parameter index is not -1""); if (returnType.getMethodAnnotation(ResponsePayload.class) == null) { return false; } else { return supportsResponsePayloadReturnType(returnType); } }","@Override boolean supportsReturnType(MethodParameter returnType){(returnType()=="""");if(null){(returnType);}}",311,108,24,203,70.73170731707317,"['@', 'Override', 'public', 'final', 'boolean', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', 'Assert', '.', 'isTrue', '(', 'returnType', '.', 'getParameterIndex', '(', ')', '==', '-', '1', ',', '""Parameter index is not -1""', ')', ';', 'if', '(', 'returnType', '.', 'getMethodAnnotation', '(', 'ResponsePayload', '.', 'class', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'supportsResponsePayloadReturnType', '(', 'returnType', ')', ';', '}', '}']","['@', 'Override', 'boolean', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', '(', 'returnType', '(', ')', '==', '""""', ')', ';', 'if', '(', 'null', ')', '{', '(', 'returnType', ')', ';', '}', '}']",55,28,6,27,55.10204081632652
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onOutputFormatChanged_1.txt,0.4324,0.977,"{'n_total': 96, 'n_valid': 12, 'n_correct': 6}",33.917141,@Override protected void onOutputFormatChanged(MediaFormat format) { mAudioPlayback.init(format); },@Override void onOutputFormatChanged(MediaFormat format){init(format);},99,71,27,28,38.88888888888889,"['@', 'Override', 'protected', 'void', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'mAudioPlayback', '.', 'init', '(', 'format', ')', ';', '}']","['@', 'Override', 'void', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'init', '(', 'format', ')', ';', '}']",18,15,6,3,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isSynthesized_1.txt,0.3271,3.0053,"{'n_total': 99, 'n_valid': 13, 'n_correct': 7}",35.757765,public boolean isSynthesized(ResResource res) { return mPackage.isSynthesized(res.getResSpec().getId()); },boolean isSynthesized(ResResource res){return mPackage.isSynthesized(res);},106,75,19,31,35.63218390804598,"['public', 'boolean', 'isSynthesized', '(', 'ResResource', 'res', ')', '{', 'return', 'mPackage', '.', 'isSynthesized', '(', 'res', '.', 'getResSpec', '(', ')', '.', 'getId', '(', ')', ')', ';', '}']","['boolean', 'isSynthesized', '(', 'ResResource', 'res', ')', '{', 'return', 'mPackage', '.', 'isSynthesized', '(', 'res', ')', ';', '}']",25,16,6,9,47.368421052631575
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getPollTime_1.txt,0.484,1.3666,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",24.532583,public int getPollTime() { return pollTime; },int getPollTime(){return pollTime;},45,35,17,10,35.714285714285715,"['public', 'int', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}']","['int', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getRationale_1.txt,0.4218,2.1693,"{'n_total': 279, 'n_valid': 36, 'n_correct': 24}",101.956363,"public String getRationale() { int count = getItemGradingDataArray().size(); if (count > 0) { ItemGradingData data = getItemGradingDataArray().get(count - 1); rationale = FormattedText.convertFormattedTextToPlaintext(data.getRationale()); } return Validator.check(rationale, """"); }","String getRationale(){count=size();if(0){(data);}return Validator.check(rationale,"""");}",281,87,18,194,73.76425855513308,"['public', 'String', 'getRationale', '(', ')', '{', 'int', 'count', '=', 'getItemGradingDataArray', '(', ')', '.', 'size', '(', ')', ';', 'if', '(', 'count', '>', '0', ')', '{', 'ItemGradingData', 'data', '=', 'getItemGradingDataArray', '(', ')', '.', 'get', '(', 'count', '-', '1', ')', ';', 'rationale', '=', 'FormattedText', '.', 'convertFormattedTextToPlaintext', '(', 'data', '.', 'getRationale', '(', ')', ')', ';', '}', 'return', 'Validator', '.', 'check', '(', 'rationale', ',', '""""', ')', ';', '}']","['String', 'getRationale', '(', ')', '{', 'count', '=', 'size', '(', ')', ';', 'if', '(', '0', ')', '{', '(', 'data', ')', ';', '}', 'return', 'Validator', '.', 'check', '(', 'rationale', ',', '""""', ')', ';', '}']",63,32,6,31,54.38596491228071
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setCountdown_1.txt,0.4973,0.7209,"{'n_total': 94, 'n_valid': 11, 'n_correct': 8}",32.426402,public void setCountdown(Integer countdown) { this.countdown = countdown; },void setCountdown(Integer countdown){countdown=countdown;},75,58,18,17,29.82456140350877,"['public', 'void', 'setCountdown', '(', 'Integer', 'countdown', ')', '{', 'this', '.', 'countdown', '=', 'countdown', ';', '}']","['void', 'setCountdown', '(', 'Integer', 'countdown', ')', '{', 'countdown', '=', 'countdown', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getInstanceMap_1.txt,0.4072,1.0946,"{'n_total': 511, 'n_valid': 41, 'n_correct': 41}",123.907762,"public static Map<String, List<Rule>> getInstanceMap(final NameType nameType, final RuleType rt, final String lang) { final Map<String, List<Rule>> rules = RULES.get(nameType).get(rt).get(lang); if (rules == null) { throw new IllegalArgumentException(String.format(""No rules found for %s, %s, %s."", nameType.getName(), rt.getName(), lang)); } return rules; }","Map<List<Rule>>getInstanceMap(NameType nameType,RuleType rt,String lang){Map<List<Rule>>rules=(lang);if(rules){(("""".getName()));}}",358,130,20,228,67.45562130177515,"['public', 'static', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'getInstanceMap', '(', 'final', 'NameType', 'nameType', ',', 'final', 'RuleType', 'rt', ',', 'final', 'String', 'lang', ')', '{', 'final', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'rules', '=', 'RULES', '.', 'get', '(', 'nameType', ')', '.', 'get', '(', 'rt', ')', '.', 'get', '(', 'lang', ')', ';', 'if', '(', 'rules', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""No rules found for %s, %s, %s.""', ',', 'nameType', '.', 'getName', '(', ')', ',', 'rt', '.', 'getName', '(', ')', ',', 'lang', ')', ')', ';', '}', 'return', 'rules', ';', '}']","['Map', '<', 'List', '<', 'Rule', '>', '>', 'getInstanceMap', '(', 'NameType', 'nameType', ',', 'RuleType', 'rt', ',', 'String', 'lang', ')', '{', 'Map', '<', 'List', '<', 'Rule', '>', '>', 'rules', '=', '(', 'lang', ')', ';', 'if', '(', 'rules', ')', '{', '(', '(', '""""', '.', 'getName', '(', ')', ')', ')', ';', '}', '}']",93,49,6,44,50.57471264367817
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setFuel_1.txt,0.4926,1.0749,"{'n_total': 81, 'n_valid': 7, 'n_correct': 6}",19.620106,"public void setFuel(ReactantStack newFuel) { setReactant(FUEL, newFuel); }","void setFuel(ReactantStack newFuel){setReactant(FUEL,newFuel);}",74,63,13,11,18.0327868852459,"['public', 'void', 'setFuel', '(', 'ReactantStack', 'newFuel', ')', '{', 'setReactant', '(', 'FUEL', ',', 'newFuel', ')', ';', '}']","['void', 'setFuel', '(', 'ReactantStack', 'newFuel', ')', '{', 'setReactant', '(', 'FUEL', ',', 'newFuel', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,removeSecurityRole_1.txt,0.4079,1.1881,"{'n_total': 83, 'n_valid': 12, 'n_correct': 8}",32.284925,@Override public void removeSecurityRole(String role) { securityRoles.remove(role); },void removeSecurityRole(String role){securityRoles.remove();},85,61,24,24,39.34426229508197,"['@', 'Override', 'public', 'void', 'removeSecurityRole', '(', 'String', 'role', ')', '{', 'securityRoles', '.', 'remove', '(', 'role', ')', ';', '}']","['void', 'removeSecurityRole', '(', 'String', 'role', ')', '{', 'securityRoles', '.', 'remove', '(', ')', ';', '}']",18,14,6,4,33.33333333333333
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,loadModelData_1.txt,0.3584,1.9809,"{'n_total': 113, 'n_valid': 12, 'n_correct': 10}",34.327858,"@Override public ModelData loadModelData(FileHandle fileHandle, ModelLoader.ModelParameters parameters) { return parseModel(fileHandle); }","ModelData loadModelData(FileHandle fileHandle,ModelParameters parameters){(fileHandle);}",138,88,19,50,42.01680672268908,"['@', 'Override', 'public', 'ModelData', 'loadModelData', '(', 'FileHandle', 'fileHandle', ',', 'ModelLoader', '.', 'ModelParameters', 'parameters', ')', '{', 'return', 'parseModel', '(', 'fileHandle', ')', ';', '}']","['ModelData', 'loadModelData', '(', 'FileHandle', 'fileHandle', ',', 'ModelParameters', 'parameters', ')', '{', '(', 'fileHandle', ')', ';', '}']",22,15,6,7,43.75
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,visitCharLiteral_1.txt,0.4465,2.0002,"{'n_total': 179, 'n_valid': 16, 'n_correct': 12}",50.819881,"@Override protected String visitCharLiteral(CharLiteral node, Void context) { return ""CHAR "" + formatStringLiteral(node.getValue()); }","String visitCharLiteral(CharLiteral node,Void context){return"" ""+(node);}",134,73,22,61,54.46428571428571,"['@', 'Override', 'protected', 'String', 'visitCharLiteral', '(', 'CharLiteral', 'node', ',', 'Void', 'context', ')', '{', 'return', '""CHAR ""', '+', 'formatStringLiteral', '(', 'node', '.', 'getValue', '(', ')', ')', ';', '}']","['String', 'visitCharLiteral', '(', 'CharLiteral', 'node', ',', 'Void', 'context', ')', '{', 'return', '"" ""', '+', '(', 'node', ')', ';', '}']",26,18,6,8,40.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getMaxTasks_1.txt,0.4888,0.788,"{'n_total': 53, 'n_valid': 8, 'n_correct': 6}",21.893498,public int getMaxTasks() { return maxTasks; },int getMaxTasks(){maxTasks;},45,28,17,17,60.71428571428571,"['public', 'int', 'getMaxTasks', '(', ')', '{', 'return', 'maxTasks', ';', '}']","['int', 'getMaxTasks', '(', ')', '{', 'maxTasks', ';', '}']",10,8,6,2,50.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onPreRemove_1.txt,0.4296,1.0286,"{'n_total': 178, 'n_valid': 14, 'n_correct': 10}",40.847531,"@Override public void onPreRemove(IoFilterChain filterChain, String name, NextFilter nextFilter) { filterChain.getSession().getConfig().setReaderIdleTime(0); }","void onPreRemove(IoFilterChain filterChain,String name,NextFilter nextFilter){getSession().getConfig().setReaderIdleTime;}",159,122,17,37,26.05633802816901,"['@', 'Override', 'public', 'void', 'onPreRemove', '(', 'IoFilterChain', 'filterChain', ',', 'String', 'name', ',', 'NextFilter', 'nextFilter', ')', '{', 'filterChain', '.', 'getSession', '(', ')', '.', 'getConfig', '(', ')', '.', 'setReaderIdleTime', '(', '0', ')', ';', '}']","['void', 'onPreRemove', '(', 'IoFilterChain', 'filterChain', ',', 'String', 'name', ',', 'NextFilter', 'nextFilter', ')', '{', 'getSession', '(', ')', '.', 'getConfig', '(', ')', '.', 'setReaderIdleTime', ';', '}']",32,24,6,8,30.76923076923077
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,parseTagFileDirectives_1.txt,0.4959,1.8067,"{'n_total': 298, 'n_valid': 57, 'n_correct': 29}",158.004569,"public Node.Nodes parseTagFileDirectives(String inFileName, Jar jar) throws FileNotFoundException, JasperException, IOException { boolean isTagFileSave = isTagFile; boolean directiveOnlySave = directiveOnly; isTagFile = true; directiveOnly = true; Node.Nodes page = doParse(inFileName, null, jar); directiveOnly = directiveOnlySave; isTagFile = isTagFileSave; return page; }","Node parseTagFileDirectives(String inFileName,Jar jar)throws FileNotFoundException,IOException{Nodes page=doParse();directiveOnly=page;}",374,136,28,238,68.78612716763006,"['public', 'Node', '.', 'Nodes', 'parseTagFileDirectives', '(', 'String', 'inFileName', ',', 'Jar', 'jar', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', ',', 'IOException', '{', 'boolean', 'isTagFileSave', '=', 'isTagFile', ';', 'boolean', 'directiveOnlySave', '=', 'directiveOnly', ';', 'isTagFile', '=', 'true', ';', 'directiveOnly', '=', 'true', ';', 'Node', '.', 'Nodes', 'page', '=', 'doParse', '(', 'inFileName', ',', 'null', ',', 'jar', ')', ';', 'directiveOnly', '=', 'directiveOnlySave', ';', 'isTagFile', '=', 'isTagFileSave', ';', 'return', 'page', ';', '}']","['Node', 'parseTagFileDirectives', '(', 'String', 'inFileName', ',', 'Jar', 'jar', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'Nodes', 'page', '=', 'doParse', '(', ')', ';', 'directiveOnly', '=', 'page', ';', '}']",63,26,6,37,64.91228070175438
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setNavBarColor_1.txt,0.4374,0.9107,"{'n_total': 152, 'n_valid': 16, 'n_correct': 12}",46.71189,"@RequiresApi(Build.VERSION_CODES.LOLLIPOP) public static void setNavBarColor(@NonNull final Window window, @ColorInt final int color) { window.setNavigationBarColor(color); }","void setNavBarColor(@NonNull Window window,@ColorInt int color){window.setNavigationBarColor();}",174,96,20,78,50.64935064935064,"['@', 'RequiresApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'LOLLIPOP', ')', 'public', 'static', 'void', 'setNavBarColor', '(', '@', 'NonNull', 'final', 'Window', 'window', ',', '@', 'ColorInt', 'final', 'int', 'color', ')', '{', 'window', '.', 'setNavigationBarColor', '(', 'color', ')', ';', '}']","['void', 'setNavBarColor', '(', '@', 'NonNull', 'Window', 'window', ',', '@', 'ColorInt', 'int', 'color', ')', '{', 'window', '.', 'setNavigationBarColor', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,valueBound_1.txt,0.4852,1.7213,"{'n_total': 213, 'n_valid': 25, 'n_correct': 17}",72.745712,public void valueBound(final SSLSessionBindingEvent event) { CallbackUtil.safeCallback(new Runnable() { public void run() { listener.valueBound(event); } }); },void valueBound(SSLSessionBindingEvent event){CallbackUtil(new Runnable(){void run(){listener.valueBound();}});},159,112,16,47,32.86713286713287,"['public', 'void', 'valueBound', '(', 'final', 'SSLSessionBindingEvent', 'event', ')', '{', 'CallbackUtil', '.', 'safeCallback', '(', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'listener', '.', 'valueBound', '(', 'event', ')', ';', '}', '}', ')', ';', '}']","['void', 'valueBound', '(', 'SSLSessionBindingEvent', 'event', ')', '{', 'CallbackUtil', '(', 'new', 'Runnable', '(', ')', '{', 'void', 'run', '(', ')', '{', 'listener', '.', 'valueBound', '(', ')', ';', '}', '}', ')', ';', '}']",36,30,6,6,20.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getOrderByType_1.txt,0.4153,1.2209,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",25.087422,public OrderByType getOrderByType() { return orderByType; },OrderByType getOrderByType(){return orderByType;},59,49,20,10,25.64102564102564,"['public', 'OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}']","['OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getSessionListener_1.txt,0.2991,1.6092,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",24.981551,public SessionAttributeListener getSessionListener() { return sessionListener; },SessionAttributeListener getSessionListener(){return sessionListener;},80,70,24,10,17.857142857142858,"['public', 'SessionAttributeListener', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}']","['SessionAttributeListener', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getTokenEndPosition_1.txt,0.9932,0.0214,"{'n_total': 620, 'n_valid': 62, 'n_correct': 56}",175.53707,"private static final int getTokenEndPosition(byte[] bytes, int off, int end, int version, boolean isName) { int pos = off; while (pos < end && (!CookieSupport.isHttpSeparator((char) bytes[pos]) || version == 0 && CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 && bytes[pos] != '=' && !CookieSupport.isV0Separator((char) bytes[pos]) || !isName && bytes[pos] == '=' && CookieSupport.ALLOW_EQUALS_IN_VALUE)) { pos++; } if (pos > end) { return end; } return pos; }","int getTokenEndPosition(byte[]bytes,int off,int end,int version,boolean isName){while((CookieSupport(bytes[pos])|((char)bytes)&VALUE)){}if(pos){}}",455,146,25,309,71.86046511627907,"['private', 'static', 'final', 'int', 'getTokenEndPosition', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'off', ',', 'int', 'end', ',', 'int', 'version', ',', 'boolean', 'isName', ')', '{', 'int', 'pos', '=', 'off', ';', 'while', '(', 'pos', '<', 'end', '&&', '(', '!', 'CookieSupport', '.', 'isHttpSeparator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', 'version', '==', '0', '&&', 'CookieSupport', '.', 'ALLOW_HTTP_SEPARATORS_IN_V0', '&&', 'bytes', '[', 'pos', ']', '!=', ""'='"", '&&', '!', 'CookieSupport', '.', 'isV0Separator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', '!', 'isName', '&&', 'bytes', '[', 'pos', ']', '==', ""'='"", '&&', 'CookieSupport', '.', 'ALLOW_EQUALS_IN_VALUE', ')', ')', '{', 'pos', '++', ';', '}', 'if', '(', 'pos', '>', 'end', ')', '{', 'return', 'end', ';', '}', 'return', 'pos', ';', '}']","['int', 'getTokenEndPosition', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'off', ',', 'int', 'end', ',', 'int', 'version', ',', 'boolean', 'isName', ')', '{', 'while', '(', '(', 'CookieSupport', '(', 'bytes', '[', 'pos', ']', ')', '|', '(', '(', 'char', ')', 'bytes', ')', '&', 'VALUE', ')', ')', '{', '}', 'if', '(', 'pos', ')', '{', '}', '}']",114,51,6,63,58.333333333333336
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getConditionName_1.txt,0.3356,2.9438,"{'n_total': 297, 'n_valid': 39, 'n_correct': 32}",113.110261,"private String getConditionName() { String conditionName = (String) propertySheetModel.getValue(CONDITION_NAME); conditionName = conditionName.trim(); if (conditionName.length() == 0) { setInlineAlertMessage(CCAlert.TYPE_ERROR, ""message.error"", ""policy.missing.conditionName""); conditionName = null; } return conditionName; }","String getConditionName(){(String);if(length()==0){("""");}return conditionName;}",325,79,22,246,81.1881188118812,"['private', 'String', 'getConditionName', '(', ')', '{', 'String', 'conditionName', '=', '(', 'String', ')', 'propertySheetModel', '.', 'getValue', '(', 'CONDITION_NAME', ')', ';', 'conditionName', '=', 'conditionName', '.', 'trim', '(', ')', ';', 'if', '(', 'conditionName', '.', 'length', '(', ')', '==', '0', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'TYPE_ERROR', ',', '""message.error""', ',', '""policy.missing.conditionName""', ')', ';', 'conditionName', '=', 'null', ';', '}', 'return', 'conditionName', ';', '}']","['String', 'getConditionName', '(', ')', '{', '(', 'String', ')', ';', 'if', '(', 'length', '(', ')', '==', '0', ')', '{', '(', '""""', ')', ';', '}', 'return', 'conditionName', ';', '}']",58,27,6,31,59.61538461538461
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getConnectionPermissions_1.txt,0.3991,1.5334,"{'n_total': 160, 'n_valid': 21, 'n_correct': 16}",61.578855,@Override public ObjectPermissionSet getConnectionPermissions() throws GuacamoleException { Directory<Connection> connectionDirectory = userContext.getConnectionDirectory(); return new SharedObjectPermissionSet(connectionDirectory.getIdentifiers()); },ObjectPermissionSet getConnectionPermissions()throws GuacamoleException{SharedObjectPermissionSet(connectionDirectory.getIdentifiers);},251,135,30,116,52.48868778280544,"['@', 'Override', 'public', 'ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'GuacamoleException', '{', 'Directory', '<', 'Connection', '>', 'connectionDirectory', '=', 'userContext', '.', 'getConnectionDirectory', '(', ')', ';', 'return', 'new', 'SharedObjectPermissionSet', '(', 'connectionDirectory', '.', 'getIdentifiers', '(', ')', ')', ';', '}']","['ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'GuacamoleException', '{', 'SharedObjectPermissionSet', '(', 'connectionDirectory', '.', 'getIdentifiers', ')', ';', '}']",34,15,6,19,67.85714285714286
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addServlets_1.txt,0.334,1.6351,"{'n_total': 327, 'n_valid': 32, 'n_correct': 23}",91.501002,"public static void addServlets(Tomcat tomcat) { Context ctx = tomcat.addContext("""", System.getProperty(""java.io.tmpdir"")); Tomcat.addServlet(ctx, path, new TestBug49158Servlet()); ctx.addServletMapping(""/"" + path, path); }","void addServlets(Tomcat tomcat){addContext("""",(""""));Tomcat.addServlet(ctx);ctx.addServletMapping(""""+path);}",222,107,17,115,56.09756097560976,"['public', 'static', 'void', 'addServlets', '(', 'Tomcat', 'tomcat', ')', '{', 'Context', 'ctx', '=', 'tomcat', '.', 'addContext', '(', '""""', ',', 'System', '.', 'getProperty', '(', '""java.io.tmpdir""', ')', ')', ';', 'Tomcat', '.', 'addServlet', '(', 'ctx', ',', 'path', ',', 'new', 'TestBug49158Servlet', '(', ')', ')', ';', 'ctx', '.', 'addServletMapping', '(', '""/""', '+', 'path', ',', 'path', ')', ';', '}']","['void', 'addServlets', '(', 'Tomcat', 'tomcat', ')', '{', 'addContext', '(', '""""', ',', '(', '""""', ')', ')', ';', 'Tomcat', '.', 'addServlet', '(', 'ctx', ')', ';', 'ctx', '.', 'addServletMapping', '(', '""""', '+', 'path', ')', ';', '}']",52,33,6,19,41.30434782608695
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,writePendingText_1.txt,0.9959,0.0059,"{'n_total': 467, 'n_valid': 60, 'n_correct': 40}",167.785233,"private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } if (buf.length() > 1024) buf = new StringBuffer(); else buf.setLength(0); }","void writePendingText(){if(!onText(this,null,null)){ref=StringRef();acceptor.onText(toString(),this,null);}(4);}",312,112,22,200,68.96551724137932,"['private', 'void', 'writePendingText', '(', ')', 'throws', 'SAXException', '{', 'if', '(', '!', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'null', ',', 'null', ')', ')', '{', 'StringRef', 'ref', '=', 'new', 'StringRef', '(', ')', ';', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'ref', ',', 'null', ')', ';', 'context', '.', 'reportEvent', '(', 'target', ',', 'ref', '.', 'str', ')', ';', '}', 'if', '(', 'buf', '.', 'length', '(', ')', '>', '1024', ')', 'buf', '=', 'new', 'StringBuffer', '(', ')', ';', 'else', 'buf', '.', 'setLength', '(', '0', ')', ';', '}']","['void', 'writePendingText', '(', ')', '{', 'if', '(', '!', 'onText', '(', 'this', ',', 'null', ',', 'null', ')', ')', '{', 'ref', '=', 'StringRef', '(', ')', ';', 'acceptor', '.', 'onText', '(', 'toString', '(', ')', ',', 'this', ',', 'null', ')', ';', '}', '(', '4', ')', ';', '}']",92,43,6,49,56.97674418604651
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setSoapVersion_1.txt,0.4847,1.1102,"{'n_total': 190, 'n_valid': 18, 'n_correct': 16}",53.35812,public void setSoapVersion(SoapVersion version) { if (version != SoapVersion.SOAP_11) { throw new UnsupportedOperationException(); } },void setSoapVersion(SoapVersion version){if(1){UnsupportedOperationException();}},134,81,20,53,46.49122807017544,"['public', 'void', 'setSoapVersion', '(', 'SoapVersion', 'version', ')', '{', 'if', '(', 'version', '!=', 'SoapVersion', '.', 'SOAP_11', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}', '}']","['void', 'setSoapVersion', '(', 'SoapVersion', 'version', ')', '{', 'if', '(', '1', ')', '{', 'UnsupportedOperationException', '(', ')', ';', '}', '}']",25,18,6,7,36.84210526315789
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,checkIsAlive_1.txt,0.3296,1.7891,"{'n_total': 81, 'n_valid': 8, 'n_correct': 5}",23.331119,void checkIsAlive() throws IllegalStateException { mContentViewCore.checkIsAlive(); },void checkIsAlive()throws IllegalStateException{mContentViewCore.checkIsAlive();},85,81,18,4,5.970149253731343,"['void', 'checkIsAlive', '(', ')', 'throws', 'IllegalStateException', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}']","['void', 'checkIsAlive', '(', ')', 'throws', 'IllegalStateException', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}']",14,14,6,0,0.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getResourceInformation_1.txt,0.4608,1.9781,"{'n_total': 118, 'n_valid': 14, 'n_correct': 8}",40.287246,public ResourceInformation getResourceInformation(String resourceType) { return resourceRegistry.getEntry(resourceType).getResourceInformation(); },ResourceInformation getResourceInformation(String resourceType){return(resourceType).getResourceInformation();},147,111,28,36,30.252100840336134,"['public', 'ResourceInformation', 'getResourceInformation', '(', 'String', 'resourceType', ')', '{', 'return', 'resourceRegistry', '.', 'getEntry', '(', 'resourceType', ')', '.', 'getResourceInformation', '(', ')', ';', '}']","['ResourceInformation', 'getResourceInformation', '(', 'String', 'resourceType', ')', '{', 'return', '(', 'resourceType', ')', '.', 'getResourceInformation', '(', ')', ';', '}']",21,17,6,4,26.666666666666668
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setSocketBuffer_1.txt,0.3012,2.0785,"{'n_total': 151, 'n_valid': 16, 'n_correct': 12}",47.183821,@Override public void setSocketBuffer(int socketBuffer) { super.setSocketBuffer(socketBuffer); outputBuffer.setSocketBuffer(socketBuffer); },void setSocketBuffer(int socketBuffer){(socketBuffer);(socketBuffer);},140,70,21,70,58.82352941176471,"['@', 'Override', 'public', 'void', 'setSocketBuffer', '(', 'int', 'socketBuffer', ')', '{', 'super', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', 'outputBuffer', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', '}']","['void', 'setSocketBuffer', '(', 'int', 'socketBuffer', ')', '{', '(', 'socketBuffer', ')', ';', '(', 'socketBuffer', ')', ';', '}']",25,16,6,9,47.368421052631575
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getTimePoints_1.txt,0.3224,2.276,"{'n_total': 97, 'n_valid': 13, 'n_correct': 7}",35.14834,List<TimePoint> getTimePoints() { return Arrays.asList(timePoints); },List<TimePoint>getTimePoints(){return(timePoints);},69,51,19,18,36.0,"['List', '<', 'TimePoint', '>', 'getTimePoints', '(', ')', '{', 'return', 'Arrays', '.', 'asList', '(', 'timePoints', ')', ';', '}']","['List', '<', 'TimePoint', '>', 'getTimePoints', '(', ')', '{', 'return', '(', 'timePoints', ')', ';', '}']",17,14,6,3,27.27272727272727
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getInbox_1.txt,0.3322,1.5217,"{'n_total': 105, 'n_valid': 16, 'n_correct': 8}",44.663728,"protected Folder getInbox() throws MessagingException { return getStore().getFolder(""INBOX""); }","Folder getInbox()throws MessagingException{return getStore(""INBOX"");}",95,69,14,26,32.098765432098766,"['protected', 'Folder', 'getInbox', '(', ')', 'throws', 'MessagingException', '{', 'return', 'getStore', '(', ')', '.', 'getFolder', '(', '""INBOX""', ')', ';', '}']","['Folder', 'getInbox', '(', ')', 'throws', 'MessagingException', '{', 'return', 'getStore', '(', '""INBOX""', ')', ';', '}']",19,14,6,5,38.46153846153847
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getLastmod_1.txt,0.4513,1.2012,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",25.016149,public String getLastmod() { return lastmod; },String getLastmod(){return lastmod;},46,36,16,10,33.33333333333333,"['public', 'String', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}']","['String', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,startPreviewActivity_1.txt,0.1947,3.1609,"{'n_total': 291, 'n_valid': 65, 'n_correct': 19}",177.458243,"private void startPreviewActivity() { Intent intent = PreviewActivity.newIntent(this, getMediaAction(), getCameraController().getOutputFile().toString(), cameraControlPanel.showCrop()); startActivityForResult(intent, REQUEST_PREVIEW_CODE); }","void startPreviewActivity(){Intent intent=PreviewActivity.newIntent(this,getMediaAction(),getCameraController().getOutputFile().toString());startActivityForResult(REQUESTCODE);}",241,177,26,64,29.76744186046512,"['private', 'void', 'startPreviewActivity', '(', ')', '{', 'Intent', 'intent', '=', 'PreviewActivity', '.', 'newIntent', '(', 'this', ',', 'getMediaAction', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 'toString', '(', ')', ',', 'cameraControlPanel', '.', 'showCrop', '(', ')', ')', ';', 'startActivityForResult', '(', 'intent', ',', 'REQUEST_PREVIEW_CODE', ')', ';', '}']","['void', 'startPreviewActivity', '(', ')', '{', 'Intent', 'intent', '=', 'PreviewActivity', '.', 'newIntent', '(', 'this', ',', 'getMediaAction', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 'toString', '(', ')', ')', ';', 'startActivityForResult', '(', 'REQUESTCODE', ')', ';', '}']",46,37,6,9,22.5
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getResponseBytes_1.txt,0.388,2.0139,"{'n_total': 83, 'n_valid': 16, 'n_correct': 7}",41.708947,public byte[] getResponseBytes() { return _transaction.getResponseBytes(); },byte[]getResponseBytes(){return transaction.getResponseBytes();},76,64,22,12,22.22222222222222,"['public', 'byte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', '_transaction', '.', 'getResponseBytes', '(', ')', ';', '}']","['byte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', 'transaction', '.', 'getResponseBytes', '(', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getQuestionNumber_1.txt,0.26,3.5219,"{'n_total': 102, 'n_valid': 14, 'n_correct': 9}",39.208368,"public String getQuestionNumber() { return Validator.check(questionNumber, ""N/A""); }","String getQuestionNumber(){Validator.check(questionNumber,"""");}",84,63,23,21,34.42622950819672,"['public', 'String', 'getQuestionNumber', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'questionNumber', ',', '""N/A""', ')', ';', '}']","['String', 'getQuestionNumber', '(', ')', '{', 'Validator', '.', 'check', '(', 'questionNumber', ',', '""""', ')', ';', '}']",17,15,6,2,18.181818181818183
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setOverlap_1.txt,0.4925,0.7974,"{'n_total': 81, 'n_valid': 11, 'n_correct': 8}",31.114582,public void setOverlap(double overlap) { this.overlap = overlap; },void setOverlap(double overlap){thisoverlap=overlap;},66,53,16,13,26.0,"['public', 'void', 'setOverlap', '(', 'double', 'overlap', ')', '{', 'this', '.', 'overlap', '=', 'overlap', ';', '}']","['void', 'setOverlap', '(', 'double', 'overlap', ')', '{', 'thisoverlap', '=', 'overlap', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getDefaultRemoteAddress_1.txt,0.4303,1.3443,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",25.023009,public SocketAddress getDefaultRemoteAddress() { return defaultRemoteAddress; },SocketAddress getDefaultRemoteAddress(){return defaultRemoteAddress;},79,69,29,10,20.0,"['public', 'SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}']","['SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getWaiter_1.txt,0.1653,4.8084,"{'n_total': 281, 'n_valid': 28, 'n_correct': 23}",83.73688,public SignupAttendee getWaiter(String attendeeId) { if (waitingList == null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; },SignupAttendee getWaiter(String attendeeId){if(null)for(SignupAttendee waiter:waitingList){if(getAttendeeUserId())return waiter;}},217,130,15,87,43.06930693069307,"['public', 'SignupAttendee', 'getWaiter', '(', 'String', 'attendeeId', ')', '{', 'if', '(', 'waitingList', '==', 'null', ')', 'return', 'null', ';', 'for', '(', 'SignupAttendee', 'waiter', ':', 'waitingList', ')', '{', 'if', '(', 'waiter', '.', 'getAttendeeUserId', '(', ')', '.', 'equals', '(', 'attendeeId', ')', ')', 'return', 'waiter', ';', '}', 'return', 'null', ';', '}']","['SignupAttendee', 'getWaiter', '(', 'String', 'attendeeId', ')', '{', 'if', '(', 'null', ')', 'for', '(', 'SignupAttendee', 'waiter', ':', 'waitingList', ')', '{', 'if', '(', 'getAttendeeUserId', '(', ')', ')', 'return', 'waiter', ';', '}', '}']",46,30,6,16,40.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setDebugOutput_1.txt,0.4052,1.0324,"{'n_total': 80, 'n_valid': 13, 'n_correct': 9}",35.731523,public static void setDebugOutput(Writer writer) { debugOutput = writer; },void setDebugOutput(Writer writer){debugOutput=writer;},74,55,20,19,35.18518518518518,"['public', 'static', 'void', 'setDebugOutput', '(', 'Writer', 'writer', ')', '{', 'debugOutput', '=', 'writer', ';', '}']","['void', 'setDebugOutput', '(', 'Writer', 'writer', ')', '{', 'debugOutput', '=', 'writer', ';', '}']",14,12,6,2,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getSharedState_1.txt,0.3259,2.2093,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",24.940088,public Map getSharedState() { return sharedState; },Map getSharedState(){return sharedState;},51,41,20,10,32.25806451612903,"['public', 'Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}']","['Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setExclusionStrategies_1.txt,0.4952,0.7062,"{'n_total': 192, 'n_valid': 14, 'n_correct': 14}",43.838097,public Builder setExclusionStrategies(ExclusionStrategy... strategies) { for (ExclusionStrategy strategy : strategies) { addSerializationExclusionStrategy(strategy); } return this; },Builder setExclusionStrategies(ExclusionStrategy...strategies){for(ExclusionStrategy strategy:strategies){(strategy);}},182,119,28,63,40.909090909090914,"['public', 'Builder', 'setExclusionStrategies', '(', 'ExclusionStrategy', '...', 'strategies', ')', '{', 'for', '(', 'ExclusionStrategy', 'strategy', ':', 'strategies', ')', '{', 'addSerializationExclusionStrategy', '(', 'strategy', ')', ';', '}', 'return', 'this', ';', '}']","['Builder', 'setExclusionStrategies', '(', 'ExclusionStrategy', '...', 'strategies', ')', '{', 'for', '(', 'ExclusionStrategy', 'strategy', ':', 'strategies', ')', '{', '(', 'strategy', ')', ';', '}', '}']",27,22,6,5,23.809523809523807
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isShearable_1.txt,0.4019,1.0124,"{'n_total': 273, 'n_valid': 25, 'n_correct': 21}",71.401962,"@Override public boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos) { IBlockState state = world.getBlockState(pos); switch((BOPPlants) state.getValue(this.variantProperty)) { case CATTAIL: case RIVERCANE: return false; default: return true; } }","boolean isShearable(ItemStack item,IBlockAccess pos){(pos);switch((BOPPlants)(this)){case CATTAIL:}}",263,100,17,163,66.26016260162602,"['@', 'Override', 'public', 'boolean', 'isShearable', '(', 'ItemStack', 'item', ',', 'IBlockAccess', 'world', ',', 'BlockPos', 'pos', ')', '{', 'IBlockState', 'state', '=', 'world', '.', 'getBlockState', '(', 'pos', ')', ';', 'switch', '(', '(', 'BOPPlants', ')', 'state', '.', 'getValue', '(', 'this', '.', 'variantProperty', ')', ')', '{', 'case', 'CATTAIL', ':', 'case', 'RIVERCANE', ':', 'return', 'false', ';', 'default', ':', 'return', 'true', ';', '}', '}']","['boolean', 'isShearable', '(', 'ItemStack', 'item', ',', 'IBlockAccess', 'pos', ')', '{', '(', 'pos', ')', ';', 'switch', '(', '(', 'BOPPlants', ')', '(', 'this', ')', ')', '{', 'case', 'CATTAIL', ':', '}', '}']",57,29,6,28,54.90196078431373
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,loadTweets_1.txt,0.4525,1.0848,"{'n_total': 459, 'n_valid': 72, 'n_correct': 30}",198.827017,public List<Status> loadTweets(Long sinceId) throws TwitterException { Paging paging = new Paging(); paging.setCount(PAGE_LENGTH); if (sinceId != null) { paging.setSinceId(sinceId); } return twitter.getHomeTimeline(paging); },List<Status>loadTweets(Long sinceId)throws TwitterException{paging();paging(PAGELENGTH);if(sinceId){(sinceId);}twitter.getHomeTimeline();},225,138,16,87,41.62679425837321,"['public', 'List', '<', 'Status', '>', 'loadTweets', '(', 'Long', 'sinceId', ')', 'throws', 'TwitterException', '{', 'Paging', 'paging', '=', 'new', 'Paging', '(', ')', ';', 'paging', '.', 'setCount', '(', 'PAGE_LENGTH', ')', ';', 'if', '(', 'sinceId', '!=', 'null', ')', '{', 'paging', '.', 'setSinceId', '(', 'sinceId', ')', ';', '}', 'return', 'twitter', '.', 'getHomeTimeline', '(', 'paging', ')', ';', '}']","['List', '<', 'Status', '>', 'loadTweets', '(', 'Long', 'sinceId', ')', 'throws', 'TwitterException', '{', 'paging', '(', ')', ';', 'paging', '(', 'PAGELENGTH', ')', ';', 'if', '(', 'sinceId', ')', '{', '(', 'sinceId', ')', ';', '}', 'twitter', '.', 'getHomeTimeline', '(', ')', ';', '}']",52,38,6,14,30.434782608695656
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getAutoSave_1.txt,0.2175,4.1036,"{'n_total': 198, 'n_valid': 16, 'n_correct': 13}",47.269942,"public String getAutoSave() { if (""0"".equals(autoSave)) return ""1""; return checker(autoSave, ""1""); }","String getAutoSave(){if("""".equals(autoSave))"""";checker(autoSave,"""");}",100,69,17,31,37.34939759036144,"['public', 'String', 'getAutoSave', '(', ')', '{', 'if', '(', '""0""', '.', 'equals', '(', 'autoSave', ')', ')', 'return', '""1""', ';', 'return', 'checker', '(', 'autoSave', ',', '""1""', ')', ';', '}']","['String', 'getAutoSave', '(', ')', '{', 'if', '(', '""""', '.', 'equals', '(', 'autoSave', ')', ')', '""""', ';', 'checker', '(', 'autoSave', ',', '""""', ')', ';', '}']",27,24,6,3,14.285714285714285
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getInUse_1.txt,0.4358,1.4175,"{'n_total': 76, 'n_valid': 10, 'n_correct': 5}",27.677852,public int getInUse() { return inUse.get(); },int getInUse(){return inUse.get();},45,35,14,10,32.25806451612903,"['public', 'int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 'get', '(', ')', ';', '}']","['int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 'get', '(', ')', ';', '}']",14,13,6,1,12.5
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getSessionCacheSize_1.txt,0.4217,2.4938,"{'n_total': 76, 'n_valid': 10, 'n_correct': 5}",28.553,public String getSessionCacheSize() { return endpoint.getSessionCacheSize(); },String getSessionCacheSize(){return endpoint.getSessionCacheSize();},78,68,25,10,18.867924528301888,"['public', 'String', 'getSessionCacheSize', '(', ')', '{', 'return', 'endpoint', '.', 'getSessionCacheSize', '(', ')', ';', '}']","['String', 'getSessionCacheSize', '(', ')', '{', 'return', 'endpoint', '.', 'getSessionCacheSize', '(', ')', ';', '}']",14,13,6,1,12.5
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setWidthAndHeight_1.txt,0.3766,1.6652,"{'n_total': 244, 'n_valid': 23, 'n_correct': 19}",66.998855,"private void setWidthAndHeight(ActivityImpl activity, Map<String, Object> activityInfo) { activityInfo.put(""width"", activity.getWidth()); activityInfo.put(""height"", activity.getHeight()); }","void setWidthAndHeight(ActivityImpl activity,Map<Object>activityInfo){activityInfo(""width"",getWidth());put("""",activity);}",189,121,23,68,40.963855421686745,"['private', 'void', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'Map', '<', 'String', ',', 'Object', '>', 'activityInfo', ')', '{', 'activityInfo', '.', 'put', '(', '""width""', ',', 'activity', '.', 'getWidth', '(', ')', ')', ';', 'activityInfo', '.', 'put', '(', '""height""', ',', 'activity', '.', 'getHeight', '(', ')', ')', ';', '}']","['void', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'Map', '<', 'Object', '>', 'activityInfo', ')', '{', 'activityInfo', '(', '""width""', ',', 'getWidth', '(', ')', ')', ';', 'put', '(', '""""', ',', 'activity', ')', ';', '}']",43,30,6,13,35.13513513513514
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createCertificateFactory_1.txt,0.4834,0.8358,"{'n_total': 146, 'n_valid': 21, 'n_correct': 8}",59.760727,"protected CertificateFactory createCertificateFactory(String type) throws CertificateException, NoSuchProviderException { return CertificateFactory.getInstance(type, providerName); }","CertificateFactory createCertificateFactory(String type)throws CertificateException,NoSuchProviderException{return CertificateFactory.getInstance(type,providerName);}",182,166,30,16,10.526315789473683,"['protected', 'CertificateFactory', 'createCertificateFactory', '(', 'String', 'type', ')', 'throws', 'CertificateException', ',', 'NoSuchProviderException', '{', 'return', 'CertificateFactory', '.', 'getInstance', '(', 'type', ',', 'providerName', ')', ';', '}']","['CertificateFactory', 'createCertificateFactory', '(', 'String', 'type', ')', 'throws', 'CertificateException', ',', 'NoSuchProviderException', '{', 'return', 'CertificateFactory', '.', 'getInstance', '(', 'type', ',', 'providerName', ')', ';', '}']",23,22,6,1,5.88235294117647
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getLongB_1.txt,0.9704,0.0681,"{'n_total': 302, 'n_valid': 33, 'n_correct': 31}",92.398363,"private static long getLongB(ByteBuffer bb, int index) { return makeLong(bb.get(index), bb.get(index + 1), bb.get(index + 2), bb.get(index + 3), bb.get(index + 4), bb.get(index + 5), bb.get(index + 6), bb.get(index + 7)); }","long getLongB(ByteBuffer bb,int index){makeLong((index)(3),(6),(7));}",223,69,14,154,73.68421052631578,"['private', 'static', 'long', 'getLongB', '(', 'ByteBuffer', 'bb', ',', 'int', 'index', ')', '{', 'return', 'makeLong', '(', 'bb', '.', 'get', '(', 'index', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '1', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '2', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '3', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '4', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '5', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '6', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '7', ')', ')', ';', '}']","['long', 'getLongB', '(', 'ByteBuffer', 'bb', ',', 'int', 'index', ')', '{', 'makeLong', '(', '(', 'index', ')', '(', '3', ')', ',', '(', '6', ')', ',', '(', '7', ')', ')', ';', '}']",87,29,6,58,71.60493827160494
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,verifyResize_1.txt,0.9994,0.003,"{'n_total': 233, 'n_valid': 28, 'n_correct': 26}",79.975802,"private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest("""", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }",void verifyResize(NetworkResponse expectedHeight){(networkResponse);(getWidth());(bitmap);},544,91,18,453,86.12167300380229,"['private', 'void', 'verifyResize', '(', 'NetworkResponse', 'networkResponse', ',', 'int', 'maxWidth', ',', 'int', 'maxHeight', ',', 'ScaleType', 'scaleType', ',', 'int', 'expectedWidth', ',', 'int', 'expectedHeight', ')', '{', 'ImageRequest', 'request', '=', 'new', 'ImageRequest', '(', '""""', ',', 'null', ',', 'maxWidth', ',', 'maxHeight', ',', 'scaleType', ',', 'Config', '.', 'RGB_565', ',', 'null', ')', ';', 'Response', '<', 'Bitmap', '>', 'response', '=', 'request', '.', 'parseNetworkResponse', '(', 'networkResponse', ')', ';', 'assertNotNull', '(', 'response', ')', ';', 'assertTrue', '(', 'response', '.', 'isSuccess', '(', ')', ')', ';', 'Bitmap', 'bitmap', '=', 'response', '.', 'result', ';', 'assertNotNull', '(', 'bitmap', ')', ';', 'assertEquals', '(', 'expectedWidth', ',', 'bitmap', '.', 'getWidth', '(', ')', ')', ';', 'assertEquals', '(', 'expectedHeight', ',', 'bitmap', '.', 'getHeight', '(', ')', ')', ';', '}']","['void', 'verifyResize', '(', 'NetworkResponse', 'expectedHeight', ')', '{', '(', 'networkResponse', ')', ';', '(', 'getWidth', '(', ')', ')', ';', '(', 'bitmap', ')', ';', '}']",108,22,6,86,84.31372549019608
code2vec,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setRemoteAdapter_1.txt,0.4841,0.7274,"{'n_total': 210, 'n_valid': 19, 'n_correct': 15}",54.078617,"@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) private void setRemoteAdapter(Context context, @NonNull final RemoteViews views) { views.setRemoteAdapter(R.id.widget_list, new Intent(context, DetailWidgetRemoteViewsService.class)); }","void setRemoteAdapter(Context context,@NonNull RemoteViews views){views.setRemoteAdapter(R());}",236,95,22,141,65.88785046728972,"['@', 'TargetApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'ICE_CREAM_SANDWICH', ')', 'private', 'void', 'setRemoteAdapter', '(', 'Context', 'context', ',', '@', 'NonNull', 'final', 'RemoteViews', 'views', ')', '{', 'views', '.', 'setRemoteAdapter', '(', 'R', '.', 'id', '.', 'widget_list', ',', 'new', 'Intent', '(', 'context', ',', 'DetailWidgetRemoteViewsService', '.', 'class', ')', ')', ';', '}']","['void', 'setRemoteAdapter', '(', 'Context', 'context', ',', '@', 'NonNull', 'RemoteViews', 'views', ')', '{', 'views', '.', 'setRemoteAdapter', '(', 'R', '(', ')', ')', ';', '}']",45,22,6,23,58.97435897435898
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 144, 'n_valid': 15, 'n_correct': 12}",46.726471,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },void onCreate(Bundle savedInstanceState){(savedInstanceState);(layout.onboarding);},134,83,14,51,42.5,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'savedInstanceState', ')', ';', '(', 'layout', '.', 'onboarding', ')', ';', '}']",27,18,6,9,42.85714285714285
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 272, 'n_valid': 31, 'n_correct': 23}",91.49714,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");("""");(sb.toString);}",211,51,14,160,81.21827411167513,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,24,6,28,60.86956521739131
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 199, 'n_valid': 22, 'n_correct': 22}",68.628955,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(null)return""""+"""";toString();}",135,50,14,85,70.24793388429752,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', 'return', '""""', '+', '""""', ';', 'toString', '(', ')', ';', '}']",29,19,6,10,43.47826086956522
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 361, 'n_valid': 35, 'n_correct': 33}",108.679374,"@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } }",void onCreate(Bundle savedInstanceState){onCreate();(layout);if((OnboardingFragment)){((this));}},365,97,14,268,76.35327635327636,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', '(', 'layout', ')', ';', 'if', '(', '(', 'OnboardingFragment', ')', ')', '{', '(', '(', 'this', ')', ')', ';', '}', '}']",66,30,6,36,60.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 202, 'n_valid': 20, 'n_correct': 15}",59.608558,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(){if(other instanceof Stock){(((Stock)).symbol);}return false;},146,78,12,68,50.74626865671642,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 202, 'n_valid': 20, 'n_correct': 15}",62.520592,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(){if(other instanceof Stock){(((Stock)).symbol);}return false;},146,78,12,68,50.74626865671642,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 135, 'n_valid': 12, 'n_correct': 11}",35.835747,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },void onCreate(Bundle savedInstanceState){onCreate();setContentView();},144,70,14,74,56.92307692307692,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 23, 'n_correct': 23}",68.334135,"@Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; }",String toString(){if(image){}},183,30,14,153,90.53254437869822,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'image', ')', '{', '}', '}']",43,12,6,31,83.78378378378379
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 261, 'n_valid': 28, 'n_correct': 27}",80.191432,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","String toString(){("""").append("""");(filterClass).append(sb());}",242,62,14,180,78.94736842105263,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', '(', '""""', ')', '.', 'append', '(', '""""', ')', ';', '(', 'filterClass', ')', '.', 'append', '(', 'sb', '(', ')', ')', ';', '}']",66,26,6,40,66.66666666666666
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 342, 'n_valid': 36, 'n_correct': 34}",105.765034,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",boolean equals(Object o){if(this==o){}if(getClass()){}other=(TldResourcePath)equals();},309,87,12,222,74.74747474747475,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'other', '=', '(', 'TldResourcePath', ')', 'equals', '(', ')', ';', '}']",83,33,6,50,64.93506493506493
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 185, 'n_valid': 20, 'n_correct': 19}",59.180334,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(){if(obj){equals(((CharEntry)).value);}},141,55,12,86,66.66666666666666,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'CharEntry', ')', ')', '.', 'value', ')', ';', '}', '}']",37,23,6,14,45.16129032258064
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 119, 'n_valid': 14, 'n_correct': 10}",42.174016,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },void init()throws ServletException{super.init;incrementAndGet();},99,65,10,34,38.20224719101123,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', ';', 'incrementAndGet', '(', ')', ';', '}']",23,16,6,7,41.17647058823529
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_2.txt,0.9894,0.0222,"{'n_total': 458, 'n_valid': 52, 'n_correct': 48}",162.098026,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","String toString(){StringWriter=(sw)("""");count();for(;;){((i));}toString();}",270,75,14,195,76.171875,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'StringWriter', '=', '(', 'sw', ')', '(', '""""', ')', ';', 'count', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",77,36,6,41,57.74647887323944
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 110, 'n_valid': 14, 'n_correct': 12}",38.963885,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },void onCreate(){onCreate();InitViewPager();},172,44,14,128,81.0126582278481,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']",39,14,6,25,75.75757575757575
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 142, 'n_valid': 17, 'n_correct': 15}",48.404425,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","void onCreate(){(""onCreate"");}",215,30,14,185,92.03980099502488,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', '(', '""onCreate""', ')', ';', '}']",52,10,6,42,91.30434782608695
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 224, 'n_valid': 32, 'n_correct': 27}",96.040559,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 209, 'n_valid': 21, 'n_correct': 19}",64.481471,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(Object obj){if(obj instanceof Function){}},136,57,12,79,63.70967741935484,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', '}', '}']",35,16,6,19,65.51724137931035
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 226, 'n_valid': 22, 'n_correct': 22}",66.193824,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },boolean equals(Object o){if(this==o)if((Column))(column);},186,58,12,128,73.5632183908046,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'if', '(', '(', 'Column', ')', ')', '(', 'column', ')', ';', '}']",50,24,6,26,59.09090909090909
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 206, 'n_valid': 19, 'n_correct': 18}",55.368624,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws Exception{{System("""","""");}setUp();}",181,54,11,127,74.70588235294117,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_10.txt,0.9999,0.0002,"{'n_total': 235, 'n_valid': 30, 'n_correct': 28}",90.434511,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },boolean equals(Object other){if(other instanceof Mark){}},247,57,12,190,80.85106382978722,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', '}', '}']",71,16,6,55,84.61538461538461
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 180, 'n_valid': 19, 'n_correct': 15}",61.363081,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","@Override String toString(){("""");(""]"");(sb);}",132,45,14,87,73.72881355932203,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'Override', 'String', 'toString', '(', ')', '{', '(', '""""', ')', ';', '(', '""]""', ')', ';', '(', 'sb', ')', ';', '}']",34,20,6,14,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 215, 'n_valid': 23, 'n_correct': 19}",68.131171,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } }","void onCreate(Bundle savedInstanceState){if(savedInstanceState){GuidedStepFragment.addAsRoot(FirstStepFragment(),android);}}",219,124,14,95,46.34146341463415,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'FirstStepFragment', '(', ')', ',', 'android', ')', ';', '}', '}']",46,25,6,21,52.5
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 159, 'n_valid': 25, 'n_correct': 19}",72.956425,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },boolean onCreate(){mOpenHelper=new VideoDbHelper(context);},175,59,14,116,72.04968944099379,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['boolean', 'onCreate', '(', ')', '{', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', '}']",35,14,6,21,72.41379310344827
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 378, 'n_valid': 30, 'n_correct': 30}",90.152106,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",boolean equals(Object obj){if((obj instanceof URL))(false);if(sameFile)((getRef()));},190,85,12,105,58.98876404494382,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '(', 'obj', 'instanceof', 'URL', ')', ')', '(', 'false', ')', ';', 'if', '(', 'sameFile', ')', '(', '(', 'getRef', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",87.077263,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 165, 'n_valid': 17, 'n_correct': 17}",50.455227,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",void execute()throws BuildException{execute();createLink();(sb);},165,65,13,100,65.78947368421053,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', ')', ';', 'createLink', '(', ')', ';', '(', 'sb', ')', ';', '}']",44,20,6,24,63.1578947368421
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 113, 'n_valid': 14, 'n_correct': 11}",42.474512,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },void setUp()throws Exception{super.setUp();},114,44,11,70,67.96116504854369,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}']",27,14,6,13,61.90476190476191
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 199, 'n_valid': 25, 'n_correct': 24}",72.105974,"@Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); }",void init()throws ServletException{messageSender();},278,52,10,226,84.32835820895522,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '(', ')', ';', '}']",52,12,6,40,86.95652173913044
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 369, 'n_valid': 33, 'n_correct': 31}",98.330635,"@Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); }","<T>T get(String name,Class<T>clazz){(name);if(index=null){(""""+"""");}get(intValue(),clazz);}",236,90,9,146,64.31718061674009,"['@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']","['<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', '(', 'name', ')', ';', 'if', '(', 'index', '=', 'null', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'get', '(', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']",61,44,6,17,30.909090909090907
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 278, 'n_valid': 22, 'n_correct': 22}",63.093187,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","void main(String[]args)throws Exception{((""""));(("""".getBytes()));}",179,66,10,113,66.86390532544378,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', '(', '""""', ')', ')', ';', '(', '(', '""""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']",50,28,6,22,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 209, 'n_valid': 18, 'n_correct': 18}",54.949028,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },void main(String[]args){try{(getSystemLookAndFeelClassName());}catch(Exception e){}GUI();},154,90,10,64,44.44444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', '(', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'GUI', '(', ')', ';', '}']",38,30,6,8,25.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 190, 'n_valid': 26, 'n_correct': 16}",77.046176,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(value==null){NoSuchElementException("""");}return value;}",109,66,9,43,43.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'NoSuchElementException', '(', '""""', ')', ';', '}', 'return', 'value', ';', '}']",25,22,6,3,15.789473684210526
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_3.txt,0.8094,0.2561,"{'n_total': 259, 'n_valid': 35, 'n_correct': 30}",104.341943,"@Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); }","void init(){("""");(XmlIdentifiers).put();}",365,41,10,324,91.26760563380282,"['@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}']","['void', 'init', '(', ')', '{', '(', '""""', ')', ';', '(', 'XmlIdentifiers', ')', '.', 'put', '(', ')', ';', '}']",61,18,6,43,78.18181818181819
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 164, 'n_valid': 27, 'n_correct': 11}",81.270734,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },void setUp(){session=mock(Session.class);processor=new HibernateProcessor(session);},107,84,11,23,23.958333333333336,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']",26,23,6,3,15.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 212, 'n_valid': 21, 'n_correct': 20}",60.051809,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }","void execute(Map<Object>context){("""");context("""",RootContextPath());}",201,69,13,132,70.2127659574468,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['void', 'execute', '(', 'Map', '<', 'Object', '>', 'context', ')', '{', '(', '""""', ')', ';', 'context', '(', '""""', ',', 'RootContextPath', '(', ')', ')', ';', '}']",42,24,6,18,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 239, 'n_valid': 34, 'n_correct': 25}",98.416739,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },void run(){try{client();client();}catch(Exception x){}},127,55,9,72,61.01694915254237,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'client', '(', ')', ';', 'client', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",33,24,6,9,33.33333333333333
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 212, 'n_valid': 21, 'n_correct': 20}",60.884131,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }","void execute(Map<Object>context){("""");context("""",RootContextPath());}",201,69,13,132,70.2127659574468,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['void', 'execute', '(', 'Map', '<', 'Object', '>', 'context', ')', '{', '(', '""""', ')', ';', 'context', '(', '""""', ',', 'RootContextPath', '(', ')', ')', ';', '}']",42,24,6,18,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 121, 'n_valid': 10, 'n_correct': 10}",28.98947,"@Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); }","void init(){("""").addBeforeOrdering("""");}",108,40,10,68,69.38775510204081,"['@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}']","['void', 'init', '(', ')', '{', '(', '""""', ')', '.', 'addBeforeOrdering', '(', '""""', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 210, 'n_valid': 23, 'n_correct': 23}",70.521066,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","Object get(Map<Object>key,Object defaultv){if(null){}}",166,54,9,112,71.3375796178344,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['Object', 'get', '(', 'Map', '<', 'Object', '>', 'key', ',', 'Object', 'defaultv', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",46,20,6,26,65.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 316, 'n_valid': 35, 'n_correct': 30}",106.556948,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","void main(String[]args)throws IOException{(JerseyApplication());("""");}",251,70,10,181,75.10373443983403,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', '(', 'JerseyApplication', '(', ')', ')', ';', '(', '""""', ')', ';', '}']",53,22,6,31,65.95744680851064
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 149, 'n_valid': 17, 'n_correct': 17}",51.113323,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },void main(String[]args){sender();},132,34,10,98,80.32786885245902,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'sender', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 379, 'n_valid': 38, 'n_correct': 34}",120.978693,"@Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); }","Integer get(long timeout,TimeUnit unit)throws TimeoutException{(unit);if(VALUE){ExecutionException(getString("""",result),null);}(result);}",350,137,9,213,62.4633431085044,"['@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}']","['Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'TimeoutException', '{', '(', 'unit', ')', ';', 'if', '(', 'VALUE', ')', '{', 'ExecutionException', '(', 'getString', '(', '""""', ',', 'result', ')', ',', 'null', ')', ';', '}', '(', 'result', ')', ';', '}']",73,39,6,34,50.74626865671642
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 135, 'n_valid': 14, 'n_correct': 14}",40.031923,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }","void setUp(){Solo(getInstrumentation(),getActivity);}",122,53,11,69,62.16216216216216,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', ')', ';', '}']",31,15,6,16,64.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_5.txt,0.9712,0.0324,"{'n_total': 364, 'n_valid': 43, 'n_correct': 30}",126.283775,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","void execute(){getStringByField("""");Metadata=(Metadata)("""");collector.emit(com,Values());(tuple);}",305,98,13,207,70.8904109589041,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'getStringByField', '(', '""""', ')', ';', 'Metadata', '=', '(', 'Metadata', ')', '(', '""""', ')', ';', 'collector', '.', 'emit', '(', 'com', ',', 'Values', '(', ')', ')', ';', '(', 'tuple', ')', ';', '}']",70,35,6,35,54.6875
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 236, 'n_valid': 21, 'n_correct': 20}",63.78331,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{sleep();}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 183, 'n_valid': 25, 'n_correct': 20}",73.324829,@Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); },V get(){if(keynull){}((key));},110,30,9,80,79.20792079207921,"['@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}']","['V', 'get', '(', ')', '{', 'if', '(', 'keynull', ')', '{', '}', '(', '(', 'key', ')', ')', ';', '}']",33,18,6,15,55.55555555555556
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 218, 'n_valid': 22, 'n_correct': 18}",68.911967,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","void run(){try{draw();}catch(Throwable t){logger(""""+getMessage());}}",149,68,9,81,57.85714285714286,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']",36,29,6,7,23.33333333333333
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 143, 'n_valid': 21, 'n_correct': 17}",60.493032,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },int hashCode(){result.hashCode();},174,34,14,140,87.5,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '.', 'hashCode', '(', ')', ';', '}']",45,12,6,33,84.61538461538461
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",48.692305,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }","void execute(){execute();((""""));}",123,33,13,90,81.81818181818183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 136, 'n_valid': 19, 'n_correct': 16}",55.741796,public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); },void init(){barPaint(true).setStyle();},152,39,10,113,79.5774647887324,"['public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}']","['void', 'init', '(', ')', '{', 'barPaint', '(', 'true', ')', '.', 'setStyle', '(', ')', ';', '}']",39,15,6,24,72.72727272727273
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 151, 'n_valid': 14, 'n_correct': 14}",44.207909,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","void setUp()throws Exception{("""");setUp();}",149,43,11,106,76.81159420289855,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_1.txt,0.9996,0.0007,"{'n_total': 419, 'n_valid': 44, 'n_correct': 44}",129.168368,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","void main(String[]args){(""""+getServerInfo());(""""+getServerBuilt());(""""+getServerNumber());(""""+(""""));}",579,101,10,478,84.00702987697716,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', '+', 'getServerInfo', '(', ')', ')', ';', '(', '""""', '+', 'getServerBuilt', '(', ')', ')', ';', '(', '""""', '+', 'getServerNumber', '(', ')', ')', ';', '(', '""""', '+', '(', '""""', ')', ')', ';', '}']",131,42,6,89,71.2
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_4.txt,0.4114,1.0723,"{'n_total': 721, 'n_valid': 89, 'n_correct': 62}",274.325686,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","void setUp()throws Exception{PostgresStarter<PostgresProcess>runtime=(RuntimeConfigBuilder().build());config=(Net(""localhost"",""""));PostgresExecutable();format("""",config);}",946,171,11,775,82.88770053475936,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresProcess', '>', 'runtime', '=', '(', 'RuntimeConfigBuilder', '(', ')', '.', 'build', '(', ')', ')', ';', 'config', '=', '(', 'Net', '(', '""localhost""', ',', '""""', ')', ')', ';', 'PostgresExecutable', '(', ')', ';', 'format', '(', '""""', ',', 'config', ')', ';', '}']",207,46,6,161,80.09950248756219
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 121, 'n_valid': 10, 'n_correct': 10}",31.259259,"@Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); }","void init(FilterConfig fConfig)throws ServletException{("""");}",161,61,10,100,66.22516556291392,"['@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}']","['void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', '(', '""""', ')', ';', '}']",30,14,6,16,66.66666666666666
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 312, 'n_valid': 32, 'n_correct': 26}",95.1549,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(long timeout,TimeUnit unit){if((0)){(""""+timeout);}}",248,57,9,191,79.9163179916318,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', 'if', '(', '(', '0', ')', ')', '{', '(', '""""', '+', 'timeout', ')', ';', '}', '}']",51,25,6,26,57.77777777777777
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 354, 'n_valid': 40, 'n_correct': 40}",117.690705,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){((null)?0:hashCode());((null)?0:hashCode());},262,60,14,202,81.45161290322581,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",75,30,6,45,65.21739130434783
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 404, 'n_valid': 57, 'n_correct': 44}",176.527694,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 236, 'n_valid': 21, 'n_correct': 20}",68.203635,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{sleep();}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 143, 'n_valid': 13, 'n_correct': 13}",38.385268,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }","void execute()throws BuildException{("""".toString());}",140,53,13,87,68.50393700787401,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""""', '.', 'toString', '(', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 554, 'n_valid': 52, 'n_correct': 42}",162.117258,"@SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } }","<T>Expression<T>get(Expression<?>name){try{Class<?>clazz=getClass();return(Expression<T>)field.get(path);}catch(IllegalAccessException e){("""");}}",405,145,9,260,65.65656565656566,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}']","['<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'getClass', '(', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",94,55,6,39,44.31818181818182
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 195, 'n_valid': 21, 'n_correct': 18}",61.887244,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },void setUp()throws Exception{setUp();tomcat=(JreMemoryLeakPreventionListener());},182,81,11,101,59.06432748538012,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'setUp', '(', ')', ';', 'tomcat', '=', '(', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']",38,20,6,18,56.25
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 107, 'n_valid': 15, 'n_correct': 14}",44.792134,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },void init(ProcessingEnvironment env){;},193,39,10,154,84.15300546448088,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', ';', '}']",49,9,6,40,93.02325581395348
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 139, 'n_valid': 11, 'n_correct': 11}",35.241377,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },void main(String[]args){CreateTestTable().testPopulateData();},147,62,10,85,62.04379562043796,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'CreateTestTable', '(', ')', '.', 'testPopulateData', '(', ')', ';', '}']",32,18,6,14,53.84615384615385
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 171, 'n_valid': 15, 'n_correct': 15}",44.268488,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","void main(String[]args){("""");(args);}",136,37,10,99,78.57142857142857,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', 'args', ')', ';', '}']",30,18,6,12,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 229, 'n_valid': 21, 'n_correct': 21}",61.478379,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","void main(String[]args)throws Exception{(PostgresConfig(Version,"""")).info("""");}",273,79,10,194,73.76425855513308,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', 'PostgresConfig', '(', 'Version', ',', '""""', ')', ')', '.', 'info', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 269, 'n_valid': 24, 'n_correct': 24}",74.667628,@Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); },void init(WebConnection connection){try{}catch(IOException ioe){(ioe);}(EchoWriteListener());},293,94,10,199,70.31802120141343,"['@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}']","['void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', 'ioe', ')', ';', '}', '(', 'EchoWriteListener', '(', ')', ')', ';', '}']",64,28,6,36,62.06896551724138
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 365, 'n_valid': 40, 'n_correct': 31}",120.263394,"public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } }","String get(String key,Object...args){try{if(messageSource){getMessage();}return key;}catch(NoSuchMessageException e){}}",222,119,9,103,48.35680751173709,"['public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}']","['String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', ')', '{', 'getMessage', '(', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', '}', '}']",55,35,6,20,40.81632653061224
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 99, 'n_valid': 10, 'n_correct': 8}",29.153646,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","void execute()throws BuildException{(""serverinfo"");}",98,52,13,46,54.11764705882353,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""serverinfo""', ')', ';', '}']",22,12,6,10,62.5
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 198, 'n_valid': 20, 'n_correct': 20}",60.060111,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}},162,83,9,79,51.63398692810458,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'countUpOrAwait', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",44,24,6,20,52.63157894736842
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 228, 'n_valid': 27, 'n_correct': 27}",80.471974,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },int hashCode(){((null)?0:hashCode());},239,38,14,201,89.33333333333333,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",66,18,6,48,80.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 157, 'n_valid': 19, 'n_correct': 12}",56.52444,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }",void run(){dataRefresh();postDelayed(thisdelaytime);updateViewLayout();},150,72,9,78,55.319148936170215,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'postDelayed', '(', 'thisdelaytime', ')', ';', 'updateViewLayout', '(', ')', ';', '}']",33,19,6,14,51.85185185185185
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 241, 'n_valid': 29, 'n_correct': 29}",85.236038,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },int hashCode(){((name)?0:hashCode);},154,36,14,118,84.28571428571429,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'name', ')', '?', '0', ':', 'hashCode', ')', ';', '}']",45,16,6,29,74.35897435897436
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 272, 'n_valid': 31, 'n_correct': 23}",90.312044,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");("""");(sb.toString);}",211,51,14,160,81.21827411167513,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,24,6,28,60.86956521739131
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",86.903771,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 134, 'n_valid': 23, 'n_correct': 13}",69.834131,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){int result=x+y;},92,31,14,61,78.2051282051282,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', '+', 'y', ';', '}']",25,13,6,12,63.1578947368421
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",120.702465,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },int hashCode(){((key)hashCode());((null)?0:hashCode());},220,56,14,164,79.6116504854369,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'key', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 244, 'n_valid': 25, 'n_correct': 24}",73.959231,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",void setUp()throws Exception{addChannelListener();addRandomDomain(new ManagedChannel[]{});(Channel);},317,101,11,216,70.58823529411765,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'addChannelListener', '(', ')', ';', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', '}', ')', ';', '(', 'Channel', ')', ';', '}']",72,26,6,46,69.6969696969697
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 107, 'n_valid': 13, 'n_correct': 11}",37.20624,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },void init(ServletConfig config)throws ServletException{;},107,57,10,50,51.546391752577314,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', ';', '}']",24,11,6,13,72.22222222222221
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 269, 'n_valid': 27, 'n_correct': 24}",78.200223,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },void init()throws ServletException{((_)).valueOf(getServletConfig().getInitParameter());},344,89,10,255,76.34730538922156,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', '(', '(', '_', ')', ')', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', ')', ')', ';', '}']",71,25,6,46,70.76923076923077
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 301, 'n_valid': 29, 'n_correct': 27}",84.482432,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","void setUp()throws Exception{if(SUPPORTED){System("""","""");}setUp().configureClientSsl();}",320,88,11,232,75.08090614886731,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'SUPPORTED', ')', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', '.', 'configureClientSsl', '(', ')', ';', '}']",61,29,6,32,58.18181818181818
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 134, 'n_valid': 23, 'n_correct': 13}",69.73585,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){int result=x+y;},92,31,14,61,78.2051282051282,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', '+', 'y', ';', '}']",25,13,6,12,63.1578947368421
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 404, 'n_valid': 57, 'n_correct': 44}",170.310907,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 135, 'n_valid': 16, 'n_correct': 13}",46.209987,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","void execute()throws BuildException{(("""").toString);}",122,53,13,69,63.30275229357798,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '(', '""""', ')', '.', 'toString', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",49.059502,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","void execute(){execute();((""""));}",126,33,13,93,82.30088495575221,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 143, 'n_valid': 21, 'n_correct': 17}",59.776032,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },int hashCode(){result.hashCode();},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '.', 'hashCode', '(', ')', ';', '}']",45,12,6,33,84.61538461538461
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 180, 'n_valid': 22, 'n_correct': 18}",67.854817,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },CBuffer get(CharSequence key){getEntry();return(entry=null)?null:value;},114,72,9,42,40.0,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'getEntry', '(', ')', ';', 'return', '(', 'entry', '=', 'null', ')', '?', 'null', ':', 'value', ';', '}']",30,23,6,7,29.166666666666668
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 415, 'n_valid': 40, 'n_correct': 40}",120.128382,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","void main(String args){try{langTools("""",langTools);(null);}catch(Exception e){(Level);}}",295,88,10,207,72.63157894736842,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', 'langTools', '(', '""""', ',', 'langTools', ')', ';', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'Level', ')', ';', '}', '}']",78,33,6,45,62.5
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 136, 'n_valid': 12, 'n_correct': 12}",36.493422,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",void main(String[]args)throws Exception{run();},124,47,10,77,67.54385964912281,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'run', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 245, 'n_valid': 31, 'n_correct': 21}",94.967421,public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; },int get(){if(start+off>=end){new ArrayIndexOutOfBoundsException();}return buff[off]&xFF;},132,89,9,43,34.959349593495936,"['public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}']","['int', 'get', '(', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'off', ']', '&', 'xFF', ';', '}']",35,29,6,6,20.689655172413797
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 154, 'n_valid': 17, 'n_correct': 13}",50.276434,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","void execute(){execute();((""""));}",126,33,13,93,82.30088495575221,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 392, 'n_valid': 41, 'n_correct': 40}",123.181738,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },int hashCode(){((matches)hashCode());((null)?0:hashCode());},236,60,14,176,79.27927927927928,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'matches', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 211, 'n_valid': 29, 'n_correct': 27}",90.868266,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },int hashCode(){result=1*(completed?1:0);},213,41,14,172,86.4321608040201,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', '1', '*', '(', 'completed', '?', '1', ':', '0', ')', ';', '}']",59,18,6,41,77.35849056603774
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_9.txt,0.9999,0.0001,"{'n_total': 359, 'n_valid': 34, 'n_correct': 34}",100.459748,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(Object o){if(o){}if(getClass()){}that=(Key)(id);},268,64,12,204,79.6875,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'that', '=', '(', 'Key', ')', '(', 'id', ')', ';', '}']",85,31,6,54,68.35443037974683
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 202, 'n_valid': 21, 'n_correct': 21}",62.113557,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },boolean equals(){if(obj){(((NamingEntry)).name);}{}},152,52,12,100,71.42857142857143,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', '(', '(', '(', 'NamingEntry', ')', ')', '.', 'name', ')', ';', '}', '{', '}', '}']",40,24,6,16,47.05882352941176
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 318, 'n_valid': 25, 'n_correct': 23}",77.608816,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },void onCreate(Bundle savedInstanceState){super.onCreate(VideoCursorMapper());(getString());if(savedInstanceState){prepareEntranceTransition();}},319,144,14,175,57.377049180327866,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'VideoCursorMapper', '(', ')', ')', ';', '(', 'getString', '(', ')', ')', ';', 'if', '(', 'savedInstanceState', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', '}']",61,33,6,28,50.90909090909091
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 175, 'n_valid': 28, 'n_correct': 20}",80.989929,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },@Override void onCreate(){if(mNotifManager=null){getSystemService(Context);}},171,77,14,94,59.87261146496815,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['@', 'Override', 'void', 'onCreate', '(', ')', '{', 'if', '(', 'mNotifManager', '=', 'null', ')', '{', 'getSystemService', '(', 'Context', ')', ';', '}', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 135, 'n_valid': 12, 'n_correct': 11}",35.574046,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },void onCreate(Bundle savedInstanceState){onCreate();setContentView();},140,70,14,70,55.55555555555556,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 201, 'n_valid': 20, 'n_correct': 20}",59.477882,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },String toString(){for(Node n:children){(toString());}toString();},165,65,14,100,66.22516556291392,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', '(', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",44,25,6,19,50.0
code2vec,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 224, 'n_valid': 32, 'n_correct': 27}",93.611121,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 5567, 'n_valid': 447, 'n_correct': 342}",1467.719063,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); final SimpleDateFormat formatter = new SimpleDateFormat(""dd MMM yyyy""); caldroidFragment = new CaldroidFragment(); if (savedInstanceState != null) { caldroidFragment.restoreStatesFromKey(savedInstanceState, ""CALDROID_SAVED_STATE""); } else { Bundle args = new Bundle(); Calendar cal = Calendar.getInstance(); args.putInt(CaldroidFragment.MONTH, cal.get(Calendar.MONTH) + 1); args.putInt(CaldroidFragment.YEAR, cal.get(Calendar.YEAR)); args.putBoolean(CaldroidFragment.ENABLE_SWIPE, true); args.putBoolean(CaldroidFragment.SIX_WEEKS_IN_CALENDAR, true); caldroidFragment.setArguments(args); } setCustomResourceForDates(); FragmentTransaction t = getSupportFragmentManager().beginTransaction(); t.replace(R.id.calendar1, caldroidFragment); t.commit(); final CaldroidListener listener = new CaldroidListener() { @Override public void onSelectDate(Date date, View view) { Toast.makeText(getApplicationContext(), formatter.format(date), Toast.LENGTH_SHORT).show(); } @Override public void onChangeMonth(int month, int year) { String text = ""month: "" + month + "" year: "" + year; Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show(); } @Override public void onLongClickDate(Date date, View view) { Toast.makeText(getApplicationContext(), ""Long click "" + formatter.format(date), Toast.LENGTH_SHORT).show(); } @Override public void onCaldroidViewCreated() { if (caldroidFragment.getLeftArrowButton() != null) { Toast.makeText(getApplicationContext(), ""Caldroid view is created"", Toast.LENGTH_SHORT).show(); } } }; caldroidFragment.setCaldroidListener(listener); final TextView textView = (TextView) findViewById(R.id.textview); final Button customizeButton = (Button) findViewById(R.id.customize_button); customizeButton.setOnClickListener(new OnClickListener() { @Override public void onClick(View v) { if (undo) { customizeButton.setText(getString(R.string.customize)); textView.setText(""""); caldroidFragment.clearDisableDates(); caldroidFragment.clearSelectedDates(); caldroidFragment.setMinDate(null); caldroidFragment.setMaxDate(null); caldroidFragment.setShowNavigationArrows(true); caldroidFragment.setEnableSwipe(true); caldroidFragment.refreshView(); undo = false; return; } undo = true; customizeButton.setText(getString(R.string.undo)); Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -7); Date minDate = cal.getTime(); cal = Calendar.getInstance(); cal.add(Calendar.DATE, 14); Date maxDate = cal.getTime(); cal = Calendar.getInstance(); cal.add(Calendar.DATE, 2); Date fromDate = cal.getTime(); cal = Calendar.getInstance(); cal.add(Calendar.DATE, 3); Date toDate = cal.getTime(); ArrayList<Date> disabledDates = new ArrayList<Date>(); for (int i = 5; i < 8; i++) { cal = Calendar.getInstance(); cal.add(Calendar.DATE, i); disabledDates.add(cal.getTime()); } caldroidFragment.setMinDate(minDate); caldroidFragment.setMaxDate(maxDate); caldroidFragment.setDisableDates(disabledDates); caldroidFragment.setSelectedDates(fromDate, toDate); caldroidFragment.setShowNavigationArrows(false); caldroidFragment.setEnableSwipe(false); caldroidFragment.refreshView(); String text = ""Today: "" + formatter.format(new Date()) + ""\n""; text += ""Min Date: "" + formatter.format(minDate) + ""\n""; text += ""Max Date: "" + formatter.format(maxDate) + ""\n""; text += ""Select From Date: "" + formatter.format(fromDate) + ""\n""; text += ""Select To Date: "" + formatter.format(toDate) + ""\n""; for (Date date : disabledDates) { text += ""Disabled Date: "" + formatter.format(date) + ""\n""; } textView.setText(text); } }); Button showDialogButton = (Button) findViewById(R.id.show_dialog_button); final Bundle state = savedInstanceState; showDialogButton.setOnClickListener(new OnClickListener() { @Override public void onClick(View v) { dialogCaldroidFragment = new CaldroidFragment(); dialogCaldroidFragment.setCaldroidListener(listener); final String dialogTag = ""CALDROID_DIALOG_FRAGMENT""; if (state != null) { dialogCaldroidFragment.restoreDialogStatesFromKey(getSupportFragmentManager(), state, ""DIALOG_CALDROID_SAVED_STATE"", dialogTag); Bundle args = dialogCaldroidFragment.getArguments(); if (args == null) { args = new Bundle(); dialogCaldroidFragment.setArguments(args); } } else { Bundle bundle = new Bundle(); dialogCaldroidFragment.setArguments(bundle); } dialogCaldroidFragment.show(getSupportFragmentManager(), dialogTag); } }); }","void onCreate(Bundle savedInstanceState){onCreate();if(null){caldroidFragment(savedInstanceState,"""");}{Bundle().setArguments();}t().commit();listener=new CaldroidListener(){onSelectDate(Date view){makeText(getApplicationContext().format(),SHORT).show();}onChangeMonth(int month,int year){(getApplicationContext()._).show();}onLongClickDate(Date date,View view){(SHORT).show();}onCaldroidViewCreated(){if(caldroidFragment()!=null){makeText(getApplicationContext(),"""",SHORT).show();}}};(listener);textView=(Button)(new OnClickListener(){onClick(){{((R));setMaxDate();}((R));(7);(3);ArrayList=new ArrayList<>();for(;;i++){}setShowNavigationArrows=""""+(Date())+"""";text="""";text="""".format()+"""";for(Date date:disabledDates){}}});Button=(button)(new OnClickListener(){onClick(View v){setCaldroidListener();dialogTag="""";if(state){getArguments();{(args);}}{}show(getSupportFragmentManager(),dialogTag);}});}",4484,896,14,3588,80.26845637583892,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', 'final', 'SimpleDateFormat', 'formatter', '=', 'new', 'SimpleDateFormat', '(', '""dd MMM yyyy""', ')', ';', 'caldroidFragment', '=', 'new', 'CaldroidFragment', '(', ')', ';', 'if', '(', 'savedInstanceState', '!=', 'null', ')', '{', 'caldroidFragment', '.', 'restoreStatesFromKey', '(', 'savedInstanceState', ',', '""CALDROID_SAVED_STATE""', ')', ';', '}', 'else', '{', 'Bundle', 'args', '=', 'new', 'Bundle', '(', ')', ';', 'Calendar', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'args', '.', 'putInt', '(', 'CaldroidFragment', '.', 'MONTH', ',', 'cal', '.', 'get', '(', 'Calendar', '.', 'MONTH', ')', '+', '1', ')', ';', 'args', '.', 'putInt', '(', 'CaldroidFragment', '.', 'YEAR', ',', 'cal', '.', 'get', '(', 'Calendar', '.', 'YEAR', ')', ')', ';', 'args', '.', 'putBoolean', '(', 'CaldroidFragment', '.', 'ENABLE_SWIPE', ',', 'true', ')', ';', 'args', '.', 'putBoolean', '(', 'CaldroidFragment', '.', 'SIX_WEEKS_IN_CALENDAR', ',', 'true', ')', ';', 'caldroidFragment', '.', 'setArguments', '(', 'args', ')', ';', '}', 'setCustomResourceForDates', '(', ')', ';', 'FragmentTransaction', 't', '=', 'getSupportFragmentManager', '(', ')', '.', 'beginTransaction', '(', ')', ';', 't', '.', 'replace', '(', 'R', '.', 'id', '.', 'calendar1', ',', 'caldroidFragment', ')', ';', 't', '.', 'commit', '(', ')', ';', 'final', 'CaldroidListener', 'listener', '=', 'new', 'CaldroidListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onSelectDate', '(', 'Date', 'date', ',', 'View', 'view', ')', '{', 'Toast', '.', 'makeText', '(', 'getApplicationContext', '(', ')', ',', 'formatter', '.', 'format', '(', 'date', ')', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', '@', 'Override', 'public', 'void', 'onChangeMonth', '(', 'int', 'month', ',', 'int', 'year', ')', '{', 'String', 'text', '=', '""month: ""', '+', 'month', '+', '"" year: ""', '+', 'year', ';', 'Toast', '.', 'makeText', '(', 'getApplicationContext', '(', ')', ',', 'text', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', '@', 'Override', 'public', 'void', 'onLongClickDate', '(', 'Date', 'date', ',', 'View', 'view', ')', '{', 'Toast', '.', 'makeText', '(', 'getApplicationContext', '(', ')', ',', '""Long click ""', '+', 'formatter', '.', 'format', '(', 'date', ')', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', '@', 'Override', 'public', 'void', 'onCaldroidViewCreated', '(', ')', '{', 'if', '(', 'caldroidFragment', '.', 'getLeftArrowButton', '(', ')', '!=', 'null', ')', '{', 'Toast', '.', 'makeText', '(', 'getApplicationContext', '(', ')', ',', '""Caldroid view is created""', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ';', 'caldroidFragment', '.', 'setCaldroidListener', '(', 'listener', ')', ';', 'final', 'TextView', 'textView', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'textview', ')', ';', 'final', 'Button', 'customizeButton', '=', '(', 'Button', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'customize_button', ')', ';', 'customizeButton', '.', 'setOnClickListener', '(', 'new', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'v', ')', '{', 'if', '(', 'undo', ')', '{', 'customizeButton', '.', 'setText', '(', 'getString', '(', 'R', '.', 'string', '.', 'customize', ')', ')', ';', 'textView', '.', 'setText', '(', '""""', ')', ';', 'caldroidFragment', '.', 'clearDisableDates', '(', ')', ';', 'caldroidFragment', '.', 'clearSelectedDates', '(', ')', ';', 'caldroidFragment', '.', 'setMinDate', '(', 'null', ')', ';', 'caldroidFragment', '.', 'setMaxDate', '(', 'null', ')', ';', 'caldroidFragment', '.', 'setShowNavigationArrows', '(', 'true', ')', ';', 'caldroidFragment', '.', 'setEnableSwipe', '(', 'true', ')', ';', 'caldroidFragment', '.', 'refreshView', '(', ')', ';', 'undo', '=', 'false', ';', 'return', ';', '}', 'undo', '=', 'true', ';', 'customizeButton', '.', 'setText', '(', 'getString', '(', 'R', '.', 'string', '.', 'undo', ')', ')', ';', 'Calendar', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'cal', '.', 'add', '(', 'Calendar', '.', 'DATE', ',', '-', '7', ')', ';', 'Date', 'minDate', '=', 'cal', '.', 'getTime', '(', ')', ';', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'cal', '.', 'add', '(', 'Calendar', '.', 'DATE', ',', '14', ')', ';', 'Date', 'maxDate', '=', 'cal', '.', 'getTime', '(', ')', ';', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'cal', '.', 'add', '(', 'Calendar', '.', 'DATE', ',', '2', ')', ';', 'Date', 'fromDate', '=', 'cal', '.', 'getTime', '(', ')', ';', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'cal', '.', 'add', '(', 'Calendar', '.', 'DATE', ',', '3', ')', ';', 'Date', 'toDate', '=', 'cal', '.', 'getTime', '(', ')', ';', 'ArrayList', '<', 'Date', '>', 'disabledDates', '=', 'new', 'ArrayList', '<', 'Date', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '5', ';', 'i', '<', '8', ';', 'i', '++', ')', '{', 'cal', '=', 'Calendar', '.', 'getInstance', '(', ')', ';', 'cal', '.', 'add', '(', 'Calendar', '.', 'DATE', ',', 'i', ')', ';', 'disabledDates', '.', 'add', '(', 'cal', '.', 'getTime', '(', ')', ')', ';', '}', 'caldroidFragment', '.', 'setMinDate', '(', 'minDate', ')', ';', 'caldroidFragment', '.', 'setMaxDate', '(', 'maxDate', ')', ';', 'caldroidFragment', '.', 'setDisableDates', '(', 'disabledDates', ')', ';', 'caldroidFragment', '.', 'setSelectedDates', '(', 'fromDate', ',', 'toDate', ')', ';', 'caldroidFragment', '.', 'setShowNavigationArrows', '(', 'false', ')', ';', 'caldroidFragment', '.', 'setEnableSwipe', '(', 'false', ')', ';', 'caldroidFragment', '.', 'refreshView', '(', ')', ';', 'String', 'text', '=', '""Today: ""', '+', 'formatter', '.', 'format', '(', 'new', 'Date', '(', ')', ')', '+', '""\\n""', ';', 'text', '+=', '""Min Date: ""', '+', 'formatter', '.', 'format', '(', 'minDate', ')', '+', '""\\n""', ';', 'text', '+=', '""Max Date: ""', '+', 'formatter', '.', 'format', '(', 'maxDate', ')', '+', '""\\n""', ';', 'text', '+=', '""Select From Date: ""', '+', 'formatter', '.', 'format', '(', 'fromDate', ')', '+', '""\\n""', ';', 'text', '+=', '""Select To Date: ""', '+', 'formatter', '.', 'format', '(', 'toDate', ')', '+', '""\\n""', ';', 'for', '(', 'Date', 'date', ':', 'disabledDates', ')', '{', 'text', '+=', '""Disabled Date: ""', '+', 'formatter', '.', 'format', '(', 'date', ')', '+', '""\\n""', ';', '}', 'textView', '.', 'setText', '(', 'text', ')', ';', '}', '}', ')', ';', 'Button', 'showDialogButton', '=', '(', 'Button', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'show_dialog_button', ')', ';', 'final', 'Bundle', 'state', '=', 'savedInstanceState', ';', 'showDialogButton', '.', 'setOnClickListener', '(', 'new', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'v', ')', '{', 'dialogCaldroidFragment', '=', 'new', 'CaldroidFragment', '(', ')', ';', 'dialogCaldroidFragment', '.', 'setCaldroidListener', '(', 'listener', ')', ';', 'final', 'String', 'dialogTag', '=', '""CALDROID_DIALOG_FRAGMENT""', ';', 'if', '(', 'state', '!=', 'null', ')', '{', 'dialogCaldroidFragment', '.', 'restoreDialogStatesFromKey', '(', 'getSupportFragmentManager', '(', ')', ',', 'state', ',', '""DIALOG_CALDROID_SAVED_STATE""', ',', 'dialogTag', ')', ';', 'Bundle', 'args', '=', 'dialogCaldroidFragment', '.', 'getArguments', '(', ')', ';', 'if', '(', 'args', '==', 'null', ')', '{', 'args', '=', 'new', 'Bundle', '(', ')', ';', 'dialogCaldroidFragment', '.', 'setArguments', '(', 'args', ')', ';', '}', '}', 'else', '{', 'Bundle', 'bundle', '=', 'new', 'Bundle', '(', ')', ';', 'dialogCaldroidFragment', '.', 'setArguments', '(', 'bundle', ')', ';', '}', 'dialogCaldroidFragment', '.', 'show', '(', 'getSupportFragmentManager', '(', ')', ',', 'dialogTag', ')', ';', '}', '}', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'if', '(', 'null', ')', '{', 'caldroidFragment', '(', 'savedInstanceState', ',', '""""', ')', ';', '}', '{', 'Bundle', '(', ')', '.', 'setArguments', '(', ')', ';', '}', 't', '(', ')', '.', 'commit', '(', ')', ';', 'listener', '=', 'new', 'CaldroidListener', '(', ')', '{', 'onSelectDate', '(', 'Date', 'view', ')', '{', 'makeText', '(', 'getApplicationContext', '(', ')', '.', 'format', '(', ')', ',', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', 'onChangeMonth', '(', 'int', 'month', ',', 'int', 'year', ')', '{', '(', 'getApplicationContext', '(', ')', '.', '_', ')', '.', 'show', '(', ')', ';', '}', 'onLongClickDate', '(', 'Date', 'date', ',', 'View', 'view', ')', '{', '(', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', 'onCaldroidViewCreated', '(', ')', '{', 'if', '(', 'caldroidFragment', '(', ')', '!=', 'null', ')', '{', 'makeText', '(', 'getApplicationContext', '(', ')', ',', '""""', ',', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ';', '(', 'listener', ')', ';', 'textView', '=', '(', 'Button', ')', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', ')', '{', '{', '(', '(', 'R', ')', ')', ';', 'setMaxDate', '(', ')', ';', '}', '(', '(', 'R', ')', ')', ';', '(', '7', ')', ';', '(', '3', ')', ';', 'ArrayList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '}', 'setShowNavigationArrows', '=', '""""', '+', '(', 'Date', '(', ')', ')', '+', '""""', ';', 'text', '=', '""""', ';', 'text', '=', '""""', '.', 'format', '(', ')', '+', '""""', ';', 'for', '(', 'Date', 'date', ':', 'disabledDates', ')', '{', '}', '}', '}', ')', ';', 'Button', '=', '(', 'button', ')', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', 'View', 'v', ')', '{', 'setCaldroidListener', '(', ')', ';', 'dialogTag', '=', '""""', ';', 'if', '(', 'state', ')', '{', 'getArguments', '(', ')', ';', '{', '(', 'args', ')', ';', '}', '}', '{', '}', 'show', '(', 'getSupportFragmentManager', '(', ')', ',', 'dialogTag', ')', ';', '}', '}', ')', ';', '}']",983,304,6,679,69.49846468781986
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_1.txt,1.0,0.0,"{'n_total': 1887, 'n_valid': 353, 'n_correct': 161}",997.687886,@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; },boolean equals(){(this==obj);if(obj){(null);}if((other))if(fileSize){}if(equals())(isLink);if(null){(null);}((other));if(mimeType){(null);}((other));if(null){(other);}(status());},2094,179,12,1915,91.97886647454372,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', 'return', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', 'return', 'false', ';', 'GradingAttachmentData', 'other', '=', '(', 'GradingAttachmentData', ')', 'obj', ';', 'if', '(', 'attachmentId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentId', '.', 'equals', '(', 'other', '.', 'attachmentId', ')', ')', 'return', 'false', ';', 'if', '(', 'attachmentType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentType', '.', 'equals', '(', 'other', '.', 'attachmentType', ')', ')', 'return', 'false', ';', 'if', '(', 'createdBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdBy', '.', 'equals', '(', 'other', '.', 'createdBy', ')', ')', 'return', 'false', ';', 'if', '(', 'createdDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdDate', '.', 'equals', '(', 'other', '.', 'createdDate', ')', ')', 'return', 'false', ';', 'if', '(', 'description', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'description', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'description', '.', 'equals', '(', 'other', '.', 'description', ')', ')', 'return', 'false', ';', 'if', '(', 'fileSize', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'fileSize', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'fileSize', '.', 'equals', '(', 'other', '.', 'fileSize', ')', ')', 'return', 'false', ';', 'if', '(', 'filename', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'filename', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'filename', '.', 'equals', '(', 'other', '.', 'filename', ')', ')', 'return', 'false', ';', 'if', '(', 'isLink', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'isLink', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'isLink', '.', 'equals', '(', 'other', '.', 'isLink', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedBy', '.', 'equals', '(', 'other', '.', 'lastModifiedBy', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedDate', '.', 'equals', '(', 'other', '.', 'lastModifiedDate', ')', ')', 'return', 'false', ';', 'if', '(', 'location', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'location', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'location', '.', 'equals', '(', 'other', '.', 'location', ')', ')', 'return', 'false', ';', 'if', '(', 'mimeType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'mimeType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'mimeType', '.', 'equals', '(', 'other', '.', 'mimeType', ')', ')', 'return', 'false', ';', 'if', '(', 'resourceId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'resourceId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceId', '.', 'equals', '(', 'other', '.', 'resourceId', ')', ')', 'return', 'false', ';', 'if', '(', 'status', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'status', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'status', '.', 'equals', '(', 'other', '.', 'status', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}']","['boolean', 'equals', '(', ')', '{', '(', 'this', '==', 'obj', ')', ';', 'if', '(', 'obj', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'fileSize', ')', '{', '}', 'if', '(', 'equals', '(', ')', ')', '(', 'isLink', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', '(', '(', 'other', ')', ')', ';', 'if', '(', 'mimeType', ')', '{', '(', 'null', ')', ';', '}', '(', '(', 'other', ')', ')', ';', 'if', '(', 'null', ')', '{', '(', 'other', ')', ';', '}', '(', 'status', '(', ')', ')', ';', '}']",545,92,6,453,84.04452690166976
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_3.txt,0.9356,0.2131,"{'n_total': 1978, 'n_valid': 332, 'n_correct': 167}",954.396899,public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (!(obj instanceof NTRUSigningKeyGenerationParameters)) { return false; } NTRUSigningKeyGenerationParameters other = (NTRUSigningKeyGenerationParameters) obj; if (B != other.B) { return false; } if (N != other.N) { return false; } if (basisType != other.basisType) { return false; } if (Double.doubleToLongBits(beta) != Double.doubleToLongBits(other.beta)) { return false; } if (Double.doubleToLongBits(betaSq) != Double.doubleToLongBits(other.betaSq)) { return false; } if (bitsF != other.bitsF) { return false; } if (d != other.d) { return false; } if (d1 != other.d1) { return false; } if (d2 != other.d2) { return false; } if (d3 != other.d3) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (keyGenAlg != other.keyGenAlg) { return false; } if (Double.doubleToLongBits(keyNormBound) != Double.doubleToLongBits(other.keyNormBound)) { return false; } if (Double.doubleToLongBits(keyNormBoundSq) != Double.doubleToLongBits(other.keyNormBoundSq)) { return false; } if (Double.doubleToLongBits(normBound) != Double.doubleToLongBits(other.normBound)) { return false; } if (Double.doubleToLongBits(normBoundSq) != Double.doubleToLongBits(other.normBoundSq)) { return false; } if (polyType != other.polyType) { return false; } if (primeCheck != other.primeCheck) { return false; } if (q != other.q) { return false; } if (signFailTolerance != other.signFailTolerance) { return false; } if (sparse != other.sparse) { return false; } return true; },boolean equals(Object obj){if(this==NTRUSigningKeyGenerationParameters)if(B){}if(basisType=other){returnfalse;}if(1){}if(d){}if(other){}if(hashAlg){if(other){}}if((other())){}if((keyNormBound)(other)){}if(Double){}if((other)){}if(Double()){}if(polyType)if(sparse){}},1687,266,12,1421,84.83582089552239,"['public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', '(', 'obj', 'instanceof', 'NTRUSigningKeyGenerationParameters', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUSigningKeyGenerationParameters', 'other', '=', '(', 'NTRUSigningKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'B', '!=', 'other', '.', 'B', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'basisType', '!=', 'other', '.', 'basisType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'beta', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'beta', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'betaSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'betaSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bitsF', '!=', 'other', '.', 'bitsF', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd', '!=', 'other', '.', 'd', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd1', '!=', 'other', '.', 'd1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd2', '!=', 'other', '.', 'd2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd3', '!=', 'other', '.', 'd3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'keyGenAlg', '!=', 'other', '.', 'keyGenAlg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'primeCheck', '!=', 'other', '.', 'primeCheck', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'signFailTolerance', '!=', 'other', '.', 'signFailTolerance', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'NTRUSigningKeyGenerationParameters', ')', 'if', '(', 'B', ')', '{', '}', 'if', '(', 'basisType', '=', 'other', ')', '{', 'returnfalse', ';', '}', 'if', '(', '1', ')', '{', '}', 'if', '(', 'd', ')', '{', '}', 'if', '(', 'other', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'other', ')', '{', '}', '}', 'if', '(', '(', 'other', '(', ')', ')', ')', '{', '}', 'if', '(', '(', 'keyNormBound', ')', '(', 'other', ')', ')', '{', '}', 'if', '(', 'Double', ')', '{', '}', 'if', '(', '(', 'other', ')', ')', '{', '}', 'if', '(', 'Double', '(', ')', ')', '{', '}', 'if', '(', 'polyType', ')', 'if', '(', 'sparse', ')', '{', '}', '}']",423,113,6,310,74.34052757793765
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_1.txt,0.9381,0.0645,"{'n_total': 3375, 'n_valid': 336, 'n_correct': 257}",985.021755,"@Override protected void onCreate(Bundle savedInstanceState) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy); super.onCreate(savedInstanceState); setContentView(R.layout.main); map = (MapView) findViewById(R.id.map); map.setBuiltInZoomControls(true); map.setMultiTouchControls(true); GeoPoint startPoint = new GeoPoint(48.13, -1.63); IMapController mapController = map.getController(); mapController.setZoom(10.0); mapController.setCenter(startPoint); Marker startMarker = new Marker(map); startMarker.setPosition(startPoint); startMarker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_BOTTOM); startMarker.setTitle(""Start point""); startMarker.setDraggable(true); startMarker.setOnMarkerDragListener(new OnMarkerDragListenerDrawer()); map.getOverlays().add(startMarker); RoadManager roadManager = new OSRMRoadManager(this); ArrayList<GeoPoint> waypoints = new ArrayList<GeoPoint>(); waypoints.add(startPoint); GeoPoint endPoint = new GeoPoint(48.4, -1.9); waypoints.add(endPoint); Road road = roadManager.getRoad(waypoints); if (road.mStatus != Road.STATUS_OK) Toast.makeText(this, ""Error when loading the road - status="" + road.mStatus, Toast.LENGTH_SHORT).show(); Polyline roadOverlay = RoadManager.buildRoadOverlay(road); map.getOverlays().add(roadOverlay); FolderOverlay roadMarkers = new FolderOverlay(); map.getOverlays().add(roadMarkers); Drawable nodeIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_node, null); for (int i = 0; i < road.mNodes.size(); i++) { RoadNode node = road.mNodes.get(i); Marker nodeMarker = new Marker(map); nodeMarker.setPosition(node.mLocation); nodeMarker.setIcon(nodeIcon); nodeMarker.setTitle(""Step "" + i); nodeMarker.setSnippet(node.mInstructions); nodeMarker.setSubDescription(Road.getLengthDurationText(this, node.mLength, node.mDuration)); Drawable iconContinue = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_continue, null); nodeMarker.setImage(iconContinue); roadMarkers.add(nodeMarker); } NominatimPOIProvider poiProvider = new NominatimPOIProvider(""OsmNavigator/1.0""); ArrayList<POI> pois = poiProvider.getPOICloseTo(startPoint, ""cinema"", 50, 0.1); RadiusMarkerClusterer poiMarkers = new RadiusMarkerClusterer(this); Drawable clusterIconD = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_cluster, null); Bitmap clusterIcon = ((BitmapDrawable) clusterIconD).getBitmap(); poiMarkers.setIcon(clusterIcon); poiMarkers.getTextPaint().setTextSize(12 * getResources().getDisplayMetrics().density); poiMarkers.mAnchorV = Marker.ANCHOR_BOTTOM; poiMarkers.mTextAnchorU = 0.70f; poiMarkers.mTextAnchorV = 0.27f; map.getOverlays().add(poiMarkers); Drawable poiIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_default, null); if (pois != null) { for (POI poi : pois) { Marker poiMarker = new Marker(map); poiMarker.setTitle(poi.mType); poiMarker.setSnippet(poi.mDescription); poiMarker.setPosition(poi.mLocation); poiMarker.setIcon(poiIcon); if (poi.mThumbnail != null) { poiMarker.setImage(new BitmapDrawable(getResources(), poi.mThumbnail)); } poiMarker.setInfoWindow(new CustomInfoWindow(map)); poiMarker.setRelatedObject(poi); poiMarkers.add(poiMarker); } } mKmlDocument = new KmlDocument(); OverpassAPIProvider overpassProvider = new OverpassAPIProvider(); BoundingBox oBB = new BoundingBox(startPoint.getLatitude() + 0.25, startPoint.getLongitude() + 0.25, startPoint.getLatitude() - 0.25, startPoint.getLongitude() - 0.25); String oUrl = overpassProvider.urlForTagSearchKml(""highway=speed_camera"", oBB, 500, 30); boolean ok = overpassProvider.addInKmlFolder(mKmlDocument.mKmlRoot, oUrl); if (ok) { Drawable defaultMarker = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_kml_point, null); Bitmap defaultBitmap = ((BitmapDrawable) defaultMarker).getBitmap(); Style defaultStyle = new Style(defaultBitmap, 0x901010AA, 3.0f, 0x20AA1010); KmlFeature.Styler styler = new MyKmlStyler(defaultStyle); FolderOverlay kmlOverlay = (FolderOverlay) mKmlDocument.mKmlRoot.buildOverlay(map, defaultStyle, styler, mKmlDocument); map.getOverlays().add(kmlOverlay); BoundingBox bb = mKmlDocument.mKmlRoot.getBoundingBox(); if (bb != null) { setInitialViewOn(bb); } } else Toast.makeText(this, ""Error when loading KML"", Toast.LENGTH_SHORT).show(); if (mKmlDocument.mKmlRoot != null) { KmlFolder root = mKmlDocument.mKmlRoot; root.addOverlay(roadOverlay, mKmlDocument); root.addOverlay(roadMarkers, mKmlDocument); mKmlDocument.saveAsKML(mKmlDocument.getDefaultPathForAndroid(""my_route.kml"")); mKmlDocument.saveAsGeoJSON(mKmlDocument.getDefaultPathForAndroid(""my_route.json"")); } MapEventsOverlay mapEventsOverlay = new MapEventsOverlay(this); map.getOverlays().add(0, mapEventsOverlay); }","void onCreate(Bundle savedInstanceState){policy=(MapView)(map)setBuiltInZoomControls();mapController();nodeIcon();for(;;i++){node();(node).setSubDescription((this));(_).setImage();(nodeMarker);}(this);ResourcesCompat();getOverlays().add();if(null){for(POI poi:pois){(map);if(poi){((mThumbnail));}((map));(poi);}}(5);urlForTagSearchKml("""",0);(mKmlDocument);{(drawable);((BitmapDrawable)).getBitmap((""""));}getOverlays();}",4778,419,14,4359,91.49874055415616,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'StrictMode', '.', 'ThreadPolicy', 'policy', '=', 'new', 'StrictMode', '.', 'ThreadPolicy', '.', 'Builder', '(', ')', '.', 'permitAll', '(', ')', '.', 'build', '(', ')', ';', 'StrictMode', '.', 'setThreadPolicy', '(', 'policy', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'map', '=', '(', 'MapView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'map', ')', ';', 'map', '.', 'setBuiltInZoomControls', '(', 'true', ')', ';', 'map', '.', 'setMultiTouchControls', '(', 'true', ')', ';', 'GeoPoint', 'startPoint', '=', 'new', 'GeoPoint', '(', '48.13', ',', '-', '1.63', ')', ';', 'IMapController', 'mapController', '=', 'map', '.', 'getController', '(', ')', ';', 'mapController', '.', 'setZoom', '(', '10.0', ')', ';', 'mapController', '.', 'setCenter', '(', 'startPoint', ')', ';', 'Marker', 'startMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'startMarker', '.', 'setPosition', '(', 'startPoint', ')', ';', 'startMarker', '.', 'setAnchor', '(', 'Marker', '.', 'ANCHOR_CENTER', ',', 'Marker', '.', 'ANCHOR_BOTTOM', ')', ';', 'startMarker', '.', 'setTitle', '(', '""Start point""', ')', ';', 'startMarker', '.', 'setDraggable', '(', 'true', ')', ';', 'startMarker', '.', 'setOnMarkerDragListener', '(', 'new', 'OnMarkerDragListenerDrawer', '(', ')', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'startMarker', ')', ';', 'RoadManager', 'roadManager', '=', 'new', 'OSRMRoadManager', '(', 'this', ')', ';', 'ArrayList', '<', 'GeoPoint', '>', 'waypoints', '=', 'new', 'ArrayList', '<', 'GeoPoint', '>', '(', ')', ';', 'waypoints', '.', 'add', '(', 'startPoint', ')', ';', 'GeoPoint', 'endPoint', '=', 'new', 'GeoPoint', '(', '48.4', ',', '-', '1.9', ')', ';', 'waypoints', '.', 'add', '(', 'endPoint', ')', ';', 'Road', 'road', '=', 'roadManager', '.', 'getRoad', '(', 'waypoints', ')', ';', 'if', '(', 'road', '.', 'mStatus', '!=', 'Road', '.', 'STATUS_OK', ')', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading the road - status=""', '+', 'road', '.', 'mStatus', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'Polyline', 'roadOverlay', '=', 'RoadManager', '.', 'buildRoadOverlay', '(', 'road', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadOverlay', ')', ';', 'FolderOverlay', 'roadMarkers', '=', 'new', 'FolderOverlay', '(', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadMarkers', ')', ';', 'Drawable', 'nodeIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_node', ',', 'null', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'road', '.', 'mNodes', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'RoadNode', 'node', '=', 'road', '.', 'mNodes', '.', 'get', '(', 'i', ')', ';', 'Marker', 'nodeMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'nodeMarker', '.', 'setPosition', '(', 'node', '.', 'mLocation', ')', ';', 'nodeMarker', '.', 'setIcon', '(', 'nodeIcon', ')', ';', 'nodeMarker', '.', 'setTitle', '(', '""Step ""', '+', 'i', ')', ';', 'nodeMarker', '.', 'setSnippet', '(', 'node', '.', 'mInstructions', ')', ';', 'nodeMarker', '.', 'setSubDescription', '(', 'Road', '.', 'getLengthDurationText', '(', 'this', ',', 'node', '.', 'mLength', ',', 'node', '.', 'mDuration', ')', ')', ';', 'Drawable', 'iconContinue', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'ic_continue', ',', 'null', ')', ';', 'nodeMarker', '.', 'setImage', '(', 'iconContinue', ')', ';', 'roadMarkers', '.', 'add', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', 'poiProvider', '=', 'new', 'NominatimPOIProvider', '(', '""OsmNavigator/1.0""', ')', ';', 'ArrayList', '<', 'POI', '>', 'pois', '=', 'poiProvider', '.', 'getPOICloseTo', '(', 'startPoint', ',', '""cinema""', ',', '50', ',', '0.1', ')', ';', 'RadiusMarkerClusterer', 'poiMarkers', '=', 'new', 'RadiusMarkerClusterer', '(', 'this', ')', ';', 'Drawable', 'clusterIconD', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_cluster', ',', 'null', ')', ';', 'Bitmap', 'clusterIcon', '=', '(', '(', 'BitmapDrawable', ')', 'clusterIconD', ')', '.', 'getBitmap', '(', ')', ';', 'poiMarkers', '.', 'setIcon', '(', 'clusterIcon', ')', ';', 'poiMarkers', '.', 'getTextPaint', '(', ')', '.', 'setTextSize', '(', '12', '*', 'getResources', '(', ')', '.', 'getDisplayMetrics', '(', ')', '.', 'density', ')', ';', 'poiMarkers', '.', 'mAnchorV', '=', 'Marker', '.', 'ANCHOR_BOTTOM', ';', 'poiMarkers', '.', 'mTextAnchorU', '=', '0.70f', ';', 'poiMarkers', '.', 'mTextAnchorV', '=', '0.27f', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'poiMarkers', ')', ';', 'Drawable', 'poiIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_default', ',', 'null', ')', ';', 'if', '(', 'pois', '!=', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', 'Marker', 'poiMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'poiMarker', '.', 'setTitle', '(', 'poi', '.', 'mType', ')', ';', 'poiMarker', '.', 'setSnippet', '(', 'poi', '.', 'mDescription', ')', ';', 'poiMarker', '.', 'setPosition', '(', 'poi', '.', 'mLocation', ')', ';', 'poiMarker', '.', 'setIcon', '(', 'poiIcon', ')', ';', 'if', '(', 'poi', '.', 'mThumbnail', '!=', 'null', ')', '{', 'poiMarker', '.', 'setImage', '(', 'new', 'BitmapDrawable', '(', 'getResources', '(', ')', ',', 'poi', '.', 'mThumbnail', ')', ')', ';', '}', 'poiMarker', '.', 'setInfoWindow', '(', 'new', 'CustomInfoWindow', '(', 'map', ')', ')', ';', 'poiMarker', '.', 'setRelatedObject', '(', 'poi', ')', ';', 'poiMarkers', '.', 'add', '(', 'poiMarker', ')', ';', '}', '}', 'mKmlDocument', '=', 'new', 'KmlDocument', '(', ')', ';', 'OverpassAPIProvider', 'overpassProvider', '=', 'new', 'OverpassAPIProvider', '(', ')', ';', 'BoundingBox', 'oBB', '=', 'new', 'BoundingBox', '(', 'startPoint', '.', 'getLatitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLatitude', '(', ')', '-', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '-', '0.25', ')', ';', 'String', 'oUrl', '=', 'overpassProvider', '.', 'urlForTagSearchKml', '(', '""highway=speed_camera""', ',', 'oBB', ',', '500', ',', '30', ')', ';', 'boolean', 'ok', '=', 'overpassProvider', '.', 'addInKmlFolder', '(', 'mKmlDocument', '.', 'mKmlRoot', ',', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'Drawable', 'defaultMarker', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_kml_point', ',', 'null', ')', ';', 'Bitmap', 'defaultBitmap', '=', '(', '(', 'BitmapDrawable', ')', 'defaultMarker', ')', '.', 'getBitmap', '(', ')', ';', 'Style', 'defaultStyle', '=', 'new', 'Style', '(', 'defaultBitmap', ',', '0x901010AA', ',', '3.0f', ',', '0x20AA1010', ')', ';', 'KmlFeature', '.', 'Styler', 'styler', '=', 'new', 'MyKmlStyler', '(', 'defaultStyle', ')', ';', 'FolderOverlay', 'kmlOverlay', '=', '(', 'FolderOverlay', ')', 'mKmlDocument', '.', 'mKmlRoot', '.', 'buildOverlay', '(', 'map', ',', 'defaultStyle', ',', 'styler', ',', 'mKmlDocument', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'kmlOverlay', ')', ';', 'BoundingBox', 'bb', '=', 'mKmlDocument', '.', 'mKmlRoot', '.', 'getBoundingBox', '(', ')', ';', 'if', '(', 'bb', '!=', 'null', ')', '{', 'setInitialViewOn', '(', 'bb', ')', ';', '}', '}', 'else', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading KML""', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'if', '(', 'mKmlDocument', '.', 'mKmlRoot', '!=', 'null', ')', '{', 'KmlFolder', 'root', '=', 'mKmlDocument', '.', 'mKmlRoot', ';', 'root', '.', 'addOverlay', '(', 'roadOverlay', ',', 'mKmlDocument', ')', ';', 'root', '.', 'addOverlay', '(', 'roadMarkers', ',', 'mKmlDocument', ')', ';', 'mKmlDocument', '.', 'saveAsKML', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.kml""', ')', ')', ';', 'mKmlDocument', '.', 'saveAsGeoJSON', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.json""', ')', ')', ';', '}', 'MapEventsOverlay', 'mapEventsOverlay', '=', 'new', 'MapEventsOverlay', '(', 'this', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', '0', ',', 'mapEventsOverlay', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'policy', '=', '(', 'MapView', ')', '(', 'map', ')', 'setBuiltInZoomControls', '(', ')', ';', 'mapController', '(', ')', ';', 'nodeIcon', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'node', '(', ')', ';', '(', 'node', ')', '.', 'setSubDescription', '(', '(', 'this', ')', ')', ';', '(', '_', ')', '.', 'setImage', '(', ')', ';', '(', 'nodeMarker', ')', ';', '}', '(', 'this', ')', ';', 'ResourcesCompat', '(', ')', ';', 'getOverlays', '(', ')', '.', 'add', '(', ')', ';', 'if', '(', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', '(', 'map', ')', ';', 'if', '(', 'poi', ')', '{', '(', '(', 'mThumbnail', ')', ')', ';', '}', '(', '(', 'map', ')', ')', ';', '(', 'poi', ')', ';', '}', '}', '(', '5', ')', ';', 'urlForTagSearchKml', '(', '""""', ',', '0', ')', ';', '(', 'mKmlDocument', ')', ';', '{', '(', 'drawable', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', '.', 'getBitmap', '(', '(', '""""', ')', ')', ';', '}', 'getOverlays', '(', ')', ';', '}']",1031,159,6,872,85.07317073170732
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_4.txt,0.9341,0.0686,"{'n_total': 1478, 'n_valid': 136, 'n_correct': 136}",408.280476,"@Override protected void onCreate(Bundle savedInstanceState) { setContentView(R.layout.activity_main); super.onCreate(savedInstanceState); ViewGroup mainLayout = (ViewGroup) this.findViewById(android.R.id.content); mainLayout.setOnClickListener(mClickListener); mainLayout.setKeepScreenOn(true); byte[] applicationKey = null; try { AssetManager assetManager = getAssets(); InputStream inputStream = assetManager.open(""key.der"", AssetManager.ACCESS_BUFFER); applicationKey = new byte[inputStream.available()]; inputStream.read(applicationKey); inputStream.close(); } catch (IOException e) { e.printStackTrace(); } if (null == applicationKey) { Log.e(TAG, ""Failed to load signing key""); return; } mOuyaFacade = OuyaFacade.getInstance(); Bundle developerInfo = new Bundle(); developerInfo.putString(OuyaFacade.OUYA_DEVELOPER_ID, ""310a8f51-4d6e-4ae5-bda0-b93878e5f5d0""); developerInfo.putByteArray(OuyaFacade.OUYA_DEVELOPER_PUBLIC_KEY, applicationKey); mOuyaFacade.init(this, developerInfo); txtSystem = (TextView) findViewById(R.id.txtSystem); txtController = (TextView) findViewById(R.id.txtController); imgButtonMenu = (ImageView) findViewById(R.id.imgButtonMenu); txtKeyCode = (TextView) findViewById(R.id.txtKeyCode); txtKeyCode2 = (TextView) findViewById(R.id.txtKeyCode2); imgControllerO = (ImageView) findViewById(R.id.imgControllerO); imgControllerU = (ImageView) findViewById(R.id.imgControllerU); imgControllerY = (ImageView) findViewById(R.id.imgControllerY); imgControllerA = (ImageView) findViewById(R.id.imgControllerA); imgControllerL1 = (ImageView) findViewById(R.id.imgControllerL1); imgControllerL2 = (ImageView) findViewById(R.id.imgControllerL2); imgControllerL3 = (ImageView) findViewById(R.id.imgControllerl3); imgControllerR1 = (ImageView) findViewById(R.id.imgControllerR1); imgControllerR2 = (ImageView) findViewById(R.id.imgControllerR2); imgControllerR3 = (ImageView) findViewById(R.id.imgControllerR3); imgControllerDpad = (ImageView) findViewById(R.id.imgControllerDpad); imgControllerDpadDown = (ImageView) findViewById(R.id.imgControllerDpadDown); imgControllerDpadLeft = (ImageView) findViewById(R.id.imgControllerDpadLeft); imgControllerDpadRight = (ImageView) findViewById(R.id.imgControllerDpadRight); imgControllerDpadUp = (ImageView) findViewById(R.id.imgControllerDpadUp); imgControllerBack = (ImageView) findViewById(R.id.imgControllerBack); imgControllerHome = (ImageView) findViewById(R.id.imgControllerHome); imgControllerMenu = (ImageView) findViewById(R.id.imgControllerMenu); imgControllerNext = (ImageView) findViewById(R.id.imgControllerNext); imgControllerPrevious = (ImageView) findViewById(R.id.imgControllerPrevious); imgControllerPower = (ImageView) findViewById(R.id.imgControllerPower); imgControllerLS = (ImageView) findViewById(R.id.imgControllerLS); imgControllerRS = (ImageView) findViewById(R.id.imgControllerRS); imgButtonA = (ImageView) findViewById(R.id.imgButtonA); imgDpadDown = (ImageView) findViewById(R.id.imgDpadDown); imgDpadLeft = (ImageView) findViewById(R.id.imgDpadLeft); imgDpadRight = (ImageView) findViewById(R.id.imgDpadRight); imgDpadUp = (ImageView) findViewById(R.id.imgDpadUp); imgLeftStick = (ImageView) findViewById(R.id.imgLeftStick); imgLeftBumper = (ImageView) findViewById(R.id.imgLeftBumper); imgLeftTrigger = (ImageView) findViewById(R.id.imgLeftTrigger); imgButtonO = (ImageView) findViewById(R.id.imgButtonO); imgRightStick = (ImageView) findViewById(R.id.imgRightStick); imgRightBumper = (ImageView) findViewById(R.id.imgRightBumper); imgRightTrigger = (ImageView) findViewById(R.id.imgRightTrigger); imgLeftThumb = (ImageView) findViewById(R.id.imgLeftThumb); imgRightThumb = (ImageView) findViewById(R.id.imgRightThumb); imgButtonU = (ImageView) findViewById(R.id.imgButtonU); imgButtonY = (ImageView) findViewById(R.id.imgButtonY); OuyaInputMapper.setEnableControllerDispatch(true); OuyaController.showCursor(true); Thread timer = new Thread() { public void run() { while (mWaitToExit) { if (mMenuDetected != 0 && mMenuDetected < System.nanoTime()) { mMenuDetected = 0; Runnable runnable = new Runnable() { public void run() { imgButtonMenu.setVisibility(View.INVISIBLE); } }; runOnUiThread(runnable); } try { Thread.sleep(50); } catch (InterruptedException e) { } } } }; timer.start(); }","void onCreate(Bundle savedInstanceState){(R);onCreate();mainLayout=(ViewGroup)(android);try{open("""",AssetManager);applicationKey[inputStream];}catch(IOException e){}if(null==applicationKey){e(TAG,"""");}(R)=new Thread(){run(){while(mWaitToExit){if(nanoTime){new Runnable(){run(){}};(runnable);}try{sleep();}catch(InterruptedException e){}}}};}",4280,341,14,3939,92.33473980309424,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'ViewGroup', 'mainLayout', '=', '(', 'ViewGroup', ')', 'this', '.', 'findViewById', '(', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', 'mainLayout', '.', 'setOnClickListener', '(', 'mClickListener', ')', ';', 'mainLayout', '.', 'setKeepScreenOn', '(', 'true', ')', ';', 'byte', '[', ']', 'applicationKey', '=', 'null', ';', 'try', '{', 'AssetManager', 'assetManager', '=', 'getAssets', '(', ')', ';', 'InputStream', 'inputStream', '=', 'assetManager', '.', 'open', '(', '""key.der""', ',', 'AssetManager', '.', 'ACCESS_BUFFER', ')', ';', 'applicationKey', '=', 'new', 'byte', '[', 'inputStream', '.', 'available', '(', ')', ']', ';', 'inputStream', '.', 'read', '(', 'applicationKey', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'if', '(', 'null', '==', 'applicationKey', ')', '{', 'Log', '.', 'e', '(', 'TAG', ',', '""Failed to load signing key""', ')', ';', 'return', ';', '}', 'mOuyaFacade', '=', 'OuyaFacade', '.', 'getInstance', '(', ')', ';', 'Bundle', 'developerInfo', '=', 'new', 'Bundle', '(', ')', ';', 'developerInfo', '.', 'putString', '(', 'OuyaFacade', '.', 'OUYA_DEVELOPER_ID', ',', '""310a8f51-4d6e-4ae5-bda0-b93878e5f5d0""', ')', ';', 'developerInfo', '.', 'putByteArray', '(', 'OuyaFacade', '.', 'OUYA_DEVELOPER_PUBLIC_KEY', ',', 'applicationKey', ')', ';', 'mOuyaFacade', '.', 'init', '(', 'this', ',', 'developerInfo', ')', ';', 'txtSystem', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtSystem', ')', ';', 'txtController', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtController', ')', ';', 'imgButtonMenu', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonMenu', ')', ';', 'txtKeyCode', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtKeyCode', ')', ';', 'txtKeyCode2', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtKeyCode2', ')', ';', 'imgControllerO', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerO', ')', ';', 'imgControllerU', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerU', ')', ';', 'imgControllerY', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerY', ')', ';', 'imgControllerA', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerA', ')', ';', 'imgControllerL1', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerL1', ')', ';', 'imgControllerL2', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerL2', ')', ';', 'imgControllerL3', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerl3', ')', ';', 'imgControllerR1', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR1', ')', ';', 'imgControllerR2', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR2', ')', ';', 'imgControllerR3', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR3', ')', ';', 'imgControllerDpad', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpad', ')', ';', 'imgControllerDpadDown', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadDown', ')', ';', 'imgControllerDpadLeft', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadLeft', ')', ';', 'imgControllerDpadRight', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadRight', ')', ';', 'imgControllerDpadUp', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadUp', ')', ';', 'imgControllerBack', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerBack', ')', ';', 'imgControllerHome', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerHome', ')', ';', 'imgControllerMenu', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerMenu', ')', ';', 'imgControllerNext', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerNext', ')', ';', 'imgControllerPrevious', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerPrevious', ')', ';', 'imgControllerPower', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerPower', ')', ';', 'imgControllerLS', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerLS', ')', ';', 'imgControllerRS', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerRS', ')', ';', 'imgButtonA', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonA', ')', ';', 'imgDpadDown', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadDown', ')', ';', 'imgDpadLeft', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadLeft', ')', ';', 'imgDpadRight', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadRight', ')', ';', 'imgDpadUp', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadUp', ')', ';', 'imgLeftStick', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftStick', ')', ';', 'imgLeftBumper', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftBumper', ')', ';', 'imgLeftTrigger', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftTrigger', ')', ';', 'imgButtonO', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonO', ')', ';', 'imgRightStick', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightStick', ')', ';', 'imgRightBumper', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightBumper', ')', ';', 'imgRightTrigger', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightTrigger', ')', ';', 'imgLeftThumb', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftThumb', ')', ';', 'imgRightThumb', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightThumb', ')', ';', 'imgButtonU', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonU', ')', ';', 'imgButtonY', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonY', ')', ';', 'OuyaInputMapper', '.', 'setEnableControllerDispatch', '(', 'true', ')', ';', 'OuyaController', '.', 'showCursor', '(', 'true', ')', ';', 'Thread', 'timer', '=', 'new', 'Thread', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'while', '(', 'mWaitToExit', ')', '{', 'if', '(', 'mMenuDetected', '!=', '0', '&&', 'mMenuDetected', '<', 'System', '.', 'nanoTime', '(', ')', ')', '{', 'mMenuDetected', '=', '0', ';', 'Runnable', 'runnable', '=', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'imgButtonMenu', '.', 'setVisibility', '(', 'View', '.', 'INVISIBLE', ')', ';', '}', '}', ';', 'runOnUiThread', '(', 'runnable', ')', ';', '}', 'try', '{', 'Thread', '.', 'sleep', '(', '50', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}', '}', ';', 'timer', '.', 'start', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'R', ')', ';', 'onCreate', '(', ')', ';', 'mainLayout', '=', '(', 'ViewGroup', ')', '(', 'android', ')', ';', 'try', '{', 'open', '(', '""""', ',', 'AssetManager', ')', ';', 'applicationKey', '[', 'inputStream', ']', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'null', '==', 'applicationKey', ')', '{', 'e', '(', 'TAG', ',', '""""', ')', ';', '}', '(', 'R', ')', '=', 'new', 'Thread', '(', ')', '{', 'run', '(', ')', '{', 'while', '(', 'mWaitToExit', ')', '{', 'if', '(', 'nanoTime', ')', '{', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ';', '(', 'runnable', ')', ';', '}', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}', '}', ';', '}']",922,120,6,802,87.55458515283843
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 6525, 'n_valid': 454, 'n_correct': 402}",1425.979176,"@Override protected void onCreate(Bundle savedInstanceState) { if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(""theme"", false)) { setTheme(R.style.DayTheme); } super.onCreate(savedInstanceState); addPreferencesFromResource(R.xml.preference); findPreference(""super_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object o) { MainActivity.writePreferences(o.toString(), SUPER_MODE_NAME); return true; } }); findPreference(""only_once"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ONLY_ONCE_NAME); return true; } }); findPreference(""standard_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), STANDARD_MODE_NAME); return true; } }); findPreference(""import"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { final AppCompatEditText editText = new AppCompatEditText(PreferencesActivity.this); editText.setHint(R.string.import_rules); new AlertDialog.Builder(PreferencesActivity.this).setTitle(R.string.conf_import_rules_name).setView(editText).setPositiveButton(R.string.OK, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialogInterface, int i) { MainActivity.appendPreferences(""\n"" + editText.getText().toString(), Constant.LIST_NAME); } }).setNegativeButton(R.string.cancel, null).show(); return false; } }); findPreference(""online_rules"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { setResult(RESULT_OK); finish(); return false; } }); findPreference(""about"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { clickTime++; if (clickTime >= 5 * 59) { clickTime = 0; try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id="" + getPackageName()))); } catch (Throwable ignored) { } Toast.makeText(PreferencesActivity.this, R.string.give_me_five_stars, Toast.LENGTH_LONG).show(); } preference.setSummary(String.format(Locale.CHINA, getString(R.string.conf_joke), clickTime / 59, clickTime % 59)); return false; } }); findPreference(""version"").setSummary(getVersionName(this)); findPreference(""pay"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { Toast.makeText(PreferencesActivity.this, R.string.no_donate, Toast.LENGTH_SHORT).show(); return false; } }); findPreference(""source"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new AlertDialog.Builder(PreferencesActivity.this).setTitle(""Open Source"").setMessage(""Nothing"").setPositiveButton(getString(R.string.OK), null).show(); return false; } }); findPreference(""qq"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://jq.qq.com/?_wv=1027&k=4EepPOs""))); } catch (Throwable ignored) { } return false; } }); findPreference(""guide"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { setResult(RESULT_GUIDE); finish(); } catch (ActivityNotFoundException a) { a.printStackTrace(); Toast.makeText(PreferencesActivity.this, getString(R.string.unsupport_of_package), Toast.LENGTH_SHORT).show(); } return false; } }); findPreference(""log"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new Thread(new Runnable() { @Override public void run() { final String bug = String.format(Locale.CHINA, ""Logcat:\n\n%s\n\n"" + ""=================\n\n"" + ""XposedLog:\n\n%s\n\n"" + ""=================\n\n"" + ""Phone:\n\n%s\n\n"", getLogcatInfo(), getXposedLogInfo(), getPhoneInfo()); runOnUiThread(new Runnable() { @Override public void run() { shareText(bug); } }); } }).start(); return false; } }); findPreference(""theme"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { finish(); Intent restart = new Intent(PreferencesActivity.this, MainActivity.class); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK); } else { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } startActivity(restart); return false; } }); findPreference(""enable_log"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ENABLE_LOG_NAME); return true; } }); }","void onCreate(){if(PreferenceManager().getBoolean("""",false)){(DayTheme);}onCreate();("""").setOnPreferenceChangeListener(new Preference(){onPreferenceChange(Preference preference,Object o){MainActivity(o(),SUPER);}});("""").setOnPreferenceChangeListener(new OnPreferenceChangeListener(){onPreferenceChange(Preference preference,Object newValue){(newValue());}});(new Preference(){onPreferenceClick(){editText();(editText).setPositiveButton(new DialogInterface(){onClick(DialogInterface dialogInterface,int i){(getText);}}).setNegativeButton().show();}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){clickTime++;if(clickTime){{}(LONG).show();}((Locale));}});("""").setSummary((this));(new Preference(){onPreferenceClick(Preference preference){(SHORT);}onPreferenceClick(Preference preference){(null).show;}});(new OnPreferenceClickListener(){onPreferenceClick(){try{((("""")));}catch(Throwable ignored){}}});(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){try{}catch(ActivityNotFoundException a){((R)).show();}}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){(new Runnable(){run(){String(Locale,"""",getPhoneInfo());(new Runnable(){run(){}});}});}});(new Preference(){onPreferenceClick(Preference preference){(PreferencesActivity);if(HONEYCOMB){(Intent);}}onPreferenceChange(Preference newValue){(NAME);}});}",5348,1558,14,3790,71.05361829771279,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', '.', 'getBoolean', '(', '""theme""', ',', 'false', ')', ')', '{', 'setTheme', '(', 'R', '.', 'style', '.', 'DayTheme', ')', ';', '}', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'addPreferencesFromResource', '(', 'R', '.', 'xml', '.', 'preference', ')', ';', 'findPreference', '(', '""super_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'o', '.', 'toString', '(', ')', ',', 'SUPER_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""only_once""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ONLY_ONCE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""standard_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'STANDARD_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""import""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'final', 'AppCompatEditText', 'editText', '=', 'new', 'AppCompatEditText', '(', 'PreferencesActivity', '.', 'this', ')', ';', 'editText', '.', 'setHint', '(', 'R', '.', 'string', '.', 'import_rules', ')', ';', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'conf_import_rules_name', ')', '.', 'setView', '(', 'editText', ')', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'OK', ',', 'new', 'DialogInterface', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', 'MainActivity', '.', 'appendPreferences', '(', '""\\n""', '+', 'editText', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', 'Constant', '.', 'LIST_NAME', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', 'R', '.', 'string', '.', 'cancel', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""online_rules""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'setResult', '(', 'RESULT_OK', ')', ';', 'finish', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""about""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', 'clickTime', '>=', '5', '*', '59', ')', '{', 'clickTime', '=', '0', ';', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""market://details?id=""', '+', 'getPackageName', '(', ')', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'give_me_five_stars', ',', 'Toast', '.', 'LENGTH_LONG', ')', '.', 'show', '(', ')', ';', '}', 'preference', '.', 'setSummary', '(', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', 'getString', '(', 'R', '.', 'string', '.', 'conf_joke', ')', ',', 'clickTime', '/', '59', ',', 'clickTime', '%', '59', ')', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""version""', ')', '.', 'setSummary', '(', 'getVersionName', '(', 'this', ')', ')', ';', 'findPreference', '(', '""pay""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'no_donate', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""source""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', '""Open Source""', ')', '.', 'setMessage', '(', '""Nothing""', ')', '.', 'setPositiveButton', '(', 'getString', '(', 'R', '.', 'string', '.', 'OK', ')', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""qq""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""https://jq.qq.com/?_wv=1027&k=4EepPOs""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""guide""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'setResult', '(', 'RESULT_GUIDE', ')', ';', 'finish', '(', ')', ';', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', 'a', '.', 'printStackTrace', '(', ')', ';', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'getString', '(', 'R', '.', 'string', '.', 'unsupport_of_package', ')', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""log""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'Thread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'final', 'String', 'bug', '=', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', '""Logcat:\\n\\n%s\\n\\n""', '+', '""=================\\n\\n""', '+', '""XposedLog:\\n\\n%s\\n\\n""', '+', '""=================\\n\\n""', '+', '""Phone:\\n\\n%s\\n\\n""', ',', 'getLogcatInfo', '(', ')', ',', 'getXposedLogInfo', '(', ')', ',', 'getPhoneInfo', '(', ')', ')', ';', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'shareText', '(', 'bug', ')', ';', '}', '}', ')', ';', '}', '}', ')', '.', 'start', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""theme""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'finish', '(', ')', ';', 'Intent', 'restart', '=', 'new', 'Intent', '(', 'PreferencesActivity', '.', 'this', ',', 'MainActivity', '.', 'class', ')', ';', 'if', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', '>=', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', '|', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ';', '}', 'else', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ')', ';', '}', 'startActivity', '(', 'restart', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""enable_log""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ENABLE_LOG_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', 'if', '(', 'PreferenceManager', '(', ')', '.', 'getBoolean', '(', '""""', ',', 'false', ')', ')', '{', '(', 'DayTheme', ')', ';', '}', 'onCreate', '(', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '(', 'o', '(', ')', ',', 'SUPER', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'OnPreferenceChangeListener', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', '(', 'newValue', '(', ')', ')', ';', '}', '}', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'editText', '(', ')', ';', '(', 'editText', ')', '.', 'setPositiveButton', '(', 'new', 'DialogInterface', '(', ')', '{', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', '(', 'getText', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', ')', '.', 'show', '(', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', 'clickTime', ')', '{', '{', '}', '(', 'LONG', ')', '.', 'show', '(', ')', ';', '}', '(', '(', 'Locale', ')', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setSummary', '(', '(', 'this', ')', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'SHORT', ')', ';', '}', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'null', ')', '.', 'show', ';', '}', '}', ')', ';', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'try', '{', '(', '(', '(', '""""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', '}', '}', ')', ';', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', '(', '(', 'R', ')', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'String', '(', 'Locale', ',', '""""', ',', 'getPhoneInfo', '(', ')', ')', ';', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ')', ';', '}', '}', ')', ';', '}', '}', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'PreferencesActivity', ')', ';', 'if', '(', 'HONEYCOMB', ')', '{', '(', 'Intent', ')', ';', '}', '}', 'onPreferenceChange', '(', 'Preference', 'newValue', ')', '{', '(', 'NAME', ')', ';', '}', '}', ')', ';', '}']",1049,426,6,623,59.73154362416108
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_7.txt,0.9125,0.0945,"{'n_total': 4909, 'n_valid': 392, 'n_correct': 392}",1210.84322,"@Override @SuppressWarnings(""deprecation"") public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Thread.setDefaultUncaughtExceptionHandler(new UnhandledExceptionHandler(this)); requestWindowFeature(Window.FEATURE_NO_TITLE); getWindow().addFlags(LayoutParams.FLAG_FULLSCREEN | LayoutParams.FLAG_KEEP_SCREEN_ON | LayoutParams.FLAG_SHOW_WHEN_LOCKED | LayoutParams.FLAG_TURN_SCREEN_ON); getWindow().getDecorView().setSystemUiVisibility(getSystemUiVisibility()); setContentView(R.layout.activity_call); iceConnected = false; signalingParameters = null; pipRenderer = findViewById(R.id.pip_video_view); fullscreenRenderer = findViewById(R.id.fullscreen_video_view); callFragment = new CallFragment(); hudFragment = new HudFragment(); View.OnClickListener listener = new View.OnClickListener() { @Override public void onClick(View view) { toggleCallControlFragmentVisibility(); } }; pipRenderer.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { setSwappedFeeds(!isSwappedFeeds); } }); fullscreenRenderer.setOnClickListener(listener); remoteSinks.add(remoteProxyRenderer); final Intent intent = getIntent(); final EglBase eglBase = EglBase.create(); pipRenderer.init(eglBase.getEglBaseContext(), null); pipRenderer.setScalingType(ScalingType.SCALE_ASPECT_FIT); String saveRemoteVideoToFile = intent.getStringExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE); if (saveRemoteVideoToFile != null) { int videoOutWidth = intent.getIntExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_WIDTH, 0); int videoOutHeight = intent.getIntExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_HEIGHT, 0); try { videoFileRenderer = new VideoFileRenderer(saveRemoteVideoToFile, videoOutWidth, videoOutHeight, eglBase.getEglBaseContext()); remoteSinks.add(videoFileRenderer); } catch (IOException e) { throw new RuntimeException(""Failed to open video file for output: "" + saveRemoteVideoToFile, e); } } fullscreenRenderer.init(eglBase.getEglBaseContext(), null); fullscreenRenderer.setScalingType(ScalingType.SCALE_ASPECT_FILL); pipRenderer.setZOrderMediaOverlay(true); pipRenderer.setEnableHardwareScaler(true); fullscreenRenderer.setEnableHardwareScaler(false); setSwappedFeeds(true); for (String permission : MANDATORY_PERMISSIONS) { if (checkCallingOrSelfPermission(permission) != PackageManager.PERMISSION_GRANTED) { logAndToast(""Permission "" + permission + "" is not granted""); setResult(RESULT_CANCELED); finish(); return; } } Uri roomUri = intent.getData(); if (roomUri == null) { logAndToast(getString(R.string.missing_url)); Log.e(TAG, ""Didn't get any URL in intent!""); setResult(RESULT_CANCELED); finish(); return; } String roomId = intent.getStringExtra(EXTRA_ROOMID); Log.d(TAG, ""Room ID: "" + roomId); if (roomId == null || roomId.length() == 0) { logAndToast(getString(R.string.missing_url)); Log.e(TAG, ""Incorrect room ID in intent!""); setResult(RESULT_CANCELED); finish(); return; } boolean loopback = intent.getBooleanExtra(EXTRA_LOOPBACK, false); boolean tracing = intent.getBooleanExtra(EXTRA_TRACING, false); int videoWidth = intent.getIntExtra(EXTRA_VIDEO_WIDTH, 0); int videoHeight = intent.getIntExtra(EXTRA_VIDEO_HEIGHT, 0); screencaptureEnabled = intent.getBooleanExtra(EXTRA_SCREENCAPTURE, false); if (screencaptureEnabled && videoWidth == 0 && videoHeight == 0) { DisplayMetrics displayMetrics = getDisplayMetrics(); videoWidth = displayMetrics.widthPixels; videoHeight = displayMetrics.heightPixels; } DataChannelParameters dataChannelParameters = null; if (intent.getBooleanExtra(EXTRA_DATA_CHANNEL_ENABLED, false)) { dataChannelParameters = new DataChannelParameters(intent.getBooleanExtra(EXTRA_ORDERED, true), intent.getIntExtra(EXTRA_MAX_RETRANSMITS_MS, -1), intent.getIntExtra(EXTRA_MAX_RETRANSMITS, -1), intent.getStringExtra(EXTRA_PROTOCOL), intent.getBooleanExtra(EXTRA_NEGOTIATED, false), intent.getIntExtra(EXTRA_ID, -1)); } peerConnectionParameters = new PeerConnectionParameters(intent.getBooleanExtra(EXTRA_VIDEO_CALL, true), loopback, tracing, videoWidth, videoHeight, intent.getIntExtra(EXTRA_VIDEO_FPS, 0), intent.getIntExtra(EXTRA_VIDEO_BITRATE, 0), intent.getStringExtra(EXTRA_VIDEOCODEC), intent.getBooleanExtra(EXTRA_HWCODEC_ENABLED, true), intent.getBooleanExtra(EXTRA_FLEXFEC_ENABLED, false), intent.getIntExtra(EXTRA_AUDIO_BITRATE, 0), intent.getStringExtra(EXTRA_AUDIOCODEC), intent.getBooleanExtra(EXTRA_NOAUDIOPROCESSING_ENABLED, false), intent.getBooleanExtra(EXTRA_AECDUMP_ENABLED, false), intent.getBooleanExtra(EXTRA_SAVE_INPUT_AUDIO_TO_FILE_ENABLED, false), intent.getBooleanExtra(EXTRA_OPENSLES_ENABLED, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_AEC, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_AGC, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_NS, false), intent.getBooleanExtra(EXTRA_DISABLE_WEBRTC_AGC_AND_HPF, false), intent.getBooleanExtra(EXTRA_ENABLE_RTCEVENTLOG, false), intent.getBooleanExtra(EXTRA_USE_LEGACY_AUDIO_DEVICE, false), dataChannelParameters); commandLineRun = intent.getBooleanExtra(EXTRA_CMDLINE, false); int runTimeMs = intent.getIntExtra(EXTRA_RUNTIME, 0); Log.d(TAG, ""VIDEO_FILE: '"" + intent.getStringExtra(EXTRA_VIDEO_FILE_AS_CAMERA) + ""'""); if (loopback || !DirectRTCClient.IP_PATTERN.matcher(roomId).matches()) { appRtcClient = new WebSocketRTCClient(this); } else { Log.i(TAG, ""Using DirectRTCClient because room name looks like an IP.""); appRtcClient = new DirectRTCClient(this); } String urlParameters = intent.getStringExtra(EXTRA_URLPARAMETERS); roomConnectionParameters = new RoomConnectionParameters(roomUri.toString(), roomId, loopback, urlParameters); if (CpuMonitor.isSupported()) { cpuMonitor = new CpuMonitor(this); hudFragment.setCpuMonitor(cpuMonitor); } callFragment.setArguments(intent.getExtras()); hudFragment.setArguments(intent.getExtras()); FragmentTransaction ft = getFragmentManager().beginTransaction(); ft.add(R.id.call_fragment_container, callFragment); ft.add(R.id.hud_fragment_container, hudFragment); ft.commit(); if (commandLineRun && runTimeMs > 0) { (new Handler()).postDelayed(new Runnable() { @Override public void run() { disconnect(); } }, runTimeMs); } peerConnectionClient = new PeerConnectionClient(getApplicationContext(), eglBase, peerConnectionParameters, CallActivity.this); PeerConnectionFactory.Options options = new PeerConnectionFactory.Options(); if (loopback) { options.networkIgnoreMask = 0; } peerConnectionClient.createPeerConnectionFactory(options); if (screencaptureEnabled) { startScreenCapture(); } else { startCall(); } }","@SuppressWarnings()void onCreate(Bundle savedInstanceState){(savedInstanceState).setContentView();(view);listener=new View(){onClick(View view){}};(new View(){onClick(View view){(isSwappedFeeds);}});init(getEglBaseContext(),null);(ScalingType);(_);if(null){(EXTRA);try{(getEglBaseContext());}catch(IOException e){(""""+e);}}for(String permission:PERMISSIONS){if(GRANTED){}}roomUri();if(roomUri){((url));Log(TAG,"""");(RESULT);}(false);videoWidth();if(videoWidth){}if((false)){dataChannelParameters((PROTOCOL)getBooleanExtra(),(EXTRA));}((EXTRA));(""""+"""");if(loopback()){appRtcClient();}{("""");appRtcClient();}RoomConnectionParameters(toString(),urlParameters);if(isSupported()){}(intent);(hudFragment);commit();if(commandLineRun){postDelayed(new Runnable(){run(){}},runTimeMs);}(options);if(screencaptureEnabled){}{}}",6506,811,14,5695,87.72335181762169,"['@', 'Override', '@', 'SuppressWarnings', '(', '""deprecation""', ')', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'Thread', '.', 'setDefaultUncaughtExceptionHandler', '(', 'new', 'UnhandledExceptionHandler', '(', 'this', ')', ')', ';', 'requestWindowFeature', '(', 'Window', '.', 'FEATURE_NO_TITLE', ')', ';', 'getWindow', '(', ')', '.', 'addFlags', '(', 'LayoutParams', '.', 'FLAG_FULLSCREEN', '|', 'LayoutParams', '.', 'FLAG_KEEP_SCREEN_ON', '|', 'LayoutParams', '.', 'FLAG_SHOW_WHEN_LOCKED', '|', 'LayoutParams', '.', 'FLAG_TURN_SCREEN_ON', ')', ';', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'setSystemUiVisibility', '(', 'getSystemUiVisibility', '(', ')', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_call', ')', ';', 'iceConnected', '=', 'false', ';', 'signalingParameters', '=', 'null', ';', 'pipRenderer', '=', 'findViewById', '(', 'R', '.', 'id', '.', 'pip_video_view', ')', ';', 'fullscreenRenderer', '=', 'findViewById', '(', 'R', '.', 'id', '.', 'fullscreen_video_view', ')', ';', 'callFragment', '=', 'new', 'CallFragment', '(', ')', ';', 'hudFragment', '=', 'new', 'HudFragment', '(', ')', ';', 'View', '.', 'OnClickListener', 'listener', '=', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'view', ')', '{', 'toggleCallControlFragmentVisibility', '(', ')', ';', '}', '}', ';', 'pipRenderer', '.', 'setOnClickListener', '(', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'view', ')', '{', 'setSwappedFeeds', '(', '!', 'isSwappedFeeds', ')', ';', '}', '}', ')', ';', 'fullscreenRenderer', '.', 'setOnClickListener', '(', 'listener', ')', ';', 'remoteSinks', '.', 'add', '(', 'remoteProxyRenderer', ')', ';', 'final', 'Intent', 'intent', '=', 'getIntent', '(', ')', ';', 'final', 'EglBase', 'eglBase', '=', 'EglBase', '.', 'create', '(', ')', ';', 'pipRenderer', '.', 'init', '(', 'eglBase', '.', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', 'pipRenderer', '.', 'setScalingType', '(', 'ScalingType', '.', 'SCALE_ASPECT_FIT', ')', ';', 'String', 'saveRemoteVideoToFile', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE', ')', ';', 'if', '(', 'saveRemoteVideoToFile', '!=', 'null', ')', '{', 'int', 'videoOutWidth', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_WIDTH', ',', '0', ')', ';', 'int', 'videoOutHeight', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_HEIGHT', ',', '0', ')', ';', 'try', '{', 'videoFileRenderer', '=', 'new', 'VideoFileRenderer', '(', 'saveRemoteVideoToFile', ',', 'videoOutWidth', ',', 'videoOutHeight', ',', 'eglBase', '.', 'getEglBaseContext', '(', ')', ')', ';', 'remoteSinks', '.', 'add', '(', 'videoFileRenderer', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Failed to open video file for output: ""', '+', 'saveRemoteVideoToFile', ',', 'e', ')', ';', '}', '}', 'fullscreenRenderer', '.', 'init', '(', 'eglBase', '.', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', 'fullscreenRenderer', '.', 'setScalingType', '(', 'ScalingType', '.', 'SCALE_ASPECT_FILL', ')', ';', 'pipRenderer', '.', 'setZOrderMediaOverlay', '(', 'true', ')', ';', 'pipRenderer', '.', 'setEnableHardwareScaler', '(', 'true', ')', ';', 'fullscreenRenderer', '.', 'setEnableHardwareScaler', '(', 'false', ')', ';', 'setSwappedFeeds', '(', 'true', ')', ';', 'for', '(', 'String', 'permission', ':', 'MANDATORY_PERMISSIONS', ')', '{', 'if', '(', 'checkCallingOrSelfPermission', '(', 'permission', ')', '!=', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', '{', 'logAndToast', '(', '""Permission ""', '+', 'permission', '+', '"" is not granted""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', '}', 'Uri', 'roomUri', '=', 'intent', '.', 'getData', '(', ')', ';', 'if', '(', 'roomUri', '==', 'null', ')', '{', 'logAndToast', '(', 'getString', '(', 'R', '.', 'string', '.', 'missing_url', ')', ')', ';', 'Log', '.', 'e', '(', 'TAG', ',', '""Didn\'t get any URL in intent!""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', 'String', 'roomId', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_ROOMID', ')', ';', 'Log', '.', 'd', '(', 'TAG', ',', '""Room ID: ""', '+', 'roomId', ')', ';', 'if', '(', 'roomId', '==', 'null', '||', 'roomId', '.', 'length', '(', ')', '==', '0', ')', '{', 'logAndToast', '(', 'getString', '(', 'R', '.', 'string', '.', 'missing_url', ')', ')', ';', 'Log', '.', 'e', '(', 'TAG', ',', '""Incorrect room ID in intent!""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', 'boolean', 'loopback', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_LOOPBACK', ',', 'false', ')', ';', 'boolean', 'tracing', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_TRACING', ',', 'false', ')', ';', 'int', 'videoWidth', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_WIDTH', ',', '0', ')', ';', 'int', 'videoHeight', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_HEIGHT', ',', '0', ')', ';', 'screencaptureEnabled', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_SCREENCAPTURE', ',', 'false', ')', ';', 'if', '(', 'screencaptureEnabled', '&&', 'videoWidth', '==', '0', '&&', 'videoHeight', '==', '0', ')', '{', 'DisplayMetrics', 'displayMetrics', '=', 'getDisplayMetrics', '(', ')', ';', 'videoWidth', '=', 'displayMetrics', '.', 'widthPixels', ';', 'videoHeight', '=', 'displayMetrics', '.', 'heightPixels', ';', '}', 'DataChannelParameters', 'dataChannelParameters', '=', 'null', ';', 'if', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DATA_CHANNEL_ENABLED', ',', 'false', ')', ')', '{', 'dataChannelParameters', '=', 'new', 'DataChannelParameters', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_ORDERED', ',', 'true', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_MAX_RETRANSMITS_MS', ',', '-', '1', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_MAX_RETRANSMITS', ',', '-', '1', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_PROTOCOL', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_NEGOTIATED', ',', 'false', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_ID', ',', '-', '1', ')', ')', ';', '}', 'peerConnectionParameters', '=', 'new', 'PeerConnectionParameters', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_VIDEO_CALL', ',', 'true', ')', ',', 'loopback', ',', 'tracing', ',', 'videoWidth', ',', 'videoHeight', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_FPS', ',', '0', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_BITRATE', ',', '0', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_VIDEOCODEC', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_HWCODEC_ENABLED', ',', 'true', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_FLEXFEC_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_AUDIO_BITRATE', ',', '0', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_AUDIOCODEC', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_NOAUDIOPROCESSING_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_AECDUMP_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_SAVE_INPUT_AUDIO_TO_FILE_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_OPENSLES_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_AEC', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_AGC', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_NS', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_WEBRTC_AGC_AND_HPF', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_ENABLE_RTCEVENTLOG', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_USE_LEGACY_AUDIO_DEVICE', ',', 'false', ')', ',', 'dataChannelParameters', ')', ';', 'commandLineRun', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_CMDLINE', ',', 'false', ')', ';', 'int', 'runTimeMs', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_RUNTIME', ',', '0', ')', ';', 'Log', '.', 'd', '(', 'TAG', ',', '""VIDEO_FILE: \'""', '+', 'intent', '.', 'getStringExtra', '(', 'EXTRA_VIDEO_FILE_AS_CAMERA', ')', '+', '""\'""', ')', ';', 'if', '(', 'loopback', '||', '!', 'DirectRTCClient', '.', 'IP_PATTERN', '.', 'matcher', '(', 'roomId', ')', '.', 'matches', '(', ')', ')', '{', 'appRtcClient', '=', 'new', 'WebSocketRTCClient', '(', 'this', ')', ';', '}', 'else', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""Using DirectRTCClient because room name looks like an IP.""', ')', ';', 'appRtcClient', '=', 'new', 'DirectRTCClient', '(', 'this', ')', ';', '}', 'String', 'urlParameters', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_URLPARAMETERS', ')', ';', 'roomConnectionParameters', '=', 'new', 'RoomConnectionParameters', '(', 'roomUri', '.', 'toString', '(', ')', ',', 'roomId', ',', 'loopback', ',', 'urlParameters', ')', ';', 'if', '(', 'CpuMonitor', '.', 'isSupported', '(', ')', ')', '{', 'cpuMonitor', '=', 'new', 'CpuMonitor', '(', 'this', ')', ';', 'hudFragment', '.', 'setCpuMonitor', '(', 'cpuMonitor', ')', ';', '}', 'callFragment', '.', 'setArguments', '(', 'intent', '.', 'getExtras', '(', ')', ')', ';', 'hudFragment', '.', 'setArguments', '(', 'intent', '.', 'getExtras', '(', ')', ')', ';', 'FragmentTransaction', 'ft', '=', 'getFragmentManager', '(', ')', '.', 'beginTransaction', '(', ')', ';', 'ft', '.', 'add', '(', 'R', '.', 'id', '.', 'call_fragment_container', ',', 'callFragment', ')', ';', 'ft', '.', 'add', '(', 'R', '.', 'id', '.', 'hud_fragment_container', ',', 'hudFragment', ')', ';', 'ft', '.', 'commit', '(', ')', ';', 'if', '(', 'commandLineRun', '&&', 'runTimeMs', '>', '0', ')', '{', '(', 'new', 'Handler', '(', ')', ')', '.', 'postDelayed', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'disconnect', '(', ')', ';', '}', '}', ',', 'runTimeMs', ')', ';', '}', 'peerConnectionClient', '=', 'new', 'PeerConnectionClient', '(', 'getApplicationContext', '(', ')', ',', 'eglBase', ',', 'peerConnectionParameters', ',', 'CallActivity', '.', 'this', ')', ';', 'PeerConnectionFactory', '.', 'Options', 'options', '=', 'new', 'PeerConnectionFactory', '.', 'Options', '(', ')', ';', 'if', '(', 'loopback', ')', '{', 'options', '.', 'networkIgnoreMask', '=', '0', ';', '}', 'peerConnectionClient', '.', 'createPeerConnectionFactory', '(', 'options', ')', ';', 'if', '(', 'screencaptureEnabled', ')', '{', 'startScreenCapture', '(', ')', ';', '}', 'else', '{', 'startCall', '(', ')', ';', '}', '}']","['@', 'SuppressWarnings', '(', ')', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'savedInstanceState', ')', '.', 'setContentView', '(', ')', ';', '(', 'view', ')', ';', 'listener', '=', 'new', 'View', '(', ')', '{', 'onClick', '(', 'View', 'view', ')', '{', '}', '}', ';', '(', 'new', 'View', '(', ')', '{', 'onClick', '(', 'View', 'view', ')', '{', '(', 'isSwappedFeeds', ')', ';', '}', '}', ')', ';', 'init', '(', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', '(', 'ScalingType', ')', ';', '(', '_', ')', ';', 'if', '(', 'null', ')', '{', '(', 'EXTRA', ')', ';', 'try', '{', '(', 'getEglBaseContext', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '}', 'for', '(', 'String', 'permission', ':', 'PERMISSIONS', ')', '{', 'if', '(', 'GRANTED', ')', '{', '}', '}', 'roomUri', '(', ')', ';', 'if', '(', 'roomUri', ')', '{', '(', '(', 'url', ')', ')', ';', 'Log', '(', 'TAG', ',', '""""', ')', ';', '(', 'RESULT', ')', ';', '}', '(', 'false', ')', ';', 'videoWidth', '(', ')', ';', 'if', '(', 'videoWidth', ')', '{', '}', 'if', '(', '(', 'false', ')', ')', '{', 'dataChannelParameters', '(', '(', 'PROTOCOL', ')', 'getBooleanExtra', '(', ')', ',', '(', 'EXTRA', ')', ')', ';', '}', '(', '(', 'EXTRA', ')', ')', ';', '(', '""""', '+', '""""', ')', ';', 'if', '(', 'loopback', '(', ')', ')', '{', 'appRtcClient', '(', ')', ';', '}', '{', '(', '""""', ')', ';', 'appRtcClient', '(', ')', ';', '}', 'RoomConnectionParameters', '(', 'toString', '(', ')', ',', 'urlParameters', ')', ';', 'if', '(', 'isSupported', '(', ')', ')', '{', '}', '(', 'intent', ')', ';', '(', 'hudFragment', ')', ';', 'commit', '(', ')', ';', 'if', '(', 'commandLineRun', ')', '{', 'postDelayed', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ',', 'runTimeMs', ')', ';', '}', '(', 'options', ')', ';', 'if', '(', 'screencaptureEnabled', ')', '{', '}', '{', '}', '}']",1202,285,6,917,76.67224080267559
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_6.txt,0.4485,0.8198,"{'n_total': 4791, 'n_valid': 372, 'n_correct': 206}",1113.755746,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); progressWheelLinear = (ProgressWheel) findViewById(R.id.linear); interpolatedValue = (TextView) findViewById(R.id.interpolatedValue); linearValue = (TextView) findViewById(R.id.linearValue); Spinner spinnerOptions = (Spinner) findViewById(R.id.spinner_options); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelInterpolated.setProgress(0.0f); } interpolatedValue.setText(String.format(""%.2f"", progress)); } }); progressWheelLinear.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelLinear.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelLinear.setProgress(0.0f); } linearValue.setText(String.format(""%.2f"", progress)); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); }","void onCreate(Bundle savedInstanceState){findViewById();(new OnClickListener(){onClick(View v){(MainActivity).setTitle(new OnClickListener(){onClick(int which){}});show();}});(new AdapterView(){onItemSelected(AdapterView<?>parent,View id){switch(position){case 0:setProgress();(f);(new ProgressCallback(){onProgressUpdate(float progress){if(0){(1);}(1);}});(0);}}Override(AdapterView<?>parent){}});defaultBarColor();defaultWheelColor=(options)(new OnItemSelectedListener(){onItemSelected(AdapterView<?>id){switch(position) {case 0:setBarColor();}}onNothingSelected(AdapterView<?>parent){}}); Spinner();setOnItemSelectedListener(new AdapterView() {onItemSelected(AdapterView<?>parent,long id){switch(position){case 0: (defaultWheelColor).setRimColor(defaultWheelColor);}}voidonNothingSelected(AdapterView<?> parent){}});}",4036,820,14,3216,79.9602187966186,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', 'Button', 'buttonAbout', '=', '(', 'Button', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'button_about', ')', ';', 'buttonAbout', '.', 'setOnClickListener', '(', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'v', ')', '{', 'AlertDialog', '.', 'Builder', 'dialog', '=', 'new', 'AlertDialog', '.', 'Builder', '(', 'MainActivity', '.', 'this', ')', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'about', ')', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'about_text', ')', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'ok', ',', 'new', 'DialogInterface', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'DialogInterface', 'dialog', ',', 'int', 'which', ')', '{', 'dialog', '.', 'dismiss', '(', ')', ';', '}', '}', ')', ';', 'dialog', '.', 'show', '(', ')', ';', '}', '}', ')', ';', 'progressWheel', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'progress_wheel', ')', ';', 'progressWheelInterpolated', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'interpolated', ')', ';', 'progressWheelLinear', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'linear', ')', ';', 'interpolatedValue', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'interpolatedValue', ')', ';', 'linearValue', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'linearValue', ')', ';', 'Spinner', 'spinnerOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options', ')', ';', 'spinnerOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheelLinear', '.', 'setProgress', '(', '0.0f', ')', ';', 'progressWheelInterpolated', '.', 'setProgress', '(', '0.0f', ')', ';', 'progressWheelInterpolated', '.', 'setCallback', '(', 'new', 'ProgressWheel', '.', 'ProgressCallback', '(', ')', '{', '@', 'Override', 'public', 'void', 'onProgressUpdate', '(', 'float', 'progress', ')', '{', 'if', '(', 'progress', '==', '0', ')', '{', 'progressWheelInterpolated', '.', 'setProgress', '(', '1.0f', ')', ';', '}', 'else', 'if', '(', 'progress', '==', '1.0f', ')', '{', 'progressWheelInterpolated', '.', 'setProgress', '(', '0.0f', ')', ';', '}', 'interpolatedValue', '.', 'setText', '(', 'String', '.', 'format', '(', '""%.2f""', ',', 'progress', ')', ')', ';', '}', '}', ')', ';', 'progressWheelLinear', '.', 'setCallback', '(', 'new', 'ProgressWheel', '.', 'ProgressCallback', '(', ')', '{', '@', 'Override', 'public', 'void', 'onProgressUpdate', '(', 'float', 'progress', ')', '{', 'if', '(', 'progress', '==', '0', ')', '{', 'progressWheelLinear', '.', 'setProgress', '(', '1.0f', ')', ';', '}', 'else', 'if', '(', 'progress', '==', '1.0f', ')', '{', 'progressWheelLinear', '.', 'setProgress', '(', '0.0f', ')', ';', '}', 'linearValue', '.', 'setText', '(', 'String', '.', 'format', '(', '""%.2f""', ',', 'progress', ')', ')', ';', '}', '}', ')', ';', 'break', ';', 'case', '1', ':', 'setProgress', '(', '0.0f', ')', ';', 'break', ';', 'case', '2', ':', 'setProgress', '(', '0.1f', ')', ';', 'break', ';', 'case', '3', ':', 'setProgress', '(', '0.25f', ')', ';', 'break', ';', 'case', '4', ':', 'setProgress', '(', '0.5f', ')', ';', 'break', ';', 'case', '5', ':', 'setProgress', '(', '0.75f', ')', ';', 'break', ';', 'case', '6', ':', 'setProgress', '(', '1.0f', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'final', 'int', 'defaultBarColor', '=', 'progressWheel', '.', 'getBarColor', '(', ')', ';', 'final', 'int', 'defaultWheelColor', '=', 'progressWheel', '.', 'getRimColor', '(', ')', ';', 'Spinner', 'colorOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options_color', ')', ';', 'colorOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheel', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'break', ';', 'case', '1', ':', 'progressWheel', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'break', ';', 'case', '2', ':', 'progressWheel', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'Spinner', 'wheelColorOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options_rim_color', ')', ';', 'wheelColorOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheel', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'break', ';', 'case', '1', ':', 'progressWheel', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'break', ';', 'case', '2', ':', 'progressWheel', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'findViewById', '(', ')', ';', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', 'View', 'v', ')', '{', '(', 'MainActivity', ')', '.', 'setTitle', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', 'int', 'which', ')', '{', '}', '}', ')', ';', 'show', '(', ')', ';', '}', '}', ')', ';', '(', 'new', 'AdapterView', '(', ')', '{', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'setProgress', '(', ')', ';', '(', 'f', ')', ';', '(', 'new', 'ProgressCallback', '(', ')', '{', 'onProgressUpdate', '(', 'float', 'progress', ')', '{', 'if', '(', '0', ')', '{', '(', '1', ')', ';', '}', '(', '1', ')', ';', '}', '}', ')', ';', '(', '0', ')', ';', '}', '}', 'Override', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'defaultBarColor', '(', ')', ';', 'defaultWheelColor', '=', '(', 'options', ')', '(', 'new', 'OnItemSelectedListener', '(', ')', '{', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'setBarColor', '(', ')', ';', '}', '}', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'Spinner', '(', ')', ';', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '(', ')', '{', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', '(', 'defaultWheelColor', ')', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', '}', '}', 'voidonNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', '}']",849,242,6,607,72.00474495848161
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_4.txt,0.9991,0.0021,"{'n_total': 1278, 'n_valid': 138, 'n_correct': 128}",409.399892,"public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }",boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(null){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q)if(sparse){}},1595,165,12,1430,90.3348073278585,"['public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUEncryptionKeyGenerationParameters', 'other', '=', '(', 'NTRUEncryptionKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenBits', '!=', 'other', '.', 'bufferLenBits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenTrits', '!=', 'other', '.', 'bufferLenTrits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'c', '!=', 'other', '.', 'c', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'db', '!=', 'other', '.', 'db', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df', '!=', 'other', '.', 'df', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df1', '!=', 'other', '.', 'df1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df2', '!=', 'other', '.', 'df2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df3', '!=', 'other', '.', 'df3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dg', '!=', 'other', '.', 'dg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dm0', '!=', 'other', '.', 'dm0', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr', '!=', 'other', '.', 'dr', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr1', '!=', 'other', '.', 'dr1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr2', '!=', 'other', '.', 'dr2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr3', '!=', 'other', '.', 'dr3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'fastFp', '!=', 'other', '.', 'fastFp', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashSeed', '!=', 'other', '.', 'hashSeed', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'llen', '!=', 'other', '.', 'llen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'maxMsgLenBytes', '!=', 'other', '.', 'maxMsgLenBytes', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsMask', '!=', 'other', '.', 'minCallsMask', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsR', '!=', 'other', '.', 'minCallsR', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'Arrays', '.', 'equals', '(', 'oid', ',', 'other', '.', 'oid', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'pkLen', '!=', 'other', '.', 'pkLen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', '}', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'if', '(', 'bufferLenTrits', ')', '{', '}', 'if', '(', 'fastFp', ')', '{', '}', 'if', '(', 'null', ')', '{', 'if', '(', 'other', '=', 'null', ')', '{', '}', '}', '{', '}', 'if', '(', 'hashSeed', ')', '{', '}', 'if', '(', 'pkLen', ')', '{', '}', '{', '}', 'if', '(', 'q', ')', 'if', '(', 'sparse', ')', '{', '}', '}']",450,78,6,372,83.78378378378379
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_3.txt,0.7974,0.5807,"{'n_total': 6201, 'n_valid': 609, 'n_correct': 409}",1840.978608,"public void run() { try { boolean initial = true; SSLEngineResult wrap = null; HandshakeStatus hstatus = sslEngine.getHandshakeStatus(); if (!closeHandshake && (hstatus == HandshakeStatus.NOT_HANDSHAKING || initial)) { sslEngine.beginHandshake(); hstatus = sslEngine.getHandshakeStatus(); } long t0 = System.currentTimeMillis(); while (hstatus != HandshakeStatus.NOT_HANDSHAKING && hstatus != HandshakeStatus.FINISHED && !net.getIn().isAppendClosed()) { if (System.currentTimeMillis() - t0 > handshakeTimeout) { throw new TimeoutException(); } if (wrap != null && wrap.getStatus() == Status.CLOSED) { break; } if (log.isLoggable(Level.FINEST)) { log.info(""-->doHandshake() loop: status = "" + hstatus + "" "" + sslEngine.getHandshakeStatus()); } if (hstatus == HandshakeStatus.NEED_WRAP) { initial = false; synchronized (myNetOutData) { while (hstatus == HandshakeStatus.NEED_WRAP) { myNetOutData.compact(); try { wrap = sslEngine.wrap(myAppOutData, myNetOutData); } catch (Throwable t) { log.log(Level.SEVERE, ""Wrap error"", t); close(); return; } finally { myNetOutData.flip(); } if (myNetOutData.remaining() > 0) { net.getOut().write(myNetOutData); } hstatus = wrap.getHandshakeStatus(); } } net.startSending(); } else if (hstatus == HandshakeStatus.NEED_UNWRAP) { while (hstatus == HandshakeStatus.NEED_UNWRAP) { if (myNetInData.remaining() > 0) { myAppInData.clear(); if (debugWrap) { log.info(""UNWRAP: rem="" + myNetInData.remaining()); } wrap = sslEngine.unwrap(myNetInData, myAppInData); hstatus = wrap.getHandshakeStatus(); myAppInData.flip(); if (myAppInData.remaining() > 0) { log.severe(""Unexpected data after unwrap""); } if (wrap.getStatus() == Status.CLOSED) { break; } } if (wrap == null || wrap.getStatus() == Status.BUFFER_UNDERFLOW || (hstatus == HandshakeStatus.NEED_UNWRAP && myNetInData.remaining() == 0)) { myNetInData.compact(); int rd; try { rd = net.getIn().read(myNetInData); if (debugWrap) { log.info(""Read: "" + rd); } } finally { myNetInData.flip(); } if (rd == 0) { if (debugWrap) { log.info(""Wait: "" + handshakeTimeout); } net.getIn().waitData(handshakeTimeout); rd = net.getIn().read(myNetInData); if (debugWrap) { log.info(""Read after wait: "" + rd); } } if (rd < 0) { break; } } if (log.isLoggable(Level.FINEST)) { log.info(""Unwrap chunk done "" + hstatus + "" "" + wrap + "" "" + sslEngine.getHandshakeStatus()); } } } else if (hstatus == HandshakeStatus.NEED_TASK) { long t0task = System.currentTimeMillis(); Runnable r; while ((r = sslEngine.getDelegatedTask()) != null) { r.run(); } long t1task = System.currentTimeMillis(); hstatus = sslEngine.getHandshakeStatus(); if (log.isLoggable(Level.FINEST)) { log.info(""Tasks done in "" + (t1task - t0task) + "" new status "" + hstatus); } } if (hstatus == HandshakeStatus.NOT_HANDSHAKING) { break; } } endHandshake(); processRealInput(net.getIn(), in); } catch (Throwable t) { log.log(Level.SEVERE, ""Error handshaking"", t); try { close(); net.close(); sendHandleReceivedCallback(); } catch (IOException ex) { log.log(Level.SEVERE, ""Error closing"", ex); } } }","void run(){try{if(closeHandshake()){}while(isAppendClosed){{}if((Level)){(""""+getHandshakeStatus());}if(hstatus){synchronized(myNetOutData){while(WRAP){try{(myNetOutData);}catch(Throwable t){(myNetOutData);}hstatus();}}}if(UNWRAP){while(hstatus){if(remaining()>0){if(debugWrap){info();}wrap();hstatus();if(myAppInData){("""");}if(getStatus().CLOSED){}}if(wrap()==(UNWRAP)){compact();try{if(debugWrap){(""""+rd);}}finally{flip();}if(0){{("""");}net();rd().read;if(debugWrap){("""");}}if(rd){}}if(isLoggable()){(sslEngine);}}}if(TASK){currentTimeMillis();while((r)){run();}if((Level)){((t));}}if(hstatus){}}processRealInput(getIn(),in);}catch(Throwable t){("""");try{}catch(IOException ex){log("""",ex);}}}",3025,691,9,2334,77.38726790450929,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'boolean', 'initial', '=', 'true', ';', 'SSLEngineResult', 'wrap', '=', 'null', ';', 'HandshakeStatus', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', 'if', '(', '!', 'closeHandshake', '&&', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', '||', 'initial', ')', ')', '{', 'sslEngine', '.', 'beginHandshake', '(', ')', ';', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', '}', 'long', 't0', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'while', '(', 'hstatus', '!=', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', '&&', 'hstatus', '!=', 'HandshakeStatus', '.', 'FINISHED', '&&', '!', 'net', '.', 'getIn', '(', ')', '.', 'isAppendClosed', '(', ')', ')', '{', 'if', '(', 'System', '.', 'currentTimeMillis', '(', ')', '-', 't0', '>', 'handshakeTimeout', ')', '{', 'throw', 'new', 'TimeoutException', '(', ')', ';', '}', 'if', '(', 'wrap', '!=', 'null', '&&', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'CLOSED', ')', '{', 'break', ';', '}', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""-->doHandshake() loop: status = ""', '+', 'hstatus', '+', '"" ""', '+', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ')', ';', '}', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_WRAP', ')', '{', 'initial', '=', 'false', ';', 'synchronized', '(', 'myNetOutData', ')', '{', 'while', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_WRAP', ')', '{', 'myNetOutData', '.', 'compact', '(', ')', ';', 'try', '{', 'wrap', '=', 'sslEngine', '.', 'wrap', '(', 'myAppOutData', ',', 'myNetOutData', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Wrap error""', ',', 't', ')', ';', 'close', '(', ')', ';', 'return', ';', '}', 'finally', '{', 'myNetOutData', '.', 'flip', '(', ')', ';', '}', 'if', '(', 'myNetOutData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'net', '.', 'getOut', '(', ')', '.', 'write', '(', 'myNetOutData', ')', ';', '}', 'hstatus', '=', 'wrap', '.', 'getHandshakeStatus', '(', ')', ';', '}', '}', 'net', '.', 'startSending', '(', ')', ';', '}', 'else', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', ')', '{', 'while', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', ')', '{', 'if', '(', 'myNetInData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'myAppInData', '.', 'clear', '(', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""UNWRAP: rem=""', '+', 'myNetInData', '.', 'remaining', '(', ')', ')', ';', '}', 'wrap', '=', 'sslEngine', '.', 'unwrap', '(', 'myNetInData', ',', 'myAppInData', ')', ';', 'hstatus', '=', 'wrap', '.', 'getHandshakeStatus', '(', ')', ';', 'myAppInData', '.', 'flip', '(', ')', ';', 'if', '(', 'myAppInData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'log', '.', 'severe', '(', '""Unexpected data after unwrap""', ')', ';', '}', 'if', '(', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'CLOSED', ')', '{', 'break', ';', '}', '}', 'if', '(', 'wrap', '==', 'null', '||', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'BUFFER_UNDERFLOW', '||', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', '&&', 'myNetInData', '.', 'remaining', '(', ')', '==', '0', ')', ')', '{', 'myNetInData', '.', 'compact', '(', ')', ';', 'int', 'rd', ';', 'try', '{', 'rd', '=', 'net', '.', 'getIn', '(', ')', '.', 'read', '(', 'myNetInData', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Read: ""', '+', 'rd', ')', ';', '}', '}', 'finally', '{', 'myNetInData', '.', 'flip', '(', ')', ';', '}', 'if', '(', 'rd', '==', '0', ')', '{', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Wait: ""', '+', 'handshakeTimeout', ')', ';', '}', 'net', '.', 'getIn', '(', ')', '.', 'waitData', '(', 'handshakeTimeout', ')', ';', 'rd', '=', 'net', '.', 'getIn', '(', ')', '.', 'read', '(', 'myNetInData', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Read after wait: ""', '+', 'rd', ')', ';', '}', '}', 'if', '(', 'rd', '<', '0', ')', '{', 'break', ';', '}', '}', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""Unwrap chunk done ""', '+', 'hstatus', '+', '"" ""', '+', 'wrap', '+', '"" ""', '+', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ')', ';', '}', '}', '}', 'else', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_TASK', ')', '{', 'long', 't0task', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'Runnable', 'r', ';', 'while', '(', '(', 'r', '=', 'sslEngine', '.', 'getDelegatedTask', '(', ')', ')', '!=', 'null', ')', '{', 'r', '.', 'run', '(', ')', ';', '}', 'long', 't1task', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""Tasks done in ""', '+', '(', 't1task', '-', 't0task', ')', '+', '"" new status ""', '+', 'hstatus', ')', ';', '}', '}', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', ')', '{', 'break', ';', '}', '}', 'endHandshake', '(', ')', ';', 'processRealInput', '(', 'net', '.', 'getIn', '(', ')', ',', 'in', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Error handshaking""', ',', 't', ')', ';', 'try', '{', 'close', '(', ')', ';', 'net', '.', 'close', '(', ')', ';', 'sendHandleReceivedCallback', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Error closing""', ',', 'ex', ')', ';', '}', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'if', '(', 'closeHandshake', '(', ')', ')', '{', '}', 'while', '(', 'isAppendClosed', ')', '{', '{', '}', 'if', '(', '(', 'Level', ')', ')', '{', '(', '""""', '+', 'getHandshakeStatus', '(', ')', ')', ';', '}', 'if', '(', 'hstatus', ')', '{', 'synchronized', '(', 'myNetOutData', ')', '{', 'while', '(', 'WRAP', ')', '{', 'try', '{', '(', 'myNetOutData', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', 'myNetOutData', ')', ';', '}', 'hstatus', '(', ')', ';', '}', '}', '}', 'if', '(', 'UNWRAP', ')', '{', 'while', '(', 'hstatus', ')', '{', 'if', '(', 'remaining', '(', ')', '>', '0', ')', '{', 'if', '(', 'debugWrap', ')', '{', 'info', '(', ')', ';', '}', 'wrap', '(', ')', ';', 'hstatus', '(', ')', ';', 'if', '(', 'myAppInData', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'getStatus', '(', ')', '.', 'CLOSED', ')', '{', '}', '}', 'if', '(', 'wrap', '(', ')', '==', '(', 'UNWRAP', ')', ')', '{', 'compact', '(', ')', ';', 'try', '{', 'if', '(', 'debugWrap', ')', '{', '(', '""""', '+', 'rd', ')', ';', '}', '}', 'finally', '{', 'flip', '(', ')', ';', '}', 'if', '(', '0', ')', '{', '{', '(', '""""', ')', ';', '}', 'net', '(', ')', ';', 'rd', '(', ')', '.', 'read', ';', 'if', '(', 'debugWrap', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', 'rd', ')', '{', '}', '}', 'if', '(', 'isLoggable', '(', ')', ')', '{', '(', 'sslEngine', ')', ';', '}', '}', '}', 'if', '(', 'TASK', ')', '{', 'currentTimeMillis', '(', ')', ';', 'while', '(', '(', 'r', ')', ')', '{', 'run', '(', ')', ';', '}', 'if', '(', '(', 'Level', ')', ')', '{', '(', '(', 't', ')', ')', ';', '}', '}', 'if', '(', 'hstatus', ')', '{', '}', '}', 'processRealInput', '(', 'getIn', '(', ')', ',', 'in', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'log', '(', '""""', ',', 'ex', ')', ';', '}', '}', '}']",771,308,6,463,60.52287581699346
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,init_2.txt,0.9702,0.0715,"{'n_total': 5537, 'n_valid': 500, 'n_correct': 491}",1541.837352,"public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(""serverUrl"", null); chsDomain = serverConfigurationService.getString(""content.chs.serverName"", null); chsUrl = serverConfigurationService.getString(""content.chs.serverUrl"", null); useContentHostingDomain = serverConfigurationService.getBoolean(""content.separateDomains"", false); contentPaths = serverConfigurationService.getStrings(""content.chs.urlprefixes""); if (contentPaths == null) { contentPaths = new String[] { ""/access/"", ""/web/"" }; } loginPaths = serverConfigurationService.getStrings(""content.login.urlprefixes""); if (loginPaths == null) { loginPaths = new String[] { ""/access/login"", ""/sakai-login-tool"", ""/access/require"", ""/access/accept"" }; } contentExceptions = serverConfigurationService.getStrings(""content.chsexception.urlprefixes""); if (contentExceptions == null) { contentExceptions = new String[] { ""/access/calendar/"", ""/access/citation/export_ris_sel/"", ""/access/citation/export_ris_all/"" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (""container"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (""sakai"".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (""context"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (""tool"".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(""invalid "" + CONFIG_SESSION + "" setting ("" + s + ""): not one of container, sakai, context, tool""); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = ""basic"".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(""overridding "" + CONFIG_MAX_PER_FILE + "" setting: must be 'true' with "" + CONFIG_CONTINUE + "" ='true'""); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(""sakai.cluster.terracotta""); TERRACOTTA_CLUSTER = ""true"".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!""none"".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(""Unable to compile "" + SAKAI_SESSION_PARAM_ALLOW + ""="" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, ""lax""); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }","void init()throws ServletException{appUrl("""",null);chsDomain("""",null);chsUrl("""",null);useContentHostingDomain();("""");if(contentPaths){contentPaths=new String[]{};}("""");if(null){loginPaths=new String[]{""""};}if(null){contentExceptions=new String[]{"""",""""};}if(filterConfig()!=null){if("""".equalsIgnoreCase){}if("""".equalsIgnoreCase()){}if((s)){}{("""");}}if((USER)){((USER));}if((AUTH)){"""".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){}("""");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if("""".equals()){try{(allowBypassSession);}catch(Exception e){(""""+allowBypassSession);}}(null);getBoolean();}",5716,886,10,4830,84.6477392218717,"['public', 'void', 'init', '(', 'FilterConfig', 'filterConfig', ')', 'throws', 'ServletException', '{', 'appUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""serverUrl""', ',', 'null', ')', ';', 'chsDomain', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverName""', ',', 'null', ')', ';', 'chsUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverUrl""', ',', 'null', ')', ';', 'useContentHostingDomain', '=', 'serverConfigurationService', '.', 'getBoolean', '(', '""content.separateDomains""', ',', 'false', ')', ';', 'contentPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chs.urlprefixes""', ')', ';', 'if', '(', 'contentPaths', '==', 'null', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '""/access/""', ',', '""/web/""', '}', ';', '}', 'loginPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.login.urlprefixes""', ')', ';', 'if', '(', 'loginPaths', '==', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""/access/login""', ',', '""/sakai-login-tool""', ',', '""/access/require""', ',', '""/access/accept""', '}', ';', '}', 'contentExceptions', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chsexception.urlprefixes""', ')', ';', 'if', '(', 'contentExceptions', '==', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""/access/calendar/""', ',', '""/access/citation/export_ris_sel/""', ',', '""/access/citation/export_ris_all/""', '}', ';', '}', 'm_servletContext', '=', 'filterConfig', '.', 'getServletContext', '(', ')', ';', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', '!=', 'null', ')', '{', 'String', 's', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', ';', 'if', '(', '""container""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTAINER_SESSION', ';', '}', 'else', 'if', '(', '""sakai""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'SAKAI_SESSION', ';', '}', 'else', 'if', '(', '""context""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTEXT_SESSION', ';', '}', 'else', 'if', '(', '""tool""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'TOOL_SESSION', ';', '}', 'else', '{', 'log', '.', 'warn', '(', '""invalid ""', '+', 'CONFIG_SESSION', '+', '"" setting (""', '+', 's', '+', '""): not one of container, sakai, context, tool""', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', '!=', 'null', ')', '{', 'm_sakaiRemoteUser', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', '!=', 'null', ')', '{', 'm_checkPrincipal', '=', '""basic""', '.', 'equals', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', '!=', 'null', ')', '{', 'm_toolPlacement', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', '!=', 'null', ')', '{', 'm_contextId', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', ';', '}', 'else', '{', 'm_contextId', '=', 'm_servletContext', '.', 'getServletContextName', '(', ')', ';', 'if', '(', 'm_contextId', '==', 'null', ')', '{', 'm_contextId', '=', 'toString', '(', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', '!=', 'null', ')', '{', 'm_characterEncoding', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', '!=', 'null', ')', '{', 'm_characterEncodingEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', '!=', 'null', ')', '{', 'm_uploadEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', 'm_uploadCeiling', '=', 'm_uploadMaxSize', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '!=', 'null', ')', '{', 'm_uploadCeiling', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', '!=', 'null', ')', '{', 'm_uploadThreshold', '=', 'Integer', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', ')', '.', 'intValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', '!=', 'null', ')', '{', 'm_uploadContinue', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', '!=', 'null', ')', '{', 'm_uploadMaxPerFile', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'm_uploadContinue', '&&', '!', 'm_uploadMaxPerFile', ')', '{', 'log', '.', 'warn', '(', '""overridding ""', '+', 'CONFIG_MAX_PER_FILE', '+', '"" setting: must be \'true\' with ""', '+', 'CONFIG_CONTINUE', '+', '"" =\'true\'""', ')', ';', 'm_uploadMaxPerFile', '=', 'true', ';', '}', 'String', 'clusterTerracotta', '=', 'System', '.', 'getProperty', '(', '""sakai.cluster.terracotta""', ')', ';', 'TERRACOTTA_CLUSTER', '=', '""true""', '.', 'equals', '(', 'clusterTerracotta', ')', ';', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', '!=', 'null', ')', '{', 'cookieName', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', '!=', 'null', ')', '{', 'cookieDomain', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', ';', '}', 'm_sessionParamAllow', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_SESSION_PARAM_ALLOW', ',', 'false', ')', ';', 'String', 'allowBypassSession', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS', ',', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT', ')', ';', 'if', '(', '!', '""none""', '.', 'equals', '(', 'allowBypassSession', ')', ')', '{', 'try', '{', 'm_sessionParamRegex', '=', 'Pattern', '.', 'compile', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', '""Unable to compile ""', '+', 'SAKAI_SESSION_PARAM_ALLOW', '+', '""=""', '+', 'allowBypassSession', ')', ';', 'm_sessionParamRegex', '=', 'null', ';', '}', '}', 'm_cookieHttpOnly', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_COOKIE_HTTP_ONLY', ',', 'true', ')', ';', 'm_cookieSameSite', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_COOKIE_SAME_SITE', ',', '""lax""', ')', ';', 'm_UACompatible', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_UA_COMPATIBLE', ',', 'null', ')', ';', 'isLTIProviderAllowed', '=', '(', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_BLTI_PROVIDER_TOOLS', ',', 'null', ')', '!=', 'null', ')', ';', 'm_redirectRandomNode', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_CLUSTER_REDIRECT_RANDOM', ',', 'true', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'appUrl', '(', '""""', ',', 'null', ')', ';', 'chsDomain', '(', '""""', ',', 'null', ')', ';', 'chsUrl', '(', '""""', ',', 'null', ')', ';', 'useContentHostingDomain', '(', ')', ';', '(', '""""', ')', ';', 'if', '(', 'contentPaths', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '}', ';', '}', '(', '""""', ')', ';', 'if', '(', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'if', '(', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""""', ',', '""""', '}', ';', '}', 'if', '(', 'filterConfig', '(', ')', '!=', 'null', ')', '{', 'if', '(', '""""', '.', 'equalsIgnoreCase', ')', '{', '}', 'if', '(', '""""', '.', 'equalsIgnoreCase', '(', ')', ')', '{', '}', 'if', '(', '(', 's', ')', ')', '{', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', 'USER', ')', ')', '{', '(', '(', 'USER', ')', ')', ';', '}', 'if', '(', '(', 'AUTH', ')', ')', '{', '""""', '.', 'equals', '(', '(', 'AUTH', ')', ')', ';', '}', 'if', '(', '(', 'PLACEMENT', ')', ')', '{', '(', 'getInitParameter', ')', '.', 'getInitParameter', '(', ')', ';', '}', 'if', '(', '(', 'ENABLED', ')', ')', '{', '(', '(', 'CONFIG', ')', ')', ';', '}', 'if', '(', '(', 'CONFIG', ')', ')', '{', '}', 'if', '(', '(', 'SYSTEM', ')', ')', '{', '(', 'System', ')', '.', 'L', ';', '}', 'if', '(', 'getProperty', ')', '{', '(', 'DIR', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', 'CONFIG', ')', ';', '}', 'if', '(', '(', 'THRESHOLD', ')', ')', '{', '(', '(', 'CONFIG', ')', ')', ';', '}', 'if', '(', 'filterConfig', ')', '{', '(', '(', 'CONTINUE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', 'getInitParameter', '(', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'uploadMaxPerFile', ')', '{', '}', '(', '""""', ')', ';', '(', 'clusterTerracotta', ')', ';', 'if', '(', '(', 'NAME', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', 'if', '(', '(', 'DOMAIN', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', '(', 'SAKAI', ')', ';', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'try', '{', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', '+', 'allowBypassSession', ')', ';', '}', '}', '(', 'null', ')', ';', 'getBoolean', '(', ')', ';', '}']",959,361,6,598,62.749213011542494
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_6.txt,0.9995,0.0008,"{'n_total': 1840, 'n_valid': 198, 'n_correct': 187}",591.638059,"static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(""keystorefile"", ""mykeystore""); properties.setProperty(""keystoretype"", ""JKS""); properties.setProperty(""keystorepass"", ""22222222""); properties.setProperty(""privatekeyalias"", ""test""); properties.setProperty(""publickeyalias"", ""test""); properties.setProperty(""privatekeypass"", ""22222222""); properties.setProperty(""encryptionkeystrength"", ""56""); properties.setProperty(""encryptionalgorithm"", ""DES""); SecureAttrs.init(""testsym"", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(""testasym"", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(""TEST 1 START test encoded str ===========""); SecureAttrs secureattrs = SecureAttrs.getInstance(""testsym""); String s = ""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""; Map map = secureattrs.verifyEncodedString(s, ""secret""); if (map == null) System.out.println("" FAILED""); else System.out.println("" PASSED"" + map); System.out.println(""TEST 1 END ================""); System.out.println(""TEST 2 START : encode followed by decode ===""); HashMap hashmap = new HashMap(); hashmap.put(""branch"", ""bb""); hashmap.put(""mail"", ""mm""); hashmap.put(""sun.userid"", ""uu""); hashmap.put(""sun.spappurl"", ""apapp""); System.out.println("" TEST 2a START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); String s1 = ""secret""; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 2a PASSED "" + map1); else System.out.println("" 2a FAILED "" + map1); System.out.println("" TEST 2b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 2b PASSED "" + map1); else System.out.println("" 2b FAILED "" + map1); System.out.println(""TEST 2 END ====================""); System.out.println(""TEST 3 START : decode with incorrect secret""); System.out.println("" TEST 3a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); map1 = secureattrs.verifyEncodedString(s2, ""junk""); if (map1 != null) System.out.println("" 3a FAILED "" + map1); else System.out.println("" 3a PASSED "" + map1); System.out.println("" TEST 3b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); map1 = secureattrs.verifyEncodedString(s3, ""junk""); if (map1 != null) System.out.println("" 3b FAILED "" + map1); else System.out.println("" 3b PASSED "" + map1); System.out.println(""TEST 3 END ====================""); System.out.println(""TEST 4 START : decode with correct secret""); System.out.println("" TEST 4a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); s1 = ""secret""; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println("" TEST 4b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println(""TEST 4 END ====================""); System.out.println("" TEST 5a START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println("" 5a PASSED "" + map1); else System.out.println("" 5a FAILED "" + map1); System.out.println("" TEST 5b START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); s1 = ""secret""; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println("" 5b PASSED "" + map1); else System.out.println("" 5b FAILED "" + map1); System.out.println(""TEST 5 END ====================""); } catch (Exception exception) { exception.printStackTrace(); System.out.println(""TEST Exc : "" + exception); } }","void main(String[]args){try{setProperty("""","""");"""".verifyEncodedString("""");if(1)println();("""");("""");if(map)(""""+1);("""");("""");("""");(""""+3);(1);(1);(1);("""");getEncodedString();verifyEncodedString();if(null)("""");("""");}catch(Exception exception){(""""+exception);}}",4351,256,10,4095,94.33310297166553,"['static', 'public', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'SecureAttrs', '.', 'dbg', '=', 'true', ';', 'Properties', 'properties', '=', 'new', 'Properties', '(', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorefile""', ',', '""mykeystore""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystoretype""', ',', '""JKS""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorepass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""publickeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeypass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionkeystrength""', ',', '""56""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionalgorithm""', ',', '""DES""', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testsym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_SYM', ',', 'properties', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testasym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_ASYM', ',', 'properties', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 START test encoded str ===========""', ')', ';', 'SecureAttrs', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's', '=', '""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""', ';', 'Map', 'map', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's', ',', '""secret""', ')', ';', 'if', '(', 'map', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" FAILED""', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" PASSED""', '+', 'map', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 END ================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 START : encode followed by decode ===""', ')', ';', 'HashMap', 'hashmap', '=', 'new', 'HashMap', '(', ')', ';', 'hashmap', '.', 'put', '(', '""branch""', ',', '""bb""', ')', ';', 'hashmap', '.', 'put', '(', '""mail""', ',', '""mm""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.userid""', ',', '""uu""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.spappurl""', ',', '""apapp""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's1', '=', '""secret""', ';', 'String', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's2', ')', ';', 'Map', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'String', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 START : decode with incorrect secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3a FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3a PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3b FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3b PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 START : decode with correct secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5a START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5b START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's2', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 5 END ====================""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'exception', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST Exc : ""', '+', 'exception', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'setProperty', '(', '""""', ',', '""""', ')', ';', '""""', '.', 'verifyEncodedString', '(', '""""', ')', ';', 'if', '(', '1', ')', 'println', '(', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'if', '(', 'map', ')', '(', '""""', '+', '1', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '3', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '""""', ')', ';', 'getEncodedString', '(', ')', ';', 'verifyEncodedString', '(', ')', ';', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', '(', '""""', '+', 'exception', ')', ';', '}', '}']",906,120,6,786,87.33333333333333
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_14.txt,0.9997,0.0005,"{'n_total': 4977, 'n_valid': 375, 'n_correct': 357}",1148.266672,"public static void main(String[] argv) { int start = 1; int end = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-s"")) { src = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dest = argv[++optind]; } else if (argv[optind].equals(""-x"")) { expunge = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""); System.out.println(""\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""); System.out.println(""\t The -x option => EXPUNGE deleted messages""); System.out.println(""\t msgnum1 => start of message-range; msgnum2 => end of message-range""); System.exit(1); } else { break; } } if (optind < argv.length) start = Integer.parseInt(argv[optind++]); if (optind < argv.length) end = Integer.parseInt(argv[optind++]); try { Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getFolder(src); if (folder == null || !folder.exists()) { System.out.println(""Invalid folder: "" + src); System.exit(1); } folder.open(Folder.READ_WRITE); int count = folder.getMessageCount(); if (count == 0) { System.out.println(folder.getName() + "" is empty""); folder.close(false); store.close(); return; } Folder dfolder = store.getFolder(dest); if (!dfolder.exists()) dfolder.create(Folder.HOLDS_MESSAGES); if (end == -1) end = count; Message[] msgs = folder.getMessages(start, end); System.out.println(""Moving "" + msgs.length + "" messages""); if (msgs.length != 0) { folder.copyMessages(msgs, dfolder); folder.setFlags(msgs, new Flags(Flags.Flag.DELETED), true); for (int i = 0; i < msgs.length; i++) { if (!msgs[i].isSet(Flags.Flag.DELETED)) System.out.println(""Message # "" + msgs[i] + "" not deleted""); } } folder.close(expunge); store.close(); } catch (MessagingException mex) { Exception ex = mex; do { System.out.println(ex.getMessage()); if (ex instanceof MessagingException) ex = ((MessagingException) ex).getNextException(); else ex = null; } while (ex != null); } }","void main(String[]argv){for(;;optind++){if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){}if(("""")){}if(argv[optind].startsWith("""")){("""");("""").exit();}}if(optind)(argv[optind++]);if(length)(argv[optind++]);try{(null);if(url){if(host)connect();}getFolder();if(exists()){(""""+src);(1);}open();getMessageCount();if(0){}(""""+"""");if(0){((Flags));for(;;i++){if(msgs[i].isSet())(""""+msgs[i]+"""");}}close();}catch(MessagingException mex){{if(ex)((MessagingException)).getNextException;}(ex);}}",2782,601,10,2181,78.67965367965368,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'start', '=', '1', ';', 'int', 'end', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'src', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dest', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-x""', ')', ')', '{', 'expunge', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t The -x option => EXPUNGE deleted messages""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t msgnum1 => start of message-range; msgnum2 => end of message-range""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'start', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'end', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getFolder', '(', 'src', ')', ';', 'if', '(', 'folder', '==', 'null', '||', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder: ""', '+', 'src', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'count', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'count', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'folder', '.', 'getName', '(', ')', '+', '"" is empty""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'return', ';', '}', 'Folder', 'dfolder', '=', 'store', '.', 'getFolder', '(', 'dest', ')', ';', 'if', '(', '!', 'dfolder', '.', 'exists', '(', ')', ')', 'dfolder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'if', '(', 'end', '==', '-', '1', ')', 'end', '=', 'count', ';', 'Message', '[', ']', 'msgs', '=', 'folder', '.', 'getMessages', '(', 'start', ',', 'end', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Moving ""', '+', 'msgs', '.', 'length', '+', '"" messages""', ')', ';', 'if', '(', 'msgs', '.', 'length', '!=', '0', ')', '{', 'folder', '.', 'copyMessages', '(', 'msgs', ',', 'dfolder', ')', ';', 'folder', '.', 'setFlags', '(', 'msgs', ',', 'new', 'Flags', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ',', 'true', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'msgs', '[', 'i', ']', '.', 'isSet', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ')', 'System', '.', 'out', '.', 'println', '(', '""Message # ""', '+', 'msgs', '[', 'i', ']', '+', '"" not deleted""', ')', ';', '}', '}', 'folder', '.', 'close', '(', 'expunge', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'Exception', 'ex', '=', 'mex', ';', 'do', '{', 'System', '.', 'out', '.', 'println', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'if', '(', 'ex', 'instanceof', 'MessagingException', ')', 'ex', '=', '(', '(', 'MessagingException', ')', 'ex', ')', '.', 'getNextException', '(', ')', ';', 'else', 'ex', '=', 'null', ';', '}', 'while', '(', 'ex', '!=', 'null', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '}', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'length', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', '(', 'null', ')', ';', 'if', '(', 'url', ')', '{', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', 'getFolder', '(', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', '(', '""""', '+', 'src', ')', ';', '(', '1', ')', ';', '}', 'open', '(', ')', ';', 'getMessageCount', '(', ')', ';', 'if', '(', '0', ')', '{', '}', '(', '""""', '+', '""""', ')', ';', 'if', '(', '0', ')', '{', '(', '(', 'Flags', ')', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'msgs', '[', 'i', ']', '.', 'isSet', '(', ')', ')', '(', '""""', '+', 'msgs', '[', 'i', ']', '+', '""""', ')', ';', '}', '}', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '{', 'if', '(', 'ex', ')', '(', '(', 'MessagingException', ')', ')', '.', 'getNextException', ';', '}', '(', 'ex', ')', ';', '}', '}']",795,311,6,484,61.34347275031685
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_15.txt,0.9998,0.0004,"{'n_total': 6147, 'n_valid': 420, 'n_correct': 365}",1298.61739,"public static void main(String[] argv) { int nummsg = 256; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-p"")) { port = Integer.parseInt(argv[++optind]); } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""); System.out.println(""\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""); System.exit(1); } else { break; } } try { if (optind < argv.length) nummsg = Integer.parseInt(argv[optind]); Properties props = System.getProperties(); session = Session.getInstance(props, null); session.setDebug(debug); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, port, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } if (mbox == null) mbox = ""messagecachetest""; folder = folder.getFolder(mbox); if (folder == null) { System.out.println(""Invalid folder""); System.exit(1); } Message[] msgs = createMessages(nummsg); if (folder.exists()) folder.delete(false); folder.create(Folder.HOLDS_MESSAGES); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""fill folder""); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test message number""); testMessageNumber(folder); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge forward""); testExpungeForward(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge reverse""); testExpungeReverse(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge random""); testExpungeRandom(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge other""); testExpungeOther(folder); folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); System.exit(1); } System.exit(0); }","void main(String[]argv){for(;;){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){(argv[optind]);}if(("""")){}if(argv[optind].startsWith("""")){System();}{}}try{if(debug)if(null){connect();}{if(protocol)if(host)connect();}folder();if(folder){("""");}if(null)if(folder){("""");}Message[]msgs=(nummsg);if(verbose)println();(msgs);(WRITE);if(verbose)(msgs);("""");(folder);(Folder);(WRITE);if(verbose)(false);(msgs);(false);}catch(Exception ex){(""""+ex).exit();}}",3144,722,10,2422,77.2814294830887,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'nummsg', '=', '256', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-p""', ')', ')', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', '++', 'optind', ']', ')', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'nummsg', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'port', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'mbox', '==', 'null', ')', 'mbox', '=', '""messagecachetest""', ';', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', 'createMessages', '(', 'nummsg', ')', ';', 'if', '(', 'folder', '.', 'exists', '(', ')', ')', 'folder', '.', 'delete', '(', 'false', ')', ';', 'folder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""fill folder""', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test message number""', ')', ';', 'testMessageNumber', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge forward""', ')', ';', 'testExpungeForward', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge reverse""', ')', ';', 'testExpungeReverse', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge random""', ')', ';', 'testExpungeRandom', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge other""', ')', ';', 'testExpungeOther', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '(', 'argv', '[', 'optind', ']', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', 'System', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'debug', ')', 'if', '(', 'null', ')', '{', 'connect', '(', ')', ';', '}', '{', 'if', '(', 'protocol', ')', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', 'folder', '(', ')', ';', 'if', '(', 'folder', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', 'if', '(', 'folder', ')', '{', '(', '""""', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', '(', 'nummsg', ')', ';', 'if', '(', 'verbose', ')', 'println', '(', ')', ';', '(', 'msgs', ')', ';', '(', 'WRITE', ')', ';', 'if', '(', 'verbose', ')', '(', 'msgs', ')', ';', '(', '""""', ')', ';', '(', 'folder', ')', ';', '(', 'Folder', ')', ';', '(', 'WRITE', ')', ';', 'if', '(', 'verbose', ')', '(', 'false', ')', ';', '(', 'msgs', ')', ';', '(', 'false', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'ex', ')', '.', 'exit', '(', ')', ';', '}', '}']",886,343,6,543,61.70454545454545
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_7.txt,0.8387,0.256,"{'n_total': 2419, 'n_valid': 249, 'n_correct': 225}",739.702342,"public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + "":class=HtmlAdaptorServer,protocol=html,port="" + htmlPort); println(""Adding HTML adaptor to MBean server with name \n "" + htmlObjName); println(""NOTE: HTML adaptor is bound on TCP port "" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + "":class=SnmpAdaptorServer,protocol=snmp,port="" + snmpPort); println(""Adding SNMP adaptor to MBean server with name \n "" + snmpObjName); println(""NOTE: SNMP Adaptor is bound on UDP port "" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(""NOTE: Sending a coldStart SNMP trap"" + "" to each destination defined in the ACL file...""); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(""Done.""); try { JMXServiceURL url = new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://localhost:9999/server""); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(""Error starting RMI : execute rmiregistry 9999; ex="" + ex); } sunMibObjName = new ObjectName(""snmp:class=SUN_OPENSSO_SERVER_MIB""); println(""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name"" + ""\n "" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_CTS_MIB""); println(""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name"" + ""\n "" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""); println(""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name"" + ""\n "" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""); println(""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name"" + ""\n "" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(""trapGenerator"" + "":class=LinkTrapGenerator,ifIndex="" + ifIndex); println(""Adding LinkTrapGenerator to MBean server with name"" + ""\n "" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(""\n>> Press <Enter> if you want to start sending traps.""); println("" -or-""); println("">> Press <Ctrl-C> if you want to stop this agent.""); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }","void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(""""+snmpPort).print("""");(Integer()).snmpV();("""");try{("""").newJMXConnectorServer();}catch(Exception ex){(""""+ex);}("""");("""");}catch(Exception e){printStackTrace();}}",3991,331,10,3660,91.93669932177843,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'final', 'MBeanServer', 'server', ';', 'final', 'ObjectName', 'htmlObjName', ';', 'final', 'ObjectName', 'snmpObjName', ';', 'final', 'ObjectName', 'sunMibObjName', ';', 'final', 'ObjectName', 'forgerockCtsMibObjName', ';', 'final', 'ObjectName', 'forgerockPolicyMibObjName', ';', 'final', 'ObjectName', 'forgerockSessionMibObjName', ';', 'final', 'ObjectName', 'trapGeneratorObjName', ';', 'int', 'htmlPort', '=', '8082', ';', 'int', 'snmpPort', '=', '11161', ';', 'if', '(', '(', 'args', '.', 'length', '!=', '0', ')', '&&', '(', 'args', '.', 'length', '!=', '1', ')', ')', '{', 'usage', '(', ')', ';', 'java', '.', 'lang', '.', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', 'if', '(', 'args', '.', 'length', '==', '1', ')', '{', 'try', '{', 'nbTraps', '=', '(', 'new', 'Integer', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', '<', '0', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'NumberFormatException', 'e', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'try', '{', 'List', '<', 'MBeanServer', '>', 'servers', '=', 'MBeanServerFactory', '.', 'findMBeanServer', '(', 'null', ')', ';', 'if', '(', '(', 'servers', '!=', 'null', ')', '&&', '!', 'servers', '.', 'isEmpty', '(', ')', ')', '{', 'server', '=', 'servers', '.', 'get', '(', '0', ')', ';', '}', 'else', '{', 'server', '=', 'MBeanServerFactory', '.', 'createMBeanServer', '(', ')', ';', '}', 'String', 'domain', '=', 'server', '.', 'getDefaultDomain', '(', ')', ';', 'htmlObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=HtmlAdaptorServer,protocol=html,port=""', '+', 'htmlPort', ')', ';', 'println', '(', '""Adding HTML adaptor to MBean server with name \\n ""', '+', 'htmlObjName', ')', ';', 'println', '(', '""NOTE: HTML adaptor is bound on TCP port ""', '+', 'htmlPort', ')', ';', 'HtmlAdaptorServer', 'htmlAdaptor', '=', 'new', 'HtmlAdaptorServer', '(', 'htmlPort', ')', ';', 'server', '.', 'registerMBean', '(', 'htmlAdaptor', ',', 'htmlObjName', ')', ';', 'htmlAdaptor', '.', 'start', '(', ')', ';', 'snmpPort', '=', '11161', ';', 'snmpObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=SnmpAdaptorServer,protocol=snmp,port=""', '+', 'snmpPort', ')', ';', 'println', '(', '""Adding SNMP adaptor to MBean server with name \\n ""', '+', 'snmpObjName', ')', ';', 'println', '(', '""NOTE: SNMP Adaptor is bound on UDP port ""', '+', 'snmpPort', ')', ';', 'snmpAdaptor', '=', 'new', 'SnmpAdaptorServer', '(', 'snmpPort', ')', ';', 'server', '.', 'registerMBean', '(', 'snmpAdaptor', ',', 'snmpObjName', ')', ';', 'snmpAdaptor', '.', 'start', '(', ')', ';', 'print', '(', '""NOTE: Sending a coldStart SNMP trap""', '+', '"" to each destination defined in the ACL file...""', ')', ';', 'snmpAdaptor', '.', 'setTrapPort', '(', 'new', 'Integer', '(', 'snmpPort', '+', '1', ')', ')', ';', 'snmpAdaptor', '.', 'snmpV1Trap', '(', '0', ',', '0', ',', 'null', ')', ';', 'println', '(', '""Done.""', ')', ';', 'try', '{', 'JMXServiceURL', 'url', '=', 'new', 'JMXServiceURL', '(', '""service:jmx:rmi:///jndi/rmi://localhost:9999/server""', ')', ';', 'JMXConnectorServer', 'cs', '=', 'JMXConnectorServerFactory', '.', 'newJMXConnectorServer', '(', 'url', ',', 'null', ',', 'server', ')', ';', 'cs', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'println', '(', '""Error starting RMI : execute rmiregistry 9999; ex=""', '+', 'ex', ')', ';', '}', 'sunMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=SUN_OPENSSO_SERVER_MIB""', ')', ';', 'println', '(', '""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'sunMibObjName', ')', ';', 'SUN_OPENSSO_SERVER_MIB', 'mib2', '=', 'new', 'SUN_OPENSSO_SERVER_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib2', ',', 'sunMibObjName', ')', ';', 'forgerockCtsMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_CTS_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockCtsMibObjName', ')', ';', 'forgerockPolicyMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockPolicyMibObjName', ')', ';', 'forgerockSessionMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockSessionMibObjName', ')', ';', 'FORGEROCK_OPENAM_CTS_MIB', 'mib3', '=', 'new', 'FORGEROCK_OPENAM_CTS_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib3', ',', 'forgerockCtsMibObjName', ')', ';', 'FORGEROCK_OPENAM_POLICY_MIB', 'mib4', '=', 'new', 'FORGEROCK_OPENAM_POLICY_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib4', ',', 'forgerockPolicyMibObjName', ')', ';', 'FORGEROCK_OPENAM_SESSION_MIB', 'mib5', '=', 'new', 'FORGEROCK_OPENAM_SESSION_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib5', ',', 'forgerockSessionMibObjName', ')', ';', 'mib2', '.', 'setSnmpAdaptor', '(', 'snmpAdaptor', ')', ';', 'int', 'ifIndex', '=', '1', ';', 'trapGeneratorObjName', '=', 'new', 'ObjectName', '(', '""trapGenerator""', '+', '"":class=LinkTrapGenerator,ifIndex=""', '+', 'ifIndex', ')', ';', 'println', '(', '""Adding LinkTrapGenerator to MBean server with name""', '+', '""\\n ""', '+', 'trapGeneratorObjName', ')', ';', 'LinkTrapGenerator', 'trapGenerator', '=', 'new', 'LinkTrapGenerator', '(', 'nbTraps', ')', ';', 'server', '.', 'registerMBean', '(', 'trapGenerator', ',', 'trapGeneratorObjName', ')', ';', 'println', '(', '""\\n>> Press <Enter> if you want to start sending traps.""', ')', ';', 'println', '(', '"" -or-""', ')', ';', 'println', '(', '"">> Press <Ctrl-C> if you want to stop this agent.""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'trapGenerator', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'length', ')', '(', 'length', ')', ')', '{', '}', 'if', '(', 'args', ')', '{', 'try', '{', '(', '(', 'args', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', '0', ')', '{', '}', '}', 'catch', '(', 'java', 'e', ')', '{', 'System', '(', ')', ';', '}', '}', 'try', '{', 'MBeanServerFactory', '(', ')', ';', 'if', '(', '(', 'null', ')', ')', '{', '}', '{', 'server', '(', ')', ';', '}', '(', 'domain', ')', ';', '(', '""""', '+', 'snmpPort', ')', '.', 'print', '(', '""""', ')', ';', '(', 'Integer', '(', ')', ')', '.', 'snmpV', '(', ')', ';', '(', '""""', ')', ';', 'try', '{', '(', '""""', ')', '.', 'newJMXConnectorServer', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'ex', ')', ';', '}', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",637,150,6,487,77.17908082408876
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_2.txt,0.7575,0.9345,"{'n_total': 3793, 'n_valid': 315, 'n_correct': 297}",953.805665,"public void run() { int sloops = 0; if (debug) { log.info(""Start NIO thread, daemon="" + daemon); } while (running) { try { loops.incrementAndGet(); processPending(); long now = System.currentTimeMillis(); if (nextWakeup < now) { updateSleepTimeAndProcessTimeouts(now); } int selected = selector.select(sleepTime); lastWakeup = System.currentTimeMillis(); long slept = lastWakeup - now; if (debugWakeup && selected == 0) { if (sleepTime < maxSleep - 1000) { log.info(""Wakeup "" + selected + "" "" + slept + "" "" + sleepTime); } } if (slept < 10 && selected == 0) { if (sloops > 50) { sloops = 0; log.severe(""Looping !""); resetSelector(); } sloops++; } if (selected != 0) { sloops = 0; int callbackCnt = 0; Set<SelectionKey> sel = selector.selectedKeys(); Iterator<SelectionKey> i = sel.iterator(); while (i.hasNext()) { callbackCnt++; long beforeCallback = System.currentTimeMillis(); SelectionKey sk = i.next(); i.remove(); boolean valid = sk.isValid(); int readyOps = (valid) ? sk.readyOps() : 0; NioChannel ch = (NioChannel) sk.attachment(); if (debugWakeup) { log.info(""Wakeup selCnt="" + selected + "" slept="" + (lastWakeup - now) + "" ready: "" + readyOps + "" v="" + sk.isValid() + "" ch="" + ch); } if (ch == null) { log.severe(""Missing channel""); sk.cancel(); continue; } if (ch.selKey != sk) { log.severe(""Invalid state, selKey doesn't match ""); ch.selKey = sk; } if (ch.channel != sk.channel()) { ch.channel = sk.channel(); log.severe(""Invalid state, channel doesn't match ""); } if (!sk.isValid()) { if (debug) { log.info(""!isValid, closed socket "" + ch); } ch.close(); continue; } try { int ready = sk.readyOps(); if (sk.isValid() && sk.isAcceptable()) { handleAccept(ch, sk); } if (sk.isValid() && sk.isConnectable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_CONNECT); SocketChannel sc = (SocketChannel) sk.channel(); handleConnect(ch, sc); } if (sk.isValid() && sk.isWritable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_WRITE); ch.writeInterest = false; handleDataWriteable(ch); } if (sk.isValid() && sk.isReadable()) { handleReadable(ch); } long callbackTime = System.currentTimeMillis() - beforeCallback; if (callbackTime > 250) { log.warning(""Callback too long ! ops="" + ready + "" time="" + callbackTime + "" ch="" + ch + "" "" + callbackCnt); } if (callbackTime > maxCallbackTime) { maxCallbackTime = callbackTime; } callbackCount.incrementAndGet(); this.callbackTotalTime.addAndGet(callbackTime); } catch (Throwable t) { log.log(Level.SEVERE, ""SelectorThread: Channel error, closing"", t); ch.lastException = t; ch.close(); } } sel.clear(); } } catch (Throwable e) { log.log(Level.SEVERE, ""SelectorThread: Error in select"", e); } } log.info(""SelectorThread done""); }","void run(){if(debug){(""""+daemon);}while(running){try{currentTimeMillis();if(nextWakeup){(now);while(hasNext()){readyOps=(valid)?sk:0;if(debugWakeup){(""""+""""+(now)""""+""""+""""+ch);}if(null){("""");}if(channel()){("""");}if(sk){if(debug){(""""+ch);}}try{ready();if(sk()){(ch);}if(sk()&sk()){sk();}if(sk){(ch);}if(0){(""""+""""+callbackCnt);}{}}catch(Throwable t){("""");close();}}}}catch(Throwable e){log("""",e);}}("""");}",2690,400,9,2290,85.4158895934353,"['public', 'void', 'run', '(', ')', '{', 'int', 'sloops', '=', '0', ';', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""Start NIO thread, daemon=""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'loops', '.', 'incrementAndGet', '(', ')', ';', 'processPending', '(', ')', ';', 'long', 'now', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', '<', 'now', ')', '{', 'updateSleepTimeAndProcessTimeouts', '(', 'now', ')', ';', '}', 'int', 'selected', '=', 'selector', '.', 'select', '(', 'sleepTime', ')', ';', 'lastWakeup', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'slept', '=', 'lastWakeup', '-', 'now', ';', 'if', '(', 'debugWakeup', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sleepTime', '<', 'maxSleep', '-', '1000', ')', '{', 'log', '.', 'info', '(', '""Wakeup ""', '+', 'selected', '+', '"" ""', '+', 'slept', '+', '"" ""', '+', 'sleepTime', ')', ';', '}', '}', 'if', '(', 'slept', '<', '10', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sloops', '>', '50', ')', '{', 'sloops', '=', '0', ';', 'log', '.', 'severe', '(', '""Looping !""', ')', ';', 'resetSelector', '(', ')', ';', '}', 'sloops', '++', ';', '}', 'if', '(', 'selected', '!=', '0', ')', '{', 'sloops', '=', '0', ';', 'int', 'callbackCnt', '=', '0', ';', 'Set', '<', 'SelectionKey', '>', 'sel', '=', 'selector', '.', 'selectedKeys', '(', ')', ';', 'Iterator', '<', 'SelectionKey', '>', 'i', '=', 'sel', '.', 'iterator', '(', ')', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'callbackCnt', '++', ';', 'long', 'beforeCallback', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'SelectionKey', 'sk', '=', 'i', '.', 'next', '(', ')', ';', 'i', '.', 'remove', '(', ')', ';', 'boolean', 'valid', '=', 'sk', '.', 'isValid', '(', ')', ';', 'int', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', '.', 'readyOps', '(', ')', ':', '0', ';', 'NioChannel', 'ch', '=', '(', 'NioChannel', ')', 'sk', '.', 'attachment', '(', ')', ';', 'if', '(', 'debugWakeup', ')', '{', 'log', '.', 'info', '(', '""Wakeup selCnt=""', '+', 'selected', '+', '"" slept=""', '+', '(', 'lastWakeup', '-', 'now', ')', '+', '"" ready: ""', '+', 'readyOps', '+', '"" v=""', '+', 'sk', '.', 'isValid', '(', ')', '+', '"" ch=""', '+', 'ch', ')', ';', '}', 'if', '(', 'ch', '==', 'null', ')', '{', 'log', '.', 'severe', '(', '""Missing channel""', ')', ';', 'sk', '.', 'cancel', '(', ')', ';', 'continue', ';', '}', 'if', '(', 'ch', '.', 'selKey', '!=', 'sk', ')', '{', 'log', '.', 'severe', '(', '""Invalid state, selKey doesn\'t match ""', ')', ';', 'ch', '.', 'selKey', '=', 'sk', ';', '}', 'if', '(', 'ch', '.', 'channel', '!=', 'sk', '.', 'channel', '(', ')', ')', '{', 'ch', '.', 'channel', '=', 'sk', '.', 'channel', '(', ')', ';', 'log', '.', 'severe', '(', '""Invalid state, channel doesn\'t match ""', ')', ';', '}', 'if', '(', '!', 'sk', '.', 'isValid', '(', ')', ')', '{', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""!isValid, closed socket ""', '+', 'ch', ')', ';', '}', 'ch', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'try', '{', 'int', 'ready', '=', 'sk', '.', 'readyOps', '(', ')', ';', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isAcceptable', '(', ')', ')', '{', 'handleAccept', '(', 'ch', ',', 'sk', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isConnectable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_CONNECT', ')', ';', 'SocketChannel', 'sc', '=', '(', 'SocketChannel', ')', 'sk', '.', 'channel', '(', ')', ';', 'handleConnect', '(', 'ch', ',', 'sc', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isWritable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_WRITE', ')', ';', 'ch', '.', 'writeInterest', '=', 'false', ';', 'handleDataWriteable', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isReadable', '(', ')', ')', '{', 'handleReadable', '(', 'ch', ')', ';', '}', 'long', 'callbackTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'beforeCallback', ';', 'if', '(', 'callbackTime', '>', '250', ')', '{', 'log', '.', 'warning', '(', '""Callback too long ! ops=""', '+', 'ready', '+', '"" time=""', '+', 'callbackTime', '+', '"" ch=""', '+', 'ch', '+', '"" ""', '+', 'callbackCnt', ')', ';', '}', 'if', '(', 'callbackTime', '>', 'maxCallbackTime', ')', '{', 'maxCallbackTime', '=', 'callbackTime', ';', '}', 'callbackCount', '.', 'incrementAndGet', '(', ')', ';', 'this', '.', 'callbackTotalTime', '.', 'addAndGet', '(', 'callbackTime', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Channel error, closing""', ',', 't', ')', ';', 'ch', '.', 'lastException', '=', 't', ';', 'ch', '.', 'close', '(', ')', ';', '}', '}', 'sel', '.', 'clear', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Error in select""', ',', 'e', ')', ';', '}', '}', 'log', '.', 'info', '(', '""SelectorThread done""', ')', ';', '}']","['void', 'run', '(', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', ')', '{', '(', 'now', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', ':', '0', ';', 'if', '(', 'debugWakeup', ')', '{', '(', '""""', '+', '""""', '+', '(', 'now', ')', '""""', '+', '""""', '+', '""""', '+', 'ch', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'channel', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'sk', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'ch', ')', ';', '}', '}', 'try', '{', 'ready', '(', ')', ';', 'if', '(', 'sk', '(', ')', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '(', ')', '&', 'sk', '(', ')', ')', '{', 'sk', '(', ')', ';', '}', 'if', '(', 'sk', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', '0', ')', '{', '(', '""""', '+', '""""', '+', 'callbackCnt', ')', ';', '}', '{', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'close', '(', ')', ';', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '(', '""""', ',', 'e', ')', ';', '}', '}', '(', '""""', ')', ';', '}']",714,216,6,498,70.33898305084746
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,init_1.txt,0.359,2.438,"{'n_total': 17056, 'n_valid': 1674, 'n_correct': 463}",5175.350409,"private void init(final Context context) { setCanceledOnTouchOutside(cancelOnTouchOutside); final ClosableSlidingLayout mDialogView = (ClosableSlidingLayout) View.inflate(context, R.layout.bottom_sheet_dialog, null); LinearLayout mainLayout = (LinearLayout) mDialogView.findViewById(R.id.bs_main); mainLayout.addView(View.inflate(context, mHeaderLayoutId, null), 0); setContentView(mDialogView); if (!cancelOnSwipeDown) mDialogView.swipeable = cancelOnSwipeDown; mDialogView.setSlideListener(new ClosableSlidingLayout.SlideListener() { @Override public void onClosed() { BottomSheet.this.dismiss(); } @Override public void onOpened() { showFullItems(); } }); super.setOnShowListener(new OnShowListener() { @Override public void onShow(DialogInterface dialogInterface) { if (showListener != null) showListener.onShow(dialogInterface); list.setAdapter(adapter); list.startLayoutAnimation(); if (builder.icon == null) icon.setVisibility(View.GONE); else { icon.setVisibility(View.VISIBLE); icon.setImageDrawable(builder.icon); } } }); int[] location = new int[2]; mDialogView.getLocationOnScreen(location); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { mDialogView.setPadding(0, location[0] == 0 ? helper.mStatusBarHeight : 0, 0, 0); mDialogView.getChildAt(0).setPadding(0, 0, 0, helper.mNavBarAvailable ? helper.getNavigationBarHeight(getContext()) + mDialogView.getPaddingBottom() : 0); } final TextView title = (TextView) mDialogView.findViewById(R.id.bottom_sheet_title); if (builder.title != null) { title.setVisibility(View.VISIBLE); title.setText(builder.title); } icon = (ImageView) mDialogView.findViewById(R.id.bottom_sheet_title_image); list = (GridView) mDialogView.findViewById(R.id.bottom_sheet_gridview); mDialogView.mTarget = list; if (!builder.grid) { list.setNumColumns(1); } if (builder.grid) { for (int i = 0; i < getMenu().size(); i++) { if (getMenu().getItem(i).getIcon() == null) throw new IllegalArgumentException(""You must set icon for each items in grid style""); } } if (builder.limit > 0) limit = builder.limit * getNumColumns(); else limit = Integer.MAX_VALUE; mDialogView.setCollapsible(false); actions = builder.menu; menuItem = actions; if (getMenu().size() > limit) { fullMenuItem = builder.menu; menuItem = builder.menu.clone(limit - 1); ActionMenuItem item = new ActionMenuItem(context, 0, R.id.bs_more, 0, limit - 1, moreText); item.setIcon(more); menuItem.add(item); actions = menuItem; mDialogView.setCollapsible(true); } BaseAdapter baseAdapter = new BaseAdapter() { @Override public int getCount() { return actions.size() - hidden.size(); } @Override public MenuItem getItem(int position) { return actions.getItem(position); } @Override public long getItemId(int position) { return position; } @Override public int getViewTypeCount() { return 1; } @Override public boolean isEnabled(int position) { return getItem(position).isEnabled(); } @Override public boolean areAllItemsEnabled() { return false; } @Override public View getView(int position, View convertView, ViewGroup parent) { ViewHolder holder; if (convertView == null) { LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); if (builder.grid) convertView = inflater.inflate(mGridItemLayoutId, parent, false); else convertView = inflater.inflate(mListItemLayoutId, parent, false); holder = new ViewHolder(); holder.title = (TextView) convertView.findViewById(R.id.bs_list_title); holder.image = (ImageView) convertView.findViewById(R.id.bs_list_image); convertView.setTag(holder); } else { holder = (ViewHolder) convertView.getTag(); } for (int i = 0; i < hidden.size(); i++) { if (hidden.valueAt(i) <= position) position++; } MenuItem item = getItem(position); holder.title.setText(item.getTitle()); if (item.getIcon() == null) holder.image.setVisibility(collapseListIcons ? View.GONE : View.INVISIBLE); else { holder.image.setVisibility(View.VISIBLE); holder.image.setImageDrawable(item.getIcon()); } holder.image.setEnabled(item.isEnabled()); holder.title.setEnabled(item.isEnabled()); return convertView; } class ViewHolder { private TextView title; private ImageView image; } }; adapter = new SimpleSectionedGridAdapter(context, baseAdapter, R.layout.bs_list_divider, R.id.headerlayout, R.id.header); list.setAdapter(adapter); adapter.setGridView(list); list.setOnItemClickListener(new AdapterView.OnItemClickListener() { @Override public void onItemClick(AdapterView<?> parent, View view, int position, long id) { if (((MenuItem) adapter.getItem(position)).getItemId() == R.id.bs_more) { showFullItems(); mDialogView.setCollapsible(false); return; } if (!((ActionMenuItem) adapter.getItem(position)).invoke()) { if (builder.menulistener != null) builder.menulistener.onMenuItemClick((MenuItem) adapter.getItem(position)); else if (builder.listener != null) builder.listener.onClick(BottomSheet.this, ((MenuItem) adapter.getItem(position)).getItemId()); } dismiss(); } }); if (builder.dismissListener != null) { setOnDismissListener(builder.dismissListener); } setListLayout(); }","void init(finalContext context){setCanceledOnTouchOutside();mDialogView=(ClosableSlidingLayout)View();addView(View(),mDialogView);if(cancelOnSwipeDown)(new ClosableSlidingLayout(){onClosed(){}onOpened(){showFullItems();}});(new OnShowListener(){onShow(DialogInterface dialogInterface){if(showListener)(dialogInterface);startLayoutAnimation();if(icon=null)(View);{(icon);}}});location=newint[2];(location);if(Build){(0?mStatusBarHeight:0).getChildAt(mNavBarAvailable?(getContext())+mDialogView:0);(title);}(gridview);if(!grid){setNumColumns();}if(builder){for(;;i++){if(getMenu())("""");}}if(0)if(getMenu){clone();ActionMenuItem();add();(true);}new BaseAdapter(){getCount(){}getItem(int position){}getItemId(int position){}getViewTypeCount(){}isEnabled(int position){}areAllItemsEnabled(){}getView(View convertView){if(convertView){(Context);}for(i0;;i++){(valueAt()<position);}item();(getTitle());if(null)(collapseListIcons?View:View);{(View);}(item);} class ViewHolder{TextView title;}}; SimpleSectionedGridAdapter();setAdapter();(list); (new OnItemClickListener(){onItemClick(AdapterView<?> parent,View view,long id) {if(((MenuItem)(position))==more){(false);}if(((ActionMenuItem))){ if(null)(((MenuItem)(position)));}}});if(null){setOnDismissListener();}setListLayout(); }",5045,1273,10,3772,74.91559086395233,"['private', 'void', 'init', '(', 'final', 'Context', 'context', ')', '{', 'setCanceledOnTouchOutside', '(', 'cancelOnTouchOutside', ')', ';', 'final', 'ClosableSlidingLayout', 'mDialogView', '=', '(', 'ClosableSlidingLayout', ')', 'View', '.', 'inflate', '(', 'context', ',', 'R', '.', 'layout', '.', 'bottom_sheet_dialog', ',', 'null', ')', ';', 'LinearLayout', 'mainLayout', '=', '(', 'LinearLayout', ')', 'mDialogView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bs_main', ')', ';', 'mainLayout', '.', 'addView', '(', 'View', '.', 'inflate', '(', 'context', ',', 'mHeaderLayoutId', ',', 'null', ')', ',', '0', ')', ';', 'setContentView', '(', 'mDialogView', ')', ';', 'if', '(', '!', 'cancelOnSwipeDown', ')', 'mDialogView', '.', 'swipeable', '=', 'cancelOnSwipeDown', ';', 'mDialogView', '.', 'setSlideListener', '(', 'new', 'ClosableSlidingLayout', '.', 'SlideListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClosed', '(', ')', '{', 'BottomSheet', '.', 'this', '.', 'dismiss', '(', ')', ';', '}', '@', 'Override', 'public', 'void', 'onOpened', '(', ')', '{', 'showFullItems', '(', ')', ';', '}', '}', ')', ';', 'super', '.', 'setOnShowListener', '(', 'new', 'OnShowListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onShow', '(', 'DialogInterface', 'dialogInterface', ')', '{', 'if', '(', 'showListener', '!=', 'null', ')', 'showListener', '.', 'onShow', '(', 'dialogInterface', ')', ';', 'list', '.', 'setAdapter', '(', 'adapter', ')', ';', 'list', '.', 'startLayoutAnimation', '(', ')', ';', 'if', '(', 'builder', '.', 'icon', '==', 'null', ')', 'icon', '.', 'setVisibility', '(', 'View', '.', 'GONE', ')', ';', 'else', '{', 'icon', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', 'icon', '.', 'setImageDrawable', '(', 'builder', '.', 'icon', ')', ';', '}', '}', '}', ')', ';', 'int', '[', ']', 'location', '=', 'new', 'int', '[', '2', ']', ';', 'mDialogView', '.', 'getLocationOnScreen', '(', 'location', ')', ';', 'if', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', '>=', 'Build', '.', 'VERSION_CODES', '.', 'KITKAT', ')', '{', 'mDialogView', '.', 'setPadding', '(', '0', ',', 'location', '[', '0', ']', '==', '0', '?', 'helper', '.', 'mStatusBarHeight', ':', '0', ',', '0', ',', '0', ')', ';', 'mDialogView', '.', 'getChildAt', '(', '0', ')', '.', 'setPadding', '(', '0', ',', '0', ',', '0', ',', 'helper', '.', 'mNavBarAvailable', '?', 'helper', '.', 'getNavigationBarHeight', '(', 'getContext', '(', ')', ')', '+', 'mDialogView', '.', 'getPaddingBottom', '(', ')', ':', '0', ')', ';', '}', 'final', 'TextView', 'title', '=', '(', 'TextView', ')', 'mDialogView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bottom_sheet_title', ')', ';', 'if', '(', 'builder', '.', 'title', '!=', 'null', ')', '{', 'title', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', 'title', '.', 'setText', '(', 'builder', '.', 'title', ')', ';', '}', 'icon', '=', '(', 'ImageView', ')', 'mDialogView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bottom_sheet_title_image', ')', ';', 'list', '=', '(', 'GridView', ')', 'mDialogView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bottom_sheet_gridview', ')', ';', 'mDialogView', '.', 'mTarget', '=', 'list', ';', 'if', '(', '!', 'builder', '.', 'grid', ')', '{', 'list', '.', 'setNumColumns', '(', '1', ')', ';', '}', 'if', '(', 'builder', '.', 'grid', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'getMenu', '(', ')', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'getMenu', '(', ')', '.', 'getItem', '(', 'i', ')', '.', 'getIcon', '(', ')', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""You must set icon for each items in grid style""', ')', ';', '}', '}', 'if', '(', 'builder', '.', 'limit', '>', '0', ')', 'limit', '=', 'builder', '.', 'limit', '*', 'getNumColumns', '(', ')', ';', 'else', 'limit', '=', 'Integer', '.', 'MAX_VALUE', ';', 'mDialogView', '.', 'setCollapsible', '(', 'false', ')', ';', 'actions', '=', 'builder', '.', 'menu', ';', 'menuItem', '=', 'actions', ';', 'if', '(', 'getMenu', '(', ')', '.', 'size', '(', ')', '>', 'limit', ')', '{', 'fullMenuItem', '=', 'builder', '.', 'menu', ';', 'menuItem', '=', 'builder', '.', 'menu', '.', 'clone', '(', 'limit', '-', '1', ')', ';', 'ActionMenuItem', 'item', '=', 'new', 'ActionMenuItem', '(', 'context', ',', '0', ',', 'R', '.', 'id', '.', 'bs_more', ',', '0', ',', 'limit', '-', '1', ',', 'moreText', ')', ';', 'item', '.', 'setIcon', '(', 'more', ')', ';', 'menuItem', '.', 'add', '(', 'item', ')', ';', 'actions', '=', 'menuItem', ';', 'mDialogView', '.', 'setCollapsible', '(', 'true', ')', ';', '}', 'BaseAdapter', 'baseAdapter', '=', 'new', 'BaseAdapter', '(', ')', '{', '@', 'Override', 'public', 'int', 'getCount', '(', ')', '{', 'return', 'actions', '.', 'size', '(', ')', '-', 'hidden', '.', 'size', '(', ')', ';', '}', '@', 'Override', 'public', 'MenuItem', 'getItem', '(', 'int', 'position', ')', '{', 'return', 'actions', '.', 'getItem', '(', 'position', ')', ';', '}', '@', 'Override', 'public', 'long', 'getItemId', '(', 'int', 'position', ')', '{', 'return', 'position', ';', '}', '@', 'Override', 'public', 'int', 'getViewTypeCount', '(', ')', '{', 'return', '1', ';', '}', '@', 'Override', 'public', 'boolean', 'isEnabled', '(', 'int', 'position', ')', '{', 'return', 'getItem', '(', 'position', ')', '.', 'isEnabled', '(', ')', ';', '}', '@', 'Override', 'public', 'boolean', 'areAllItemsEnabled', '(', ')', '{', 'return', 'false', ';', '}', '@', 'Override', 'public', 'View', 'getView', '(', 'int', 'position', ',', 'View', 'convertView', ',', 'ViewGroup', 'parent', ')', '{', 'ViewHolder', 'holder', ';', 'if', '(', 'convertView', '==', 'null', ')', '{', 'LayoutInflater', 'inflater', '=', '(', 'LayoutInflater', ')', 'getContext', '(', ')', '.', 'getSystemService', '(', 'Context', '.', 'LAYOUT_INFLATER_SERVICE', ')', ';', 'if', '(', 'builder', '.', 'grid', ')', 'convertView', '=', 'inflater', '.', 'inflate', '(', 'mGridItemLayoutId', ',', 'parent', ',', 'false', ')', ';', 'else', 'convertView', '=', 'inflater', '.', 'inflate', '(', 'mListItemLayoutId', ',', 'parent', ',', 'false', ')', ';', 'holder', '=', 'new', 'ViewHolder', '(', ')', ';', 'holder', '.', 'title', '=', '(', 'TextView', ')', 'convertView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bs_list_title', ')', ';', 'holder', '.', 'image', '=', '(', 'ImageView', ')', 'convertView', '.', 'findViewById', '(', 'R', '.', 'id', '.', 'bs_list_image', ')', ';', 'convertView', '.', 'setTag', '(', 'holder', ')', ';', '}', 'else', '{', 'holder', '=', '(', 'ViewHolder', ')', 'convertView', '.', 'getTag', '(', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'hidden', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'hidden', '.', 'valueAt', '(', 'i', ')', '<=', 'position', ')', 'position', '++', ';', '}', 'MenuItem', 'item', '=', 'getItem', '(', 'position', ')', ';', 'holder', '.', 'title', '.', 'setText', '(', 'item', '.', 'getTitle', '(', ')', ')', ';', 'if', '(', 'item', '.', 'getIcon', '(', ')', '==', 'null', ')', 'holder', '.', 'image', '.', 'setVisibility', '(', 'collapseListIcons', '?', 'View', '.', 'GONE', ':', 'View', '.', 'INVISIBLE', ')', ';', 'else', '{', 'holder', '.', 'image', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', 'holder', '.', 'image', '.', 'setImageDrawable', '(', 'item', '.', 'getIcon', '(', ')', ')', ';', '}', 'holder', '.', 'image', '.', 'setEnabled', '(', 'item', '.', 'isEnabled', '(', ')', ')', ';', 'holder', '.', 'title', '.', 'setEnabled', '(', 'item', '.', 'isEnabled', '(', ')', ')', ';', 'return', 'convertView', ';', '}', 'class', 'ViewHolder', '{', 'private', 'TextView', 'title', ';', 'private', 'ImageView', 'image', ';', '}', '}', ';', 'adapter', '=', 'new', 'SimpleSectionedGridAdapter', '(', 'context', ',', 'baseAdapter', ',', 'R', '.', 'layout', '.', 'bs_list_divider', ',', 'R', '.', 'id', '.', 'headerlayout', ',', 'R', '.', 'id', '.', 'header', ')', ';', 'list', '.', 'setAdapter', '(', 'adapter', ')', ';', 'adapter', '.', 'setGridView', '(', 'list', ')', ';', 'list', '.', 'setOnItemClickListener', '(', 'new', 'AdapterView', '.', 'OnItemClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemClick', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'if', '(', '(', '(', 'MenuItem', ')', 'adapter', '.', 'getItem', '(', 'position', ')', ')', '.', 'getItemId', '(', ')', '==', 'R', '.', 'id', '.', 'bs_more', ')', '{', 'showFullItems', '(', ')', ';', 'mDialogView', '.', 'setCollapsible', '(', 'false', ')', ';', 'return', ';', '}', 'if', '(', '!', '(', '(', 'ActionMenuItem', ')', 'adapter', '.', 'getItem', '(', 'position', ')', ')', '.', 'invoke', '(', ')', ')', '{', 'if', '(', 'builder', '.', 'menulistener', '!=', 'null', ')', 'builder', '.', 'menulistener', '.', 'onMenuItemClick', '(', '(', 'MenuItem', ')', 'adapter', '.', 'getItem', '(', 'position', ')', ')', ';', 'else', 'if', '(', 'builder', '.', 'listener', '!=', 'null', ')', 'builder', '.', 'listener', '.', 'onClick', '(', 'BottomSheet', '.', 'this', ',', '(', '(', 'MenuItem', ')', 'adapter', '.', 'getItem', '(', 'position', ')', ')', '.', 'getItemId', '(', ')', ')', ';', '}', 'dismiss', '(', ')', ';', '}', '}', ')', ';', 'if', '(', 'builder', '.', 'dismissListener', '!=', 'null', ')', '{', 'setOnDismissListener', '(', 'builder', '.', 'dismissListener', ')', ';', '}', 'setListLayout', '(', ')', ';', '}']","['void', 'init', '(', 'finalContext', 'context', ')', '{', 'setCanceledOnTouchOutside', '(', ')', ';', 'mDialogView', '=', '(', 'ClosableSlidingLayout', ')', 'View', '(', ')', ';', 'addView', '(', 'View', '(', ')', ',', 'mDialogView', ')', ';', 'if', '(', 'cancelOnSwipeDown', ')', '(', 'new', 'ClosableSlidingLayout', '(', ')', '{', 'onClosed', '(', ')', '{', '}', 'onOpened', '(', ')', '{', 'showFullItems', '(', ')', ';', '}', '}', ')', ';', '(', 'new', 'OnShowListener', '(', ')', '{', 'onShow', '(', 'DialogInterface', 'dialogInterface', ')', '{', 'if', '(', 'showListener', ')', '(', 'dialogInterface', ')', ';', 'startLayoutAnimation', '(', ')', ';', 'if', '(', 'icon', '=', 'null', ')', '(', 'View', ')', ';', '{', '(', 'icon', ')', ';', '}', '}', '}', ')', ';', 'location', '=', 'newint', '[', '2', ']', ';', '(', 'location', ')', ';', 'if', '(', 'Build', ')', '{', '(', '0', '?', 'mStatusBarHeight', ':', '0', ')', '.', 'getChildAt', '(', 'mNavBarAvailable', '?', '(', 'getContext', '(', ')', ')', '+', 'mDialogView', ':', '0', ')', ';', '(', 'title', ')', ';', '}', '(', 'gridview', ')', ';', 'if', '(', '!', 'grid', ')', '{', 'setNumColumns', '(', ')', ';', '}', 'if', '(', 'builder', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'getMenu', '(', ')', ')', '(', '""""', ')', ';', '}', '}', 'if', '(', '0', ')', 'if', '(', 'getMenu', ')', '{', 'clone', '(', ')', ';', 'ActionMenuItem', '(', ')', ';', 'add', '(', ')', ';', '(', 'true', ')', ';', '}', 'new', 'BaseAdapter', '(', ')', '{', 'getCount', '(', ')', '{', '}', 'getItem', '(', 'int', 'position', ')', '{', '}', 'getItemId', '(', 'int', 'position', ')', '{', '}', 'getViewTypeCount', '(', ')', '{', '}', 'isEnabled', '(', 'int', 'position', ')', '{', '}', 'areAllItemsEnabled', '(', ')', '{', '}', 'getView', '(', 'View', 'convertView', ')', '{', 'if', '(', 'convertView', ')', '{', '(', 'Context', ')', ';', '}', 'for', '(', 'i0', ';', ';', 'i', '++', ')', '{', '(', 'valueAt', '(', ')', '<', 'position', ')', ';', '}', 'item', '(', ')', ';', '(', 'getTitle', '(', ')', ')', ';', 'if', '(', 'null', ')', '(', 'collapseListIcons', '?', 'View', ':', 'View', ')', ';', '{', '(', 'View', ')', ';', '}', '(', 'item', ')', ';', '}', 'class', 'ViewHolder', '{', 'TextView', 'title', ';', '}', '}', ';', 'SimpleSectionedGridAdapter', '(', ')', ';', 'setAdapter', '(', ')', ';', '(', 'list', ')', ';', '(', 'new', 'OnItemClickListener', '(', ')', '{', 'onItemClick', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'long', 'id', ')', '{', 'if', '(', '(', '(', 'MenuItem', ')', '(', 'position', ')', ')', '==', 'more', ')', '{', '(', 'false', ')', ';', '}', 'if', '(', '(', '(', 'ActionMenuItem', ')', ')', ')', '{', 'if', '(', 'null', ')', '(', '(', '(', 'MenuItem', ')', '(', 'position', ')', ')', ')', ';', '}', '}', '}', ')', ';', 'if', '(', 'null', ')', '{', 'setOnDismissListener', '(', ')', ';', '}', 'setListLayout', '(', ')', ';', '}']",1220,423,6,797,65.65074135090609
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_5.txt,1.0,0.0,"{'n_total': 4219, 'n_valid': 316, 'n_correct': 311}",1022.610527,"public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split("":""); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? ""changeit"" : args[1]; passphrase = p.toCharArray(); } else { System.out.println(""Usage: java InstallCert <host>[:port] [passphrase]""); return; } File file = new File(""jssecacerts""); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty(""java.home"") + SEP + ""lib"" + SEP + ""security""); file = new File(dir, ""jssecacerts""); if (file.isFile() == false) { file = new File(dir, ""cacerts""); } } System.out.println(""Loading KeyStore "" + file + ""...""); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(""TLS""); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(""Opening connection to "" + host + "":"" + port + ""...""); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(""Starting SSL handshake...""); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(""No errors, certificate is already trusted""); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(""Could not obtain server certificate chain""); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(""Server sent "" + chain.length + "" certificate(s):""); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(""SHA1""); MessageDigest md5 = MessageDigest.getInstance(""MD5""); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println("" "" + (i + 1) + "" Subject "" + cert.getSubjectDN()); System.out.println("" Issuer "" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println("" sha1 "" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println("" md5 "" + toHexString(md5.digest())); System.out.println(); } System.out.println(""Enter certificate to add to trusted keystore or 'q' to quit: [1]""); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(""KeyStore not changed""); return; } X509Certificate cert = chain[k]; String alias = host + ""-"" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(""jssecacerts""); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(""Added certificate to keystore 'jssecacerts' using alias '"" + alias + ""'""); }","void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?"""":args[1];(("""")+"""");File(dir,"""");if(file()){File(dir,"""");}}(""""+"""");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});("""").setSoTimeout();try{("""");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)""""+cert).println(""""+toHexString());(cert).println(""""+toHexString());}("""");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){("""");}(""""+"""");}",3273,481,10,2792,85.5654305853509,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'host', ';', 'int', 'port', ';', 'char', '[', ']', 'passphrase', ';', 'if', '(', '(', 'args', '.', 'length', '==', '1', ')', '||', '(', 'args', '.', 'length', '==', '2', ')', ')', '{', 'String', '[', ']', 'c', '=', 'args', '[', '0', ']', '.', 'split', '(', '"":""', ')', ';', 'host', '=', 'c', '[', '0', ']', ';', 'port', '=', '(', 'c', '.', 'length', '==', '1', ')', '?', '443', ':', 'Integer', '.', 'parseInt', '(', 'c', '[', '1', ']', ')', ';', 'String', 'p', '=', '(', 'args', '.', 'length', '==', '1', ')', '?', '""changeit""', ':', 'args', '[', '1', ']', ';', 'passphrase', '=', 'p', '.', 'toCharArray', '(', ')', ';', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: java InstallCert <host>[:port] [passphrase]""', ')', ';', 'return', ';', '}', 'File', 'file', '=', 'new', 'File', '(', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'char', 'SEP', '=', 'File', '.', 'separatorChar', ';', 'File', 'dir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '""java.home""', ')', '+', 'SEP', '+', '""lib""', '+', 'SEP', '+', '""security""', ')', ';', 'file', '=', 'new', 'File', '(', 'dir', ',', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'file', '=', 'new', 'File', '(', 'dir', ',', '""cacerts""', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '""Loading KeyStore ""', '+', 'file', '+', '""...""', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'KeyStore', 'ks', '=', 'KeyStore', '.', 'getInstance', '(', 'KeyStore', '.', 'getDefaultType', '(', ')', ')', ';', 'ks', '.', 'load', '(', 'in', ',', 'passphrase', ')', ';', 'in', '.', 'close', '(', ')', ';', 'SSLContext', 'context', '=', 'SSLContext', '.', 'getInstance', '(', '""TLS""', ')', ';', 'TrustManagerFactory', 'tmf', '=', 'TrustManagerFactory', '.', 'getInstance', '(', 'TrustManagerFactory', '.', 'getDefaultAlgorithm', '(', ')', ')', ';', 'tmf', '.', 'init', '(', 'ks', ')', ';', 'X509TrustManager', 'defaultTrustManager', '=', '(', 'X509TrustManager', ')', 'tmf', '.', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'SavingTrustManager', 'tm', '=', 'new', 'SavingTrustManager', '(', 'defaultTrustManager', ')', ';', 'context', '.', 'init', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', 'tm', '}', ',', 'null', ')', ';', 'SSLSocketFactory', 'factory', '=', 'context', '.', 'getSocketFactory', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Opening connection to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '""...""', ')', ';', 'SSLSocket', 'socket', '=', '(', 'SSLSocket', ')', 'factory', '.', 'createSocket', '(', 'host', ',', 'port', ')', ';', 'socket', '.', 'setSoTimeout', '(', '10000', ')', ';', 'try', '{', 'System', '.', 'out', '.', 'println', '(', '""Starting SSL handshake...""', ')', ';', 'socket', '.', 'startHandshake', '(', ')', ';', 'socket', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""No errors, certificate is already trusted""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'out', ')', ';', '}', 'X509Certificate', '[', ']', 'chain', '=', 'tm', '.', 'chain', ';', 'if', '(', 'chain', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Could not obtain server certificate chain""', ')', ';', 'return', ';', '}', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'System', '.', 'in', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server sent ""', '+', 'chain', '.', 'length', '+', '"" certificate(s):""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', '""SHA1""', ')', ';', 'MessageDigest', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '""MD5""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chain', '.', 'length', ';', 'i', '++', ')', '{', 'X509Certificate', 'cert', '=', 'chain', '[', 'i', ']', ';', 'System', '.', 'out', '.', 'println', '(', '"" ""', '+', '(', 'i', '+', '1', ')', '+', '"" Subject ""', '+', 'cert', '.', 'getSubjectDN', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" Issuer ""', '+', 'cert', '.', 'getIssuerDN', '(', ')', ')', ';', 'sha1', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" sha1 ""', '+', 'toHexString', '(', 'sha1', '.', 'digest', '(', ')', ')', ')', ';', 'md5', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" md5 ""', '+', 'toHexString', '(', 'md5', '.', 'digest', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Enter certificate to add to trusted keystore or \'q\' to quit: [1]""', ')', ';', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ';', 'int', 'k', ';', 'try', '{', 'k', '=', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', '?', '0', ':', 'Integer', '.', 'parseInt', '(', 'line', ')', '-', '1', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""KeyStore not changed""', ')', ';', 'return', ';', '}', 'X509Certificate', 'cert', '=', 'chain', '[', 'k', ']', ';', 'String', 'alias', '=', 'host', '+', '""-""', '+', '(', 'k', '+', '1', ')', ';', 'ks', '.', 'setCertificateEntry', '(', 'alias', ',', 'cert', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', '""jssecacerts""', ')', ';', 'ks', '.', 'store', '(', 'out', ',', 'passphrase', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'cert', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Added certificate to keystore \'jssecacerts\' using alias \'""', '+', 'alias', '+', '""\'""', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '(', '2', ')', ')', '{', 'String', '=', 'args', '[', '0', ']', '.', 'split', '(', ')', '?', '3', ':', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'length', ')', '?', '""""', ':', 'args', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'File', '(', 'dir', ',', '""""', ')', ';', 'if', '(', 'file', '(', ')', ')', '{', 'File', '(', 'dir', ',', '""""', ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '(', 'ks', ')', ';', 'X', '=', '(', 'X', ')', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'tm', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', '}', ')', ';', '(', '""""', ')', '.', 'setSoTimeout', '(', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'println', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '(', '(', 'System', ')', ')', '.', 'getInstance', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', '""""', '+', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '(', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', 'length', '(', ')', '==', '0', ')', '?', '0', ':', '(', 'line', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}']",832,237,6,595,72.03389830508475
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_16.txt,0.9657,0.0362,"{'n_total': 6983, 'n_valid': 702, 'n_correct': 250}",2009.181887,"public static void main(String[] args) throws IOException { if (args.length == 0) { System.err.println(""Pass in the directory containing both the chunker data and the pos data.""); System.exit(1); } File directory = new File(args[0]); File chunkerTrainDir = new File(directory, ""chunker""); File posTrainDir = new File(directory, ""pos""); File outputTrainDir = new File(directory, ""revised""); if (chunkerTrainDir.exists() == false) { System.err.println(""There is not directory named \"""" + chunkerTrainDir.toString() + ""\"".""); System.exit(1); } if (posTrainDir.exists() == false) { System.err.println(""There is no directory named \"""" + posTrainDir.toString() + ""\"".""); System.exit(1); } if (outputTrainDir.exists() == true) { System.out.println(""Output directory already exists \"""" + outputTrainDir.toString() + ""\"", destroying""); final File[] files = outputTrainDir.listFiles(); for (File f : files) f.delete(); outputTrainDir.delete(); } outputTrainDir.mkdir(); System.out.println(""Created "" + outputTrainDir.toString()); String resultspath = outputTrainDir.toString() + File.separator; File[] chunkerfiles = chunkerTrainDir.listFiles(); File[] posFiles = posTrainDir.listFiles(); for (int i = 0; i < chunkerfiles.length; i++) { File chunkfile = chunkerfiles[i]; File posfile = posFiles[i]; if (!chunkfile.getName().equals(posfile.getName())) { System.err.println(""Files names were not equal!""); System.exit(1); } try (BufferedReader chunkreader = new BufferedReader(new FileReader(chunkfile))) { try (BufferedReader posreader = new BufferedReader(new FileReader(posfile))) { String pl = null; while (true) { String cl = chunkreader.readLine(); if (cl == null) break; pl = posreader.readLine(); ChunkTree ct = new ChunkTree(cl); String ctsent = ct.sentence(); if (!chunkedSentences.containsKey(ctsent)) { chunkedSentences.put(ctsent, ct); } if (pl != null) { ChunkTree pt = new ChunkTree(pl); if (pl != null) posSentences.add(pt); } } } } int line = 0; int diff = 0; StringBuffer result = new StringBuffer(); for (ChunkTree postree : posSentences) { ChunkTree chunktree = chunkedSentences.get(postree.sentence()); if (chunktree == null) { System.err.println(""Hell fire.""); } else { String before = chunktree.sentence(); String beforet = chunktree.toString(); chunktree.merge(postree); if (!chunktree.sentence().equals(before)) { throw new RuntimeException(""Sentences differed : \n"" + before + ""\n"" + chunktree.sentence()); } if (!beforet.equals(chunktree.toString())) { System.out.println(); System.out.println(beforet); System.out.println(chunktree); System.out.println(postree); diff++; } result.append(chunktree.toString()); result.append('\n'); } line++; } System.out.println(""Of "" + line + "", "" + diff + "" changed.""); Files.write(Paths.get(resultspath + chunkfile.getName()), result.toString().getBytes(), StandardOpenOption.CREATE); } }","void main(String[]args)throws IOException{if(length){("""");exit();}File(directory,"""");if(false){(""""+toString()+"""");exit();}if(posTrainDir){(""""+toString()+"""");(1);try(BufferedReader chunkreader=(FileReader())){try(BufferedReader posreader=(FileReader())){while(true){readLine();if(null)pl();if((ctsent)){put();}if(null){}}}}StringBuffer();for(ChunkTree postree:posSentences){(sentence());if(chunktree){("""");(postree);if(chunktree){("""");}if((toString())){System();}(toString());('n');}line++;}(""""+"""");}}",2840,500,10,2340,82.68551236749117,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Pass in the directory containing both the chunker data and the pos data.""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'File', 'directory', '=', 'new', 'File', '(', 'args', '[', '0', ']', ')', ';', 'File', 'chunkerTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""chunker""', ')', ';', 'File', 'posTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""pos""', ')', ';', 'File', 'outputTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""revised""', ')', ';', 'if', '(', 'chunkerTrainDir', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""There is not directory named \\""""', '+', 'chunkerTrainDir', '.', 'toString', '(', ')', '+', '""\\"".""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'posTrainDir', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""There is no directory named \\""""', '+', 'posTrainDir', '.', 'toString', '(', ')', '+', '""\\"".""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'outputTrainDir', '.', 'exists', '(', ')', '==', 'true', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Output directory already exists \\""""', '+', 'outputTrainDir', '.', 'toString', '(', ')', '+', '""\\"", destroying""', ')', ';', 'final', 'File', '[', ']', 'files', '=', 'outputTrainDir', '.', 'listFiles', '(', ')', ';', 'for', '(', 'File', 'f', ':', 'files', ')', 'f', '.', 'delete', '(', ')', ';', 'outputTrainDir', '.', 'delete', '(', ')', ';', '}', 'outputTrainDir', '.', 'mkdir', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Created ""', '+', 'outputTrainDir', '.', 'toString', '(', ')', ')', ';', 'String', 'resultspath', '=', 'outputTrainDir', '.', 'toString', '(', ')', '+', 'File', '.', 'separator', ';', 'File', '[', ']', 'chunkerfiles', '=', 'chunkerTrainDir', '.', 'listFiles', '(', ')', ';', 'File', '[', ']', 'posFiles', '=', 'posTrainDir', '.', 'listFiles', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chunkerfiles', '.', 'length', ';', 'i', '++', ')', '{', 'File', 'chunkfile', '=', 'chunkerfiles', '[', 'i', ']', ';', 'File', 'posfile', '=', 'posFiles', '[', 'i', ']', ';', 'if', '(', '!', 'chunkfile', '.', 'getName', '(', ')', '.', 'equals', '(', 'posfile', '.', 'getName', '(', ')', ')', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Files names were not equal!""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '(', 'BufferedReader', 'chunkreader', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'chunkfile', ')', ')', ')', '{', 'try', '(', 'BufferedReader', 'posreader', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'posfile', ')', ')', ')', '{', 'String', 'pl', '=', 'null', ';', 'while', '(', 'true', ')', '{', 'String', 'cl', '=', 'chunkreader', '.', 'readLine', '(', ')', ';', 'if', '(', 'cl', '==', 'null', ')', 'break', ';', 'pl', '=', 'posreader', '.', 'readLine', '(', ')', ';', 'ChunkTree', 'ct', '=', 'new', 'ChunkTree', '(', 'cl', ')', ';', 'String', 'ctsent', '=', 'ct', '.', 'sentence', '(', ')', ';', 'if', '(', '!', 'chunkedSentences', '.', 'containsKey', '(', 'ctsent', ')', ')', '{', 'chunkedSentences', '.', 'put', '(', 'ctsent', ',', 'ct', ')', ';', '}', 'if', '(', 'pl', '!=', 'null', ')', '{', 'ChunkTree', 'pt', '=', 'new', 'ChunkTree', '(', 'pl', ')', ';', 'if', '(', 'pl', '!=', 'null', ')', 'posSentences', '.', 'add', '(', 'pt', ')', ';', '}', '}', '}', '}', 'int', 'line', '=', '0', ';', 'int', 'diff', '=', '0', ';', 'StringBuffer', 'result', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'ChunkTree', 'postree', ':', 'posSentences', ')', '{', 'ChunkTree', 'chunktree', '=', 'chunkedSentences', '.', 'get', '(', 'postree', '.', 'sentence', '(', ')', ')', ';', 'if', '(', 'chunktree', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Hell fire.""', ')', ';', '}', 'else', '{', 'String', 'before', '=', 'chunktree', '.', 'sentence', '(', ')', ';', 'String', 'beforet', '=', 'chunktree', '.', 'toString', '(', ')', ';', 'chunktree', '.', 'merge', '(', 'postree', ')', ';', 'if', '(', '!', 'chunktree', '.', 'sentence', '(', ')', '.', 'equals', '(', 'before', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Sentences differed : \\n""', '+', 'before', '+', '""\\n""', '+', 'chunktree', '.', 'sentence', '(', ')', ')', ';', '}', 'if', '(', '!', 'beforet', '.', 'equals', '(', 'chunktree', '.', 'toString', '(', ')', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'beforet', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'chunktree', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'postree', ')', ';', 'diff', '++', ';', '}', 'result', '.', 'append', '(', 'chunktree', '.', 'toString', '(', ')', ')', ';', 'result', '.', 'append', '(', ""'\\n'"", ')', ';', '}', 'line', '++', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Of ""', '+', 'line', '+', '"", ""', '+', 'diff', '+', '"" changed.""', ')', ';', 'Files', '.', 'write', '(', 'Paths', '.', 'get', '(', 'resultspath', '+', 'chunkfile', '.', 'getName', '(', ')', ')', ',', 'result', '.', 'toString', '(', ')', '.', 'getBytes', '(', ')', ',', 'StandardOpenOption', '.', 'CREATE', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'if', '(', 'length', ')', '{', '(', '""""', ')', ';', 'exit', '(', ')', ';', '}', 'File', '(', 'directory', ',', '""""', ')', ';', 'if', '(', 'false', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', 'exit', '(', ')', ';', '}', 'if', '(', 'posTrainDir', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', '(', '1', ')', ';', 'try', '(', 'BufferedReader', 'chunkreader', '=', '(', 'FileReader', '(', ')', ')', ')', '{', 'try', '(', 'BufferedReader', 'posreader', '=', '(', 'FileReader', '(', ')', ')', ')', '{', 'while', '(', 'true', ')', '{', 'readLine', '(', ')', ';', 'if', '(', 'null', ')', 'pl', '(', ')', ';', 'if', '(', '(', 'ctsent', ')', ')', '{', 'put', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '}', '}', '}', 'StringBuffer', '(', ')', ';', 'for', '(', 'ChunkTree', 'postree', ':', 'posSentences', ')', '{', '(', 'sentence', '(', ')', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', ')', ';', '(', 'postree', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', 'toString', '(', ')', ')', ')', '{', 'System', '(', ')', ';', '}', '(', 'toString', '(', ')', ')', ';', '(', ""'n'"", ')', ';', '}', 'line', '++', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}']",725,211,6,514,71.48817802503477
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_4.txt,0.9975,0.0201,"{'n_total': 3206, 'n_valid': 243, 'n_correct': 243}",742.772179,"public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(QuasiSuccinctEntityHash.class.getName(), ""Creates a MPHF from a file with the candidates info"", new Parameter[] { new FlaggedOption(""input"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'i', ""input"", ""Input "" + ""file""), new FlaggedOption(""entity2id"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'e', ""entities"", ""TAB-separated entity names and corresponding ids""), new FlaggedOption(""wikiThreshold"", JSAP.INTEGER_PARSER, ""0"", JSAP.NOT_REQUIRED, 'w', ""wikiThreshold"", ""Minimum number of anchors to store a candidate""), new FlaggedOption(""queryThreshold"", JSAP.INTEGER_PARSER, ""0"", JSAP.NOT_REQUIRED, 'q', ""queryThreshold"", ""Minimum number of clicks to store a candidate""), new FlaggedOption(""output"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'o', ""output"", ""Compressed version"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; final Iterable<StringAndCandidate> stringAndCandidates = FormatReader.stringAndCandidates(jsapResult.getString(""input""), jsapResult.getInt(""queryThreshold""), jsapResult.getInt(""wikiThreshold"")); final BufferedReader linesC = new BufferedReader(new FileReader(jsapResult.getString(""entity2id""))); int maxIndex = 0; String line; while ((line = linesC.readLine()) != null) { String[] parts = line.split(""\t""); int x = Integer.parseInt(parts[1]); if (x > maxIndex) maxIndex = x; } linesC.close(); final BufferedReader lines = new BufferedReader(new FileReader(jsapResult.getString(""entity2id""))); ObjectArrayList<String> entityNames = new ObjectArrayList<>(maxIndex); LOGGER.info(""Storing entity names""); while ((line = lines.readLine()) != null) { String[] parts = line.split(""\t""); try { final int index = Integer.parseInt(parts[1]); if (index >= entityNames.size()) entityNames.size(index + 1); final String oldValue = entityNames.set(index, parts[0]); if (oldValue != null) LOGGER.warn(""Duplicate index "" + index + "" for names \"""" + parts[0] + ""\"" and \"""" + oldValue + ""\""""); } catch (NumberFormatException e) { LOGGER.error(""Wrong line (skipping) --> "" + line); } } LOGGER.info(""done""); lines.close(); for (int i = 0; i < entityNames.size(); i++) if (entityNames.get(i) == null) { entityNames.set(i, """"); } HashMap<Integer, DataOutputStream> valuesArray = new HashMap<Integer, DataOutputStream>(); HashMap<Integer, LongArrayList> pointersArray = new HashMap<Integer, LongArrayList>(); HashMap<Integer, File> tempFiles = new HashMap<Integer, File>(); LongArrayList cutPoints = new LongArrayList(); File tempFile = File.createTempFile(""values"", ""tempfile""); tempFile.deleteOnExit(); int batchNumber = 0; tempFiles.put(batchNumber, tempFile); DataOutputStream values = new DataOutputStream(new FastBufferedOutputStream(new FileOutputStream(tempFile))); cutPoints.add(0); valuesArray.put(batchNumber, values); pointersArray.put(batchNumber, cutPoints); long valuesSize = 0; final IntBigArrayBigList entityValues = new IntBigArrayBigList(); entityValues.size(entityNames.size() * PER_ENTITY_FEATURES); ProgressLogger pl = new ProgressLogger(LOGGER); pl.itemsName = ""aliases""; int numberOfCandidates = 0; for (StringAndCandidate sc : stringAndCandidates) { pl.lightUpdate(); if (numberOfCandidates++ > ALIASESPERBATCH - 1) { numberOfCandidates = 1; batchNumber++; tempFile = File.createTempFile(""values"", ""tempfile""); tempFile.deleteOnExit(); values.close(); values = new DataOutputStream(new FastBufferedOutputStream(new FileOutputStream(tempFile))); cutPoints = new LongArrayList(); cutPoints.add(0); valuesArray.put(batchNumber, values); pointersArray.put(batchNumber, cutPoints); tempFiles.put(batchNumber, tempFile); valuesSize = 0; } CandidatesInfo ci = sc.candidatesInfo; values.writeInt((int) ci.QAF); values.writeInt((int) ci.QAT); values.writeInt((int) ci.QAC); values.writeInt((int) ci.LAF); values.writeInt((int) ci.LAT); valuesSize += PER_CANDIDATE_FEATURES; for (Entity e : ci.entities) { values.writeInt(e.id); values.writeInt((int) e.LAET); values.writeInt((int) e.QAEF); valuesSize += PER_ENTITY_CANDIDATE_FEATURES; entityValues.set(e.id * PER_ENTITY_FEATURES, (int) e.QEF); entityValues.set(e.id * PER_ENTITY_FEATURES + 1, (int) e.LET); entityValues.set(e.id * PER_ENTITY_FEATURES + 2, e.type); } cutPoints.add(valuesSize); } values.close(); pl.done(); Iterable<CharSequence> surfaceForms = new Iterable<CharSequence>() { @Override public Iterator<CharSequence> iterator() { return new AbstractObjectIterator<CharSequence>() { Iterator<StringAndCandidate> i = stringAndCandidates.iterator(); @Override public boolean hasNext() { return i.hasNext(); } @Override public String next() { return i.next().surfaceForm; } }; } }; ShiftAddXorSignedStringMap surfaceForm2Position = new ShiftAddXorSignedStringMap(surfaceForms.iterator(), new MWHCFunction.Builder<CharSequence>().keys(surfaceForms).transform(TransformationStrategies.utf16()).build()); EliasFanoLongBigList[] valuesA = new EliasFanoLongBigList[tempFiles.size()]; EliasFanoMonotoneLongBigList[] cutPointsArray = new EliasFanoMonotoneLongBigList[tempFiles.size()]; for (int i = 0; i < tempFiles.size(); i++) { final File xx = tempFiles.get(i); LongIterable lI = new LongIterable() { public LongIterator iterator() { return LongIterators.wrap(BinIO.asIntIterable(xx).iterator()); } }; long lowerBound = Long.MAX_VALUE; LongIterator iterator = lI.iterator(); while (iterator.hasNext()) lowerBound = Math.min(lowerBound, iterator.nextLong()); cutPointsArray[i] = new EliasFanoMonotoneLongBigList(pointersArray.get(i)); valuesA[i] = new EliasFanoLongBigList(lI.iterator(), lowerBound, true); } LOGGER.info(""#Batches= "" + tempFiles.size()); QuasiSuccinctEntityHash quasiSuccinctEntityHash = new QuasiSuccinctEntityHash(surfaceForm2Position, cutPointsArray, valuesA, new EliasFanoLongBigList(entityValues), new FrontCodedStringList(entityNames, 8, true)); LOGGER.info(""Creating stats""); quasiSuccinctEntityHash.stats = CountAndRecordStats.createStats(quasiSuccinctEntityHash); BinIO.storeObject(quasiSuccinctEntityHash, jsapResult.getString(""output"")); LOGGER.info(""... done""); assert checkMap(jsapResult, stringAndCandidates); }","void main(String[]args)throws Exception{jsap(QuasiSuccinctEntityHash,"""",new Parameter[]{FlaggedOption("""",""""),FlaggedOption("""",'q',"""")});jsapResult((""""),(""""),(""""));((("""")));while((readLine())!=null){(parts[1]);(x);}surfaceForms=new Iterable<>(){<CharSequence>iterator(){new AbstractObjectIterator<>(){Iterator<StringAndCandidate>i();hasNext(){}};}};ShiftAddXorSignedStringMap()[size()];EliasFanoMonotoneLongBigList[size()];for(;;i++){new LongIterable(){{(iterator());}};((i));valuesA[i]=(lI);}("""");(quasiSuccinctEntityHash);(getString());("""");checkMap();}",6167,554,10,5613,91.1645281793081,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'QuasiSuccinctEntityHash', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a MPHF from a file with the candidates info""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'FlaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'i'"", ',', '""input""', ',', '""Input ""', '+', '""file""', ')', ',', 'new', 'FlaggedOption', '(', '""entity2id""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'e'"", ',', '""entities""', ',', '""TAB-separated entity names and corresponding ids""', ')', ',', 'new', 'FlaggedOption', '(', '""wikiThreshold""', ',', 'JSAP', '.', 'INTEGER_PARSER', ',', '""0""', ',', 'JSAP', '.', 'NOT_REQUIRED', ',', ""'w'"", ',', '""wikiThreshold""', ',', '""Minimum number of anchors to store a candidate""', ')', ',', 'new', 'FlaggedOption', '(', '""queryThreshold""', ',', 'JSAP', '.', 'INTEGER_PARSER', ',', '""0""', ',', 'JSAP', '.', 'NOT_REQUIRED', ',', ""'q'"", ',', '""queryThreshold""', ',', '""Minimum number of clicks to store a candidate""', ')', ',', 'new', 'FlaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'o'"", ',', '""output""', ',', '""Compressed version""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'final', 'Iterable', '<', 'StringAndCandidate', '>', 'stringAndCandidates', '=', 'FormatReader', '.', 'stringAndCandidates', '(', 'jsapResult', '.', 'getString', '(', '""input""', ')', ',', 'jsapResult', '.', 'getInt', '(', '""queryThreshold""', ')', ',', 'jsapResult', '.', 'getInt', '(', '""wikiThreshold""', ')', ')', ';', 'final', 'BufferedReader', 'linesC', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'jsapResult', '.', 'getString', '(', '""entity2id""', ')', ')', ')', ';', 'int', 'maxIndex', '=', '0', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'linesC', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'parts', '=', 'line', '.', 'split', '(', '""\\t""', ')', ';', 'int', 'x', '=', 'Integer', '.', 'parseInt', '(', 'parts', '[', '1', ']', ')', ';', 'if', '(', 'x', '>', 'maxIndex', ')', 'maxIndex', '=', 'x', ';', '}', 'linesC', '.', 'close', '(', ')', ';', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'jsapResult', '.', 'getString', '(', '""entity2id""', ')', ')', ')', ';', 'ObjectArrayList', '<', 'String', '>', 'entityNames', '=', 'new', 'ObjectArrayList', '<', '>', '(', 'maxIndex', ')', ';', 'LOGGER', '.', 'info', '(', '""Storing entity names""', ')', ';', 'while', '(', '(', 'line', '=', 'lines', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'parts', '=', 'line', '.', 'split', '(', '""\\t""', ')', ';', 'try', '{', 'final', 'int', 'index', '=', 'Integer', '.', 'parseInt', '(', 'parts', '[', '1', ']', ')', ';', 'if', '(', 'index', '>=', 'entityNames', '.', 'size', '(', ')', ')', 'entityNames', '.', 'size', '(', 'index', '+', '1', ')', ';', 'final', 'String', 'oldValue', '=', 'entityNames', '.', 'set', '(', 'index', ',', 'parts', '[', '0', ']', ')', ';', 'if', '(', 'oldValue', '!=', 'null', ')', 'LOGGER', '.', 'warn', '(', '""Duplicate index ""', '+', 'index', '+', '"" for names \\""""', '+', 'parts', '[', '0', ']', '+', '""\\"" and \\""""', '+', 'oldValue', '+', '""\\""""', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'LOGGER', '.', 'error', '(', '""Wrong line (skipping) --> ""', '+', 'line', ')', ';', '}', '}', 'LOGGER', '.', 'info', '(', '""done""', ')', ';', 'lines', '.', 'close', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'entityNames', '.', 'size', '(', ')', ';', 'i', '++', ')', 'if', '(', 'entityNames', '.', 'get', '(', 'i', ')', '==', 'null', ')', '{', 'entityNames', '.', 'set', '(', 'i', ',', '""""', ')', ';', '}', 'HashMap', '<', 'Integer', ',', 'DataOutputStream', '>', 'valuesArray', '=', 'new', 'HashMap', '<', 'Integer', ',', 'DataOutputStream', '>', '(', ')', ';', 'HashMap', '<', 'Integer', ',', 'LongArrayList', '>', 'pointersArray', '=', 'new', 'HashMap', '<', 'Integer', ',', 'LongArrayList', '>', '(', ')', ';', 'HashMap', '<', 'Integer', ',', 'File', '>', 'tempFiles', '=', 'new', 'HashMap', '<', 'Integer', ',', 'File', '>', '(', ')', ';', 'LongArrayList', 'cutPoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'File', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '""values""', ',', '""tempfile""', ')', ';', 'tempFile', '.', 'deleteOnExit', '(', ')', ';', 'int', 'batchNumber', '=', '0', ';', 'tempFiles', '.', 'put', '(', 'batchNumber', ',', 'tempFile', ')', ';', 'DataOutputStream', 'values', '=', 'new', 'DataOutputStream', '(', 'new', 'FastBufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempFile', ')', ')', ')', ';', 'cutPoints', '.', 'add', '(', '0', ')', ';', 'valuesArray', '.', 'put', '(', 'batchNumber', ',', 'values', ')', ';', 'pointersArray', '.', 'put', '(', 'batchNumber', ',', 'cutPoints', ')', ';', 'long', 'valuesSize', '=', '0', ';', 'final', 'IntBigArrayBigList', 'entityValues', '=', 'new', 'IntBigArrayBigList', '(', ')', ';', 'entityValues', '.', 'size', '(', 'entityNames', '.', 'size', '(', ')', '*', 'PER_ENTITY_FEATURES', ')', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'LOGGER', ')', ';', 'pl', '.', 'itemsName', '=', '""aliases""', ';', 'int', 'numberOfCandidates', '=', '0', ';', 'for', '(', 'StringAndCandidate', 'sc', ':', 'stringAndCandidates', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'if', '(', 'numberOfCandidates', '++', '>', 'ALIASESPERBATCH', '-', '1', ')', '{', 'numberOfCandidates', '=', '1', ';', 'batchNumber', '++', ';', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '""values""', ',', '""tempfile""', ')', ';', 'tempFile', '.', 'deleteOnExit', '(', ')', ';', 'values', '.', 'close', '(', ')', ';', 'values', '=', 'new', 'DataOutputStream', '(', 'new', 'FastBufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempFile', ')', ')', ')', ';', 'cutPoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'cutPoints', '.', 'add', '(', '0', ')', ';', 'valuesArray', '.', 'put', '(', 'batchNumber', ',', 'values', ')', ';', 'pointersArray', '.', 'put', '(', 'batchNumber', ',', 'cutPoints', ')', ';', 'tempFiles', '.', 'put', '(', 'batchNumber', ',', 'tempFile', ')', ';', 'valuesSize', '=', '0', ';', '}', 'CandidatesInfo', 'ci', '=', 'sc', '.', 'candidatesInfo', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAF', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAT', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAC', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'LAF', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'LAT', ')', ';', 'valuesSize', '+=', 'PER_CANDIDATE_FEATURES', ';', 'for', '(', 'Entity', 'e', ':', 'ci', '.', 'entities', ')', '{', 'values', '.', 'writeInt', '(', 'e', '.', 'id', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'e', '.', 'LAET', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'e', '.', 'QAEF', ')', ';', 'valuesSize', '+=', 'PER_ENTITY_CANDIDATE_FEATURES', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', ',', '(', 'int', ')', 'e', '.', 'QEF', ')', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', '+', '1', ',', '(', 'int', ')', 'e', '.', 'LET', ')', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', '+', '2', ',', 'e', '.', 'type', ')', ';', '}', 'cutPoints', '.', 'add', '(', 'valuesSize', ')', ';', '}', 'values', '.', 'close', '(', ')', ';', 'pl', '.', 'done', '(', ')', ';', 'Iterable', '<', 'CharSequence', '>', 'surfaceForms', '=', 'new', 'Iterable', '<', 'CharSequence', '>', '(', ')', '{', '@', 'Override', 'public', 'Iterator', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'return', 'new', 'AbstractObjectIterator', '<', 'CharSequence', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '=', 'stringAndCandidates', '.', 'iterator', '(', ')', ';', '@', 'Override', 'public', 'boolean', 'hasNext', '(', ')', '{', 'return', 'i', '.', 'hasNext', '(', ')', ';', '}', '@', 'Override', 'public', 'String', 'next', '(', ')', '{', 'return', 'i', '.', 'next', '(', ')', '.', 'surfaceForm', ';', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', 'surfaceForm2Position', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'surfaceForms', '.', 'iterator', '(', ')', ',', 'new', 'MWHCFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'surfaceForms', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'EliasFanoLongBigList', '[', ']', 'valuesA', '=', 'new', 'EliasFanoLongBigList', '[', 'tempFiles', '.', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', ']', 'cutPointsArray', '=', 'new', 'EliasFanoMonotoneLongBigList', '[', 'tempFiles', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'tempFiles', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'final', 'File', 'xx', '=', 'tempFiles', '.', 'get', '(', 'i', ')', ';', 'LongIterable', 'lI', '=', 'new', 'LongIterable', '(', ')', '{', 'public', 'LongIterator', 'iterator', '(', ')', '{', 'return', 'LongIterators', '.', 'wrap', '(', 'BinIO', '.', 'asIntIterable', '(', 'xx', ')', '.', 'iterator', '(', ')', ')', ';', '}', '}', ';', 'long', 'lowerBound', '=', 'Long', '.', 'MAX_VALUE', ';', 'LongIterator', 'iterator', '=', 'lI', '.', 'iterator', '(', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', 'lowerBound', '=', 'Math', '.', 'min', '(', 'lowerBound', ',', 'iterator', '.', 'nextLong', '(', ')', ')', ';', 'cutPointsArray', '[', 'i', ']', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'pointersArray', '.', 'get', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', 'new', 'EliasFanoLongBigList', '(', 'lI', '.', 'iterator', '(', ')', ',', 'lowerBound', ',', 'true', ')', ';', '}', 'LOGGER', '.', 'info', '(', '""#Batches= ""', '+', 'tempFiles', '.', 'size', '(', ')', ')', ';', 'QuasiSuccinctEntityHash', 'quasiSuccinctEntityHash', '=', 'new', 'QuasiSuccinctEntityHash', '(', 'surfaceForm2Position', ',', 'cutPointsArray', ',', 'valuesA', ',', 'new', 'EliasFanoLongBigList', '(', 'entityValues', ')', ',', 'new', 'FrontCodedStringList', '(', 'entityNames', ',', '8', ',', 'true', ')', ')', ';', 'LOGGER', '.', 'info', '(', '""Creating stats""', ')', ';', 'quasiSuccinctEntityHash', '.', 'stats', '=', 'CountAndRecordStats', '.', 'createStats', '(', 'quasiSuccinctEntityHash', ')', ';', 'BinIO', '.', 'storeObject', '(', 'quasiSuccinctEntityHash', ',', 'jsapResult', '.', 'getString', '(', '""output""', ')', ')', ';', 'LOGGER', '.', 'info', '(', '""... done""', ')', ';', 'assert', 'checkMap', '(', 'jsapResult', ',', 'stringAndCandidates', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'jsap', '(', 'QuasiSuccinctEntityHash', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'FlaggedOption', '(', '""""', ',', '""""', ')', ',', 'FlaggedOption', '(', '""""', ',', ""'q'"", ',', '""""', ')', '}', ')', ';', 'jsapResult', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', '(', 'parts', '[', '1', ']', ')', ';', '(', 'x', ')', ';', '}', 'surfaceForms', '=', 'new', 'Iterable', '<', '>', '(', ')', '{', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'new', 'AbstractObjectIterator', '<', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '(', ')', ';', 'hasNext', '(', ')', '{', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', '(', ')', '[', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', 'size', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'new', 'LongIterable', '(', ')', '{', '{', '(', 'iterator', '(', ')', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', '(', 'lI', ')', ';', '}', '(', '""""', ')', ';', '(', 'quasiSuccinctEntityHash', ')', ';', '(', 'getString', '(', ')', ')', ';', '(', '""""', ')', ';', 'checkMap', '(', ')', ';', '}']",1386,205,6,1181,85.57971014492753
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,execute_5.txt,0.9917,0.0095,"{'n_total': 7085, 'n_valid': 611, 'n_correct': 332}",1946.214122,"public void execute(JobExecutionContext arg0) throws JobExecutionException { Connection clConnection = null; Statement statement = null; ResultSet unreadMessageCountRS = null; ResultSet allTopicsAndForumsRS = null; ResultSet synotpicSitesRS = null; PreparedStatement unreadMessagesbySitePS = null; PreparedStatement findSitesbySitePS = null; String siteFilter = ServerConfigurationService.getString(""msgcntr.synoptic.updateMessageCountsSiteFilter""); boolean filterSites = siteFilter != null && !"""".equals(siteFilter); int count = 0; log.info(""UpdateSynopticMessageCounts job launched: "" + new Date()); try { clConnection = sqlService.borrowConnection(); statement = clConnection.createStatement(); if (filterSites) { unreadMessagesbySitePS = clConnection.prepareStatement(UNREAD_MESSAGES_BY_SITE_QUERY); unreadMessagesbySitePS.setString(1, siteFilter); unreadMessageCountRS = unreadMessagesbySitePS.executeQuery(); } else { unreadMessageCountRS = statement.executeQuery(UNREAD_MESSAGES_QUERY); } HashMap<String, HashMap<String, Integer>> siteAndUserMessageCountHM = getSiteAndUserMessageCountHM(unreadMessageCountRS); allTopicsAndForumsRS = statement.executeQuery(TOPICS_AND_FORUMS_QUERY); HashMap<String, HashMap<Long, DecoratedForumInfo>> allTopicsAndForumsHM = getAllTopicsAndForumsHM(allTopicsAndForumsRS); String siteId = """"; String siteTitle = """"; int BINARY_FLAGS; if (runOracleSQL) { if (filterSites) { findSitesbySitePS = clConnection.prepareStatement(FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_ORACLE); findSitesbySitePS.setString(1, siteFilter); synotpicSitesRS = findSitesbySitePS.executeQuery(); } else { synotpicSitesRS = statement.executeQuery(FIND_ALL_SYNOPTIC_SITES_QUERY_ORACLE); } } else { if (filterSites) { findSitesbySitePS = clConnection.prepareStatement(FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_GENERIC); findSitesbySitePS.setString(1, siteFilter); synotpicSitesRS = findSitesbySitePS.executeQuery(); } else { synotpicSitesRS = statement.executeQuery(FIND_ALL_SYNOPTIC_SITES_QUERY_GENERIC); } } while (synotpicSitesRS.next()) { boolean isMessageForumsPageInSite = false; boolean isMessagesPageInSite = false; boolean isForumsPageInSite = false; siteId = synotpicSitesRS.getString(""SITE_ID""); siteTitle = synotpicSitesRS.getString(""TITLE""); if (runOracleSQL) { BINARY_FLAGS = synotpicSitesRS.getInt(""BINARY_FLAGS""); if (BINARY_FLAGS % 10 >= 1) isForumsPageInSite = true; if (BINARY_FLAGS % 100 >= 10) isMessagesPageInSite = true; if (BINARY_FLAGS % 1000 >= 100) isMessageForumsPageInSite = true; } updateSynopticToolInfoForAllUsers(siteId, siteTitle, clConnection, isMessageForumsPageInSite, isMessagesPageInSite, isForumsPageInSite, siteAndUserMessageCountHM, allTopicsAndForumsHM); count++; if (count % 1000 == 0) { log.info(""UpdateSynopticMessageCounts Progress: "" + count + "" Sites updated""); } } } catch (Exception e1) { log.error(e1.getMessage(), e1); } finally { try { if (unreadMessageCountRS != null) unreadMessageCountRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (allTopicsAndForumsRS != null) allTopicsAndForumsRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (synotpicSitesRS != null) synotpicSitesRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (statement != null) statement.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (unreadMessagesbySitePS != null) unreadMessagesbySitePS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (findSitesbySitePS != null) findSitesbySitePS.close(); } catch (Exception e) { log.warn(e.getMessage()); } sqlService.returnConnection(clConnection); } log.info(""UpdateSynopticMessageCounts job finished: "" + new Date()); }","void execute(JobExecutionContext arg){filterSites=null&(""""+Date);try{if(filterSites){unreadMessagesbySitePS();}{(UNREAD);}HashMap<String<Integer>>siteAndUserMessageCountHM=(QUERY);HashMap<HashMap<DecoratedForumInfo>>allTopicsAndForumsHM=(allTopicsAndForumsRS);String="""";if(runOracleSQL){if(filterSites){(ORACLE);synotpicSitesRS();}}{if(filterSites){(GENERIC);}}while(synotpicSitesRS){("""");if(runOracleSQL){("""");if(1)if(0)(_);}updateSynopticToolInfoForAllUsers();if(0){(""""+"""");}}}catch(Exception e){log();try{if(unreadMessageCountRS)close();}catch(Exception e){}try{(null);}catch(Exception e) {(synotpicSitesRS); }catch(Exception e){(e);}try{ (null);}catch(Exception e) {(getMessage());(findSitesbySitePS);}catch(Exception e){warn();}}(""""+Date);}",3698,745,13,2953,80.13568521031208,"['public', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', 'throws', 'JobExecutionException', '{', 'Connection', 'clConnection', '=', 'null', ';', 'Statement', 'statement', '=', 'null', ';', 'ResultSet', 'unreadMessageCountRS', '=', 'null', ';', 'ResultSet', 'allTopicsAndForumsRS', '=', 'null', ';', 'ResultSet', 'synotpicSitesRS', '=', 'null', ';', 'PreparedStatement', 'unreadMessagesbySitePS', '=', 'null', ';', 'PreparedStatement', 'findSitesbySitePS', '=', 'null', ';', 'String', 'siteFilter', '=', 'ServerConfigurationService', '.', 'getString', '(', '""msgcntr.synoptic.updateMessageCountsSiteFilter""', ')', ';', 'boolean', 'filterSites', '=', 'siteFilter', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'siteFilter', ')', ';', 'int', 'count', '=', '0', ';', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts job launched: ""', '+', 'new', 'Date', '(', ')', ')', ';', 'try', '{', 'clConnection', '=', 'sqlService', '.', 'borrowConnection', '(', ')', ';', 'statement', '=', 'clConnection', '.', 'createStatement', '(', ')', ';', 'if', '(', 'filterSites', ')', '{', 'unreadMessagesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'UNREAD_MESSAGES_BY_SITE_QUERY', ')', ';', 'unreadMessagesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'unreadMessageCountRS', '=', 'unreadMessagesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'unreadMessageCountRS', '=', 'statement', '.', 'executeQuery', '(', 'UNREAD_MESSAGES_QUERY', ')', ';', '}', 'HashMap', '<', 'String', ',', 'HashMap', '<', 'String', ',', 'Integer', '>', '>', 'siteAndUserMessageCountHM', '=', 'getSiteAndUserMessageCountHM', '(', 'unreadMessageCountRS', ')', ';', 'allTopicsAndForumsRS', '=', 'statement', '.', 'executeQuery', '(', 'TOPICS_AND_FORUMS_QUERY', ')', ';', 'HashMap', '<', 'String', ',', 'HashMap', '<', 'Long', ',', 'DecoratedForumInfo', '>', '>', 'allTopicsAndForumsHM', '=', 'getAllTopicsAndForumsHM', '(', 'allTopicsAndForumsRS', ')', ';', 'String', 'siteId', '=', '""""', ';', 'String', 'siteTitle', '=', '""""', ';', 'int', 'BINARY_FLAGS', ';', 'if', '(', 'runOracleSQL', ')', '{', 'if', '(', 'filterSites', ')', '{', 'findSitesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_ORACLE', ')', ';', 'findSitesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'synotpicSitesRS', '=', 'findSitesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'synotpicSitesRS', '=', 'statement', '.', 'executeQuery', '(', 'FIND_ALL_SYNOPTIC_SITES_QUERY_ORACLE', ')', ';', '}', '}', 'else', '{', 'if', '(', 'filterSites', ')', '{', 'findSitesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_GENERIC', ')', ';', 'findSitesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'synotpicSitesRS', '=', 'findSitesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'synotpicSitesRS', '=', 'statement', '.', 'executeQuery', '(', 'FIND_ALL_SYNOPTIC_SITES_QUERY_GENERIC', ')', ';', '}', '}', 'while', '(', 'synotpicSitesRS', '.', 'next', '(', ')', ')', '{', 'boolean', 'isMessageForumsPageInSite', '=', 'false', ';', 'boolean', 'isMessagesPageInSite', '=', 'false', ';', 'boolean', 'isForumsPageInSite', '=', 'false', ';', 'siteId', '=', 'synotpicSitesRS', '.', 'getString', '(', '""SITE_ID""', ')', ';', 'siteTitle', '=', 'synotpicSitesRS', '.', 'getString', '(', '""TITLE""', ')', ';', 'if', '(', 'runOracleSQL', ')', '{', 'BINARY_FLAGS', '=', 'synotpicSitesRS', '.', 'getInt', '(', '""BINARY_FLAGS""', ')', ';', 'if', '(', 'BINARY_FLAGS', '%', '10', '>=', '1', ')', 'isForumsPageInSite', '=', 'true', ';', 'if', '(', 'BINARY_FLAGS', '%', '100', '>=', '10', ')', 'isMessagesPageInSite', '=', 'true', ';', 'if', '(', 'BINARY_FLAGS', '%', '1000', '>=', '100', ')', 'isMessageForumsPageInSite', '=', 'true', ';', '}', 'updateSynopticToolInfoForAllUsers', '(', 'siteId', ',', 'siteTitle', ',', 'clConnection', ',', 'isMessageForumsPageInSite', ',', 'isMessagesPageInSite', ',', 'isForumsPageInSite', ',', 'siteAndUserMessageCountHM', ',', 'allTopicsAndForumsHM', ')', ';', 'count', '++', ';', 'if', '(', 'count', '%', '1000', '==', '0', ')', '{', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts Progress: ""', '+', 'count', '+', '"" Sites updated""', ')', ';', '}', '}', '}', 'catch', '(', 'Exception', 'e1', ')', '{', 'log', '.', 'error', '(', 'e1', '.', 'getMessage', '(', ')', ',', 'e1', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'unreadMessageCountRS', '!=', 'null', ')', 'unreadMessageCountRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'allTopicsAndForumsRS', '!=', 'null', ')', 'allTopicsAndForumsRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'synotpicSitesRS', '!=', 'null', ')', 'synotpicSitesRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'statement', '!=', 'null', ')', 'statement', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'unreadMessagesbySitePS', '!=', 'null', ')', 'unreadMessagesbySitePS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'findSitesbySitePS', '!=', 'null', ')', 'findSitesbySitePS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'sqlService', '.', 'returnConnection', '(', 'clConnection', ')', ';', '}', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts job finished: ""', '+', 'new', 'Date', '(', ')', ')', ';', '}']","['void', 'execute', '(', 'JobExecutionContext', 'arg', ')', '{', 'filterSites', '=', 'null', '&', '(', '""""', '+', 'Date', ')', ';', 'try', '{', 'if', '(', 'filterSites', ')', '{', 'unreadMessagesbySitePS', '(', ')', ';', '}', '{', '(', 'UNREAD', ')', ';', '}', 'HashMap', '<', 'String', '<', 'Integer', '>', '>', 'siteAndUserMessageCountHM', '=', '(', 'QUERY', ')', ';', 'HashMap', '<', 'HashMap', '<', 'DecoratedForumInfo', '>', '>', 'allTopicsAndForumsHM', '=', '(', 'allTopicsAndForumsRS', ')', ';', 'String', '=', '""""', ';', 'if', '(', 'runOracleSQL', ')', '{', 'if', '(', 'filterSites', ')', '{', '(', 'ORACLE', ')', ';', 'synotpicSitesRS', '(', ')', ';', '}', '}', '{', 'if', '(', 'filterSites', ')', '{', '(', 'GENERIC', ')', ';', '}', '}', 'while', '(', 'synotpicSitesRS', ')', '{', '(', '""""', ')', ';', 'if', '(', 'runOracleSQL', ')', '{', '(', '""""', ')', ';', 'if', '(', '1', ')', 'if', '(', '0', ')', '(', '_', ')', ';', '}', 'updateSynopticToolInfoForAllUsers', '(', ')', ';', 'if', '(', '0', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '(', ')', ';', 'try', '{', 'if', '(', 'unreadMessageCountRS', ')', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'try', '{', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'synotpicSitesRS', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', '}', 'try', '{', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'getMessage', '(', ')', ')', ';', '(', 'findSitesbySitePS', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'warn', '(', ')', ';', '}', '}', '(', '""""', '+', 'Date', ')', ';', '}']",683,246,6,437,64.54948301329394
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_1.txt,0.9787,0.0232,"{'n_total': 6232, 'n_valid': 448, 'n_correct': 440}",1397.337012,"protected void run() throws IOException { if (!isReady()) { throw new IOException(this.getClass().getName() + "": not ready to run.""); } if (debug >= 1) { log(""runCGI(envp=["" + env + ""], command="" + command + "")""); } if ((command.indexOf(File.separator + ""."" + File.separator) >= 0) || (command.indexOf(File.separator + "".."") >= 0) || (command.indexOf("".."" + File.separator) >= 0)) { throw new IOException(this.getClass().getName() + ""Illegal Character in CGI command "" + ""path ('.' or '..') detected. Not "" + ""running CGI ["" + command + ""].""); } Runtime rt = null; BufferedReader cgiHeaderReader = null; InputStream cgiOutput = null; BufferedReader commandsStdErr = null; Thread errReaderThread = null; BufferedOutputStream commandsStdIn = null; Process proc = null; int bufRead = -1; List<String> cmdAndArgs = new ArrayList<>(); if (cgiExecutable.length() != 0) { cmdAndArgs.add(cgiExecutable); } if (cgiExecutableArgs != null) { cmdAndArgs.addAll(cgiExecutableArgs); } cmdAndArgs.add(command); cmdAndArgs.addAll(params); try { rt = Runtime.getRuntime(); proc = rt.exec(cmdAndArgs.toArray(new String[cmdAndArgs.size()]), hashToStringArray(env), wd); String sContentLength = env.get(""CONTENT_LENGTH""); if (!"""".equals(sContentLength)) { commandsStdIn = new BufferedOutputStream(proc.getOutputStream()); IOTools.flow(stdin, commandsStdIn); commandsStdIn.flush(); commandsStdIn.close(); } boolean isRunning = true; commandsStdErr = new BufferedReader(new InputStreamReader(proc.getErrorStream())); final BufferedReader stdErrRdr = commandsStdErr; errReaderThread = new Thread() { @Override public void run() { sendToLog(stdErrRdr); } }; errReaderThread.start(); InputStream cgiHeaderStream = new HTTPHeaderInputStream(proc.getInputStream()); cgiHeaderReader = new BufferedReader(new InputStreamReader(cgiHeaderStream)); while (isRunning) { try { String line = null; while (((line = cgiHeaderReader.readLine()) != null) && !("""".equals(line))) { if (debug >= 2) { log(""runCGI: addHeader(\"""" + line + ""\"")""); } if (line.startsWith(""HTTP"")) { response.setStatus(getSCFromHttpStatusLine(line)); } else if (line.indexOf("":"") >= 0) { String header = line.substring(0, line.indexOf("":"")).trim(); String value = line.substring(line.indexOf("":"") + 1).trim(); if (header.equalsIgnoreCase(""status"")) { response.setStatus(getSCFromCGIStatusHeader(value)); } else { response.addHeader(header, value); } } else { log(""runCGI: bad header line \"""" + line + ""\""""); } } byte[] bBuf = new byte[2048]; OutputStream out = response.getOutputStream(); cgiOutput = proc.getInputStream(); try { while ((bufRead = cgiOutput.read(bBuf)) != -1) { if (debug >= 4) { log(""runCGI: output "" + bufRead + "" bytes of data""); } out.write(bBuf, 0, bufRead); } } finally { if (bufRead != -1) { while ((bufRead = cgiOutput.read(bBuf)) != -1) { } } } proc.exitValue(); isRunning = false; } catch (IllegalThreadStateException e) { try { Thread.sleep(500); } catch (InterruptedException ignored) { } } } } catch (IOException e) { log(""Caught exception "" + e); throw e; } finally { if (cgiHeaderReader != null) { try { cgiHeaderReader.close(); } catch (IOException ioe) { log(""Exception closing header reader "" + ioe); } } if (cgiOutput != null) { try { cgiOutput.close(); } catch (IOException ioe) { log(""Exception closing output stream "" + ioe); } } if (errReaderThread != null) { try { errReaderThread.join(stderrTimeout); } catch (InterruptedException e) { log(""Interupted waiting for stderr reader thread""); } } if (debug > 4) { log(""Running finally block""); } if (proc != null) { proc.destroy(); proc = null; } } }","void run()throws IOException{if(isReady()){(getClass().getName()+"""");}if((0)|(("""")>0)|((""""+separator)>0)){(getName()+""""+"""");}if(0){cmdAndArgs();}cmdAndArgs();try{rt((String[cmdAndArgs()]),wd);("""");if("""".equals){(proc());}((proc()));errReaderThread=new Thread(){run(){}};((cgiHeaderStream));while(isRunning){try{while(((line())!=null)&("""".equals)){if(2){(""""+"""");}if(("""")){(getSCFromHttpStatusLine);}if(("""")>0){line(0,("""")).substring(indexOf()+1);if(("""")){((value));(value);}(""""+"""");}}try{while(((bBuf))){if(4){("""");}write();}}finally{if(1){while(((bBuf))){}}}}catch(IllegalThreadStateException e){try{(0);}catch(InterruptedException ignored){}}}}catch(IOException e){(""""+e);}{if(cgiHeaderReader){try{close();}catch(IOException ioe){(""""+ioe);}}if(null){try{}catch(IOException ioe){}catch(InterruptedException e){("""");}}if(4){("""");}if(null){}}}",3573,841,9,2732,76.65544332210999,"['protected', 'void', 'run', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'isReady', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '"": not ready to run.""', ')', ';', '}', 'if', '(', 'debug', '>=', '1', ')', '{', 'log', '(', '""runCGI(envp=[""', '+', 'env', '+', '""], command=""', '+', 'command', '+', '"")""', ')', ';', '}', 'if', '(', '(', 'command', '.', 'indexOf', '(', 'File', '.', 'separator', '+', '"".""', '+', 'File', '.', 'separator', ')', '>=', '0', ')', '||', '(', 'command', '.', 'indexOf', '(', 'File', '.', 'separator', '+', '""..""', ')', '>=', '0', ')', '||', '(', 'command', '.', 'indexOf', '(', '""..""', '+', 'File', '.', 'separator', ')', '>=', '0', ')', ')', '{', 'throw', 'new', 'IOException', '(', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""Illegal Character in CGI command ""', '+', '""path (\'.\' or \'..\') detected. Not ""', '+', '""running CGI [""', '+', 'command', '+', '""].""', ')', ';', '}', 'Runtime', 'rt', '=', 'null', ';', 'BufferedReader', 'cgiHeaderReader', '=', 'null', ';', 'InputStream', 'cgiOutput', '=', 'null', ';', 'BufferedReader', 'commandsStdErr', '=', 'null', ';', 'Thread', 'errReaderThread', '=', 'null', ';', 'BufferedOutputStream', 'commandsStdIn', '=', 'null', ';', 'Process', 'proc', '=', 'null', ';', 'int', 'bufRead', '=', '-', '1', ';', 'List', '<', 'String', '>', 'cmdAndArgs', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'if', '(', 'cgiExecutable', '.', 'length', '(', ')', '!=', '0', ')', '{', 'cmdAndArgs', '.', 'add', '(', 'cgiExecutable', ')', ';', '}', 'if', '(', 'cgiExecutableArgs', '!=', 'null', ')', '{', 'cmdAndArgs', '.', 'addAll', '(', 'cgiExecutableArgs', ')', ';', '}', 'cmdAndArgs', '.', 'add', '(', 'command', ')', ';', 'cmdAndArgs', '.', 'addAll', '(', 'params', ')', ';', 'try', '{', 'rt', '=', 'Runtime', '.', 'getRuntime', '(', ')', ';', 'proc', '=', 'rt', '.', 'exec', '(', 'cmdAndArgs', '.', 'toArray', '(', 'new', 'String', '[', 'cmdAndArgs', '.', 'size', '(', ')', ']', ')', ',', 'hashToStringArray', '(', 'env', ')', ',', 'wd', ')', ';', 'String', 'sContentLength', '=', 'env', '.', 'get', '(', '""CONTENT_LENGTH""', ')', ';', 'if', '(', '!', '""""', '.', 'equals', '(', 'sContentLength', ')', ')', '{', 'commandsStdIn', '=', 'new', 'BufferedOutputStream', '(', 'proc', '.', 'getOutputStream', '(', ')', ')', ';', 'IOTools', '.', 'flow', '(', 'stdin', ',', 'commandsStdIn', ')', ';', 'commandsStdIn', '.', 'flush', '(', ')', ';', 'commandsStdIn', '.', 'close', '(', ')', ';', '}', 'boolean', 'isRunning', '=', 'true', ';', 'commandsStdErr', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'proc', '.', 'getErrorStream', '(', ')', ')', ')', ';', 'final', 'BufferedReader', 'stdErrRdr', '=', 'commandsStdErr', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'sendToLog', '(', 'stdErrRdr', ')', ';', '}', '}', ';', 'errReaderThread', '.', 'start', '(', ')', ';', 'InputStream', 'cgiHeaderStream', '=', 'new', 'HTTPHeaderInputStream', '(', 'proc', '.', 'getInputStream', '(', ')', ')', ';', 'cgiHeaderReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'String', 'line', '=', 'null', ';', 'while', '(', '(', '(', 'line', '=', 'cgiHeaderReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '&&', '!', '(', '""""', '.', 'equals', '(', 'line', ')', ')', ')', '{', 'if', '(', 'debug', '>=', '2', ')', '{', 'log', '(', '""runCGI: addHeader(\\""""', '+', 'line', '+', '""\\"")""', ')', ';', '}', 'if', '(', 'line', '.', 'startsWith', '(', '""HTTP""', ')', ')', '{', 'response', '.', 'setStatus', '(', 'getSCFromHttpStatusLine', '(', 'line', ')', ')', ';', '}', 'else', 'if', '(', 'line', '.', 'indexOf', '(', '"":""', ')', '>=', '0', ')', '{', 'String', 'header', '=', 'line', '.', 'substring', '(', '0', ',', 'line', '.', 'indexOf', '(', '"":""', ')', ')', '.', 'trim', '(', ')', ';', 'String', 'value', '=', 'line', '.', 'substring', '(', 'line', '.', 'indexOf', '(', '"":""', ')', '+', '1', ')', '.', 'trim', '(', ')', ';', 'if', '(', 'header', '.', 'equalsIgnoreCase', '(', '""status""', ')', ')', '{', 'response', '.', 'setStatus', '(', 'getSCFromCGIStatusHeader', '(', 'value', ')', ')', ';', '}', 'else', '{', 'response', '.', 'addHeader', '(', 'header', ',', 'value', ')', ';', '}', '}', 'else', '{', 'log', '(', '""runCGI: bad header line \\""""', '+', 'line', '+', '""\\""""', ')', ';', '}', '}', 'byte', '[', ']', 'bBuf', '=', 'new', 'byte', '[', '2048', ']', ';', 'OutputStream', 'out', '=', 'response', '.', 'getOutputStream', '(', ')', ';', 'cgiOutput', '=', 'proc', '.', 'getInputStream', '(', ')', ';', 'try', '{', 'while', '(', '(', 'bufRead', '=', 'cgiOutput', '.', 'read', '(', 'bBuf', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'debug', '>=', '4', ')', '{', 'log', '(', '""runCGI: output ""', '+', 'bufRead', '+', '"" bytes of data""', ')', ';', '}', 'out', '.', 'write', '(', 'bBuf', ',', '0', ',', 'bufRead', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'bufRead', '!=', '-', '1', ')', '{', 'while', '(', '(', 'bufRead', '=', 'cgiOutput', '.', 'read', '(', 'bBuf', ')', ')', '!=', '-', '1', ')', '{', '}', '}', '}', 'proc', '.', 'exitValue', '(', ')', ';', 'isRunning', '=', 'false', ';', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '500', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '(', '""Caught exception ""', '+', 'e', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'cgiHeaderReader', '!=', 'null', ')', '{', 'try', '{', 'cgiHeaderReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '(', '""Exception closing header reader ""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'cgiOutput', '!=', 'null', ')', '{', 'try', '{', 'cgiOutput', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '(', '""Exception closing output stream ""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'errReaderThread', '!=', 'null', ')', '{', 'try', '{', 'errReaderThread', '.', 'join', '(', 'stderrTimeout', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'log', '(', '""Interupted waiting for stderr reader thread""', ')', ';', '}', '}', 'if', '(', 'debug', '>', '4', ')', '{', 'log', '(', '""Running finally block""', ')', ';', '}', 'if', '(', 'proc', '!=', 'null', ')', '{', 'proc', '.', 'destroy', '(', ')', ';', 'proc', '=', 'null', ';', '}', '}', '}']","['void', 'run', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'isReady', '(', ')', ')', '{', '(', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""""', ')', ';', '}', 'if', '(', '(', '0', ')', '|', '(', '(', '""""', ')', '>', '0', ')', '|', '(', '(', '""""', '+', 'separator', ')', '>', '0', ')', ')', '{', '(', 'getName', '(', ')', '+', '""""', '+', '""""', ')', ';', '}', 'if', '(', '0', ')', '{', 'cmdAndArgs', '(', ')', ';', '}', 'cmdAndArgs', '(', ')', ';', 'try', '{', 'rt', '(', '(', 'String', '[', 'cmdAndArgs', '(', ')', ']', ')', ',', 'wd', ')', ';', '(', '""""', ')', ';', 'if', '(', '""""', '.', 'equals', ')', '{', '(', 'proc', '(', ')', ')', ';', '}', '(', '(', 'proc', '(', ')', ')', ')', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ';', '(', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'while', '(', '(', '(', 'line', '(', ')', ')', '!=', 'null', ')', '&', '(', '""""', '.', 'equals', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'getSCFromHttpStatusLine', ')', ';', '}', 'if', '(', '(', '""""', ')', '>', '0', ')', '{', 'line', '(', '0', ',', '(', '""""', ')', ')', '.', 'substring', '(', 'indexOf', '(', ')', '+', '1', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', '(', 'value', ')', ')', ';', '(', 'value', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'write', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '{', 'if', '(', 'cgiHeaderReader', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', '""""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '}', '}']",877,397,6,480,55.10907003444317
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,init_4.txt,0.9998,0.0003,"{'n_total': 1495, 'n_valid': 169, 'n_correct': 167}",492.170569,"public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.TINYINT; setValue((Byte) arg1); } break; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1); } break; case NodeTypes.DECIMAL_CONSTANT_NODE: if (valueInP) { typeid = Types.DECIMAL; String image = (String) arg1; int length = image.length(); int idx = image.indexOf('.'); precision = length; if (!Character.isDigit(image.charAt(0)) && (idx != 0)) precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : ""Unexpected nodeType = "" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); }","void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx);}if(valueInP){((Double));}if(valueInP){setValue();}assert""""+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}",2340,243,10,2097,90.0,"['public', 'void', 'init', '(', 'Object', 'arg1', ')', 'throws', 'StandardException', '{', 'int', 'precision', '=', '0', ',', 'scal', '=', '0', ',', 'maxwidth', '=', '0', ';', 'Boolean', 'isNullable', ';', 'boolean', 'valueInP', ';', 'TypeId', 'typeId', '=', 'null', ';', 'int', 'typeid', '=', '0', ';', 'if', '(', 'arg1', 'instanceof', 'TypeId', ')', '{', 'typeId', '=', '(', 'TypeId', ')', 'arg1', ';', 'isNullable', '=', 'Boolean', '.', 'TRUE', ';', 'valueInP', '=', 'false', ';', 'maxwidth', '=', '0', ';', '}', 'else', '{', 'isNullable', '=', 'Boolean', '.', 'FALSE', ';', 'valueInP', '=', 'true', ';', '}', 'switch', '(', 'getNodeType', '(', ')', ')', '{', 'case', 'NodeTypes', '.', 'TINYINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'SMALLINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'SMALLINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'SMALLINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'TINYINT', ';', 'setValue', '(', '(', 'Byte', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'INT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'INT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'INT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'INT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'INTEGER', ';', 'setValue', '(', '(', 'Integer', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'SMALLINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'SMALLINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'SMALLINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'SMALLINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'SMALLINT', ';', 'setValue', '(', '(', 'Short', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'LONGINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'LONGINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'LONGINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'LONGINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'BIGINT', ';', 'setValue', '(', '(', 'Long', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'DECIMAL_CONSTANT_NODE', ':', 'if', '(', 'valueInP', ')', '{', 'typeid', '=', 'Types', '.', 'DECIMAL', ';', 'String', 'image', '=', '(', 'String', ')', 'arg1', ';', 'int', 'length', '=', 'image', '.', 'length', '(', ')', ';', 'int', 'idx', '=', 'image', '.', 'indexOf', '(', ""'.'"", ')', ';', 'precision', '=', 'length', ';', 'if', '(', '!', 'Character', '.', 'isDigit', '(', 'image', '.', 'charAt', '(', '0', ')', ')', '&&', '(', 'idx', '!=', '0', ')', ')', 'precision', '--', ';', 'if', '(', 'idx', '<', '0', ')', 'scal', '=', '0', ';', 'else', '{', 'precision', '--', ';', 'scal', '=', 'length', '-', 'idx', '-', '1', ';', '}', 'maxwidth', '=', 'length', ';', 'setValue', '(', 'new', 'BigDecimal', '(', 'image', ')', ')', ';', '}', 'else', '{', 'precision', '=', 'TypeId', '.', 'DEFAULT_DECIMAL_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'DEFAULT_DECIMAL_SCALE', ';', 'maxwidth', '=', 'TypeId', '.', 'DECIMAL_MAXWIDTH', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'DOUBLE_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'DOUBLE_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'DOUBLE_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'DOUBLE_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'DOUBLE', ';', 'setValue', '(', '(', 'Double', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'FLOAT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'REAL_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'REAL_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'REAL_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'REAL', ';', 'setValue', '(', '(', 'Float', ')', 'arg1', ')', ';', '}', 'break', ';', 'default', ':', 'assert', 'false', ':', '""Unexpected nodeType = ""', '+', 'getNodeType', '(', ')', ';', 'break', ';', '}', 'setType', '(', '(', 'typeId', '!=', 'null', ')', '?', 'typeId', ':', 'TypeId', '.', 'getBuiltInTypeId', '(', 'typeid', ')', ',', 'precision', ',', 'scal', ',', 'isNullable', '.', 'booleanValue', '(', ')', ',', 'maxwidth', ')', ';', '}']","['void', 'init', '(', 'Object', 'arg', ')', '{', 'if', '(', '1', 'instanceof', 'TypeId', ')', '{', '}', '{', '}', 'switch', '(', 'getNodeType', '(', ')', ')', '{', 'case', 'NODE', ':', '{', '(', '(', 'Integer', ')', ')', ';', '}', '{', '(', '(', 'Short', ')', ')', ';', '}', '{', '(', '(', 'Long', ')', ')', ';', '(', 'idx', ')', ';', '}', 'if', '(', 'valueInP', ')', '{', '(', '(', 'Double', ')', ')', ';', '}', 'if', '(', 'valueInP', ')', '{', 'setValue', '(', ')', ';', '}', 'assert', '""""', '+', 'getNodeType', ';', '}', 'setType', '(', '(', 'null', ')', '?', 'typeId', ':', 'booleanValue', '(', ')', ',', 'maxwidth', ')', ';', '}']",535,99,6,436,82.41965973534971
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_12.txt,0.9975,0.0027,"{'n_total': 2886, 'n_valid': 237, 'n_correct': 237}",706.389911,"public static void main(String[] argv) { String srcURL = null; String dstURL = null; boolean debug = false; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-s"")) { srcURL = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dstURL = argv[++optind]; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { force = true; } else if (argv[optind].equals(""-S"")) { skipSpecial = true; } else if (argv[optind].equals(""-c"")) { clear = true; } else if (argv[optind].equals(""-P"")) { dontPreserveFlags = true; } else if (argv[optind].equals(""-W"")) { warn = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { printUsage(); System.exit(1); } else { break; } } try { if (srcURL == null || dstURL == null) { printUsage(); System.exit(1); } Session session = Session.getInstance(System.getProperties(), null); session.setDebug(debug); URLName srcURLName = new URLName(srcURL); Folder srcFolder; if (srcURLName.getFile() == null) { Store s = session.getStore(srcURLName); s.connect(); srcFolder = s.getDefaultFolder(); } else { srcFolder = session.getFolder(new URLName(srcURL)); if (!srcFolder.exists()) { System.out.println(""source folder does not exist""); srcFolder.getStore().close(); System.exit(1); } } URLName dstURLName = new URLName(dstURL); Folder dstFolder; if (dstURLName.getFile() == null) { Store s = session.getStore(dstURLName); s.connect(); dstFolder = s.getFolder(srcFolder.getName()); } else dstFolder = session.getFolder(dstURLName); if (clear && dstFolder.exists()) { if (!dstFolder.delete(true)) { System.out.println(""couldn't delete "" + dstFolder.getFullName()); return; } } copy(srcFolder, dstFolder); srcFolder.getStore().close(); dstFolder.getStore().close(); } catch (MessagingException mex) { System.out.println(mex.getMessage()); mex.printStackTrace(); } }","void main(String[]argv){for(;;optind++){if(("""")){srcURL[optind][optind];}if(("""")){}if(("""")){}if((""""))if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(argv[optind].equals(""""))if(argv[optind].equals("""")){optind++;}if(argv[optind]){(1);}{}}try{if(srcURL){(1);}(srcURL);if(null){{("""");(1);}}if(dstURLName){}(dstURLName);if(clear()){if((true)){("""");}}copy();}catch(MessagingException mex){(getMessage());printStackTrace();}}",1906,431,10,1475,77.79535864978902,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'String', 'srcURL', '=', 'null', ';', 'String', 'dstURL', '=', 'null', ';', 'boolean', 'debug', '=', 'false', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'srcURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dstURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'force', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-S""', ')', ')', '{', 'skipSpecial', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-c""', ')', ')', '{', 'clear', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'dontPreserveFlags', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-W""', ')', ')', '{', 'warn', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'srcURL', '==', 'null', '||', 'dstURL', '==', 'null', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'System', '.', 'getProperties', '(', ')', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'URLName', 'srcURLName', '=', 'new', 'URLName', '(', 'srcURL', ')', ';', 'Folder', 'srcFolder', ';', 'if', '(', 'srcURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'srcURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'srcFolder', '=', 's', '.', 'getDefaultFolder', '(', ')', ';', '}', 'else', '{', 'srcFolder', '=', 'session', '.', 'getFolder', '(', 'new', 'URLName', '(', 'srcURL', ')', ')', ';', 'if', '(', '!', 'srcFolder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""source folder does not exist""', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'URLName', 'dstURLName', '=', 'new', 'URLName', '(', 'dstURL', ')', ';', 'Folder', 'dstFolder', ';', 'if', '(', 'dstURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'dstURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'dstFolder', '=', 's', '.', 'getFolder', '(', 'srcFolder', '.', 'getName', '(', ')', ')', ';', '}', 'else', 'dstFolder', '=', 'session', '.', 'getFolder', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '&&', 'dstFolder', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'dstFolder', '.', 'delete', '(', 'true', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""couldn\'t delete ""', '+', 'dstFolder', '.', 'getFullName', '(', ')', ')', ';', 'return', ';', '}', '}', 'copy', '(', 'srcFolder', ',', 'dstFolder', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'dstFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mex', '.', 'getMessage', '(', ')', ')', ';', 'mex', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'srcURL', '[', 'optind', ']', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', ')', '{', '(', '1', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'srcURL', ')', '{', '(', '1', ')', ';', '}', '(', 'srcURL', ')', ';', 'if', '(', 'null', ')', '{', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', '}', 'if', '(', 'dstURLName', ')', '{', '}', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '(', ')', ')', '{', 'if', '(', '(', 'true', ')', ')', '{', '(', '""""', ')', ';', '}', '}', 'copy', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '(', 'getMessage', '(', ')', ')', ';', 'printStackTrace', '(', ')', ';', '}', '}']",564,213,6,351,62.903225806451616
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_13.txt,0.9984,0.0031,"{'n_total': 4798, 'n_valid': 346, 'n_correct': 346}",1063.678598,"public static void main(String[] argv) { long uid = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""); System.exit(1); } else { break; } } try { if (optind < argv.length) uid = Long.parseLong(argv[optind]); Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } folder = folder.getFolder(mbox); if (!folder.exists()) { System.out.println(mbox + "" does not exist""); System.exit(1); } if (!(folder instanceof UIDFolder)) { System.out.println(""This Provider or this folder does not support UIDs""); System.exit(1); } UIDFolder ufolder = (UIDFolder) folder; folder.open(Folder.READ_WRITE); int totalMessages = folder.getMessageCount(); if (totalMessages == 0) { System.out.println(""Empty folder""); folder.close(false); store.close(); System.exit(1); } if (verbose) { int newMessages = folder.getNewMessageCount(); System.out.println(""Total messages = "" + totalMessages); System.out.println(""New messages = "" + newMessages); System.out.println(""-------------------------------""); } if (uid == -1) { Message[] msgs = ufolder.getMessagesByUID(1, UIDFolder.LASTUID); FetchProfile fp = new FetchProfile(); fp.add(FetchProfile.Item.ENVELOPE); fp.add(FetchProfile.Item.FLAGS); fp.add(""X-Mailer""); folder.fetch(msgs, fp); for (int i = 0; i < msgs.length; i++) { System.out.println(""--------------------------""); System.out.println(""MESSAGE UID #"" + ufolder.getUID(msgs[i]) + "":""); dumpEnvelope(msgs[i]); } } else { System.out.println(""Getting message UID: "" + uid); Message m = ufolder.getMessageByUID(uid); if (m != null) dumpPart(m); else System.out.println(""This Message does not exist on this folder""); } folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); } System.exit(1); }","void main(String[]argv){for(;;optind++){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){host[optind];}if(argv[optind].equals("""")){user[optind];}if(argv[optind].equals("""")){password[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){optind++;}if(argv[optind].startsWith("""")){("""").exit();}{}}try{if(optind)(argv[optind]).getInstance();if(null){urln();if(protocol)if(host)(host);}{("""").exit();}(mbox);if(exists()){println();(1);}(UIDFolder);{("""");}if(verbose){(""""+totalMessages);(FLAGS);("""");(msgs);for(;;){("""");}}{if(m)println();}}catch(Exception ex){(""""+getMessage());}}",2932,694,10,2238,76.59137577002053,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'long', 'uid', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'uid', '=', 'Long', '.', 'parseLong', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mbox', '+', '"" does not exist""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '!', '(', 'folder', 'instanceof', 'UIDFolder', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""This Provider or this folder does not support UIDs""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'UIDFolder', 'ufolder', '=', '(', 'UIDFolder', ')', 'folder', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'totalMessages', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'totalMessages', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Empty folder""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'verbose', ')', '{', 'int', 'newMessages', '=', 'folder', '.', 'getNewMessageCount', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Total messages = ""', '+', 'totalMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""New messages = ""', '+', 'newMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""-------------------------------""', ')', ';', '}', 'if', '(', 'uid', '==', '-', '1', ')', '{', 'Message', '[', ']', 'msgs', '=', 'ufolder', '.', 'getMessagesByUID', '(', '1', ',', 'UIDFolder', '.', 'LASTUID', ')', ';', 'FetchProfile', 'fp', '=', 'new', 'FetchProfile', '(', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'ENVELOPE', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'FLAGS', ')', ';', 'fp', '.', 'add', '(', '""X-Mailer""', ')', ';', 'folder', '.', 'fetch', '(', 'msgs', ',', 'fp', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""--------------------------""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MESSAGE UID #""', '+', 'ufolder', '.', 'getUID', '(', 'msgs', '[', 'i', ']', ')', '+', '"":""', ')', ';', 'dumpEnvelope', '(', 'msgs', '[', 'i', ']', ')', ';', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Getting message UID: ""', '+', 'uid', ')', ';', 'Message', 'm', '=', 'ufolder', '.', 'getMessageByUID', '(', 'uid', ')', ';', 'if', '(', 'm', '!=', 'null', ')', 'dumpPart', '(', 'm', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '""This Message does not exist on this folder""', ')', ';', '}', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '1', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'host', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'user', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'password', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', ']', ')', '.', 'getInstance', '(', ')', ';', 'if', '(', 'null', ')', '{', 'urln', '(', ')', ';', 'if', '(', 'protocol', ')', 'if', '(', 'host', ')', '(', 'host', ')', ';', '}', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '(', 'mbox', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'println', '(', ')', ';', '(', '1', ')', ';', '}', '(', 'UIDFolder', ')', ';', '{', '(', '""""', ')', ';', '}', 'if', '(', 'verbose', ')', '{', '(', '""""', '+', 'totalMessages', ')', ';', '(', 'FLAGS', ')', ';', '(', '""""', ')', ';', '(', 'msgs', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'if', '(', 'm', ')', 'println', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']",817,328,6,489,60.29593094944513
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_1.txt,1.0,0.0,"{'n_total': 7056, 'n_valid': 491, 'n_correct': 266}",1451.629501,"public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { ""-help"" }; } for (int i = 0; i < args.length; i++) { if (""-threads"".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (""-count"".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(""Sending "" + count + "" messages.""); } else if (""-pause"".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (""-break"".equals(args[i])) { breakOnEx = true; } else if (""-shutdown"".equals(args[i])) { shutdown = true; } else if (""-stats"".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(""Stats every "" + stats + "" message""); } else if (""-sendoptions"".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(""Setting send options to "" + channelOptions); } else if (""-startoptions"".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(""Setting start options to "" + startoptions); } else if (""-size"".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(""Message size will be:"" + (size + 4) + "" bytes""); } else if (""-mode"".equals(args[i])) { if (""receive"".equals(args[++i])) send = false; } else if (""-debug"".equals(args[i])) { debug = true; } else if (""-help"".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(""System test complete, sleeping to let threads finish.""); Thread.sleep(60 * 1000 * 60); }","void main(String[]args)throws Exception{if(0){args=new String[]{""""};}for(;;i++){if(""""){(args[i]);}if(""""){(args[i]);(""""+"""");}if("""".equals()){pause=(args[i])*0;}if(""""){}if("""".equals(args[i])){;}if("""".equals(args[i])){(args[i]);(""""+"""");}if("""".equals(args[i])){(args[i]);(""""+channelOptions);}if((args[i])){(""""+(4)+"""");}if("""".equals(args[i])){("""".equals(args[i]));}if("""".equals(args[i])){}if("""".equals(args[i])){(1);}}ManagedChannel();(Shutdown());while(threads){LoadTest();}(DEFAULT);("""");(6);}",2435,490,10,1945,80.20618556701031,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'boolean', 'send', '=', 'true', ';', 'boolean', 'debug', '=', 'false', ';', 'long', 'pause', '=', '0', ';', 'int', 'count', '=', '1000000', ';', 'int', 'stats', '=', '10000', ';', 'boolean', 'breakOnEx', '=', 'false', ';', 'int', 'threads', '=', '1', ';', 'boolean', 'shutdown', '=', 'false', ';', 'int', 'startoptions', '=', 'Channel', '.', 'DEFAULT', ';', 'int', 'channelOptions', '=', 'Channel', '.', 'SEND_OPTIONS_DEFAULT', ';', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""-help""', '}', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '""-threads""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'threads', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', '}', 'else', 'if', '(', '""-count""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'count', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Sending ""', '+', 'count', '+', '"" messages.""', ')', ';', '}', 'else', 'if', '(', '""-pause""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'pause', '=', 'Long', '.', 'parseLong', '(', 'args', '[', '++', 'i', ']', ')', '*', '1000', ';', '}', 'else', 'if', '(', '""-break""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'breakOnEx', '=', 'true', ';', '}', 'else', 'if', '(', '""-shutdown""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'shutdown', '=', 'true', ';', '}', 'else', 'if', '(', '""-stats""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'stats', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Stats every ""', '+', 'stats', '+', '"" message""', ')', ';', '}', 'else', 'if', '(', '""-sendoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting send options to ""', '+', 'channelOptions', ')', ';', '}', 'else', 'if', '(', '""-startoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'startoptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting start options to ""', '+', 'startoptions', ')', ';', '}', 'else', 'if', '(', '""-size""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'size', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', '-', '4', ';', 'System', '.', 'out', '.', 'println', '(', '""Message size will be:""', '+', '(', 'size', '+', '4', ')', '+', '"" bytes""', ')', ';', '}', 'else', 'if', '(', '""-mode""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'if', '(', '""receive""', '.', 'equals', '(', 'args', '[', '++', 'i', ']', ')', ')', 'send', '=', 'false', ';', '}', 'else', 'if', '(', '""-debug""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', '""-help""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'ManagedChannel', 'channel', '=', '(', 'ManagedChannel', ')', 'ChannelCreator', '.', 'createChannel', '(', 'args', ')', ';', 'LoadTest', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', 'LoadMessage', 'msg', '=', 'new', 'LoadMessage', '(', ')', ';', 'messageSize', '=', 'LoadMessage', '.', 'getMessageSize', '(', 'msg', ')', ';', 'channel', '.', 'addChannelListener', '(', 'test', ')', ';', 'channel', '.', 'addMembershipListener', '(', 'test', ')', ';', 'channel', '.', 'start', '(', 'startoptions', ')', ';', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'addShutdownHook', '(', 'new', 'Shutdown', '(', 'channel', ')', ')', ';', 'while', '(', 'threads', '>', '1', ')', '{', 'Thread', 't', '=', 'new', 'Thread', '(', 'test', ')', ';', 't', '.', 'setDaemon', '(', 'true', ')', ';', 't', '.', 'start', '(', ')', ';', 'threads', '--', ';', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', '}', 'test', '.', 'run', '(', ')', ';', 'if', '(', 'shutdown', '&&', 'send', ')', 'channel', '.', 'stop', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""System test complete, sleeping to let threads finish.""', ')', ';', 'Thread', '.', 'sleep', '(', '60', '*', '1000', '*', '60', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '}', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'pause', '=', '(', 'args', '[', 'i', ']', ')', '*', '0', ';', '}', 'if', '(', '""""', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', 'channelOptions', ')', ';', '}', 'if', '(', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '+', '(', '4', ')', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '1', ')', ';', '}', '}', 'ManagedChannel', '(', ')', ';', '(', 'Shutdown', '(', ')', ')', ';', 'while', '(', 'threads', ')', '{', 'LoadTest', '(', ')', ';', '}', '(', 'DEFAULT', ')', ';', '(', '""""', ')', ';', '(', '6', ')', ';', '}']",678,276,6,402,59.82142857142857
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,get_1.txt,0.9408,0.6952,"{'n_total': 4872, 'n_valid': 716, 'n_correct': 138}",2118.480632,"@Override public List<Method> get() { List<Method> vtable = Lists.newArrayList(); String superclassType; try { superclassType = getSuperclass(); } catch (UnresolvedClassException ex) { vtable.addAll(((ClassProto) classPath.getClass(""Ljava/lang/Object;"")).getVtable()); vtableFullyResolved = false; return vtable; } if (superclassType != null) { ClassProto superclass = (ClassProto) classPath.getClass(superclassType); vtable.addAll(superclass.getVtable()); if (!superclass.vtableFullyResolved) { vtableFullyResolved = false; return vtable; } } if (!isInterface()) { addToVtable(getClassDef().getVirtualMethods(), vtable, true, true); Iterable<ClassDef> interfaces = Lists.reverse(Lists.newArrayList(getDirectInterfaces())); List<Method> defaultMethods = Lists.newArrayList(); List<Method> defaultConflictMethods = Lists.newArrayList(); List<Method> mirandaMethods = Lists.newArrayList(); final HashMap<MethodReference, Integer> methodOrder = Maps.newHashMap(); for (ClassDef interfaceDef : interfaces) { for (Method interfaceMethod : interfaceDef.getVirtualMethods()) { int vtableIndex = findMethodIndexInVtable(vtable, interfaceMethod); if (vtableIndex >= 0) { if (interfaceMethodOverrides(interfaceMethod, vtable.get(vtableIndex))) { vtable.set(vtableIndex, interfaceMethod); } } else { int defaultMethodIndex = findMethodIndexInVtable(defaultMethods, interfaceMethod); if (defaultMethodIndex >= 0) { if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { ClassProto existingInterface = (ClassProto) classPath.getClass(defaultMethods.get(defaultMethodIndex).getDefiningClass()); if (!existingInterface.implementsInterface(interfaceMethod.getDefiningClass())) { Method removedMethod = defaultMethods.remove(defaultMethodIndex); defaultConflictMethods.add(removedMethod); } } continue; } int defaultConflictMethodIndex = findMethodIndexInVtable(defaultConflictMethods, interfaceMethod); if (defaultConflictMethodIndex >= 0) { continue; } int mirandaMethodIndex = findMethodIndexInVtable(mirandaMethods, interfaceMethod); if (mirandaMethodIndex >= 0) { if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { ClassProto existingInterface = (ClassProto) classPath.getClass(mirandaMethods.get(mirandaMethodIndex).getDefiningClass()); if (!existingInterface.implementsInterface(interfaceMethod.getDefiningClass())) { Method oldMethod = mirandaMethods.remove(mirandaMethodIndex); int methodOrderValue = methodOrder.get(oldMethod); methodOrder.put(interfaceMethod, methodOrderValue); defaultMethods.add(interfaceMethod); } } continue; } if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { defaultMethods.add(interfaceMethod); methodOrder.put(interfaceMethod, methodOrder.size()); } else { mirandaMethods.add(interfaceMethod); methodOrder.put(interfaceMethod, methodOrder.size()); } } } } Comparator<MethodReference> comparator = new Comparator<MethodReference>() { @Override public int compare(MethodReference o1, MethodReference o2) { return Ints.compare(methodOrder.get(o1), methodOrder.get(o2)); } }; Collections.sort(defaultMethods, comparator); Collections.sort(defaultConflictMethods, comparator); Collections.sort(mirandaMethods, comparator); addToVtable(defaultMethods, vtable, false, false); addToVtable(defaultConflictMethods, vtable, false, false); addToVtable(mirandaMethods, vtable, false, false); } return vtable; }","List get(){List<Method>newArrayList; try{superclassType();}catch(UnresolvedClassException ex){addAll(((ClassProto)).getVtable()); } if (superclassTypenull) { defaultMethodsList<Method> mirandaMethods= Lists;HashMap<MethodReference> methodOrder = newHashMap(); for (ClassDef interfaceDef : interfaces){ for (Method interfaceMethod : getVirtualMethods()){ vtableIndex =(vtableinterfaceMethod); if (vtableIndex) { if(interfaceMethodOverrides((vtableIndex))) { set();} } else {if (defaultMethodIndex) { if ((interfaceMethod)) { existingInterface (getDefiningClass()); if(!existingInterface.implementsInterface(getDefiningClass())){ Method= remove();}}} defaultConflictMethodIndex = findMethodIndexInVtable(); if (defaultConflictMethodIndex ) {  if ((interfaceMethod)) {(mirandaMethodsgetDefiningClass()); if(!implementsInterface(getDefiningClass())) {put(); } } continue; } if(!isSet(getAccessFlags())) { (size()); } } } } Comparator<MethodReference> comparator = new Comparator<>(){ compare(MethodReference o, MethodReference o) {(methodOrderget());}};sort(); Collections(false, false); } vtable; }",3367,1095,9,2272,67.6593210244193,"['@', 'Override', 'public', 'List', '<', 'Method', '>', 'get', '(', ')', '{', 'List', '<', 'Method', '>', 'vtable', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'String', 'superclassType', ';', 'try', '{', 'superclassType', '=', 'getSuperclass', '(', ')', ';', '}', 'catch', '(', 'UnresolvedClassException', 'ex', ')', '{', 'vtable', '.', 'addAll', '(', '(', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', '""Ljava/lang/Object;""', ')', ')', '.', 'getVtable', '(', ')', ')', ';', 'vtableFullyResolved', '=', 'false', ';', 'return', 'vtable', ';', '}', 'if', '(', 'superclassType', '!=', 'null', ')', '{', 'ClassProto', 'superclass', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'superclassType', ')', ';', 'vtable', '.', 'addAll', '(', 'superclass', '.', 'getVtable', '(', ')', ')', ';', 'if', '(', '!', 'superclass', '.', 'vtableFullyResolved', ')', '{', 'vtableFullyResolved', '=', 'false', ';', 'return', 'vtable', ';', '}', '}', 'if', '(', '!', 'isInterface', '(', ')', ')', '{', 'addToVtable', '(', 'getClassDef', '(', ')', '.', 'getVirtualMethods', '(', ')', ',', 'vtable', ',', 'true', ',', 'true', ')', ';', 'Iterable', '<', 'ClassDef', '>', 'interfaces', '=', 'Lists', '.', 'reverse', '(', 'Lists', '.', 'newArrayList', '(', 'getDirectInterfaces', '(', ')', ')', ')', ';', 'List', '<', 'Method', '>', 'defaultMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'List', '<', 'Method', '>', 'defaultConflictMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'List', '<', 'Method', '>', 'mirandaMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'final', 'HashMap', '<', 'MethodReference', ',', 'Integer', '>', 'methodOrder', '=', 'Maps', '.', 'newHashMap', '(', ')', ';', 'for', '(', 'ClassDef', 'interfaceDef', ':', 'interfaces', ')', '{', 'for', '(', 'Method', 'interfaceMethod', ':', 'interfaceDef', '.', 'getVirtualMethods', '(', ')', ')', '{', 'int', 'vtableIndex', '=', 'findMethodIndexInVtable', '(', 'vtable', ',', 'interfaceMethod', ')', ';', 'if', '(', 'vtableIndex', '>=', '0', ')', '{', 'if', '(', 'interfaceMethodOverrides', '(', 'interfaceMethod', ',', 'vtable', '.', 'get', '(', 'vtableIndex', ')', ')', ')', '{', 'vtable', '.', 'set', '(', 'vtableIndex', ',', 'interfaceMethod', ')', ';', '}', '}', 'else', '{', 'int', 'defaultMethodIndex', '=', 'findMethodIndexInVtable', '(', 'defaultMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'defaultMethodIndex', '>=', '0', ')', '{', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'ClassProto', 'existingInterface', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'defaultMethods', '.', 'get', '(', 'defaultMethodIndex', ')', '.', 'getDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'existingInterface', '.', 'implementsInterface', '(', 'interfaceMethod', '.', 'getDefiningClass', '(', ')', ')', ')', '{', 'Method', 'removedMethod', '=', 'defaultMethods', '.', 'remove', '(', 'defaultMethodIndex', ')', ';', 'defaultConflictMethods', '.', 'add', '(', 'removedMethod', ')', ';', '}', '}', 'continue', ';', '}', 'int', 'defaultConflictMethodIndex', '=', 'findMethodIndexInVtable', '(', 'defaultConflictMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'defaultConflictMethodIndex', '>=', '0', ')', '{', 'continue', ';', '}', 'int', 'mirandaMethodIndex', '=', 'findMethodIndexInVtable', '(', 'mirandaMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'mirandaMethodIndex', '>=', '0', ')', '{', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'ClassProto', 'existingInterface', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'mirandaMethods', '.', 'get', '(', 'mirandaMethodIndex', ')', '.', 'getDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'existingInterface', '.', 'implementsInterface', '(', 'interfaceMethod', '.', 'getDefiningClass', '(', ')', ')', ')', '{', 'Method', 'oldMethod', '=', 'mirandaMethods', '.', 'remove', '(', 'mirandaMethodIndex', ')', ';', 'int', 'methodOrderValue', '=', 'methodOrder', '.', 'get', '(', 'oldMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrderValue', ')', ';', 'defaultMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', '}', '}', 'continue', ';', '}', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'defaultMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrder', '.', 'size', '(', ')', ')', ';', '}', 'else', '{', 'mirandaMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrder', '.', 'size', '(', ')', ')', ';', '}', '}', '}', '}', 'Comparator', '<', 'MethodReference', '>', 'comparator', '=', 'new', 'Comparator', '<', 'MethodReference', '>', '(', ')', '{', '@', 'Override', 'public', 'int', 'compare', '(', 'MethodReference', 'o1', ',', 'MethodReference', 'o2', ')', '{', 'return', 'Ints', '.', 'compare', '(', 'methodOrder', '.', 'get', '(', 'o1', ')', ',', 'methodOrder', '.', 'get', '(', 'o2', ')', ')', ';', '}', '}', ';', 'Collections', '.', 'sort', '(', 'defaultMethods', ',', 'comparator', ')', ';', 'Collections', '.', 'sort', '(', 'defaultConflictMethods', ',', 'comparator', ')', ';', 'Collections', '.', 'sort', '(', 'mirandaMethods', ',', 'comparator', ')', ';', 'addToVtable', '(', 'defaultMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', 'addToVtable', '(', 'defaultConflictMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', 'addToVtable', '(', 'mirandaMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', '}', 'return', 'vtable', ';', '}']","['List', 'get', '(', ')', '{', 'List', '<', 'Method', '>', 'newArrayList', ';', 'try', '{', 'superclassType', '(', ')', ';', '}', 'catch', '(', 'UnresolvedClassException', 'ex', ')', '{', 'addAll', '(', '(', '(', 'ClassProto', ')', ')', '.', 'getVtable', '(', ')', ')', ';', '}', 'if', '(', 'superclassTypenull', ')', '{', 'defaultMethodsList', '<', 'Method', '>', 'mirandaMethods', '=', 'Lists', ';', 'HashMap', '<', 'MethodReference', '>', 'methodOrder', '=', 'newHashMap', '(', ')', ';', 'for', '(', 'ClassDef', 'interfaceDef', ':', 'interfaces', ')', '{', 'for', '(', 'Method', 'interfaceMethod', ':', 'getVirtualMethods', '(', ')', ')', '{', 'vtableIndex', '=', '(', 'vtableinterfaceMethod', ')', ';', 'if', '(', 'vtableIndex', ')', '{', 'if', '(', 'interfaceMethodOverrides', '(', '(', 'vtableIndex', ')', ')', ')', '{', 'set', '(', ')', ';', '}', '}', 'else', '{', 'if', '(', 'defaultMethodIndex', ')', '{', 'if', '(', '(', 'interfaceMethod', ')', ')', '{', 'existingInterface', '(', 'getDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'existingInterface', '.', 'implementsInterface', '(', 'getDefiningClass', '(', ')', ')', ')', '{', 'Method', '=', 'remove', '(', ')', ';', '}', '}', '}', 'defaultConflictMethodIndex', '=', 'findMethodIndexInVtable', '(', ')', ';', 'if', '(', 'defaultConflictMethodIndex', ')', '{', 'if', '(', '(', 'interfaceMethod', ')', ')', '{', '(', 'mirandaMethodsgetDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'implementsInterface', '(', 'getDefiningClass', '(', ')', ')', ')', '{', 'put', '(', ')', ';', '}', '}', 'continue', ';', '}', 'if', '(', '!', 'isSet', '(', 'getAccessFlags', '(', ')', ')', ')', '{', '(', 'size', '(', ')', ')', ';', '}', '}', '}', '}', 'Comparator', '<', 'MethodReference', '>', 'comparator', '=', 'new', 'Comparator', '<', '>', '(', ')', '{', 'compare', '(', 'MethodReference', 'o', ',', 'MethodReference', 'o', ')', '{', '(', 'methodOrderget', '(', ')', ')', ';', '}', '}', ';', 'sort', '(', ')', ';', 'Collections', '(', 'false', ',', 'false', ')', ';', '}', 'vtable', ';', '}']",683,260,6,423,62.481536189069416
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_4.txt,1.0,0.0,"{'n_total': 1316, 'n_valid': 129, 'n_correct': 129}",387.113989,"public void run() { final int listHeight = getHeight(); final int firstPos = mFirstPosition; switch(mMode) { case MOVE_DOWN_POS: { final int lastViewIndex = getChildCount() - 1; final int lastPos = firstPos + lastViewIndex; if (lastViewIndex < 0) { return; } if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; final int extraScroll = lastPos < mItemCount - 1 ? mExtraScroll : mListPadding.bottom; smoothScrollBy(lastViewHeight - lastViewPixelsShowing + extraScroll, mScrollDuration); mLastSeenPos = lastPos; if (lastPos < mTargetPos) { post(this); } break; } case MOVE_DOWN_BOUND: { final int nextViewIndex = 1; final int childCount = getChildCount(); if (firstPos == mBoundPos || childCount <= nextViewIndex || firstPos + childCount >= mItemCount) { return; } final int nextPos = firstPos + nextViewIndex; if (nextPos == mLastSeenPos) { post(this); return; } final View nextView = getChildAt(nextViewIndex); final int nextViewHeight = nextView.getHeight(); final int nextViewTop = nextView.getTop(); final int extraScroll = mExtraScroll; if (nextPos < mBoundPos) { smoothScrollBy(Math.max(0, nextViewHeight + nextViewTop - extraScroll), mScrollDuration); mLastSeenPos = nextPos; post(this); } else { if (nextViewTop > extraScroll) { smoothScrollBy(nextViewTop - extraScroll, mScrollDuration); } } break; } case MOVE_UP_POS: { if (firstPos == mLastSeenPos) { post(this); return; } final View firstView = getChildAt(0); if (firstView == null) { return; } final int firstViewTop = firstView.getTop(); final int extraScroll = firstPos > 0 ? mExtraScroll : mListPadding.top; smoothScrollBy(firstViewTop - extraScroll, mScrollDuration); mLastSeenPos = firstPos; if (firstPos > mTargetPos) { post(this); } break; } case MOVE_UP_BOUND: { final int lastViewIndex = getChildCount() - 2; if (lastViewIndex < 0) { return; } final int lastPos = firstPos + lastViewIndex; if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; mLastSeenPos = lastPos; if (lastPos > mBoundPos) { smoothScrollBy(-(lastViewPixelsShowing - mExtraScroll), mScrollDuration); post(this); } else { final int bottom = listHeight - mExtraScroll; final int lastViewBottom = lastViewTop + lastViewHeight; if (bottom > lastViewBottom) { smoothScrollBy(-(bottom - lastViewBottom), mScrollDuration); } } break; } default: break; } }","void run(){getHeight();switch(mMode){case _:{if(0){}if(mLastSeenPos){(this);}extraScroll=lastPos?mExtraScroll:mExtraScroll;if(mBoundPos){smoothScrollBy((0),mScrollDuration);}if(mBoundPos){if(bottom){((lastViewBottom));}}}}}",2689,223,9,2466,92.01492537313432,"['public', 'void', 'run', '(', ')', '{', 'final', 'int', 'listHeight', '=', 'getHeight', '(', ')', ';', 'final', 'int', 'firstPos', '=', 'mFirstPosition', ';', 'switch', '(', 'mMode', ')', '{', 'case', 'MOVE_DOWN_POS', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '1', ';', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'final', 'int', 'extraScroll', '=', 'lastPos', '<', 'mItemCount', '-', '1', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'bottom', ';', 'smoothScrollBy', '(', 'lastViewHeight', '-', 'lastViewPixelsShowing', '+', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '<', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_DOWN_BOUND', ':', '{', 'final', 'int', 'nextViewIndex', '=', '1', ';', 'final', 'int', 'childCount', '=', 'getChildCount', '(', ')', ';', 'if', '(', 'firstPos', '==', 'mBoundPos', '||', 'childCount', '<=', 'nextViewIndex', '||', 'firstPos', '+', 'childCount', '>=', 'mItemCount', ')', '{', 'return', ';', '}', 'final', 'int', 'nextPos', '=', 'firstPos', '+', 'nextViewIndex', ';', 'if', '(', 'nextPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'nextView', '=', 'getChildAt', '(', 'nextViewIndex', ')', ';', 'final', 'int', 'nextViewHeight', '=', 'nextView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'nextViewTop', '=', 'nextView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'mExtraScroll', ';', 'if', '(', 'nextPos', '<', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', 'Math', '.', 'max', '(', '0', ',', 'nextViewHeight', '+', 'nextViewTop', '-', 'extraScroll', ')', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'nextPos', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'if', '(', 'nextViewTop', '>', 'extraScroll', ')', '{', 'smoothScrollBy', '(', 'nextViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'case', 'MOVE_UP_POS', ':', '{', 'if', '(', 'firstPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'firstView', '=', 'getChildAt', '(', '0', ')', ';', 'if', '(', 'firstView', '==', 'null', ')', '{', 'return', ';', '}', 'final', 'int', 'firstViewTop', '=', 'firstView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'firstPos', '>', '0', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'top', ';', 'smoothScrollBy', '(', 'firstViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'firstPos', ';', 'if', '(', 'firstPos', '>', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_UP_BOUND', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '2', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '>', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', '-', '(', 'lastViewPixelsShowing', '-', 'mExtraScroll', ')', ',', 'mScrollDuration', ')', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'final', 'int', 'bottom', '=', 'listHeight', '-', 'mExtraScroll', ';', 'final', 'int', 'lastViewBottom', '=', 'lastViewTop', '+', 'lastViewHeight', ';', 'if', '(', 'bottom', '>', 'lastViewBottom', ')', '{', 'smoothScrollBy', '(', '-', '(', 'bottom', '-', 'lastViewBottom', ')', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'default', ':', 'break', ';', '}', '}']","['void', 'run', '(', ')', '{', 'getHeight', '(', ')', ';', 'switch', '(', 'mMode', ')', '{', 'case', '_', ':', '{', 'if', '(', '0', ')', '{', '}', 'if', '(', 'mLastSeenPos', ')', '{', '(', 'this', ')', ';', '}', 'extraScroll', '=', 'lastPos', '?', 'mExtraScroll', ':', 'mExtraScroll', ';', 'if', '(', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', '(', '0', ')', ',', 'mScrollDuration', ')', ';', '}', 'if', '(', 'mBoundPos', ')', '{', 'if', '(', 'bottom', ')', '{', '(', '(', 'lastViewBottom', ')', ')', ';', '}', '}', '}', '}', '}']",562,78,6,484,87.05035971223022
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_6.txt,0.9677,0.1389,"{'n_total': 3013, 'n_valid': 263, 'n_correct': 247}",801.565638,"public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(""JSSProxySessionRunnable: Unable to open input stream on "" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(""JSSProxySessionRunnable: "" + ""Unable to connect to "" + host + "":"" + port + "". "", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = ""CONNECT "" + desthost + "":"" + destport + "" HTTP/1.0\n"" + ""User-Agent: "" + sun.net.www.protocol.http.HttpURLConnection.userAgent + ""\r\n\r\n""; debug.message(msg); byte[] b; try { b = msg.getBytes(""ASCII7""); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(""JSSProxySessionRunnable: "" + ""Unexpected EOF from proxy""); closeSockets(); return; } if (i == '\n') { headerDone = true; ++newlinesSeen; } else if (i != '\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to get OutputStream"", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, ""ASCII7""); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(""HTTP/1.0 200"")) { debug.error(""JSSProxySessionRunnable: Unable to tunnel through ""); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to write prebuffer."", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }","void run(){Integer[1];try{(inconnection);}catch(IOException e){debug("""",e);(remotePort);closeSockets();}{if(debug){message(""""+""""+"""",ex);}}if(toProxySocket){}try{out=""""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("""");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"""");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("""")){("""");}try{}catch(IOException ioe){error("""",ioe);}RWGroupJSSProxy();}",2597,478,9,2119,81.87789799072644,"['public', 'void', 'run', '(', ')', '{', 'Integer', 'remotePort', '=', 'new', 'Integer', '(', 'inconnection', '.', 'getPort', '(', ')', ')', ';', 'byte', '[', ']', 'prebuffer', '=', 'new', 'byte', '[', '1', ']', ';', 'DataInputStream', 'inFrom', ';', 'try', '{', 'inFrom', '=', 'new', 'DataInputStream', '(', 'inconnection', '.', 'getInputStream', '(', ')', ')', ';', 'inFrom', '.', 'readFully', '(', 'prebuffer', ',', '0', ',', '1', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to open input stream on ""', '+', 'inconnection', ',', 'e', ')', ';', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'info', '=', '(', 'String', ')', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'info', ')', ';', 'String', 'host', '=', 'st', '.', 'nextToken', '(', ')', ';', 'int', 'port', ';', 'try', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'st', '.', 'nextToken', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'port', '=', '8080', ';', '}', 'try', '{', 'toProxySocket', '=', 'new', 'Socket', '(', 'host', ',', 'port', ')', ';', 'toProxySocket', '.', 'setTcpNoDelay', '(', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'toProxySocket', '=', 'null', ';', 'if', '(', 'debug', '.', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to connect to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '"". ""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', '==', 'null', ')', '{', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'desthost', '=', 'st', '.', 'nextToken', '(', ')', ';', 'String', 'destport', '=', 'st', '.', 'nextToken', '(', ')', ';', 'OutputStream', 'out', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '200', ']', ';', 'int', 'replyLen', '=', '0', ';', 'int', 'newlinesSeen', '=', '0', ';', 'boolean', 'headerDone', '=', 'false', ';', 'try', '{', 'out', '=', 'toProxySocket', '.', 'getOutputStream', '(', ')', ';', 'String', 'msg', '=', '""CONNECT ""', '+', 'desthost', '+', '"":""', '+', 'destport', '+', '"" HTTP/1.0\\n""', '+', '""User-Agent: ""', '+', 'sun', '.', 'net', '.', 'www', '.', 'protocol', '.', 'http', '.', 'HttpURLConnection', '.', 'userAgent', '+', '""\\r\\n\\r\\n""', ';', 'debug', '.', 'message', '(', 'msg', ')', ';', 'byte', '[', ']', 'b', ';', 'try', '{', 'b', '=', 'msg', '.', 'getBytes', '(', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'b', '=', 'msg', '.', 'getBytes', '(', ')', ';', '}', 'out', '.', 'write', '(', 'b', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'in', '=', 'toProxySocket', '.', 'getInputStream', '(', ')', ';', 'boolean', 'error', '=', 'false', ';', 'while', '(', 'newlinesSeen', '<', '2', ')', '{', 'int', 'i', '=', 'in', '.', 'read', '(', ')', ';', 'if', '(', 'i', '<', '0', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unexpected EOF from proxy""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'if', '(', 'i', '==', ""'\\n'"", ')', '{', 'headerDone', '=', 'true', ';', '++', 'newlinesSeen', ';', '}', 'else', 'if', '(', 'i', '!=', ""'\\r'"", ')', '{', 'newlinesSeen', '=', '0', ';', 'if', '(', '!', 'headerDone', '&&', 'replyLen', '<', 'reply', '.', 'length', ')', '{', 'reply', '[', 'replyLen', '++', ']', '=', '(', 'byte', ')', 'i', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to get OutputStream""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'replyStr', ';', 'try', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ',', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '!', 'replyStr', '.', 'startsWith', '(', '""HTTP/1.0 200""', ')', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to tunnel through ""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'try', '{', 'out', '.', 'write', '(', 'prebuffer', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to write prebuffer.""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'new', 'RWGroupJSSProxy', '(', 'inconnection', ',', 'toProxySocket', ')', ';', '}']","['void', 'run', '(', ')', '{', 'Integer', '[', '1', ']', ';', 'try', '{', '(', 'inconnection', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '(', '""""', ',', 'e', ')', ';', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', '}', '{', 'if', '(', 'debug', ')', '{', 'message', '(', '""""', '+', '""""', '+', '""""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', ')', '{', '}', 'try', '{', 'out', '=', '""""', '+', '(', 'msg', ')', ';', 'try', '{', 'getBytes', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', '}', '(', 'b', ')', ';', 'while', '(', 'newlinesSeen', ')', '{', 'i', '(', ')', ';', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'length', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '(', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'error', '(', '""""', ',', 'ioe', ')', ';', '}', 'RWGroupJSSProxy', '(', ')', ';', '}']",615,187,6,428,70.27914614121511
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,execute_2.txt,0.8634,0.3279,"{'n_total': 4688, 'n_valid': 465, 'n_correct': 283}",1378.006809,"public void execute(String command, InputStream istream, String contentType, int contentLength) throws BuildException { URLConnection conn = null; InputStreamReader reader = null; try { conn = (new URL(url + command)).openConnection(); HttpURLConnection hconn = (HttpURLConnection) conn; hconn.setAllowUserInteraction(false); hconn.setDoInput(true); hconn.setUseCaches(false); if (istream != null) { hconn.setDoOutput(true); hconn.setRequestMethod(""PUT""); if (contentType != null) { hconn.setRequestProperty(""Content-Type"", contentType); } if (contentLength >= 0) { hconn.setRequestProperty(""Content-Length"", """" + contentLength); hconn.setFixedLengthStreamingMode(contentLength); } } else { hconn.setDoOutput(false); hconn.setRequestMethod(""GET""); } hconn.setRequestProperty(""User-Agent"", ""Catalina-Ant-Task/1.0""); String input = username + "":"" + password; String output = Base64.encodeBase64String(input.getBytes(StandardCharsets.ISO_8859_1)); hconn.setRequestProperty(""Authorization"", ""Basic "" + output); hconn.connect(); if (istream != null) { BufferedOutputStream ostream = new BufferedOutputStream(hconn.getOutputStream(), 1024); byte[] buffer = new byte[1024]; while (true) { int n = istream.read(buffer); if (n < 0) { break; } ostream.write(buffer, 0, n); } ostream.flush(); ostream.close(); istream.close(); } reader = new InputStreamReader(hconn.getInputStream(), CHARSET); StringBuilder buff = new StringBuilder(); String error = null; int msgPriority = Project.MSG_INFO; boolean first = true; while (true) { int ch = reader.read(); if (ch < 0) { break; } else if ((ch == '\r') || (ch == '\n')) { if (buff.length() > 0) { String line = buff.toString(); buff.setLength(0); if (first) { if (!line.startsWith(""OK -"")) { error = line; msgPriority = Project.MSG_ERR; } first = false; } handleOutput(line, msgPriority); } } else { buff.append((char) ch); } } if (buff.length() > 0) { handleOutput(buff.toString(), msgPriority); } if (error != null && isFailOnError()) { throw new BuildException(error); } } catch (Exception e) { if (isFailOnError()) { throw new BuildException(e); } else { handleErrorOutput(e.getMessage()); } } finally { closeRedirector(); if (reader != null) { try { reader.close(); } catch (IOException ioe) { } reader = null; } if (istream != null) { try { istream.close(); } catch (IOException ioe) { } } } }","void execute(String command,InputStream istream,String contentType,int contentLength)throws BuildException{try{(false);(false);if(istream){setDoOutput();if(contentLength){("""");}}{(false);("""");}("""").encodeBase((StandardCharsets));setRequestProperty();if(null){(4);newbyte[4];while(true){(buffer);if(0){}(n);}flush();}(CHARSET);while(true){if(0){}if(('r')){if(buff){line();(0);if(first){if(("""")){}}handleOutput();}}{((char)ch);}}if(null){}}catch(Exception e){if(isFailOnError){(e);}}{if(null){try{}catch(IOException ioe){}}if(null){try{close();}catch(IOException ioe){}}}}",2334,570,13,1764,76.00172339508833,"['public', 'void', 'execute', '(', 'String', 'command', ',', 'InputStream', 'istream', ',', 'String', 'contentType', ',', 'int', 'contentLength', ')', 'throws', 'BuildException', '{', 'URLConnection', 'conn', '=', 'null', ';', 'InputStreamReader', 'reader', '=', 'null', ';', 'try', '{', 'conn', '=', '(', 'new', 'URL', '(', 'url', '+', 'command', ')', ')', '.', 'openConnection', '(', ')', ';', 'HttpURLConnection', 'hconn', '=', '(', 'HttpURLConnection', ')', 'conn', ';', 'hconn', '.', 'setAllowUserInteraction', '(', 'false', ')', ';', 'hconn', '.', 'setDoInput', '(', 'true', ')', ';', 'hconn', '.', 'setUseCaches', '(', 'false', ')', ';', 'if', '(', 'istream', '!=', 'null', ')', '{', 'hconn', '.', 'setDoOutput', '(', 'true', ')', ';', 'hconn', '.', 'setRequestMethod', '(', '""PUT""', ')', ';', 'if', '(', 'contentType', '!=', 'null', ')', '{', 'hconn', '.', 'setRequestProperty', '(', '""Content-Type""', ',', 'contentType', ')', ';', '}', 'if', '(', 'contentLength', '>=', '0', ')', '{', 'hconn', '.', 'setRequestProperty', '(', '""Content-Length""', ',', '""""', '+', 'contentLength', ')', ';', 'hconn', '.', 'setFixedLengthStreamingMode', '(', 'contentLength', ')', ';', '}', '}', 'else', '{', 'hconn', '.', 'setDoOutput', '(', 'false', ')', ';', 'hconn', '.', 'setRequestMethod', '(', '""GET""', ')', ';', '}', 'hconn', '.', 'setRequestProperty', '(', '""User-Agent""', ',', '""Catalina-Ant-Task/1.0""', ')', ';', 'String', 'input', '=', 'username', '+', '"":""', '+', 'password', ';', 'String', 'output', '=', 'Base64', '.', 'encodeBase64String', '(', 'input', '.', 'getBytes', '(', 'StandardCharsets', '.', 'ISO_8859_1', ')', ')', ';', 'hconn', '.', 'setRequestProperty', '(', '""Authorization""', ',', '""Basic ""', '+', 'output', ')', ';', 'hconn', '.', 'connect', '(', ')', ';', 'if', '(', 'istream', '!=', 'null', ')', '{', 'BufferedOutputStream', 'ostream', '=', 'new', 'BufferedOutputStream', '(', 'hconn', '.', 'getOutputStream', '(', ')', ',', '1024', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'n', '=', 'istream', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'n', '<', '0', ')', '{', 'break', ';', '}', 'ostream', '.', 'write', '(', 'buffer', ',', '0', ',', 'n', ')', ';', '}', 'ostream', '.', 'flush', '(', ')', ';', 'ostream', '.', 'close', '(', ')', ';', 'istream', '.', 'close', '(', ')', ';', '}', 'reader', '=', 'new', 'InputStreamReader', '(', 'hconn', '.', 'getInputStream', '(', ')', ',', 'CHARSET', ')', ';', 'StringBuilder', 'buff', '=', 'new', 'StringBuilder', '(', ')', ';', 'String', 'error', '=', 'null', ';', 'int', 'msgPriority', '=', 'Project', '.', 'MSG_INFO', ';', 'boolean', 'first', '=', 'true', ';', 'while', '(', 'true', ')', '{', 'int', 'ch', '=', 'reader', '.', 'read', '(', ')', ';', 'if', '(', 'ch', '<', '0', ')', '{', 'break', ';', '}', 'else', 'if', '(', '(', 'ch', '==', ""'\\r'"", ')', '||', '(', 'ch', '==', ""'\\n'"", ')', ')', '{', 'if', '(', 'buff', '.', 'length', '(', ')', '>', '0', ')', '{', 'String', 'line', '=', 'buff', '.', 'toString', '(', ')', ';', 'buff', '.', 'setLength', '(', '0', ')', ';', 'if', '(', 'first', ')', '{', 'if', '(', '!', 'line', '.', 'startsWith', '(', '""OK -""', ')', ')', '{', 'error', '=', 'line', ';', 'msgPriority', '=', 'Project', '.', 'MSG_ERR', ';', '}', 'first', '=', 'false', ';', '}', 'handleOutput', '(', 'line', ',', 'msgPriority', ')', ';', '}', '}', 'else', '{', 'buff', '.', 'append', '(', '(', 'char', ')', 'ch', ')', ';', '}', '}', 'if', '(', 'buff', '.', 'length', '(', ')', '>', '0', ')', '{', 'handleOutput', '(', 'buff', '.', 'toString', '(', ')', ',', 'msgPriority', ')', ';', '}', 'if', '(', 'error', '!=', 'null', '&&', 'isFailOnError', '(', ')', ')', '{', 'throw', 'new', 'BuildException', '(', 'error', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'isFailOnError', '(', ')', ')', '{', 'throw', 'new', 'BuildException', '(', 'e', ')', ';', '}', 'else', '{', 'handleErrorOutput', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', 'finally', '{', 'closeRedirector', '(', ')', ';', 'if', '(', 'reader', '!=', 'null', ')', '{', 'try', '{', 'reader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'reader', '=', 'null', ';', '}', 'if', '(', 'istream', '!=', 'null', ')', '{', 'try', '{', 'istream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}', '}']","['void', 'execute', '(', 'String', 'command', ',', 'InputStream', 'istream', ',', 'String', 'contentType', ',', 'int', 'contentLength', ')', 'throws', 'BuildException', '{', 'try', '{', '(', 'false', ')', ';', '(', 'false', ')', ';', 'if', '(', 'istream', ')', '{', 'setDoOutput', '(', ')', ';', 'if', '(', 'contentLength', ')', '{', '(', '""""', ')', ';', '}', '}', '{', '(', 'false', ')', ';', '(', '""""', ')', ';', '}', '(', '""""', ')', '.', 'encodeBase', '(', '(', 'StandardCharsets', ')', ')', ';', 'setRequestProperty', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', '4', ')', ';', 'newbyte', '[', '4', ']', ';', 'while', '(', 'true', ')', '{', '(', 'buffer', ')', ';', 'if', '(', '0', ')', '{', '}', '(', 'n', ')', ';', '}', 'flush', '(', ')', ';', '}', '(', 'CHARSET', ')', ';', 'while', '(', 'true', ')', '{', 'if', '(', '0', ')', '{', '}', 'if', '(', '(', ""'r'"", ')', ')', '{', 'if', '(', 'buff', ')', '{', 'line', '(', ')', ';', '(', '0', ')', ';', 'if', '(', 'first', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', 'handleOutput', '(', ')', ';', '}', '}', '{', '(', '(', 'char', ')', 'ch', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'isFailOnError', ')', '{', '(', 'e', ')', ';', '}', '}', '{', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}', '}']",597,240,6,357,60.40609137055838
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_3.txt,0.965,0.1105,"{'n_total': 6098, 'n_valid': 489, 'n_correct': 483}",1546.947663,"public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(Word2VecCompress.class.getName(), ""Creates a compressed representation of quantized word2vec vectors"", new Parameter[] { new UnflaggedOption(""input"", JSAP.STRING_PARSER, true, ""Input file""), new UnflaggedOption(""output"", JSAP.STRING_PARSER, false, ""Compressed version""), new Switch(""check"", JSAP.NO_SHORTFLAG, ""check"", ""Check correctness of output"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; String input_filename = jsapResult.getString(""input""); String output_filename = jsapResult.getString(""output"", null); int numWords, vectorSize; float quantizationFactor; List<String> indexToWord; int[] entries; long[] columnAbsSum; ProgressLogger pl = new ProgressLogger(logger); try (final BufferedReader lines = new BufferedReader(new FileReader(input_filename))) { String[] header = lines.readLine().split(""\t""); numWords = Integer.parseInt(header[0]); vectorSize = Integer.parseInt(header[1]); quantizationFactor = Float.parseFloat(header[2]); pl.expectedUpdates = numWords; pl.start(""Reading the dictionary""); indexToWord = new ArrayList<>(); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); indexToWord.add(lines.readLine().trim()); } pl.done(); entries = new int[numWords * vectorSize]; columnAbsSum = new long[vectorSize]; pl.expectedUpdates = numWords; pl.start(""Reading the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); String[] lineEntries = lines.readLine().split("" ""); for (int col = 0; col < vectorSize; ++col) { int entry = Integer.parseInt(lineEntries[col]); entries[i * vectorSize + col] = entry; columnAbsSum[col] += Fast.int2nat(entry) + 1; } } pl.done(); } int[] golombModuli = new int[vectorSize]; for (int col = 0; col < vectorSize; ++col) { int m = 0; if (columnAbsSum[col] > numWords) { double f = ((double) numWords) / columnAbsSum[col]; m = (int) Math.ceil(Math.log(2.0 - f) / -Math.log(1.0 - f)); } golombModuli[col] = m; } ShiftAddXorSignedStringMap dictionaryHash = new ShiftAddXorSignedStringMap(indexToWord.iterator(), new MinimalPerfectHashFunction.Builder<CharSequence>().keys(indexToWord).transform(TransformationStrategies.utf16()).build()); int[] permutation = new int[numWords]; for (int i = 0; i < numWords; ++i) { int newPos = dictionaryHash.get(indexToWord.get(i)).intValue(); permutation[newPos] = i; } FastByteArrayOutputStream oa = new FastByteArrayOutputStream(); OutputBitStream obs = new OutputBitStream(oa, 0); final LongArrayList endpoints = new LongArrayList(); pl.expectedUpdates = numWords; pl.start(""Compressing the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); endpoints.add(obs.writtenBits()); int rowStart = permutation[i] * vectorSize; for (int col = 0; col < vectorSize; ++col) { int entry = entries[rowStart + col]; obs.writeGolomb(Fast.int2nat(entry), golombModuli[col]); } } pl.done(); obs.close(); while (oa.length() % 4 != 0) { oa.write(0); } oa.trim(); double bps = 8.0 * oa.array.length / entries.length; logger.info(""Overall vector bit streams: {} bytes, {} bps"", oa.array.length, bps); System.out.println(bps); EliasFanoMonotoneLongBigList efEndpoints = new EliasFanoMonotoneLongBigList(endpoints); Word2VecCompress word2vec = new Word2VecCompress(numWords, vectorSize, quantizationFactor, oa.array, efEndpoints, dictionaryHash, golombModuli); if (output_filename != null) { BinIO.storeObject(word2vec, output_filename); } if (jsapResult.getBoolean(""check"")) { pl.expectedUpdates = numWords; pl.start(""Checking the output""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); int[] vec = word2vec.getInt(indexToWord.get(i)); for (int col = 0; col < vectorSize; ++col) { int expected = entries[i * vectorSize + col]; int got = vec[col]; if (expected != got) { logger.error(""Row {}, Column {}: Expected {}, got {}"", i, col, expected, got); System.exit(1); } } } pl.done(); } }","void main(String[]args){jsap(Word(),"""",new Parameter[]{UnflaggedOption(""""._,""""),(""""),Switch("""","""")});try(BufferedReader lines=(FileReader())){(header[0]).start("""");indexToWord=new ArrayList<>();for(;;){}pl();("""");for(;;){pl();("""");for(;;){entry[col]=(entry);}}done();}golombModuli[vectorSize];for(;;){if(numWords){f=((double)numWords)/columnAbsSum[col];m=(int)((2)-(f));}golombModuli[col];}((TransformationStrategies)build());permutation[numWords];for(;;){}FastByteArrayOutputStream();obs=(oa)("""");for(;;){(writtenBits());permutation[i];for(;;){entries[col].writeGolomb((entry)[col]);}}while(0){(0);}array("""",length);VecCompress();if(null){(word);}if(("""")){for(;;){((i));for(;;){expected[i];got[col];if(got){error("""",got);(1);}}}done();}}",3912,738,10,3174,81.34290107637109,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'Word2VecCompress', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a compressed representation of quantized word2vec vectors""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'UnflaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'true', ',', '""Input file""', ')', ',', 'new', 'UnflaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'false', ',', '""Compressed version""', ')', ',', 'new', 'Switch', '(', '""check""', ',', 'JSAP', '.', 'NO_SHORTFLAG', ',', '""check""', ',', '""Check correctness of output""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'String', 'input_filename', '=', 'jsapResult', '.', 'getString', '(', '""input""', ')', ';', 'String', 'output_filename', '=', 'jsapResult', '.', 'getString', '(', '""output""', ',', 'null', ')', ';', 'int', 'numWords', ',', 'vectorSize', ';', 'float', 'quantizationFactor', ';', 'List', '<', 'String', '>', 'indexToWord', ';', 'int', '[', ']', 'entries', ';', 'long', '[', ']', 'columnAbsSum', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'logger', ')', ';', 'try', '(', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'input_filename', ')', ')', ')', '{', 'String', '[', ']', 'header', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '""\\t""', ')', ';', 'numWords', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '0', ']', ')', ';', 'vectorSize', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '1', ']', ')', ';', 'quantizationFactor', '=', 'Float', '.', 'parseFloat', '(', 'header', '[', '2', ']', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the dictionary""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'indexToWord', '.', 'add', '(', 'lines', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ')', ';', '}', 'pl', '.', 'done', '(', ')', ';', 'entries', '=', 'new', 'int', '[', 'numWords', '*', 'vectorSize', ']', ';', 'columnAbsSum', '=', 'new', 'long', '[', 'vectorSize', ']', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'String', '[', ']', 'lineEntries', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '"" ""', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'Integer', '.', 'parseInt', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', '=', 'entry', ';', 'columnAbsSum', '[', 'col', ']', '+=', 'Fast', '.', 'int2nat', '(', 'entry', ')', '+', '1', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', 'int', '[', ']', 'golombModuli', '=', 'new', 'int', '[', 'vectorSize', ']', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'm', '=', '0', ';', 'if', '(', 'columnAbsSum', '[', 'col', ']', '>', 'numWords', ')', '{', 'double', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', 'Math', '.', 'ceil', '(', 'Math', '.', 'log', '(', '2.0', '-', 'f', ')', '/', '-', 'Math', '.', 'log', '(', '1.0', '-', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', '=', 'm', ';', '}', 'ShiftAddXorSignedStringMap', 'dictionaryHash', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'indexToWord', '.', 'iterator', '(', ')', ',', 'new', 'MinimalPerfectHashFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'indexToWord', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'int', '[', ']', 'permutation', '=', 'new', 'int', '[', 'numWords', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'int', 'newPos', '=', 'dictionaryHash', '.', 'get', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', '.', 'intValue', '(', ')', ';', 'permutation', '[', 'newPos', ']', '=', 'i', ';', '}', 'FastByteArrayOutputStream', 'oa', '=', 'new', 'FastByteArrayOutputStream', '(', ')', ';', 'OutputBitStream', 'obs', '=', 'new', 'OutputBitStream', '(', 'oa', ',', '0', ')', ';', 'final', 'LongArrayList', 'endpoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Compressing the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'endpoints', '.', 'add', '(', 'obs', '.', 'writtenBits', '(', ')', ')', ';', 'int', 'rowStart', '=', 'permutation', '[', 'i', ']', '*', 'vectorSize', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'entries', '[', 'rowStart', '+', 'col', ']', ';', 'obs', '.', 'writeGolomb', '(', 'Fast', '.', 'int2nat', '(', 'entry', ')', ',', 'golombModuli', '[', 'col', ']', ')', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', 'obs', '.', 'close', '(', ')', ';', 'while', '(', 'oa', '.', 'length', '(', ')', '%', '4', '!=', '0', ')', '{', 'oa', '.', 'write', '(', '0', ')', ';', '}', 'oa', '.', 'trim', '(', ')', ';', 'double', 'bps', '=', '8.0', '*', 'oa', '.', 'array', '.', 'length', '/', 'entries', '.', 'length', ';', 'logger', '.', 'info', '(', '""Overall vector bit streams: {} bytes, {} bps""', ',', 'oa', '.', 'array', '.', 'length', ',', 'bps', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'bps', ')', ';', 'EliasFanoMonotoneLongBigList', 'efEndpoints', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'endpoints', ')', ';', 'Word2VecCompress', 'word2vec', '=', 'new', 'Word2VecCompress', '(', 'numWords', ',', 'vectorSize', ',', 'quantizationFactor', ',', 'oa', '.', 'array', ',', 'efEndpoints', ',', 'dictionaryHash', ',', 'golombModuli', ')', ';', 'if', '(', 'output_filename', '!=', 'null', ')', '{', 'BinIO', '.', 'storeObject', '(', 'word2vec', ',', 'output_filename', ')', ';', '}', 'if', '(', 'jsapResult', '.', 'getBoolean', '(', '""check""', ')', ')', '{', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Checking the output""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'int', '[', ']', 'vec', '=', 'word2vec', '.', 'getInt', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'expected', '=', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', ';', 'int', 'got', '=', 'vec', '[', 'col', ']', ';', 'if', '(', 'expected', '!=', 'got', ')', '{', 'logger', '.', 'error', '(', '""Row {}, Column {}: Expected {}, got {}""', ',', 'i', ',', 'col', ',', 'expected', ',', 'got', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'jsap', '(', 'Word', '(', ')', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'UnflaggedOption', '(', '""""', '.', '_', ',', '""""', ')', ',', '(', '""""', ')', ',', 'Switch', '(', '""""', ',', '""""', ')', '}', ')', ';', 'try', '(', 'BufferedReader', 'lines', '=', '(', 'FileReader', '(', ')', ')', ')', '{', '(', 'header', '[', '0', ']', ')', '.', 'start', '(', '""""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'entry', '[', 'col', ']', '=', '(', 'entry', ')', ';', '}', '}', 'done', '(', ')', ';', '}', 'golombModuli', '[', 'vectorSize', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 'numWords', ')', '{', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', '(', '(', '2', ')', '-', '(', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', ';', '}', '(', '(', 'TransformationStrategies', ')', 'build', '(', ')', ')', ';', 'permutation', '[', 'numWords', ']', ';', 'for', '(', ';', ';', ')', '{', '}', 'FastByteArrayOutputStream', '(', ')', ';', 'obs', '=', '(', 'oa', ')', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', '(', 'writtenBits', '(', ')', ')', ';', 'permutation', '[', 'i', ']', ';', 'for', '(', ';', ';', ')', '{', 'entries', '[', 'col', ']', '.', 'writeGolomb', '(', '(', 'entry', ')', '[', 'col', ']', ')', ';', '}', '}', 'while', '(', '0', ')', '{', '(', '0', ')', ';', '}', 'array', '(', '""""', ',', 'length', ')', ';', 'VecCompress', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', 'word', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'expected', '[', 'i', ']', ';', 'got', '[', 'col', ']', ';', 'if', '(', 'got', ')', '{', 'error', '(', '""""', ',', 'got', ')', ';', '(', '1', ')', ';', '}', '}', '}', 'done', '(', ')', ';', '}', '}']",995,345,6,650,65.72295247724975
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_2.txt,0.9988,0.0016,"{'n_total': 6173, 'n_valid': 468, 'n_correct': 303}",1404.20183,"@SuppressWarnings(""null"") public static void main(String[] args) { if (catalinaHome == null) { log.error(""Must set '"" + Globals.CATALINA_HOME_PROP + ""' system property""); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (""-ant"".equals(args[index])) ant = true; else if (""-common"".equals(args[index])) common = true; else if (""-server"".equals(args[index])) server = true; else if (""-shared"".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(""ant.home"", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, ""classes"")); packed.add(new File(catalinaHome, ""lib"")); if (common) { unpacked.add(new File(catalinaHome, ""common"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""common"" + File.separator + ""lib"")); } if (server) { unpacked.add(new File(catalinaHome, ""server"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""server"" + File.separator + ""lib"")); } if (shared) { unpacked.add(new File(catalinaHome, ""shared"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""shared"" + File.separator + ""lib"")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Class loader creation threw exception"", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(""Loading application class "" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception creating instance of "" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(""Identifying main() method""); String methodName = ""main""; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception locating main() method"", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(""Calling main() method""); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(""Exception calling main() method"", t); System.exit(1); } }","void main(String[]args){if(null){(""""+"""");}while(true){if(index){(1);}("""".equals(args[index]));("""".equals());("""".equals(args[index]));("""".equals());}if(length){(1);}if(ant)System("""",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,""""));if(common){(File(catalinaHome,""""+""""));(File(catalinaHome,""""+""""));}if(shared){((""""));(File(catalinaHome,""""));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error("""",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable();(""""+t);(1);}String[args];try{if(log())("""");methodName="""";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t) {log("""");}try{("""");(paramValues);}catch(Throwable t){t();}}",2785,710,10,2075,74.77477477477478,"['@', 'SuppressWarnings', '(', '""null""', ')', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'catalinaHome', '==', 'null', ')', '{', 'log', '.', 'error', '(', '""Must set \'""', '+', 'Globals', '.', 'CATALINA_HOME_PROP', '+', '""\' system property""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'int', 'index', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'index', '==', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '""-ant""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'ant', '=', 'true', ';', 'else', 'if', '(', '""-common""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'common', '=', 'true', ';', 'else', 'if', '(', '""-server""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'server', '=', 'true', ';', 'else', 'if', '(', '""-shared""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'shared', '=', 'true', ';', 'else', 'break', ';', 'index', '++', ';', '}', 'if', '(', 'index', '>', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'System', '.', 'setProperty', '(', '""ant.home""', ',', 'catalinaHome', ')', ';', 'ClassLoader', 'classLoader', '=', 'null', ';', 'try', '{', 'ArrayList', '<', 'File', '>', 'packed', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""lib""', ')', ')', ';', 'if', '(', 'common', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'server', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'classLoader', '=', 'ClassLoaderFactory', '.', 'createClassLoader', '(', 'unpacked', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'packed', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Class loader creation threw exception""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Thread', '.', 'currentThread', '(', ')', '.', 'setContextClassLoader', '(', 'classLoader', ')', ';', 'Class', '<', '?', '>', 'clazz', '=', 'null', ';', 'String', 'className', '=', 'args', '[', 'index', '++', ']', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Loading application class ""', '+', 'className', ')', ';', 'clazz', '=', 'classLoader', '.', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception creating instance of ""', '+', 'className', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Method', 'method', '=', 'null', ';', 'String', '[', ']', 'params', '=', 'new', 'String', '[', 'args', '.', 'length', '-', 'index', ']', ';', 'System', '.', 'arraycopy', '(', 'args', ',', 'index', ',', 'params', ',', '0', ',', 'params', '.', 'length', ')', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Identifying main() method""', ')', ';', 'String', 'methodName', '=', '""main""', ';', 'Class', '<', '?', '>', '[', ']', 'paramTypes', '=', 'new', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'params', '.', 'getClass', '(', ')', ';', 'method', '=', 'clazz', '.', 'getMethod', '(', 'methodName', ',', 'paramTypes', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception locating main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Calling main() method""', ')', ';', 'Object', '[', ']', 'paramValues', '=', 'new', 'Object', '[', '1', ']', ';', 'paramValues', '[', '0', ']', '=', 'params', ';', 'method', '.', 'invoke', '(', 'null', ',', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '=', 'ExceptionUtils', '.', 'unwrapInvocationTargetException', '(', 't', ')', ';', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception calling main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'null', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'while', '(', 'true', ')', '{', 'if', '(', 'index', ')', '{', '(', '1', ')', ';', '}', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '}', 'if', '(', 'length', ')', '{', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'System', '(', '""""', ',', 'catalinaHome', ')', ';', 'try', '{', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', 'if', '(', 'common', ')', '{', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', '(', '(', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', '}', 'ClassLoaderFactory', '(', '(', 'File', '[', '0', ']', ')', ',', '(', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'error', '(', '""""', ',', 't', ')', ';', '(', '1', ')', ';', '}', 'args', '[', 'index', ']', ';', 'try', '{', 'if', '(', 'isDebugEnabled', '(', ')', ')', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'handleThrowable', '(', ')', ';', '(', '""""', '+', 't', ')', ';', '(', '1', ')', ';', '}', 'String', '[', 'args', ']', ';', 'try', '{', 'if', '(', 'log', '(', ')', ')', '(', '""""', ')', ';', 'methodName', '=', '""""', ';', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'getClass', '(', ')', ';', '(', 'methodName', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '(', '""""', ')', ';', '}', 'try', '{', '(', '""""', ')', ';', '(', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '(', ')', ';', '}', '}']",736,319,6,417,57.12328767123288
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_7.txt,0.9247,0.5879,"{'n_total': 3207, 'n_valid': 253, 'n_correct': 242}",776.889387,"@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(""Retrying reconnect ... ["").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(""Unknown command: "").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(""Network error. Server died?"").$(); LOG.debug().$(""Network error details: "").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(""Unhandled exception in client"").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(""Fatal exception when closing client"").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(""Terminated"").$(); } }","void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("""");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}",3115,549,9,2566,82.61429491307148,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'running', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_RUNNING', ')', ';', 'int', 'event', '=', 'JournalClientEvents', '.', 'EVT_NONE', ';', 'boolean', 'connected', '=', 'false', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', '!', 'connected', ')', '{', 'int', 'retryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getRetryCount', '(', ')', ';', 'int', 'loginRetryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getLoginRetryCount', '(', ')', ';', 'do', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'openChannel', '(', ')', ';', 'counter', '.', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', 'retryCount', '--', '>', '0', ')', '{', 'continue', ';', '}', 'else', '{', 'break', ';', '}', '}', 'sendProtocolVersion', '(', ')', ';', 'checkAuthAndSendCredential', '(', ')', ';', 'resubscribe', '(', ')', ';', 'sendReady', '(', ')', ';', 'connected', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_CONNECTED', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_ERROR', ')', ';', 'loginRetryCount', '--', ';', '}', 'catch', '(', 'AuthenticationConfigException', '|', 'AuthenticationProviderException', 'e', ')', '{', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_CONFIG_ERROR', ')', ';', 'return', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'info', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', '}', 'if', '(', '!', 'connected', '&&', 'retryCount', '--', '>', '0', '&&', 'loginRetryCount', '>', '0', ')', '{', 'LockSupport', '.', 'parkNanos', '(', 'TimeUnit', '.', 'MILLISECONDS', '.', 'toNanos', '(', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getSleepBetweenRetriesMillis', '(', ')', ')', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Retrying reconnect ... [""', ')', '.', '$', '(', 'retryCount', '+', '1', ')', '.', '$', '(', ""']'"", ')', '.', '$', '(', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'while', '(', 'true', ')', ';', 'if', '(', '!', 'connected', '&&', '(', 'retryCount', '==', '0', '||', 'loginRetryCount', '==', '0', ')', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_SERVER_ERROR', ';', '}', '}', 'try', '{', 'if', '(', 'connected', '&&', 'channel', '.', 'isOpen', '(', ')', '&&', 'isRunning', '(', ')', ')', '{', 'commandConsumer', '.', 'read', '(', 'channel', ')', ';', 'byte', 'cmd', '=', 'commandConsumer', '.', 'getCommand', '(', ')', ';', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', '.', 'JOURNAL_DELTA_CMD', ':', 'statsChannel', '.', 'setDelegate', '(', 'channel', ')', ';', 'int', 'index', '=', 'intResponseConsumer', '.', 'getValue', '(', 'statsChannel', ')', ';', 'deltaConsumers', '.', 'getQuick', '(', 'index', ')', '.', 'read', '(', 'statsChannel', ')', ';', 'statusSentList', '.', 'set', '(', 'index', ',', '0', ')', ';', 'statsChannel', '.', 'logStats', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_READY_CMD', ':', 'sendState', '(', ')', ';', 'sendReady', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_HEARTBEAT', ':', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', 'sendReady', '(', ')', ';', '}', 'else', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', 'break', ';', 'case', 'Command', '.', 'SERVER_SHUTDOWN', ':', 'connected', '=', 'false', ';', 'break', ';', 'default', ':', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Unknown command: ""', ')', '.', '$', '(', 'cmd', ')', '.', '$', '(', ')', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'event', '==', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_INCOMPATIBLE_JOURNAL', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Network error. Server died?""', ')', '.', '$', '(', ')', ';', 'LOG', '.', 'debug', '(', ')', '.', '$', '(', '""Network error details: ""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_SERVER_DIED', ')', ';', 'connected', '=', 'false', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Unhandled exception in client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_EXCEPTION', ';', '}', 'if', '(', 'event', '!=', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'if', '(', 'channel', '!=', 'null', '&&', 'channel', '.', 'isOpen', '(', ')', ')', '{', 'sendDisconnect', '(', ')', ';', '}', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'event', ')', ';', 'break', ';', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Fatal exception when closing client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', '}', 'finally', '{', 'running', '=', 'false', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_TERMINATED', ')', ';', 'haltLatch', '.', 'countDown', '(', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Terminated""', ')', '.', '$', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', 'RUNNING', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', 'connected', ')', '{', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'AuthenticationConfigException', 'e', ')', '{', 'close', '(', ')', ';', '(', 'JournalClientEvents', ')', ';', '}', '}', '(', 'true', ')', ';', 'if', '(', '(', 'retryCount', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'isRunning', ')', '{', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', ':', '(', 'channel', ')', ';', '(', 'statsChannel', ')', ';', '(', '0', ')', ';', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', '}', 'Command', '(', ')', ';', '}', '}', 'if', '(', 'event', ')', '{', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', '(', 'e', '(', ')', ')', '.', '$', '(', ')', '.', '$', '(', '""""', ')', ';', '}', 'if', '(', 'event', ')', '{', 'if', '(', 'channel', '(', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']",736,195,6,541,74.10958904109589
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_9.txt,0.9862,0.1066,"{'n_total': 7147, 'n_valid': 508, 'n_correct': 397}",1584.06342,"public void run() { visualUpdate(TestHandler.ACTION_SHOW, null); boolean result; visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing getPath""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ getPath ]\n""); try { List<String> paths = RootShell.getPath(); for (String path : paths) { visualUpdate(TestHandler.ACTION_DISPLAY, path + "" k\n\n""); } } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing A ton of commands""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Ton of Commands ]\n""); for (int i = 0; i < 100; i++) { RootShell.exists(""/system/xbin/busybox""); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing Find Binary""); result = RootShell.isRootAvailable(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Root ]\n""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k\n\n""); result = RootShell.isBusyboxAvailable(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Busybox ]\n""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k\n\n""); visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing file exists""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Exists() ]\n""); visualUpdate(TestHandler.ACTION_DISPLAY, RootShell.exists(""/system/sbin/["") + "" k\n\n""); visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing Is Access Given""); result = RootShell.isAccessGiven(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking for Access to Root ]\n""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k\n\n""); Shell shell; visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing output capture""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ busybox ash --help ]\n""); try { shell = RootShell.getShell(true); Command cmd = new Command(0, ""busybox ash --help"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""\n""); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Switching RootContext - SYSTEM_APP""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Switching Root Context - SYSTEM_APP ]\n""); try { shell = RootShell.getShell(true, Shell.ShellContext.SYSTEM_APP); Command cmd = new Command(0, ""id"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""\n""); super.commandOutput(id, line); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Switching RootContext - UNTRUSTED""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Switching Root Context - UNTRUSTED ]\n""); try { shell = RootShell.getShell(true, Shell.ShellContext.UNTRUSTED_APP); Command cmd = new Command(0, ""id"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""\n""); super.commandOutput(id, line); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } try { shell = RootShell.getShell(true); Command cmd = new Command(42, false, ""echo done"") { boolean _catch = false; @Override public void commandOutput(int id, String line) { if (_catch) { RootShell.log(""CAUGHT!!!""); } super.commandOutput(id, line); } @Override public void commandTerminated(int id, String reason) { synchronized (com.stericson.RootShellTests.SanityCheckRootShell.this) { _catch = true; visualUpdate(TestHandler.ACTION_PDISPLAY, ""All tests complete.""); visualUpdate(TestHandler.ACTION_HIDE, null); try { RootShell.closeAllShells(); } catch (IOException e) { e.printStackTrace(); } } } @Override public void commandCompleted(int id, int exitCode) { synchronized (com.stericson.RootShellTests.SanityCheckRootShell.this) { _catch = true; visualUpdate(TestHandler.ACTION_PDISPLAY, ""All tests complete.""); visualUpdate(TestHandler.ACTION_HIDE, null); try { RootShell.closeAllShells(); } catch (IOException e) { e.printStackTrace(); } } } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } }","void run(){(ACTION);try{getPath();for(String path:paths){(TestHandler);}}catch(Exception e){}("""");for(;;i++){("""");}visualUpdate(_,"""");result();visualUpdate(DISPLAY,"""");visualUpdate(TestHandler,"""");visualUpdate(DISPLAY,"""");("""");("""");visualUpdate(PDISPLAY,"""");("""");try{new Command(){commandOutput(int id,String line){("""");}}.add();}catch(Exception e){}("""");try{(true);new Command(0,""""){Override(int id,String line){("""");(id);}}.add();}catch(Exception e){}("""");("""");try{shell();Command=new Command(){commandOutput(int id,String line){(id);}}.add();}catch(Exception e){}try{shell=new Command(""""){_(int id,String line){if(_){("""");}commandOutput();}commandTerminated(int id,String reason){synchronized(com){visualUpdate(PDISPLAY,"""");(TestHandler);try{}catch(IOException e){printStackTrace();}}}commandCompleted(int id,int exitCode){synchronized(com){visualUpdate(PDISPLAY,"""");(TestHandler);try{}catch(IOException e){printStackTrace();}}}};}catch(Exception e){printStackTrace();}}",3894,973,9,2921,75.18661518661519,"['public', 'void', 'run', '(', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_SHOW', ',', 'null', ')', ';', 'boolean', 'result', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing getPath""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ getPath ]\\n""', ')', ';', 'try', '{', 'List', '<', 'String', '>', 'paths', '=', 'RootShell', '.', 'getPath', '(', ')', ';', 'for', '(', 'String', 'path', ':', 'paths', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'path', '+', '"" k\\n\\n""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing A ton of commands""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Ton of Commands ]\\n""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '++', ')', '{', 'RootShell', '.', 'exists', '(', '""/system/xbin/busybox""', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing Find Binary""', ')', ';', 'result', '=', 'RootShell', '.', 'isRootAvailable', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Root ]\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\\n\\n""', ')', ';', 'result', '=', 'RootShell', '.', 'isBusyboxAvailable', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Busybox ]\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\\n\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing file exists""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Exists() ]\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'RootShell', '.', 'exists', '(', '""/system/sbin/[""', ')', '+', '"" k\\n\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing Is Access Given""', ')', ';', 'result', '=', 'RootShell', '.', 'isAccessGiven', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking for Access to Root ]\\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\\n\\n""', ')', ';', 'Shell', 'shell', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing output capture""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ busybox ash --help ]\\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""busybox ash --help""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\\n""', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Switching RootContext - SYSTEM_APP""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Switching Root Context - SYSTEM_APP ]\\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ',', 'Shell', '.', 'ShellContext', '.', 'SYSTEM_APP', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""id""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\\n""', ')', ';', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Switching RootContext - UNTRUSTED""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Switching Root Context - UNTRUSTED ]\\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ',', 'Shell', '.', 'ShellContext', '.', 'UNTRUSTED_APP', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""id""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\\n""', ')', ';', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '42', ',', 'false', ',', '""echo done""', ')', '{', 'boolean', '_catch', '=', 'false', ';', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'if', '(', '_catch', ')', '{', 'RootShell', '.', 'log', '(', '""CAUGHT!!!""', ')', ';', '}', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '@', 'Override', 'public', 'void', 'commandTerminated', '(', 'int', 'id', ',', 'String', 'reason', ')', '{', 'synchronized', '(', 'com', '.', 'stericson', '.', 'RootShellTests', '.', 'SanityCheckRootShell', '.', 'this', ')', '{', '_catch', '=', 'true', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""All tests complete.""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_HIDE', ',', 'null', ')', ';', 'try', '{', 'RootShell', '.', 'closeAllShells', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '@', 'Override', 'public', 'void', 'commandCompleted', '(', 'int', 'id', ',', 'int', 'exitCode', ')', '{', 'synchronized', '(', 'com', '.', 'stericson', '.', 'RootShellTests', '.', 'SanityCheckRootShell', '.', 'this', ')', '{', '_catch', '=', 'true', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""All tests complete.""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_HIDE', ',', 'null', ')', ';', 'try', '{', 'RootShell', '.', 'closeAllShells', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', 'ACTION', ')', ';', 'try', '{', 'getPath', '(', ')', ';', 'for', '(', 'String', 'path', ':', 'paths', ')', '{', '(', 'TestHandler', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', '""""', ')', ';', '}', 'visualUpdate', '(', '_', ',', '""""', ')', ';', 'result', '(', ')', ';', 'visualUpdate', '(', 'DISPLAY', ',', '""""', ')', ';', 'visualUpdate', '(', 'TestHandler', ',', '""""', ')', ';', 'visualUpdate', '(', 'DISPLAY', ',', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', '""""', ')', ';', 'try', '{', 'new', 'Command', '(', ')', '{', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', '""""', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', 'try', '{', '(', 'true', ')', ';', 'new', 'Command', '(', '0', ',', '""""', ')', '{', 'Override', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', '""""', ')', ';', '(', 'id', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', '(', '""""', ')', ';', 'try', '{', 'shell', '(', ')', ';', 'Command', '=', 'new', 'Command', '(', ')', '{', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', 'id', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'try', '{', 'shell', '=', 'new', 'Command', '(', '""""', ')', '{', '_', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'if', '(', '_', ')', '{', '(', '""""', ')', ';', '}', 'commandOutput', '(', ')', ';', '}', 'commandTerminated', '(', 'int', 'id', ',', 'String', 'reason', ')', '{', 'synchronized', '(', 'com', ')', '{', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', 'TestHandler', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}', '}', 'commandCompleted', '(', 'int', 'id', ',', 'int', 'exitCode', ')', '{', 'synchronized', '(', 'com', ')', '{', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', 'TestHandler', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",791,369,6,422,53.75796178343949
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,run_8.txt,0.9478,0.0795,"{'n_total': 3761, 'n_valid': 269, 'n_correct': 268}",830.105669,"@Override public void run() { logger.trace(""host proxy port "" + this.localport + "" for "" + host + "" started""); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(""Proxy server cannot connect to "" + host + "":"" + remoteport + "":\n"" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }","void run(){("""");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(""""+"""");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}",1762,577,9,1185,67.59840273816314,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'logger', '.', 'trace', '(', '""host proxy port ""', '+', 'this', '.', 'localport', '+', '"" for ""', '+', 'host', '+', '"" started""', ')', ';', 'stop', '=', 'false', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'final', 'byte', '[', ']', 'request', '=', 'new', 'byte', '[', '1024', ']', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '4096', ']', ';', 'while', '(', '!', 'stop', ')', '{', 'try', '{', 'client', '=', 'ss', '.', 'accept', '(', ')', ';', 'final', 'InputStream', 'fromClient', '=', 'client', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toClient', '=', 'client', '.', 'getOutputStream', '(', ')', ';', 'try', '{', 'server', '=', 'new', 'Socket', '(', 'host', ',', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'PrintWriter', 'out', '=', 'new', 'PrintWriter', '(', 'new', 'OutputStreamWriter', '(', 'toClient', ')', ')', ';', 'out', '.', 'println', '(', '""Proxy server cannot connect to ""', '+', 'host', '+', '"":""', '+', 'remoteport', '+', '"":\\n""', '+', 'e', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'client', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'final', 'InputStream', 'fromServer', '=', 'server', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toServer', '=', 'server', '.', 'getOutputStream', '(', ')', ';', 'new', 'Thread', '(', '(', ')', '->', '{', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromClient', '.', 'read', '(', 'request', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'delay', '>', '0', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'toServer', '.', 'write', '(', 'request', ',', '0', ',', 'bytesRead', ')', ';', 'toServer', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'try', '{', 'toServer', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'start', '(', ')', ';', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromServer', '.', 'read', '(', 'reply', ')', ')', '!=', '-', '1', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '1', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'toClient', '.', 'write', '(', 'reply', ',', '0', ',', 'bytesRead', ')', ';', 'toClient', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'toClient', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'finally', '{', 'try', '{', 'if', '(', 'server', '!=', 'null', ')', '{', 'server', '.', 'close', '(', ')', ';', '}', 'if', '(', 'client', '!=', 'null', ')', '{', 'client', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'newbyte', '[', '1', ']', ';', 'reply', '[', '6', ']', ';', 'while', '(', 'stop', ')', '{', 'try', '{', 'client', '(', ')', ';', 'try', '{', '(', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'fromServer', '(', ')', ';', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '(', 'request', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', 'bytesRead', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'try', '{', 'if', '(', 'server', ')', '{', 'close', '(', ')', ';', '}', 'if', '(', 'client', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",488,228,6,260,53.94190871369295
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,hashCode_1.txt,0.9986,0.0019,"{'n_total': 2710, 'n_valid': 222, 'n_correct': 222}",719.418686,"@SuppressWarnings(""SimplifiableIfStatement"") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }",int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);},4847,523,14,4324,89.46823918890958,"['@', 'SuppressWarnings', '(', '""SimplifiableIfStatement""', ')', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'user', '!=', 'null', '?', 'user', '.', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '31', '*', 'result', '+', '(', 'password', '!=', 'null', '?', 'password', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverSslCert', '!=', 'null', '?', 'serverSslCert', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStore', '!=', 'null', '?', 'trustStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStorePassword', '!=', 'null', '?', 'trustStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStore', '!=', 'null', '?', 'keyStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStorePassword', '!=', 'null', '?', 'keyStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyPassword', '!=', 'null', '?', 'keyPassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslProtocolSuites', '!=', 'null', '?', 'enabledSslProtocolSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pinGlobalTxToPhysicalConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketFactory', '!=', 'null', '?', 'socketFactory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'connectTimeout', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pipe', '!=', 'null', '?', 'pipe', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocket', '!=', 'null', '?', 'localSocket', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sharedMemory', '!=', 'null', '?', 'sharedMemory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpNoDelay', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpKeepAlive', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpRcvBuf', '!=', 'null', '?', 'tcpRcvBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpSndBuf', '!=', 'null', '?', 'tcpSndBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpAbortiveClose', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocketAddress', '!=', 'null', '?', 'localSocketAddress', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketTimeout', '!=', 'null', '?', 'socketTimeout', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMultiQueries', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'rewriteBatchedStatements', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'interactiveClient', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'passwordCharacterEncoding', '!=', 'null', '?', 'passwordCharacterEncoding', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useSsl', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslCipherSuites', '!=', 'null', '?', 'enabledSslCipherSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sessionVariables', '!=', 'null', '?', 'sessionVariables', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tinyInt1isBit', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'yearIsDateType', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'createDatabaseIfNotExist', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverTimezone', '!=', 'null', '?', 'serverTimezone', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'nullCatalogMeansCurrent', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'dumpQueriesOnException', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useOldAliasMetadataBehavior', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowLocalInfile', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cachePrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSqlLimit', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useLegacyDatetimeCode', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'maximizeMysqlCompatibility', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useServerPrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cacheCallableStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'callableStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'connectionAttributes', '!=', 'null', '?', 'connectionAttributes', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBatchMultiSend', '!=', 'null', '?', 'useBatchMultiSend', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'useBatchMultiSendNumber', ';', 'result', '=', '31', '*', 'result', '+', '(', 'usePipelineAuth', '!=', 'null', '?', 'usePipelineAuth', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enablePacketDebug', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBulkStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'disableSslHostnameVerification', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'log', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'profileSql', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxQuerySizeToLog', ';', 'result', '=', '31', '*', 'result', '+', '(', 'slowQueryThresholdNanos', '!=', 'null', '?', 'slowQueryThresholdNanos', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'assureReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autoReconnect', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'failOnReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMasterDownConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'retriesAllDown', ';', 'result', '=', '31', '*', 'result', '+', 'validConnectionTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'loadBalanceBlacklistTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'failoverLoopRetries', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'registerJmxPool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useResetConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'staticGlobal', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'poolName', '!=', 'null', '?', 'poolName', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxPoolSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'minPoolSize', '!=', 'null', '?', 'minPoolSize', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxIdleTime', ';', 'result', '=', '31', '*', 'result', '+', 'poolValidMinDelay', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autocommit', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'null', '?', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '1', '*', '(', 'password', '?', 'hashCode', '(', ')', ':', '0', ')', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', '(', 'keyPassword', '?', 'enabledSslProtocolSuites', ':', '0', ')', ';', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'socketFactory', '?', 'socketFactory', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'pipe', '?', 'localSocket', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'sharedMemory', ')', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '(', 'interactiveClient', '?', '1', ':', '0', ')', '+', '(', 'useSsl', '?', '1', ':', '0', ')', '*', '(', 'sessionVariables', '?', 'sessionVariables', ':', '0', ')', '*', '(', '1', ')', ';', 'result', '=', '1', '*', '(', 'createDatabaseIfNotExist', ')', ';', 'result', '=', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'minPoolSize', '?', 'hashCode', ':', '0', ')', ';', '(', 'autocommit', '?', '1', ':', '0', ')', ';', '}']",1202,169,6,1033,86.37123745819399
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_9.txt,1.0,0.0,"{'n_total': 1653, 'n_valid': 157, 'n_correct': 157}",459.31458,"public static void main(String[] args) throws CryptoException { JPAKEPrimeOrderGroup group = JPAKEPrimeOrderGroups.NIST_3072; BigInteger p = group.getP(); BigInteger q = group.getQ(); BigInteger g = group.getG(); String alicePassword = ""password""; String bobPassword = ""password""; System.out.println(""********* Initialization **********""); System.out.println(""Public parameters for the cyclic group:""); System.out.println(""p ("" + p.bitLength() + "" bits): "" + p.toString(16)); System.out.println(""q ("" + q.bitLength() + "" bits): "" + q.toString(16)); System.out.println(""g ("" + p.bitLength() + "" bits): "" + g.toString(16)); System.out.println(""p mod q = "" + p.mod(q).toString(16)); System.out.println(""g^{q} mod p = "" + g.modPow(q, p).toString(16)); System.out.println(""""); System.out.println(""(Secret passwords used by Alice and Bob: "" + ""\"""" + alicePassword + ""\"" and \"""" + bobPassword + ""\"")\n""); Digest digest = new SHA256Digest(); SecureRandom random = new SecureRandom(); JPAKEParticipant alice = new JPAKEParticipant(""alice"", alicePassword.toCharArray(), group, digest, random); JPAKEParticipant bob = new JPAKEParticipant(""bob"", bobPassword.toCharArray(), group, digest, random); JPAKERound1Payload aliceRound1Payload = alice.createRound1PayloadToSend(); JPAKERound1Payload bobRound1Payload = bob.createRound1PayloadToSend(); System.out.println(""************ Round 1 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""g^{x1}="" + aliceRound1Payload.getGx1().toString(16)); System.out.println(""g^{x2}="" + aliceRound1Payload.getGx2().toString(16)); System.out.println(""KP{x1}={"" + aliceRound1Payload.getKnowledgeProofForX1()[0].toString(16) + ""};{"" + aliceRound1Payload.getKnowledgeProofForX1()[1].toString(16) + ""}""); System.out.println(""KP{x2}={"" + aliceRound1Payload.getKnowledgeProofForX2()[0].toString(16) + ""};{"" + aliceRound1Payload.getKnowledgeProofForX2()[1].toString(16) + ""}""); System.out.println(""""); System.out.println(""Bob sends to Alice: ""); System.out.println(""g^{x3}="" + bobRound1Payload.getGx1().toString(16)); System.out.println(""g^{x4}="" + bobRound1Payload.getGx2().toString(16)); System.out.println(""KP{x3}={"" + bobRound1Payload.getKnowledgeProofForX1()[0].toString(16) + ""};{"" + bobRound1Payload.getKnowledgeProofForX1()[1].toString(16) + ""}""); System.out.println(""KP{x4}={"" + bobRound1Payload.getKnowledgeProofForX2()[0].toString(16) + ""};{"" + bobRound1Payload.getKnowledgeProofForX2()[1].toString(16) + ""}""); System.out.println(""""); alice.validateRound1PayloadReceived(bobRound1Payload); System.out.println(""Alice checks g^{x4}!=1: OK""); System.out.println(""Alice checks KP{x3}: OK""); System.out.println(""Alice checks KP{x4}: OK""); System.out.println(""""); bob.validateRound1PayloadReceived(aliceRound1Payload); System.out.println(""Bob checks g^{x2}!=1: OK""); System.out.println(""Bob checks KP{x1},: OK""); System.out.println(""Bob checks KP{x2},: OK""); System.out.println(""""); JPAKERound2Payload aliceRound2Payload = alice.createRound2PayloadToSend(); JPAKERound2Payload bobRound2Payload = bob.createRound2PayloadToSend(); System.out.println(""************ Round 2 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""A="" + aliceRound2Payload.getA().toString(16)); System.out.println(""KP{x2*s}={"" + aliceRound2Payload.getKnowledgeProofForX2s()[0].toString(16) + ""},{"" + aliceRound2Payload.getKnowledgeProofForX2s()[1].toString(16) + ""}""); System.out.println(""""); System.out.println(""Bob sends to Alice""); System.out.println(""B="" + bobRound2Payload.getA().toString(16)); System.out.println(""KP{x4*s}={"" + bobRound2Payload.getKnowledgeProofForX2s()[0].toString(16) + ""},{"" + bobRound2Payload.getKnowledgeProofForX2s()[1].toString(16) + ""}""); System.out.println(""""); alice.validateRound2PayloadReceived(bobRound2Payload); System.out.println(""Alice checks KP{x4*s}: OK\n""); bob.validateRound2PayloadReceived(aliceRound2Payload); System.out.println(""Bob checks KP{x2*s}: OK\n""); BigInteger aliceKeyingMaterial = alice.calculateKeyingMaterial(); BigInteger bobKeyingMaterial = bob.calculateKeyingMaterial(); System.out.println(""********* After round 2 ***********""); System.out.println(""Alice computes key material \t K="" + aliceKeyingMaterial.toString(16)); System.out.println(""Bob computes key material \t K="" + bobKeyingMaterial.toString(16)); System.out.println(); BigInteger aliceKey = deriveSessionKey(aliceKeyingMaterial); BigInteger bobKey = deriveSessionKey(bobKeyingMaterial); JPAKERound3Payload aliceRound3Payload = alice.createRound3PayloadToSend(aliceKeyingMaterial); JPAKERound3Payload bobRound3Payload = bob.createRound3PayloadToSend(bobKeyingMaterial); System.out.println(""************ Round 3 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""MacTag="" + aliceRound3Payload.getMacTag().toString(16)); System.out.println(""""); System.out.println(""Bob sends to Alice: ""); System.out.println(""MacTag="" + bobRound3Payload.getMacTag().toString(16)); System.out.println(""""); alice.validateRound3PayloadReceived(bobRound3Payload, aliceKeyingMaterial); System.out.println(""Alice checks MacTag: OK\n""); bob.validateRound3PayloadReceived(aliceRound3Payload, bobKeyingMaterial); System.out.println(""Bob checks MacTag: OK\n""); System.out.println(); System.out.println(""MacTags validated, therefore the keying material matches.""); }","void main(String[]args)throws CryptoException{("""");(""""+""""+toString());(""""+(6));(""""+toString());("""".toString());("""");alice("""",random);(Payload);("""");(aliceRound);("""");(""""+(6));(""""+(6));(bobKeyingMaterial);("""");}",5344,210,10,5134,96.25046869141356,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', 'JPAKEPrimeOrderGroup', 'group', '=', 'JPAKEPrimeOrderGroups', '.', 'NIST_3072', ';', 'BigInteger', 'p', '=', 'group', '.', 'getP', '(', ')', ';', 'BigInteger', 'q', '=', 'group', '.', 'getQ', '(', ')', ';', 'BigInteger', 'g', '=', 'group', '.', 'getG', '(', ')', ';', 'String', 'alicePassword', '=', '""password""', ';', 'String', 'bobPassword', '=', '""password""', ';', 'System', '.', 'out', '.', 'println', '(', '""********* Initialization **********""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Public parameters for the cyclic group:""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""p (""', '+', 'p', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'p', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""q (""', '+', 'q', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'q', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g (""', '+', 'p', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'g', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""p mod q = ""', '+', 'p', '.', 'mod', '(', 'q', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{q} mod p = ""', '+', 'g', '.', 'modPow', '(', 'q', ',', 'p', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""(Secret passwords used by Alice and Bob: ""', '+', '""\\""""', '+', 'alicePassword', '+', '""\\"" and \\""""', '+', 'bobPassword', '+', '""\\"")\\n""', ')', ';', 'Digest', 'digest', '=', 'new', 'SHA256Digest', '(', ')', ';', 'SecureRandom', 'random', '=', 'new', 'SecureRandom', '(', ')', ';', 'JPAKEParticipant', 'alice', '=', 'new', 'JPAKEParticipant', '(', '""alice""', ',', 'alicePassword', '.', 'toCharArray', '(', ')', ',', 'group', ',', 'digest', ',', 'random', ')', ';', 'JPAKEParticipant', 'bob', '=', 'new', 'JPAKEParticipant', '(', '""bob""', ',', 'bobPassword', '.', 'toCharArray', '(', ')', ',', 'group', ',', 'digest', ',', 'random', ')', ';', 'JPAKERound1Payload', 'aliceRound1Payload', '=', 'alice', '.', 'createRound1PayloadToSend', '(', ')', ';', 'JPAKERound1Payload', 'bobRound1Payload', '=', 'bob', '.', 'createRound1PayloadToSend', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 1 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x1}=""', '+', 'aliceRound1Payload', '.', 'getGx1', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x2}=""', '+', 'aliceRound1Payload', '.', 'getGx2', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x1}={""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x2}={""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x3}=""', '+', 'bobRound1Payload', '.', 'getGx1', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x4}=""', '+', 'bobRound1Payload', '.', 'getGx2', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x3}={""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x4}={""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound1PayloadReceived', '(', 'bobRound1Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks g^{x4}!=1: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x3}: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x4}: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'bob', '.', 'validateRound1PayloadReceived', '(', 'aliceRound1Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks g^{x2}!=1: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x1},: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x2},: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'JPAKERound2Payload', 'aliceRound2Payload', '=', 'alice', '.', 'createRound2PayloadToSend', '(', ')', ';', 'JPAKERound2Payload', 'bobRound2Payload', '=', 'bob', '.', 'createRound2PayloadToSend', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 2 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""A=""', '+', 'aliceRound2Payload', '.', 'getA', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x2*s}={""', '+', 'aliceRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""},{""', '+', 'aliceRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""B=""', '+', 'bobRound2Payload', '.', 'getA', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x4*s}={""', '+', 'bobRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""},{""', '+', 'bobRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound2PayloadReceived', '(', 'bobRound2Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x4*s}: OK\\n""', ')', ';', 'bob', '.', 'validateRound2PayloadReceived', '(', 'aliceRound2Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x2*s}: OK\\n""', ')', ';', 'BigInteger', 'aliceKeyingMaterial', '=', 'alice', '.', 'calculateKeyingMaterial', '(', ')', ';', 'BigInteger', 'bobKeyingMaterial', '=', 'bob', '.', 'calculateKeyingMaterial', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""********* After round 2 ***********""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice computes key material \\t K=""', '+', 'aliceKeyingMaterial', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob computes key material \\t K=""', '+', 'bobKeyingMaterial', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'BigInteger', 'aliceKey', '=', 'deriveSessionKey', '(', 'aliceKeyingMaterial', ')', ';', 'BigInteger', 'bobKey', '=', 'deriveSessionKey', '(', 'bobKeyingMaterial', ')', ';', 'JPAKERound3Payload', 'aliceRound3Payload', '=', 'alice', '.', 'createRound3PayloadToSend', '(', 'aliceKeyingMaterial', ')', ';', 'JPAKERound3Payload', 'bobRound3Payload', '=', 'bob', '.', 'createRound3PayloadToSend', '(', 'bobKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 3 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTag=""', '+', 'aliceRound3Payload', '.', 'getMacTag', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTag=""', '+', 'bobRound3Payload', '.', 'getMacTag', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound3PayloadReceived', '(', 'bobRound3Payload', ',', 'aliceKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks MacTag: OK\\n""', ')', ';', 'bob', '.', 'validateRound3PayloadReceived', '(', 'aliceRound3Payload', ',', 'bobKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks MacTag: OK\\n""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTags validated, therefore the keying material matches.""', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', '(', '""""', ')', ';', '(', '""""', '+', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '.', 'toString', '(', ')', ')', ';', '(', '""""', ')', ';', 'alice', '(', '""""', ',', 'random', ')', ';', '(', 'Payload', ')', ';', '(', '""""', ')', ';', '(', 'aliceRound', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', 'bobKeyingMaterial', ')', ';', '(', '""""', ')', ';', '}']",1129,101,6,1028,91.54051647373107
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,main_8.txt,0.9744,0.0316,"{'n_total': 4298, 'n_valid': 345, 'n_correct': 297}",1045.376951,"public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print(""Enter your email address and press enter : ""); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print(""Please enter a valid email address and press enter : ""); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println(""Unable to get the OAuth token. Please check the config.properties file.""); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser(""tom"", ""tom@mobx.com"", true); if (!status) { System.out.println(""Unable to create the admin user. Please check the config.properties file.""); System.exit(0); } status = UserOperations.changePassword(""tom"", ""tomemm""); if (!status) { System.out.println(""Unable to change the password of the admin user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createUser(""kim"", email, false); if (!status) { System.out.println(""Unable to create the emm user Kim. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.changePassword(""kim"", ""kimemm""); if (!status) { System.out.println(""Unable to change the password of the emm user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { ""kim"" }); if (!status) { System.out.println(""Unable to create the emm user role. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""android-passcode-policy1"", Constants.DeviceType.ANDROID); if (!status) { System.out.println(""Unable to create the android passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""windows-passcode-policy1"", Constants.DeviceType.WINDOWS); if (!status) { System.out.println(""Unable to create the windows passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""ios-passcode-policy1"", Constants.DeviceType.IOS); if (!status) { System.out.println(""Unable to create the ios passcode policy. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, ""catalog.apk"", ""application/vnd.android.package-archive""); if (application == null) { System.out.println(""Unable to upload the sample android application. Terminating the EMM QSG now.""); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println(""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""Catalog"", application, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, ""PNDemo.ipa"", ""application/octet-stream""); iOSApplication.setVersion(""1.0.0""); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println(""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""WSO2Con"", iOSApplication, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } }","void main(String[]args){if((email)){{("""");}((email));}getOAuthToken();if(token){("""");(0);}createUser("""","""",true);if(status){("""");(0);}("""");if(status){("""");(0);}status("""",false);if(status){System();}("""");if(status){("""");}(new String[]{""""});if(status){("""");(0);}("""".ANDROID);if(status){("""");}createPasscodePolicy("""",Constants);if(status){("""");}MobileApplication(Constants,"""");if(application){("""");}uploadAssets();(application="""");uploadAssets();if(iOSApplication){}addApplication("""",true);if(status){("""");(0);}}",3615,509,10,3106,86.15811373092926,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'boolean', 'status', '=', 'false', ';', 'Scanner', 'scanner', '=', 'new', 'Scanner', '(', 'System', '.', 'in', ')', ';', 'System', '.', 'out', '.', 'print', '(', '""Enter your email address and press enter : ""', ')', ';', 'String', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', 'if', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', '{', 'do', '{', 'System', '.', 'out', '.', 'print', '(', '""Please enter a valid email address and press enter : ""', ')', ';', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', '}', 'while', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', ';', '}', 'String', 'token', '=', 'QSGUtils', '.', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to get the OAuth token. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'HTTPInvoker', '.', 'oAuthToken', '=', 'token', ';', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""tom""', ',', '""tom@mobx.com""', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the admin user. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""tom""', ',', '""tomemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the admin user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""kim""', ',', 'email', ',', 'false', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user Kim. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""kim""', ',', '""kimemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the emm user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createRole', '(', 'Constants', '.', 'EMM_USER_ROLE', ',', 'new', 'String', '[', ']', '{', '""kim""', '}', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user role. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""android-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the android passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""windows-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'WINDOWS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the windows passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""ios-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'IOS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the ios passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'application', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', '""catalog.apk""', ',', '""application/vnd.android.package-archive""', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'application', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', 'application', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""Catalog""', ',', 'application', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'iOSApplication', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', '""PNDemo.ipa""', ',', '""application/octet-stream""', ')', ';', 'iOSApplication', '.', 'setVersion', '(', '""1.0.0""', ')', ';', 'iOSApplication', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', 'iOSApplication', ')', ';', 'if', '(', 'iOSApplication', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""WSO2Con""', ',', 'iOSApplication', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'email', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'email', ')', ')', ';', '}', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'createUser', '(', '""""', ',', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'status', '(', '""""', ',', 'false', ')', ';', 'if', '(', 'status', ')', '{', 'System', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', '.', 'ANDROID', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'createPasscodePolicy', '(', '""""', ',', 'Constants', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'MobileApplication', '(', 'Constants', ',', '""""', ')', ';', 'if', '(', 'application', ')', '{', '(', '""""', ')', ';', '}', 'uploadAssets', '(', ')', ';', '(', 'application', '=', '""""', ')', ';', 'uploadAssets', '(', ')', ';', 'if', '(', 'iOSApplication', ')', '{', '}', 'addApplication', '(', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '}']",641,235,6,406,63.93700787401575
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,execute_9.txt,0.8111,0.466,"{'n_total': 7963, 'n_valid': 1011, 'n_correct': 361}",2970.59659,"@Override public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException { JSONObject result = null; if (sEnableLogging) { Log.i(TAG, ""********************* execute action="" + action); } if (action.equals(""setCallbackOnGenericMotionEvent"")) { sCallbackOnGenericMotionEvent = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnGenericMotionEvent.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyUp"")) { sCallbackOnKeyUp = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyUp.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyDown"")) { sCallbackOnKeyDown = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyDown.sendPluginResult(pluginResult); return true; } else if (action.equals(""initOuyaPlugin"")) { sCallbackInitOuyaPlugin = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""initOuyaPlugin failed to read argument!""); sCallbackInitOuyaPlugin.error(result); return true; } } else { result = createError(0, ""initOuyaPlugin arg1 is null!""); sCallbackInitOuyaPlugin.error(result); return true; } initOuyaPlugin(jsonArray); return true; } else if (action.equals(""requestGamerInfo"")) { sCallbackRequestGamerInfo = callbackContext; requestGamerInfo(); return true; } else if (action.equals(""requestProducts"")) { sCallbackRequestProducts = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""requestProducts failed to read argument!""); sCallbackRequestProducts.error(result); return true; } } else { result = createError(0, ""requestProducts arg1 is null!""); sCallbackRequestProducts.error(result); return true; } requestProducts(jsonArray); return true; } else if (action.equals(""requestPurchase"")) { sCallbackRequestPurchase = callbackContext; String identifier = null; if (args.length() > 0) { try { Log.i(TAG, ""requestPurchase identifier="" + args.getString(0)); identifier = args.getString(0); } catch (Exception e) { result = createError(0, ""requestPurchase failed to read argument!""); sCallbackRequestPurchase.error(result); return true; } } else { result = createError(0, ""requestPurchase arg1 is null!""); sCallbackRequestPurchase.error(result); return true; } requestPurchase(identifier); return true; } else if (action.equals(""requestReceipts"")) { sCallbackRequestReceipts = callbackContext; requestReceipts(); return true; } else if (action.equals(""setSafeArea"")) { float amount = 0f; if (args.length() > 0) { try { Log.i(TAG, ""setSafeArea identifier="" + args.getString(0)); amount = (float) args.getDouble(0); } catch (Exception e) { result = createError(0, ""setSafeArea failed to read argument!""); callbackContext.error(result); return true; } } else { result = createError(0, ""setSafeArea arg1 is null!""); callbackContext.error(result); return true; } setSafeArea(callbackContext, amount); return true; } else if (action.equals(""getDeviceHardware"")) { getDeviceHardware(callbackContext); return true; } else if (action.equals(""shutdown"")) { shutdown(callbackContext); return true; } return false; }","boolean execute(CallbackContext callbackContext)throws JSONException{if(sEnableLogging){(""""+action);}if(("""")){(PluginResult);}if(("""")){pluginResult=(pluginResult)("""");(true);}if(("""")){if(0){try{((0));}catch(Exception e){("""");}}{result(0,"""");}}if(("""")){if(args){try{(get().toString);}catch(Exception e){result(0,"""");}createError(0,"""");}}if(("""")){if(args){try{(""""+args);getString();}catch(Exception e){createError(0,"""").error();}createError(0,"""");}}if(("""")){if(0){try{("""".getString());amount=(float)args;}catch(Exception e){result(0,"""").error();}}{createError(0,"""");(result);}(amount);}if(equals()){}}",3543,599,13,2944,83.39943342776203,"['@', 'Override', 'public', 'boolean', 'execute', '(', 'String', 'action', ',', 'JSONArray', 'args', ',', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'JSONObject', 'result', '=', 'null', ';', 'if', '(', 'sEnableLogging', ')', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""********************* execute action=""', '+', 'action', ')', ';', '}', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnGenericMotionEvent""', ')', ')', '{', 'sCallbackOnGenericMotionEvent', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnGenericMotionEvent', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyUp""', ')', ')', '{', 'sCallbackOnKeyUp', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyUp', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyDown""', ')', ')', '{', 'sCallbackOnKeyDown', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyDown', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""initOuyaPlugin""', ')', ')', '{', 'sCallbackInitOuyaPlugin', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin failed to read argument!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin arg1 is null!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'initOuyaPlugin', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestGamerInfo""', ')', ')', '{', 'sCallbackRequestGamerInfo', '=', 'callbackContext', ';', 'requestGamerInfo', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestProducts""', ')', ')', '{', 'sCallbackRequestProducts', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts failed to read argument!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts arg1 is null!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestProducts', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestPurchase""', ')', ')', '{', 'sCallbackRequestPurchase', '=', 'callbackContext', ';', 'String', 'identifier', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""requestPurchase identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'identifier', '=', 'args', '.', 'getString', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase failed to read argument!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase arg1 is null!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestPurchase', '(', 'identifier', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestReceipts""', ')', ')', '{', 'sCallbackRequestReceipts', '=', 'callbackContext', ';', 'requestReceipts', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setSafeArea""', ')', ')', '{', 'float', 'amount', '=', '0f', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""setSafeArea identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', '.', 'getDouble', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea failed to read argument!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea arg1 is null!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'setSafeArea', '(', 'callbackContext', ',', 'amount', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""getDeviceHardware""', ')', ')', '{', 'getDeviceHardware', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""shutdown""', ')', ')', '{', 'shutdown', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'execute', '(', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'if', '(', 'sEnableLogging', ')', '{', '(', '""""', '+', 'action', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'PluginResult', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'pluginResult', '=', '(', 'pluginResult', ')', '(', '""""', ')', ';', '(', 'true', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '(', '(', '0', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', 'get', '(', ')', '.', 'toString', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', '""""', '+', 'args', ')', ';', 'getString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '(', '""""', '.', 'getString', '(', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', '}', '{', 'createError', '(', '0', ',', '""""', ')', ';', '(', 'result', ')', ';', '}', '(', 'amount', ')', ';', '}', 'if', '(', 'equals', '(', ')', ')', '{', '}', '}']",726,271,6,455,63.19444444444444
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,execute_12.txt,0.7969,0.5802,"{'n_total': 8197, 'n_valid': 1179, 'n_correct': 360}",3424.774948,"@Override public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException { JSONObject result = null; if (sEnableLogging) { Log.i(TAG, ""********************* execute action="" + action); } if (action.equals(""setCallbackOnGenericMotionEvent"")) { sCallbackOnGenericMotionEvent = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnGenericMotionEvent.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyUp"")) { sCallbackOnKeyUp = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyUp.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyDown"")) { sCallbackOnKeyDown = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyDown.sendPluginResult(pluginResult); return true; } else if (action.equals(""initOuyaPlugin"")) { sCallbackInitOuyaPlugin = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""initOuyaPlugin failed to read argument!""); sCallbackInitOuyaPlugin.error(result); return true; } } else { result = createError(0, ""initOuyaPlugin arg1 is null!""); sCallbackInitOuyaPlugin.error(result); return true; } initOuyaPlugin(jsonArray); return true; } else if (action.equals(""requestGamerInfo"")) { sCallbackRequestGamerInfo = callbackContext; requestGamerInfo(); return true; } else if (action.equals(""requestProducts"")) { sCallbackRequestProducts = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""requestProducts failed to read argument!""); sCallbackRequestProducts.error(result); return true; } } else { result = createError(0, ""requestProducts arg1 is null!""); sCallbackRequestProducts.error(result); return true; } requestProducts(jsonArray); return true; } else if (action.equals(""requestPurchase"")) { sCallbackRequestPurchase = callbackContext; String identifier = null; if (args.length() > 0) { try { Log.i(TAG, ""requestPurchase identifier="" + args.getString(0)); identifier = args.getString(0); } catch (Exception e) { result = createError(0, ""requestPurchase failed to read argument!""); sCallbackRequestPurchase.error(result); return true; } } else { result = createError(0, ""requestPurchase arg1 is null!""); sCallbackRequestPurchase.error(result); return true; } requestPurchase(identifier); return true; } else if (action.equals(""requestReceipts"")) { sCallbackRequestReceipts = callbackContext; requestReceipts(); return true; } else if (action.equals(""setSafeArea"")) { float amount = 0f; if (args.length() > 0) { try { Log.i(TAG, ""setSafeArea identifier="" + args.getString(0)); amount = (float) args.getDouble(0); } catch (Exception e) { result = createError(0, ""setSafeArea failed to read argument!""); callbackContext.error(result); return true; } } else { result = createError(0, ""setSafeArea arg1 is null!""); callbackContext.error(result); return true; } setSafeArea(callbackContext, amount); return true; } else if (action.equals(""getDeviceHardware"")) { getDeviceHardware(callbackContext); return true; } else if (action.equals(""shutdown"")) { shutdown(callbackContext); return true; } return false; }","boolean execute(CallbackContext callbackContext)throws JSONException{if(sEnableLogging){("""");}if(("""")){("""");}if(("""")){}if(("""")){}if(("""")){if(length()>0){try{(toString());}catch(Exception e){createError(0,"""");}}{("""");}}if(("""")){if(args){try{(get());}catch(Exception e){result(0,"""");}createError(0,"""");}}if(("""")){if(length){try{Log(TAG,""""+(0));getString();}catch(Exception e){createError(0,"""").error();}createError(0,"""");}}if(("""")){if(args){try{i(TAG,"""".getString());}catch(Exception e){("""").error();}}{("""");}(amount);}if(action){}}",3543,530,13,3013,85.3541076487252,"['@', 'Override', 'public', 'boolean', 'execute', '(', 'String', 'action', ',', 'JSONArray', 'args', ',', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'JSONObject', 'result', '=', 'null', ';', 'if', '(', 'sEnableLogging', ')', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""********************* execute action=""', '+', 'action', ')', ';', '}', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnGenericMotionEvent""', ')', ')', '{', 'sCallbackOnGenericMotionEvent', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnGenericMotionEvent', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyUp""', ')', ')', '{', 'sCallbackOnKeyUp', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyUp', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyDown""', ')', ')', '{', 'sCallbackOnKeyDown', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyDown', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""initOuyaPlugin""', ')', ')', '{', 'sCallbackInitOuyaPlugin', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin failed to read argument!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin arg1 is null!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'initOuyaPlugin', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestGamerInfo""', ')', ')', '{', 'sCallbackRequestGamerInfo', '=', 'callbackContext', ';', 'requestGamerInfo', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestProducts""', ')', ')', '{', 'sCallbackRequestProducts', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts failed to read argument!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts arg1 is null!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestProducts', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestPurchase""', ')', ')', '{', 'sCallbackRequestPurchase', '=', 'callbackContext', ';', 'String', 'identifier', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""requestPurchase identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'identifier', '=', 'args', '.', 'getString', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase failed to read argument!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase arg1 is null!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestPurchase', '(', 'identifier', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestReceipts""', ')', ')', '{', 'sCallbackRequestReceipts', '=', 'callbackContext', ';', 'requestReceipts', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setSafeArea""', ')', ')', '{', 'float', 'amount', '=', '0f', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""setSafeArea identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', '.', 'getDouble', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea failed to read argument!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea arg1 is null!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'setSafeArea', '(', 'callbackContext', ',', 'amount', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""getDeviceHardware""', ')', ')', '{', 'getDeviceHardware', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""shutdown""', ')', ')', '{', 'shutdown', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'execute', '(', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'if', '(', 'sEnableLogging', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', '(', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', 'get', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'length', ')', '{', 'try', '{', 'Log', '(', 'TAG', ',', '""""', '+', '(', '0', ')', ')', ';', 'getString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', 'i', '(', 'TAG', ',', '""""', '.', 'getString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', '.', 'error', '(', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '(', 'amount', ')', ';', '}', 'if', '(', 'action', ')', '{', '}', '}']",726,255,6,471,65.41666666666667
code2vec,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_8.txt,0.9892,0.0117,"{'n_total': 3003, 'n_valid': 230, 'n_correct': 227}",684.382879,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(""0"")) { debugLog = false; } } String root = getIntent().getStringExtra(EXTRA_CONTENT_URL4); if (root != null) { File n = new File(root); if (n.exists()) { externalStorage = n; } else { externalStorage = new File(Environment.getExternalStorageDirectory(), root); } } else { externalStorage = new File(Environment.getExternalStorageDirectory(), ""qpython""); } Log.d(TAG, ""externalStorage:"" + externalStorage); mScript = null; String act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(""execute"")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, ""main.py""); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(""#qpy:fullscreen"")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } if (p.fullscreen) { fullscreen = true; } } } else { String fn = getIntent().getStringExtra(EXTRA_CONTENT_URL2); if (fn == null) { isMain = true; fn = ""/sdcard/qpython/launcher.py""; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, ""main.py""); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(""#qpy:fullscreen"")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, "".launch"")); f.write(""started""); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, "".run.log""); if (logFile.exists()) { logFile.delete(); } String s = """"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, ""main.py""); if (f.exists()) { s = ""main.py""; } else { f = new File(mPath, ""main.pyo""); if (f.exists()) { s = ""main.pyo""; } } } Log.d(TAG, ""[RUN param:"" + externalStorage.getAbsolutePath().toString() + ""-"" + mPath.getAbsolutePath().toString() + ""-"" + s + ""]""); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter("".PythonActivity""); registerReceiver(mReceiver, filter); startPyScreen(); }","void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if(("""")){}}(_);if(("""")){File();f(mPath,"""");if(f){if(("""")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains("""")){}}if(fullscreen){}try{((""""));close();}catch(IOException e){}(mPath);String(mPath,"""");if(null){}{File(mPath,"""");if(exists()){if(exists()){s="""";}}}(this);("""");}",2939,356,14,2583,88.3076923076923,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'Hardware', '.', 'context', '=', 'this', ';', 'Action', '.', 'context', '=', 'this', ';', 'mActivity', '=', 'this', ';', 'getWindowManager', '(', ')', '.', 'getDefaultDisplay', '(', ')', '.', 'getMetrics', '(', 'Hardware', '.', 'metrics', ')', ';', 'resourceManager', '=', 'new', 'ResourceManager', '(', 'this', ')', ';', 'String', 'debugFlag', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL5', ')', ';', 'if', '(', 'debugFlag', '!=', 'null', ')', '{', 'if', '(', 'debugFlag', '.', 'equals', '(', '""0""', ')', ')', '{', 'debugLog', '=', 'false', ';', '}', '}', 'String', 'root', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL4', ')', ';', 'if', '(', 'root', '!=', 'null', ')', '{', 'File', 'n', '=', 'new', 'File', '(', 'root', ')', ';', 'if', '(', 'n', '.', 'exists', '(', ')', ')', '{', 'externalStorage', '=', 'n', ';', '}', 'else', '{', 'externalStorage', '=', 'new', 'File', '(', 'Environment', '.', 'getExternalStorageDirectory', '(', ')', ',', 'root', ')', ';', '}', '}', 'else', '{', 'externalStorage', '=', 'new', 'File', '(', 'Environment', '.', 'getExternalStorageDirectory', '(', ')', ',', '""qpython""', ')', ';', '}', 'Log', '.', 'd', '(', 'TAG', ',', '""externalStorage:""', '+', 'externalStorage', ')', ';', 'mScript', '=', 'null', ';', 'String', 'act', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL1', ')', ';', 'boolean', 'fullscreen', '=', 'false', ';', 'if', '(', 'act', '!=', 'null', '&&', 'act', '.', 'equals', '(', '""execute""', ')', ')', '{', 'mPath', '=', 'new', 'File', '(', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL2', ')', ')', ';', 'File', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.py""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'if', '(', 'FileHelper', '.', 'getFileContents', '(', 'f', '.', 'toString', '(', ')', ')', '.', 'contains', '(', '""#qpy:fullscreen""', ')', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', 'Project', 'p', '=', 'Project', '.', 'scanDirectory', '(', 'mPath', ')', ';', 'if', '(', 'p', '!=', 'null', ')', '{', 'if', '(', 'p', '.', 'landscape', ')', '{', 'setRequestedOrientation', '(', 'ActivityInfo', '.', 'SCREEN_ORIENTATION_LANDSCAPE', ')', ';', '}', 'else', '{', 'setRequestedOrientation', '(', 'ActivityInfo', '.', 'SCREEN_ORIENTATION_PORTRAIT', ')', ';', '}', 'if', '(', 'p', '.', 'fullscreen', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', '}', 'else', '{', 'String', 'fn', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL2', ')', ';', 'if', '(', 'fn', '==', 'null', ')', '{', 'isMain', '=', 'true', ';', 'fn', '=', '""/sdcard/qpython/launcher.py""', ';', '}', 'mScript', '=', 'new', 'File', '(', 'fn', ')', ';', 'if', '(', '!', 'mScript', '.', 'exists', '(', ')', ')', '{', 'String', 'file1', '=', 'FileHelper', '.', 'LoadDataFromAssets', '(', 'this', ',', '""main.py""', ')', ';', 'FileHelper', '.', 'writeToFile', '(', 'fn', ',', 'file1', ')', ';', '}', 'mPath', '=', 'mScript', '.', 'getParentFile', '(', ')', ';', 'if', '(', 'FileHelper', '.', 'getFileContents', '(', 'mScript', '.', 'toString', '(', ')', ')', '.', 'contains', '(', '""#qpy:fullscreen""', ')', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', 'if', '(', 'fullscreen', ')', '{', 'getWindow', '(', ')', '.', 'setFlags', '(', 'WindowManager', '.', 'LayoutParams', '.', 'FLAG_FULLSCREEN', ',', 'WindowManager', '.', 'LayoutParams', '.', 'FLAG_FULLSCREEN', ')', ';', '}', 'try', '{', 'FileWriter', 'f', '=', 'new', 'FileWriter', '(', 'new', 'File', '(', 'mPath', ',', '"".launch""', ')', ')', ';', 'f', '.', 'write', '(', '""started""', ')', ';', 'f', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'updateNotification', '(', 'mPath', '.', 'toString', '(', ')', ')', ';', 'requestWindowFeature', '(', 'Window', '.', 'FEATURE_NO_TITLE', ')', ';', 'String', 'full', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL3', ')', ';', 'File', 'logFile', '=', 'new', 'File', '(', 'mPath', ',', '"".run.log""', ')', ';', 'if', '(', 'logFile', '.', 'exists', '(', ')', ')', '{', 'logFile', '.', 'delete', '(', ')', ';', '}', 'String', 's', '=', '""""', ';', 'if', '(', 'mScript', '!=', 'null', ')', '{', 's', '=', 'mScript', '.', 'getName', '(', ')', ';', '}', 'else', '{', 'File', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.py""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 's', '=', '""main.py""', ';', '}', 'else', '{', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.pyo""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 's', '=', '""main.pyo""', ';', '}', '}', '}', 'Log', '.', 'd', '(', 'TAG', ',', '""[RUN param:""', '+', 'externalStorage', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', '+', '""-""', '+', 'mPath', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', '+', '""-""', '+', 's', '+', '""]""', ')', ';', 'mView', '=', 'new', 'SDLSurfaceView', '(', 'this', ',', 'mPath', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', ',', 's', ',', 'externalStorage', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', ')', ';', 'IntentFilter', 'filter', '=', 'new', 'IntentFilter', '(', '"".PythonActivity""', ')', ';', 'registerReceiver', '(', 'mReceiver', ',', 'filter', ')', ';', 'startPyScreen', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'this', ')', ';', '(', '5', ')', ';', 'if', '(', 'debugFlag', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', '_', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', 'File', '(', ')', ';', 'f', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'f', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', 'mPath', ')', ';', 'if', '(', 'p', ')', '{', 'if', '(', 'p', ')', '{', '(', 'LANDSCAPE', ')', ';', '}', '}', 'mPath', '(', ')', ';', 'if', '(', '(', 'toString', '(', ')', ')', '.', 'contains', '(', '""""', ')', ')', '{', '}', '}', 'if', '(', 'fullscreen', ')', '{', '}', 'try', '{', '(', '(', '""""', ')', ')', ';', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '(', 'mPath', ')', ';', 'String', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'null', ')', '{', '}', '{', 'File', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'if', '(', 'exists', '(', ')', ')', '{', 's', '=', '""""', ';', '}', '}', '}', '(', 'this', ')', ';', '(', '""""', ')', ';', '}']",715,186,6,529,74.61212976022567
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 319, 'n_valid': 104, 'n_correct': 15}",282.839191,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },d onCreate(e savedInstanceState){w(t.onboarding);},134,50,14,84,70.0,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'savedInstanceState', ')', '{', 'w', '(', 't', '.', 'onboarding', ')', ';', '}']",27,15,6,12,57.14285714285714
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 560, 'n_valid': 87, 'n_correct': 52}",257.140825,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c String toString(){if(l)("""");("""");(o);("""");(b);}",211,50,14,161,81.7258883248731,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 343, 'n_valid': 52, 'n_correct': 25}",153.899097,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(l)return""""+o();}",135,37,14,98,80.99173553719008,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', 'return', '""""', '+', 'o', '(', ')', ';', '}']",29,17,6,12,52.17391304347826
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 563, 'n_valid': 89, 'n_correct': 58}",256.240221,"@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } }",d onCreate(e a){r.onCreate();(s);if((e)){((s));}},365,49,14,316,90.02849002849003,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}']","['d', 'onCreate', '(', 'e', 'a', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', '(', 's', ')', ';', 'if', '(', '(', 'e', ')', ')', '{', '(', '(', 's', ')', ')', ';', '}', '}']",66,32,6,34,56.66666666666666
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 358, 'n_valid': 53, 'n_correct': 29}",151.388962,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b oth){if(k){(((S)).s);}return false;},146,47,12,99,73.88059701492537,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'oth', ')', '{', 'if', '(', 'k', ')', '{', '(', '(', '(', 'S', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 358, 'n_valid': 53, 'n_correct': 29}",151.341478,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b oth){if(k){(((S)).s);}return false;},146,47,12,99,73.88059701492537,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'oth', ')', '{', 'if', '(', 'k', ')', '{', '(', '(', '(', 'S', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 336, 'n_valid': 85, 'n_correct': 20}",236.12207,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },protected void onCreate(B savedInstance){(t);},144,46,14,98,75.38461538461539,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['protected', 'void', 'onCreate', '(', 'B', 'savedInstance', ')', '{', '(', 't', ')', ';', '}']",27,13,6,14,66.66666666666666
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 291, 'n_valid': 25, 'n_correct': 22}",85.681704,"@Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; }","g toString(){if(t){return E+""]"";}e[d];}",183,39,14,144,85.20710059171599,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}']","['g', 'toString', '(', ')', '{', 'if', '(', 't', ')', '{', 'return', 'E', '+', '""]""', ';', '}', 'e', '[', 'd', ']', ';', '}']",43,22,6,21,56.75675675675676
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 294, 'n_valid': 60, 'n_correct': 28}",171.868539,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }",@r String toString(){d();s(sSt);},242,33,14,209,91.66666666666666,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'String', 'toString', '(', ')', '{', 'd', '(', ')', ';', 's', '(', 'sSt', ')', ';', '}']",66,17,6,49,81.66666666666667
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 540, 'n_valid': 94, 'n_correct': 50}",270.364094,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",n equals(Oect o){if(ts){}i=(e);return(l)s()&&equals;},309,53,12,256,86.19528619528619,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['n', 'equals', '(', 'Oect', 'o', ')', '{', 'if', '(', 'ts', ')', '{', '}', 'i', '=', '(', 'e', ')', ';', 'return', '(', 'l', ')', 's', '(', ')', '&&', 'equals', ';', '}']",83,30,6,53,68.83116883116884
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 428, 'n_valid': 91, 'n_correct': 42}",254.253606,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },a equals(c j){if(n){tus(((y)j).e);}},141,36,12,105,81.3953488372093,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['a', 'equals', '(', 'c', 'j', ')', '{', 'if', '(', 'n', ')', '{', 'tus', '(', '(', '(', 'y', ')', 'j', ')', '.', 'e', ')', ';', '}', '}']",37,26,6,11,35.483870967741936
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 241, 'n_valid': 56, 'n_correct': 14}",151.241897,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },@O void init()throws ServletException{t();},99,43,10,56,62.92134831460674,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 't', '(', ')', ';', '}']",23,14,6,9,52.94117647058824
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_2.txt,0.9882,0.0257,"{'n_total': 519, 'n_valid': 97, 'n_correct': 46}",278.269408,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","String toString(){r w=new S(""="");t();for(;;){}}",270,47,14,223,87.109375,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'r', 'w', '=', 'new', 'S', '(', '""=""', ')', ';', 't', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', '}']",77,26,6,51,71.83098591549296
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 260, 'n_valid': 52, 'n_correct': 26}",150.343024,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },d onCreate(B e){onCreate();},172,28,14,144,91.13924050632912,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['d', 'onCreate', '(', 'B', 'e', ')', '{', 'onCreate', '(', ')', ';', '}']",39,12,6,27,81.81818181818183
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 268, 'n_valid': 32, 'n_correct': 23}",100.38157,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","@O v onCreate(){i(L,""onCreate"");(0);}",215,37,14,178,88.55721393034825,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['@', 'O', 'v', 'onCreate', '(', ')', '{', 'i', '(', 'L', ',', '""onCreate""', ')', ';', '(', '0', ')', ';', '}']",52,19,6,33,71.73913043478261
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 504, 'n_valid': 91, 'n_correct': 40}",259.683666,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",public String toString(){if(l){}if(t==0){}(s);},150,47,14,103,75.73529411764706,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '{', '}', 'if', '(', 't', '==', '0', ')', '{', '}', '(', 's', ')', ';', '}']",42,25,6,17,47.22222222222222
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 325, 'n_valid': 73, 'n_correct': 30}",205.543393,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(O j){if(n){}},136,28,12,108,87.09677419354838,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'O', 'j', ')', '{', 'if', '(', 'n', ')', '{', '}', '}']",35,14,6,21,72.41379310344827
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 386, 'n_valid': 60, 'n_correct': 25}",171.546821,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },n equals(O o){if(!(o instanceof u))return false;e();},186,53,12,133,76.4367816091954,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['n', 'equals', '(', 'O', 'o', ')', '{', 'if', '(', '!', '(', 'o', 'instanceof', 'u', ')', ')', 'return', 'false', ';', 'e', '(', ')', ';', '}']",50,24,6,26,59.09090909090909
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 368, 'n_valid': 52, 'n_correct': 31}",149.622896,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","d setUp()throws E{if(ED){(""s"");}setUp();}",181,41,11,140,82.35294117647058,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'ED', ')', '{', '(', '""s""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,22,6,13,44.82758620689656
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_10.txt,0.9997,0.0004,"{'n_total': 504, 'n_valid': 78, 'n_correct': 40}",224.831267,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },@r a equals(Object r){if(oth instanceof k){a();}},247,49,12,198,84.25531914893617,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['@', 'r', 'a', 'equals', '(', 'Object', 'r', ')', '{', 'if', '(', 'oth', 'instanceof', 'k', ')', '{', 'a', '(', ')', ';', '}', '}']",71,22,6,49,75.38461538461539
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 267, 'n_valid': 56, 'n_correct': 17}",159.520234,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","String toString(){r(""]"");r(sb.g());}",132,36,14,96,81.35593220338984,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'r', '(', '""]""', ')', ';', 'r', '(', 'sb', '.', 'g', '(', ')', ')', ';', '}']",34,20,6,14,50.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 370, 'n_valid': 49, 'n_correct': 34}",149.713463,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } }",@d v onCreate(B s){p.onCreate();if(n){t();}},219,44,14,175,85.36585365853658,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}']","['@', 'd', 'v', 'onCreate', '(', 'B', 's', ')', '{', 'p', '.', 'onCreate', '(', ')', ';', 'if', '(', 'n', ')', '{', 't', '(', ')', ';', '}', '}']",46,26,6,20,50.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 236, 'n_valid': 55, 'n_correct': 22}",158.088787,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },@O boolean onCreate(){er();},175,28,14,147,91.30434782608695,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['@', 'O', 'boolean', 'onCreate', '(', ')', '{', 'er', '(', ')', ';', '}']",35,12,6,23,79.3103448275862
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 446, 'n_valid': 140, 'n_correct': 24}",383.018251,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }","n equals(Object obj){ih=ob();return(compare(r,r.getRef()));}",190,60,12,130,73.03370786516854,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['n', 'equals', '(', 'Object', 'obj', ')', '{', 'ih', '=', 'ob', '(', ')', ';', 'return', '(', 'compare', '(', 'r', ',', 'r', '.', 'getRef', '(', ')', ')', ')', ';', '}']",60,28,6,32,59.25925925925925
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 487, 'n_valid': 56, 'n_correct': 42}",159.943558,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{p(0);}catch(Ipt e){}t();}},164,47,9,117,75.48387096774194,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', 'p', '(', '0', ')', ';', '}', 'catch', '(', 'Ipt', 'e', ')', '{', '}', 't', '(', ')', ';', '}', '}']",47,31,6,16,39.02439024390244
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 240, 'n_valid': 40, 'n_correct': 17}",115.700853,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",d execute()throws B{execute(-1);},165,33,13,132,86.8421052631579,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'B', '{', 'execute', '(', '-', '1', ')', ';', '}']",44,14,6,30,78.94736842105263
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 321, 'n_valid': 73, 'n_correct': 23}",202.190721,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },@r void setUp()throws E{setContext().r();},114,42,11,72,69.90291262135922,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['@', 'r', 'void', 'setUp', '(', ')', 'throws', 'E', '{', 'setContext', '(', ')', '.', 'r', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 352, 'n_valid': 104, 'n_correct': 23}",277.926173,"@Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); }",void init()throws ServletException{d();},278,40,10,238,88.80597014925374,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'd', '(', ')', ';', '}']",52,12,6,40,86.95652173913044
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 473, 'n_valid': 68, 'n_correct': 46}",186.850828,"@Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); }","@v<T>T get(S z){if(l){(""""+"""");}return(i);}",236,42,9,194,85.46255506607929,"['@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']","['@', 'v', '<', 'T', '>', 'T', 'get', '(', 'S', 'z', ')', '{', 'if', '(', 'l', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'return', '(', 'i', ')', ';', '}']",61,30,6,31,56.36363636363636
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 438, 'n_valid': 56, 'n_correct': 39}",158.384151,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","d main(S args)throws E{((""""));sln(("""".s()));}",179,45,10,134,79.28994082840237,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['d', 'main', '(', 'S', 'args', ')', 'throws', 'E', '{', '(', '(', '""""', ')', ')', ';', 'sln', '(', '(', '""""', '.', 's', '(', ')', ')', ')', ';', '}']",50,27,6,23,52.27272727272727
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 417, 'n_valid': 58, 'n_correct': 32}",167.406309,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },t main(S[]args){try{(e());}catch(E e){}ne();},154,45,10,109,75.69444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'try', '{', '(', 'e', '(', ')', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '}', 'ne', '(', ')', ';', '}']",38,30,6,8,25.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 241, 'n_valid': 32, 'n_correct': 26}",94.448872,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(l){on("""");}}",109,23,9,86,86.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'l', ')', '{', 'on', '(', '""""', ')', ';', '}', '}']",25,17,6,8,42.10526315789473
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_3.txt,0.8115,0.2495,"{'n_total': 430, 'n_valid': 74, 'n_correct': 51}",206.697767,"@Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); }","@c i init(){("""");("""");t(lIL);t();}",365,34,10,331,93.2394366197183,"['@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}']","['@', 'c', 'i', 'init', '(', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', 't', '(', 'lIL', ')', ';', 't', '(', ')', ';', '}']",61,25,6,36,65.45454545454545
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 228, 'n_valid': 41, 'n_correct': 19}",116.458131,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },@Before d setUp(){(S);(s);},107,27,11,80,83.33333333333334,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['@', 'Before', 'd', 'setUp', '(', ')', '{', '(', 'S', ')', ';', '(', 's', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 408, 'n_valid': 78, 'n_correct': 32}",219.876496,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }",d execute(p<t>t)throws T{(new RootContextPath());},201,50,13,151,80.31914893617021,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['d', 'execute', '(', 'p', '<', 't', '>', 't', ')', 'throws', 'T', '{', '(', 'new', 'RootContextPath', '(', ')', ')', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 300, 'n_valid': 45, 'n_correct': 26}",125.089042,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@c void run(){try{t();}catch(n x){}},127,36,9,91,77.11864406779661,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'c', 'void', 'run', '(', ')', '{', 'try', '{', 't', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', '}', '}']",33,22,6,11,40.74074074074074
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 408, 'n_valid': 78, 'n_correct': 32}",220.139152,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }",d execute(p<t>t)throws T{(new RootContextPath());},201,50,13,151,80.31914893617021,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['d', 'execute', '(', 'p', '<', 't', '>', 't', ')', 'throws', 'T', '{', '(', 'new', 'RootContextPath', '(', ')', ')', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 264, 'n_valid': 59, 'n_correct': 18}",161.249427,"@Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); }","@c v init(){addAfterOrdering("""");("""");}",108,39,10,69,70.40816326530613,"['@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}']","['@', 'c', 'v', 'init', '(', ')', '{', 'addAfterOrdering', '(', '""""', ')', ';', '(', '""""', ')', ';', '}']",30,17,6,13,54.16666666666666
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 387, 'n_valid': 65, 'n_correct': 44}",182.398433,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","i get(p<Sect>t,t v){(k);if(l){}}",166,32,9,134,85.35031847133759,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['i', 'get', '(', 'p', '<', 'Sect', '>', 't', ',', 't', 'v', ')', '{', '(', 'k', ')', ';', 'if', '(', 'l', ')', '{', '}', '}']",46,24,6,22,55.00000000000001
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 336, 'n_valid': 47, 'n_correct': 32}",132.101003,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","d main(g args)throws n{(B);(""Pree"");w();}",251,41,10,210,87.13692946058092,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'n', '{', '(', 'B', ')', ';', '(', '""Pree""', ')', ';', 'w', '(', ')', ';', '}']",53,22,6,31,65.95744680851064
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 303, 'n_valid': 60, 'n_correct': 24}",165.574009,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },d main(g args)throws x{run();},132,30,10,102,83.60655737704919,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'x', '{', 'run', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 611, 'n_valid': 104, 'n_correct': 56}",284.597121,"@Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); }","r get(g t,t u)throws n{d.get();if(E){r(g("""",t),l);}return(ult.n());}",350,68,9,282,82.69794721407625,"['@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}']","['r', 'get', '(', 'g', 't', ',', 't', 'u', ')', 'throws', 'n', '{', 'd', '.', 'get', '(', ')', ';', 'if', '(', 'E', ')', '{', 'r', '(', 'g', '(', '""""', ',', 't', ')', ',', 'l', ')', ';', '}', 'return', '(', 'ult', '.', 'n', '(', ')', ')', ';', '}']",73,46,6,27,40.298507462686565
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 261, 'n_valid': 49, 'n_correct': 25}",138.429553,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }",@d vo setUp()throws E{r.solo=(g);},122,34,11,88,79.27927927927928,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['@', 'd', 'vo', 'setUp', '(', ')', 'throws', 'E', '{', 'r', '.', 'solo', '=', '(', 'g', ')', ';', '}']",31,18,6,13,52.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_5.txt,0.9908,0.0113,"{'n_total': 531, 'n_valid': 140, 'n_correct': 32}",386.672404,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","d execute(Tuple tuple){i(""url"");d(""metadata"",(r));(e);}",305,55,13,250,85.61643835616438,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['d', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'i', '(', '""url""', ')', ';', 'd', '(', '""metadata""', ',', '(', 'r', ')', ')', ';', '(', 'e', ')', ';', '}']",70,26,6,44,68.75
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 326, 'n_valid': 45, 'n_correct': 34}",126.855241,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },d run(){try{eep();}catch(E x){}(0);},121,36,9,85,75.89285714285714,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'eep', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 278, 'n_valid': 47, 'n_correct': 28}",134.776471,@Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); },@c V get(jet k){if(l)((y));},110,28,9,82,81.1881188118812,"['@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}']","['@', 'c', 'V', 'get', '(', 'jet', 'k', ')', '{', 'if', '(', 'l', ')', '(', '(', 'y', ')', ')', ';', '}']",33,20,6,13,48.14814814814815
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 429, 'n_valid': 83, 'n_correct': 31}",229.353064,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","d run(){try{dw();}catch(Throwable t){or(""""+e);}}",149,48,9,101,72.14285714285714,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'dw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'or', '(', '""""', '+', 'e', ')', ';', '}', '}']",36,27,6,9,30.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 191, 'n_valid': 36, 'n_correct': 19}",107.848457,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@O int hashCode(){t r;},174,23,14,151,94.375,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",45,11,6,34,87.17948717948718
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 312, 'n_valid': 60, 'n_correct': 24}",168.927044,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }",@r d execute()throws BuildException{(g().o);},123,45,13,78,70.9090909090909,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'd', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', 'g', '(', ')', '.', 'o', ')', ';', '}']",29,18,6,11,47.82608695652174
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 237, 'n_valid': 55, 'n_correct': 24}",153.126452,public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); },d init(){n=new y(Pain);},152,24,10,128,90.14084507042254,"['public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}']","['d', 'init', '(', ')', '{', 'n', '=', 'new', 'y', '(', 'Pain', ')', ';', '}']",39,14,6,25,75.75757575757575
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 266, 'n_valid': 38, 'n_correct': 20}",108.882362,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","d setUp()throws n{("""");setUp();}",149,32,11,117,84.78260869565217,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'n', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_1.txt,1.0,0.0,"{'n_total': 583, 'n_valid': 87, 'n_correct': 62}",244.137959,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","t main(S[]args){("""");("""");(""""+r());n(y(""j""));}",579,46,10,533,93.6731107205624,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', 'r', '(', ')', ')', ';', 'n', '(', 'y', '(', '""j""', ')', ')', ';', '}']",131,34,6,97,77.60000000000001
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_4.txt,0.4355,1.6281,"{'n_total': 910, 'n_valid': 165, 'n_correct': 100}",459.936882,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","d setUp()throws o{r<a>r=g((""""),(""""),l);((""""));a=o(""jd"",c);n=riv();}",946,67,11,879,94.01069518716577,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'o', '{', 'r', '<', 'a', '>', 'r', '=', 'g', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', 'l', ')', ';', '(', '(', '""""', ')', ')', ';', 'a', '=', 'o', '(', '""jd""', ',', 'c', ')', ';', 'n', '=', 'riv', '(', ')', ';', '}']",207,48,6,159,79.1044776119403
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 299, 'n_valid': 78, 'n_correct': 16}",210.686004,"@Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); }","d init(FilterConfig fConfig)throws S{r("""");}",161,44,10,117,77.48344370860927,"['@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}']","['d', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'S', '{', 'r', '(', '""""', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 533, 'n_valid': 92, 'n_correct': 58}",252.18334,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","@O V get(g timeout,t t)throws I{if(((t))){(""""+t);}}",248,51,9,197,82.42677824267783,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['@', 'O', 'V', 'get', '(', 'g', 'timeout', ',', 't', 't', ')', 'throws', 'I', '{', 'if', '(', '(', '(', 't', ')', ')', ')', '{', '(', '""""', '+', 't', ')', ';', '}', '}']",51,31,6,20,44.44444444444444
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 406, 'n_valid': 72, 'n_correct': 46}",212.798752,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){t=t+((s)?0:s);},262,30,14,232,93.5483870967742,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 't', '=', 't', '+', '(', '(', 's', ')', '?', '0', ':', 's', ')', ';', '}']",75,20,6,55,79.71014492753623
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 497, 'n_valid': 98, 'n_correct': 43}",273.652808,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;i<ITERATIONS;i++){if(l){t();}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'if', '(', 'l', ')', '{', 't', '(', ')', ';', '}', '}', '}']",62,28,6,34,60.71428571428571
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 326, 'n_valid': 45, 'n_correct': 34}",126.923976,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },d run(){try{eep();}catch(E x){}(0);},121,36,9,85,75.89285714285714,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'eep', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 323, 'n_valid': 78, 'n_correct': 20}",217.743751,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }",d execute()throws BuildException{(g);},140,38,13,102,80.31496062992126,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', 'g', ')', ';', '}']",29,12,6,17,73.91304347826086
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 690, 'n_valid': 90, 'n_correct': 60}",254.778865,"@SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } }","o get(g n){try{(e);return(n<T>)t(ph);}catch(n e){("""");}}",405,56,9,349,88.13131313131312,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}']","['o', 'get', '(', 'g', 'n', ')', '{', 'try', '{', '(', 'e', ')', ';', 'return', '(', 'n', '<', 'T', '>', ')', 't', '(', 'ph', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",94,38,6,56,63.63636363636363
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 285, 'n_valid': 49, 'n_correct': 25}",141.699188,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },d setUp()throws E{setUp();T(e);},182,32,11,150,87.71929824561403,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'setUp', '(', ')', ';', 'T', '(', 'e', ')', ';', '}']",38,17,6,21,65.625
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 305, 'n_valid': 96, 'n_correct': 21}",259.677127,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },@O void init(ProcessingEnvironment n){s();},193,43,10,150,81.9672131147541,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', 'ProcessingEnvironment', 'n', ')', '{', 's', '(', ')', ';', '}']",49,14,6,35,81.3953488372093
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 235, 'n_valid': 34, 'n_correct': 20}",97.398396,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },t main(g[]args)throws E{e();},147,29,10,118,86.13138686131386,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'e', '(', ')', ';', '}']",32,16,6,16,61.53846153846154
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 270, 'n_valid': 43, 'n_correct': 27}",120.501189,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","d main(S[]args){y(C,"""");(s);}",136,29,10,107,84.92063492063492,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['d', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'y', '(', 'C', ',', '""""', ')', ';', '(', 's', ')', ';', '}']",30,21,6,9,37.5
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 437, 'n_valid': 66, 'n_correct': 43}",181.92313,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","d main(g[]args)throws E{(n(V,"""")).o("""");}",273,41,10,232,88.212927756654,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', '(', 'n', '(', 'V', ',', '""""', ')', ')', '.', 'o', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 530, 'n_valid': 101, 'n_correct': 42}",277.40176,@Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); },d init(WebConnection n){try{}catch(n e){(e);}(n);},293,50,10,243,85.86572438162544,"['@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}']","['d', 'init', '(', 'WebConnection', 'n', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', ')', ';', '}', '(', 'n', ')', ';', '}']",64,26,6,38,65.51724137931035
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 521, 'n_valid': 117, 'n_correct': 41}",320.136345,"public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } }",g get(r s){try{if(m){(k);}return y;}catch(NoSuchMessageException e){}},222,70,9,152,71.36150234741784,"['public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}']","['g', 'get', '(', 'r', 's', ')', '{', 'try', '{', 'if', '(', 'm', ')', '{', '(', 'k', ')', ';', '}', 'return', 'y', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', '}', '}']",55,31,6,24,48.97959183673469
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 307, 'n_valid': 61, 'n_correct': 21}",173.902735,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","@c v execute()throws BuildException{("""");}",98,42,13,56,65.88235294117646,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['@', 'c', 'v', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""""', ')', ';', '}']",22,14,6,8,50.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 357, 'n_valid': 44, 'n_correct': 32}",125.848061,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },d run(){try{p(he);n();}catch(n x){e();}},162,40,9,122,79.73856209150327,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'p', '(', 'he', ')', ';', 'n', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', 'e', '(', ')', ';', '}', '}']",44,29,6,15,39.47368421052632
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 429, 'n_valid': 75, 'n_correct': 40}",217.382026,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },i hashCode(){s.hashCode();((l)?0:e());},239,39,14,200,88.88888888888889,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['i', 'hashCode', '(', ')', '{', 's', '.', 'hashCode', '(', ')', ';', '(', '(', 'l', ')', '?', '0', ':', 'e', '(', ')', ')', ';', '}']",66,24,6,42,70.0
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 206, 'n_valid': 60, 'n_correct': 16}",165.132607,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }",d run(){dataRefresh;y();},150,25,9,125,88.65248226950354,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['d', 'run', '(', ')', '{', 'dataRefresh', ';', 'y', '(', ')', ';', '}']",33,12,6,21,77.77777777777779
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 318, 'n_valid': 55, 'n_correct': 29}",166.854446,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },t hashCode(){((l)?0:e.hCode);},154,30,14,124,88.57142857142857,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', '(', '(', 'l', ')', '?', '0', ':', 'e', '.', 'hCode', ')', ';', '}']",45,18,6,27,69.23076923076923
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 560, 'n_valid': 87, 'n_correct': 52}",257.409467,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c String toString(){if(l)("""");("""");(o);("""");(b);}",211,50,14,161,81.7258883248731,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 487, 'n_valid': 56, 'n_correct': 42}",159.848052,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{p(0);}catch(Ipt e){}t();}},164,47,9,117,75.48387096774194,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', 'p', '(', '0', ')', ';', '}', 'catch', '(', 'Ipt', 'e', ')', '{', '}', 't', '(', ')', ';', '}', '}']",47,31,6,16,39.02439024390244
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 28, 'n_correct': 15}",84.624816,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@O int hashCode(){t r;},92,23,14,69,88.46153846153845,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",25,11,6,14,73.68421052631578
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 345, 'n_valid': 56, 'n_correct': 37}",163.210146,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },@Ov int hashCode(){((kl)?0:a);},220,31,14,189,91.747572815534,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'Ov', 'int', 'hashCode', '(', ')', '{', '(', '(', 'kl', ')', '?', '0', ':', 'a', ')', ';', '}']",67,18,6,49,80.32786885245902
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 623, 'n_valid': 128, 'n_correct': 51}",361.136842,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@c o setUp()throws n{n(new Mel[]{});hst(T);},317,44,11,273,89.2156862745098,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'c', 'o', 'setUp', '(', ')', 'throws', 'n', '{', 'n', '(', 'new', 'Mel', '[', ']', '{', '}', ')', ';', 'hst', '(', 'T', ')', ';', '}']",72,25,6,47,71.21212121212122
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 295, 'n_valid': 79, 'n_correct': 18}",214.184724,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },@O void init(rf cong)throws ServletException{;},107,47,10,60,61.855670103092784,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['@', 'O', 'void', 'init', '(', 'rf', 'cong', ')', 'throws', 'ServletException', '{', ';', '}']",24,13,6,11,61.11111111111112
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 536, 'n_valid': 128, 'n_correct': 41}",352.127717,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },d init()throws v{(g().getInitParameter(GIN)).f((O)).e();},344,57,10,287,85.92814371257485,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['d', 'init', '(', ')', 'throws', 'v', '{', '(', 'g', '(', ')', '.', 'getInitParameter', '(', 'GIN', ')', ')', '.', 'f', '(', '(', 'O', ')', ')', '.', 'e', '(', ')', ';', '}']",71,30,6,41,63.07692307692307
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 510, 'n_valid': 108, 'n_correct': 42}",296.954079,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","d setUp()throws Exception{if(D){("""");}super.t(to);}",320,51,11,269,87.05501618122977,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'D', ')', '{', '(', '""""', ')', ';', '}', 'super', '.', 't', '(', 'to', ')', ';', '}']",61,25,6,36,65.45454545454545
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 28, 'n_correct': 15}",84.595445,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@O int hashCode(){t r;},92,23,14,69,88.46153846153845,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",25,11,6,14,73.68421052631578
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 497, 'n_valid': 98, 'n_correct': 43}",273.679179,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;i<ITERATIONS;i++){if(l){t();}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'if', '(', 'l', ')', '{', 't', '(', ')', ';', '}', '}', '}']",62,28,6,34,60.71428571428571
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 316, 'n_valid': 60, 'n_correct': 24}",168.344915,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","@r d execute()throws BuildException{(("""").o);}",122,46,13,76,69.72477064220183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'd', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,18,6,11,47.82608695652174
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 364, 'n_valid': 65, 'n_correct': 32}",182.267282,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","@c d execute()throws n{e();excute(creat("""").o);}",126,48,13,78,69.02654867256636,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'n', '{', 'e', '(', ')', ';', 'excute', '(', 'creat', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 310, 'n_valid': 74, 'n_correct': 23}",210.251646,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },public int hashCode(){t e=md.h*r;},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['public', 'int', 'hashCode', '(', ')', '{', 't', 'e', '=', 'md', '.', 'h', '*', 'r', ';', '}']",45,16,6,29,74.35897435897436
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 373, 'n_valid': 52, 'n_correct': 33}",159.050193,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },f get(ce k){y(y);return(l)?n:e;},114,32,9,82,78.0952380952381,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['f', 'get', '(', 'ce', 'k', ')', '{', 'y', '(', 'y', ')', ';', 'return', '(', 'l', ')', '?', 'n', ':', 'e', ';', '}']",30,22,6,8,33.33333333333333
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 609, 'n_valid': 78, 'n_correct': 53}",222.489761,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","t main(g[]args){try{l("""",ls);e();}catch(E e){l(E,"""");}}",295,55,10,240,84.21052631578947,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', '{', 'try', '{', 'l', '(', '""""', ',', 'ls', ')', ';', 'e', '(', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', 'l', '(', 'E', ',', '""""', ')', ';', '}', '}']",78,38,6,40,55.55555555555556
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 219, 'n_valid': 33, 'n_correct': 19}",92.424714,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",i main(g[]args)throws E{n();},124,29,10,95,83.33333333333334,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['i', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'n', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 543, 'n_valid': 129, 'n_correct': 56}",355.724733,public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; },t get(i o){if(r){}n[f];},132,24,9,108,87.8048780487805,"['public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}']","['t', 'get', '(', 'i', 'o', ')', '{', 'if', '(', 'r', ')', '{', '}', 'n', '[', 'f', ']', ';', '}']",35,19,6,16,55.172413793103445
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 408, 'n_valid': 100, 'n_correct': 27}",271.105358,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","@v d execute()throws ld{e();e(createQueryString(""session"").g());}",126,65,13,61,53.98230088495575,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'v', 'd', 'execute', '(', ')', 'throws', 'ld', '{', 'e', '(', ')', ';', 'e', '(', 'createQueryString', '(', '""session""', ')', '.', 'g', '(', ')', ')', ';', '}']",29,26,6,3,13.043478260869565
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 464, 'n_valid': 82, 'n_correct': 52}",242.29333,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },i hashCode(){f=((hll)?0:mtc);t=((u)e());},236,41,14,195,87.83783783783784,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['i', 'hashCode', '(', ')', '{', 'f', '=', '(', '(', 'hll', ')', '?', '0', ':', 'mtc', ')', ';', 't', '=', '(', '(', 'u', ')', 'e', '(', ')', ')', ';', '}']",67,29,6,38,62.29508196721312
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 285, 'n_valid': 49, 'n_correct': 34}",143.3818,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@O int hashCode(){t=(c?1:0);},213,29,14,184,92.46231155778896,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', '=', '(', 'c', '?', '1', ':', '0', ')', ';', '}']",59,18,6,41,77.35849056603774
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_9.txt,1.0,0.0,"{'n_total': 378, 'n_valid': 82, 'n_correct': 31}",236.824902,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",an equals(Object o){if(o){}that=(it)&&ls(d);},268,45,12,223,87.109375,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['an', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'that', '=', '(', 'it', ')', '&&', 'ls', '(', 'd', ')', ';', '}']",85,25,6,60,75.9493670886076
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 459, 'n_valid': 71, 'n_correct': 28}",201.521805,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{}},152,64,12,88,62.85714285714285,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['n', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'o', 'instanceof', 'y', ')', '{', 'return', 'eqs', '(', '(', '(', 'N', ')', ')', '.', 'e', ')', ';', '}', '{', '}', '}']",40,30,6,10,29.411764705882355
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 479, 'n_valid': 91, 'n_correct': 48}",258.563318,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },d onCreate(e s){r.onCreate();(g());(s);},319,40,14,279,91.47540983606557,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['d', 'onCreate', '(', 'e', 's', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', '(', 'g', '(', ')', ')', ';', '(', 's', ')', ';', '}']",61,24,6,37,67.27272727272727
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 280, 'n_valid': 42, 'n_correct': 23}",124.671788,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },d onCreate(){r.onCreate();if(l){e();}},171,38,14,133,84.71337579617835,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['d', 'onCreate', '(', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', 'if', '(', 'l', ')', '{', 'e', '(', ')', ';', '}', '}']",35,22,6,13,44.82758620689656
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 445, 'n_valid': 167, 'n_correct': 23}",454.70605,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },o onCreate(e ste){e(savedInstanceState);setContentView;},140,56,14,84,66.66666666666666,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['o', 'onCreate', '(', 'e', 'ste', ')', '{', 'e', '(', 'savedInstanceState', ')', ';', 'setContentView', ';', '}']",27,15,6,12,57.14285714285714
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 479, 'n_valid': 89, 'n_correct': 29}",253.963646,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },public String toString(){r();for(N n:ren){t.a(n.toString());}},165,62,14,103,68.21192052980133,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'r', '(', ')', ';', 'for', '(', 'N', 'n', ':', 'ren', ')', '{', 't', '.', 'a', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', '}']",44,31,6,13,34.21052631578947
code2vec,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 504, 'n_valid': 91, 'n_correct': 40}",259.937108,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",public String toString(){if(l){}if(t==0){}(s);},150,47,14,103,75.73529411764706,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '{', '}', 'if', '(', 't', '==', '0', ')', '{', '}', '(', 's', ')', ';', '}']",42,25,6,17,47.22222222222222
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,findMappings_1.txt,0.178,2.4832,"{'n_total': 849, 'n_valid': 237, 'n_correct': 42}",652.22917,@Override public String[] findMappings() { try { mappingsLock.readLock().lock(); return mappings.toArray(new String[mappings.size()]); } finally { mappingsLock.readLock().unlock(); } },String[]findMappings(){try{return mappings.toArray(ner[e()]);}finally{k().k();}},184,80,18,104,62.65060240963856,"['@', 'Override', 'public', 'String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'return', 'mappings', '.', 'toArray', '(', 'new', 'String', '[', 'mappings', '.', 'size', '(', ')', ']', ')', ';', '}', 'finally', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']","['String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'return', 'mappings', '.', 'toArray', '(', 'ner', '[', 'e', '(', ')', ']', ')', ';', '}', 'finally', '{', 'k', '(', ')', '.', 'k', '(', ')', ';', '}', '}']",53,35,6,18,38.297872340425535
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,releaseObject_1.txt,0.4315,1.8319,"{'n_total': 570, 'n_valid': 151, 'n_correct': 25}",419.356019,"@ChromeDevtoolsMethod public void releaseObject(JsonRpcPeer peer, JSONObject params) throws JSONException { String objectId = params.getString(""objectId""); getSession(peer).getObjects().removeObjectById(Integer.parseInt(objectId)); }","void releaseObject(r r,JSONObject params)throws JSONException{Sams.getString(""objectId"");((d));}",233,96,19,137,64.01869158878505,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'releaseObject', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', 'throws', 'JSONException', '{', 'String', 'objectId', '=', 'params', '.', 'getString', '(', '""objectId""', ')', ';', 'getSession', '(', 'peer', ')', '.', 'getObjects', '(', ')', '.', 'removeObjectById', '(', 'Integer', '.', 'parseInt', '(', 'objectId', ')', ')', ';', '}']","['void', 'releaseObject', '(', 'r', 'r', ',', 'JSONObject', 'params', ')', 'throws', 'JSONException', '{', 'Sams', '.', 'getString', '(', '""objectId""', ')', ';', '(', '(', 'd', ')', ')', ';', '}']",45,26,6,19,48.71794871794872
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,clearUndo_1.txt,0.491,0.7137,"{'n_total': 272, 'n_valid': 59, 'n_correct': 15}",169.702564,@Override public void clearUndo() { m_UndoList = new Vector<File>(); },@O void clearUndo(){mUndoList=new r<F>();},70,42,15,28,50.90909090909091,"['@', 'Override', 'public', 'void', 'clearUndo', '(', ')', '{', 'm_UndoList', '=', 'new', 'Vector', '<', 'File', '>', '(', ')', ';', '}']","['@', 'O', 'void', 'clearUndo', '(', ')', '{', 'mUndoList', '=', 'new', 'r', '<', 'F', '>', '(', ')', ';', '}']",19,18,6,1,7.6923076923076925
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getStatusDetail_1.txt,0.4784,1.1596,"{'n_total': 180, 'n_valid': 41, 'n_correct': 7}",118.350019,public Element getStatusDetail() { return statusDetail; },t getStatusDetail(){return statusDetail;},57,41,21,16,44.44444444444444,"['public', 'Element', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}']","['t', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getServiceTypeName_1.txt,0.4639,0.8241,"{'n_total': 207, 'n_valid': 45, 'n_correct': 7}",131.30909,public String getServiceTypeName() { return (serviceTypeName); },g getServiceTypeName(){return(serviceTypeName);},64,48,24,16,40.0,"['public', 'String', 'getServiceTypeName', '(', ')', '{', 'return', '(', 'serviceTypeName', ')', ';', '}']","['g', 'getServiceTypeName', '(', ')', '{', 'return', '(', 'serviceTypeName', ')', ';', '}']",12,11,6,1,16.666666666666664
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getOpenSessions_1.txt,0.2266,3.0289,"{'n_total': 333, 'n_valid': 78, 'n_correct': 19}",224.19495,@Override public Set<Session> getOpenSessions() { checkState(); return webSocketContainer.getOpenSessions(localEndpoint.getClass()); },t<S>getOpenSessions(){h.getOpenSessions(l());},134,46,21,88,77.87610619469027,"['@', 'Override', 'public', 'Set', '<', 'Session', '>', 'getOpenSessions', '(', ')', '{', 'checkState', '(', ')', ';', 'return', 'webSocketContainer', '.', 'getOpenSessions', '(', 'localEndpoint', '.', 'getClass', '(', ')', ')', ';', '}']","['t', '<', 'S', '>', 'getOpenSessions', '(', ')', '{', 'h', '.', 'getOpenSessions', '(', 'l', '(', ')', ')', ';', '}']",28,18,6,10,45.45454545454545
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getJoinClause_1.txt,0.3672,1.7936,"{'n_total': 169, 'n_valid': 40, 'n_correct': 8}",115.924813,public ValueNode getJoinClause() { return joinClause; },e getJoinClause(){return joinClause;},55,37,19,18,50.0,"['public', 'ValueNode', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}']","['e', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onCancelProgress_1.txt,0.4463,0.9729,"{'n_total': 365, 'n_valid': 89, 'n_correct': 17}",254.616635,@Override public void onCancelProgress() { if (!this.isUnsubscribed()) { this.unsubscribe(); } },@c vod onCancelProgress(){if(!this.d()){this.unsubscribe();}},96,61,22,35,47.2972972972973,"['@', 'Override', 'public', 'void', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'isUnsubscribed', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}']","['@', 'c', 'vod', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'd', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}']",26,25,6,1,5.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,drawCachedBitmapWithRootAlpha_1.txt,0.4204,1.5179,"{'n_total': 465, 'n_valid': 83, 'n_correct': 24}",266.038833,"public void drawCachedBitmapWithRootAlpha(Canvas canvas, ColorFilter filter, Rect originalBounds) { final Paint p = getPaint(filter); canvas.drawBitmap(mCachedBitmap, null, originalBounds, p); }","d drawCachedBitmapWithRootAlpha(s s,ColorFilter f){p(mCachedBitmap);}",194,69,35,125,78.61635220125787,"['public', 'void', 'drawCachedBitmapWithRootAlpha', '(', 'Canvas', 'canvas', ',', 'ColorFilter', 'filter', ',', 'Rect', 'originalBounds', ')', '{', 'final', 'Paint', 'p', '=', 'getPaint', '(', 'filter', ')', ';', 'canvas', '.', 'drawBitmap', '(', 'mCachedBitmap', ',', 'null', ',', 'originalBounds', ',', 'p', ')', ';', '}']","['d', 'drawCachedBitmapWithRootAlpha', '(', 's', 's', ',', 'ColorFilter', 'f', ')', '{', 'p', '(', 'mCachedBitmap', ')', ';', '}']",37,16,6,21,67.74193548387096
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getIdForObject_1.txt,0.2976,2.555,"{'n_total': 471, 'n_valid': 93, 'n_correct': 19}",266.921618,@Nullable public Integer getIdForObject(Object object) { synchronized (mSync) { return mObjectToIdMap.get(object); } },@u Integer getIdForObject(Object oect){synchronized(mSync){return mt(ject);}},118,77,20,41,41.83673469387755,"['@', 'Nullable', 'public', 'Integer', 'getIdForObject', '(', 'Object', 'object', ')', '{', 'synchronized', '(', 'mSync', ')', '{', 'return', 'mObjectToIdMap', '.', 'get', '(', 'object', ')', ';', '}', '}']","['@', 'u', 'Integer', 'getIdForObject', '(', 'Object', 'oect', ')', '{', 'synchronized', '(', 'mSync', ')', '{', 'return', 'mt', '(', 'ject', ')', ';', '}', '}']",25,22,6,3,15.789473684210526
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getVariantProperty_1.txt,0.4638,1.6677,"{'n_total': 291, 'n_valid': 71, 'n_correct': 12}",207.651974,public PropertyEnum getVariantProperty(int pageNum) { return this.pageNumToProperty.get(pageNum); },PropertyEnum getVariantProperty(t pageNum){(p);},99,48,24,51,68.0,"['public', 'PropertyEnum', 'getVariantProperty', '(', 'int', 'pageNum', ')', '{', 'return', 'this', '.', 'pageNumToProperty', '.', 'get', '(', 'pageNum', ')', ';', '}']","['PropertyEnum', 'getVariantProperty', '(', 't', 'pageNum', ')', '{', '(', 'p', ')', ';', '}']",19,12,6,7,53.84615384615385
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,acceptSocket_1.txt,0.3392,1.1936,"{'n_total': 618, 'n_valid': 83, 'n_correct': 54}",243.176871,"@Override public Socket acceptSocket(ServerSocket socket) throws IOException { SSLSocket asock = null; try { asock = (SSLSocket) socket.accept(); } catch (SSLException e) { throw new SocketException(""SSL handshake error"" + e.toString()); } return asock; }","@c Socket acceptSocket(Seet t)throws n{try{(S);}catch(p e){(""""+g);}}",255,68,18,187,78.90295358649789,"['@', 'Override', 'public', 'Socket', 'acceptSocket', '(', 'ServerSocket', 'socket', ')', 'throws', 'IOException', '{', 'SSLSocket', 'asock', '=', 'null', ';', 'try', '{', 'asock', '=', '(', 'SSLSocket', ')', 'socket', '.', 'accept', '(', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'throw', 'new', 'SocketException', '(', '""SSL handshake error""', '+', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'asock', ';', '}']","['@', 'c', 'Socket', 'acceptSocket', '(', 'Seet', 't', ')', 'throws', 'n', '{', 'try', '{', '(', 'S', ')', ';', '}', 'catch', '(', 'p', 'e', ')', '{', '(', '""""', '+', 'g', ')', ';', '}', '}']",55,32,6,23,46.93877551020408
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setScalingType_1.txt,0.3675,3.4159,"{'n_total': 452, 'n_valid': 114, 'n_correct': 47}",334.928189,"public void setScalingType(RendererCommon.ScalingType scalingTypeMatchOrientation, RendererCommon.ScalingType scalingTypeMismatchOrientation) { ThreadUtils.checkIsOnMainThread(); videoLayoutMeasure.setScalingType(scalingTypeMatchOrientation, scalingTypeMismatchOrientation); requestLayout(); }","d setScalingType(mm i,e n){e.scalingType(n);}",293,45,20,248,90.84249084249085,"['public', 'void', 'setScalingType', '(', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMatchOrientation', ',', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMismatchOrientation', ')', '{', 'ThreadUtils', '.', 'checkIsOnMainThread', '(', ')', ';', 'videoLayoutMeasure', '.', 'setScalingType', '(', 'scalingTypeMatchOrientation', ',', 'scalingTypeMismatchOrientation', ')', ';', 'requestLayout', '(', ')', ';', '}']","['d', 'setScalingType', '(', 'mm', 'i', ',', 'e', 'n', ')', '{', 'e', '.', 'scalingType', '(', 'n', ')', ';', '}']",35,18,6,17,58.620689655172406
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setSpout_1.txt,0.3596,1.5657,"{'n_total': 441, 'n_valid': 109, 'n_correct': 34}",309.15268,"public SpoutDeclarer setSpout(String id, IRichSpout spout, Number parallelismHint) { validateComponentName(id); SpoutDeclarer s = new SpoutDeclarer(id, spout, parallelismHint); spouts.put(id, s); return s; }","r setSpout(t spu,r parallelismHint){(t);}",207,41,14,166,86.01036269430051,"['public', 'SpoutDeclarer', 'setSpout', '(', 'String', 'id', ',', 'IRichSpout', 'spout', ',', 'Number', 'parallelismHint', ')', '{', 'validateComponentName', '(', 'id', ')', ';', 'SpoutDeclarer', 's', '=', 'new', 'SpoutDeclarer', '(', 'id', ',', 'spout', ',', 'parallelismHint', ')', ';', 'spouts', '.', 'put', '(', 'id', ',', 's', ')', ';', 'return', 's', ';', '}']","['r', 'setSpout', '(', 't', 'spu', ',', 'r', 'parallelismHint', ')', '{', '(', 't', ')', ';', '}']",45,15,6,30,76.92307692307693
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setActionMode_1.txt,0.3428,1.1626,"{'n_total': 254, 'n_valid': 57, 'n_correct': 8}",165.451881,private void setActionMode(int actionMode) { this.actionMode = actionMode; },private void setActionMode(int actionMode){e;},76,46,19,30,52.63157894736842,"['private', 'void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'this', '.', 'actionMode', '=', 'actionMode', ';', '}']","['private', 'void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'e', ';', '}']",15,11,6,4,44.44444444444444
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getCurrentNetworkState_1.txt,0.4761,1.2122,"{'n_total': 336, 'n_valid': 96, 'n_correct': 6}",286.563848,public NetworkState getCurrentNetworkState() { return connectivityManagerDelegate.getNetworkState(); },e getCurrentNetworkState(){return connectivityManagerDelegate.getNetworkState();},102,81,28,21,28.37837837837838,"['public', 'NetworkState', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}']","['e', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}']",14,13,6,1,12.5
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setWrapStyleWord_1.txt,0.3973,2.0067,"{'n_total': 295, 'n_valid': 78, 'n_correct': 12}",223.023581,public void setWrapStyleWord(boolean value) { m_TextCode.setWrapStyleWord(value); },d setWrapStyleWord(boolean au){e.setWrapStyleWord();},83,53,22,30,49.18032786885246,"['public', 'void', 'setWrapStyleWord', '(', 'boolean', 'value', ')', '{', 'm_TextCode', '.', 'setWrapStyleWord', '(', 'value', ')', ';', '}']","['d', 'setWrapStyleWord', '(', 'boolean', 'au', ')', '{', 'e', '.', 'setWrapStyleWord', '(', ')', ';', '}']",16,14,6,2,20.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,closeAllShells_1.txt,0.4807,0.7569,"{'n_total': 293, 'n_valid': 59, 'n_correct': 10}",177.961247,public static void closeAllShells() throws IOException { Shell.closeAll(); },t closeAllShells()throws OEi{Shell.closeAll();},76,47,20,29,51.78571428571429,"['public', 'static', 'void', 'closeAllShells', '(', ')', 'throws', 'IOException', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}']","['t', 'closeAllShells', '(', ')', 'throws', 'OEi', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}']",16,14,6,2,20.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,applyExternalChanges_1.txt,0.407,2.5797,"{'n_total': 534, 'n_valid': 110, 'n_correct': 39}",321.390016,"@Override public void applyExternalChanges(User existingObject, APIUser object) throws GuacamoleException { if (object.getPassword() != null) existingObject.setPassword(object.getPassword()); existingObject.setAttributes(object.getAttributes()); }","@v void applyExternalChanges(r existingObject,r o)throws E{(o);s();}",247,68,26,179,80.99547511312217,"['@', 'Override', 'public', 'void', 'applyExternalChanges', '(', 'User', 'existingObject', ',', 'APIUser', 'object', ')', 'throws', 'GuacamoleException', '{', 'if', '(', 'object', '.', 'getPassword', '(', ')', '!=', 'null', ')', 'existingObject', '.', 'setPassword', '(', 'object', '.', 'getPassword', '(', ')', ')', ';', 'existingObject', '.', 'setAttributes', '(', 'object', '.', 'getAttributes', '(', ')', ')', ';', '}']","['@', 'v', 'void', 'applyExternalChanges', '(', 'r', 'existingObject', ',', 'r', 'o', ')', 'throws', 'E', '{', '(', 'o', ')', ';', 's', '(', ')', ';', '}']",48,23,6,25,59.523809523809526
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setHttpSession_1.txt,0.3168,1.6247,"{'n_total': 272, 'n_valid': 73, 'n_correct': 12}",212.782585,void setHttpSession(HttpSession hSession) { httpSession = hSession; },void setHttpSession(HttpSession on){;},69,38,20,31,63.26530612244898,"['void', 'setHttpSession', '(', 'HttpSession', 'hSession', ')', '{', 'httpSession', '=', 'hSession', ';', '}']","['void', 'setHttpSession', '(', 'HttpSession', 'on', ')', '{', ';', '}']",12,9,6,3,50.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,upperFirstLetter_1.txt,0.2945,1.7626,"{'n_total': 732, 'n_valid': 124, 'n_correct': 40}",367.12343,"public static String upperFirstLetter(final String s) { if (s == null || s.length() == 0) return """"; if (!Character.isLowerCase(s.charAt(0))) return s; return String.valueOf((char) (s.charAt(0) - 32)) + s.substring(1); }","g upperFirstLetter(final String s){if(s)return"""";if(!h.isLowerCase(s()));return inOf((2))+s();}",220,95,22,125,63.13131313131313,"['public', 'static', 'String', 'upperFirstLetter', '(', 'final', 'String', 's', ')', '{', 'if', '(', 's', '==', 'null', '||', 's', '.', 'length', '(', ')', '==', '0', ')', 'return', '""""', ';', 'if', '(', '!', 'Character', '.', 'isLowerCase', '(', 's', '.', 'charAt', '(', '0', ')', ')', ')', 'return', 's', ';', 'return', 'String', '.', 'valueOf', '(', '(', 'char', ')', '(', 's', '.', 'charAt', '(', '0', ')', '-', '32', ')', ')', '+', 's', '.', 'substring', '(', '1', ')', ';', '}']","['g', 'upperFirstLetter', '(', 'final', 'String', 's', ')', '{', 'if', '(', 's', ')', 'return', '""""', ';', 'if', '(', '!', 'h', '.', 'isLowerCase', '(', 's', '(', ')', ')', ')', ';', 'return', 'inOf', '(', '(', '2', ')', ')', '+', 's', '(', ')', ';', '}']",73,41,6,32,47.76119402985074
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setLastState_1.txt,0.4192,1.4964,"{'n_total': 250, 'n_valid': 68, 'n_correct': 12}",193.836552,protected void setLastState(int lastState) { this.lastState = lastState; },d setLastState(int late){s.lastState=Stte;},74,43,18,31,55.35714285714286,"['protected', 'void', 'setLastState', '(', 'int', 'lastState', ')', '{', 'this', '.', 'lastState', '=', 'lastState', ';', '}']","['d', 'setLastState', '(', 'int', 'late', ')', '{', 's', '.', 'lastState', '=', 'Stte', ';', '}']",15,14,6,1,11.11111111111111
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getInsertPosition_1.txt,0.3956,1.9575,"{'n_total': 210, 'n_valid': 52, 'n_correct': 5}",148.779892,public String getInsertPosition() { return insertPosition; },String getInsertPosition(){return insertPosition;},60,50,23,10,27.027027027027028,"['public', 'String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}']","['String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,launchTasks_1.txt,0.4094,1.3146,"{'n_total': 315, 'n_valid': 78, 'n_correct': 21}",220.597897,"@Override public Protos.Status launchTasks(Protos.OfferID offerId, Collection<Protos.TaskInfo> tasks) { return null; }","s launchTasks(Protos.D offerId,n<s>tasks){;}",118,44,17,74,73.26732673267327,"['@', 'Override', 'public', 'Protos', '.', 'Status', 'launchTasks', '(', 'Protos', '.', 'OfferID', 'offerId', ',', 'Collection', '<', 'Protos', '.', 'TaskInfo', '>', 'tasks', ')', '{', 'return', 'null', ';', '}']","['s', 'launchTasks', '(', 'Protos', '.', 'D', 'offerId', ',', 'n', '<', 's', '>', 'tasks', ')', '{', ';', '}']",26,17,6,9,45.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,presentationTimeMicroseconds_1.txt,0.4425,1.78,"{'n_total': 432, 'n_valid': 123, 'n_correct': 19}",357.239054,"@CalledByNative(""DequeueOutputResult"") private long presentationTimeMicroseconds() { return mPresentationTimeMicroseconds; }","@CalledByNative(""DequeueOutputResult"")te presentationTimeMicroseconds(){;}",124,74,34,50,55.55555555555556,"['@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'private', 'long', 'presentationTimeMicroseconds', '(', ')', '{', 'return', 'mPresentationTimeMicroseconds', ';', '}']","['@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'te', 'presentationTimeMicroseconds', '(', ')', '{', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getUserHistory_1.txt,0.3649,1.4313,"{'n_total': 619, 'n_valid': 191, 'n_correct': 19}",528.050878,@Override public ActivityRecordSet<ActivityRecord> getUserHistory() throws GuacamoleException { return new SimpleActivityRecordSet<ActivityRecord>(); },@O A<ActivityRecord>getUserHistory()throws GuacamoleException{return new i<ActivityRecord>();},151,94,20,57,43.51145038167939,"['@', 'Override', 'public', 'ActivityRecordSet', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'SimpleActivityRecordSet', '<', 'ActivityRecord', '>', '(', ')', ';', '}']","['@', 'O', 'A', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'i', '<', 'ActivityRecord', '>', '(', ')', ';', '}']",23,22,6,1,5.88235294117647
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onFragmentDetached_1.txt,0.3826,1.1065,"{'n_total': 780, 'n_valid': 175, 'n_correct': 52}",509.42615,"public void onFragmentDetached(String tag) { FragmentManager fragmentManager = getSupportFragmentManager(); Fragment fragment = fragmentManager.findFragmentByTag(tag); if (fragment != null) { fragmentManager.beginTransaction().disallowAddToBackStack().setCustomAnimations(R.anim.slide_left, R.anim.slide_right).remove(fragment).commitNow(); unlockDrawer(); } }",d onFragmentDetached(ring g){a();if(fragment!=ll){(R).e().commitNow();r();}},360,76,24,284,84.52380952380952,"['public', 'void', 'onFragmentDetached', '(', 'String', 'tag', ')', '{', 'FragmentManager', 'fragmentManager', '=', 'getSupportFragmentManager', '(', ')', ';', 'Fragment', 'fragment', '=', 'fragmentManager', '.', 'findFragmentByTag', '(', 'tag', ')', ';', 'if', '(', 'fragment', '!=', 'null', ')', '{', 'fragmentManager', '.', 'beginTransaction', '(', ')', '.', 'disallowAddToBackStack', '(', ')', '.', 'setCustomAnimations', '(', 'R', '.', 'anim', '.', 'slide_left', ',', 'R', '.', 'anim', '.', 'slide_right', ')', '.', 'remove', '(', 'fragment', ')', '.', 'commitNow', '(', ')', ';', 'unlockDrawer', '(', ')', ';', '}', '}']","['d', 'onFragmentDetached', '(', 'ring', 'g', ')', '{', 'a', '(', ')', ';', 'if', '(', 'fragment', '!=', 'll', ')', '{', '(', 'R', ')', '.', 'e', '(', ')', '.', 'commitNow', '(', ')', ';', 'r', '(', ')', ';', '}', '}']",72,36,6,36,54.54545454545454
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onGetChildren_1.txt,0.3129,2.1486,"{'n_total': 866, 'n_valid': 194, 'n_correct': 63}",550.4169,"@Override protected void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } }","d onGetChildren(ViewGroup t,r<t>children){for(i();;){if(isChildVisible(i)){(e);(c);}}}",330,86,19,244,78.45659163987139,"['@', 'Override', 'protected', 'void', 'onGetChildren', '(', 'ViewGroup', 'element', ',', 'Accumulator', '<', 'Object', '>', 'children', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'N', '=', 'element', '.', 'getChildCount', '(', ')', ';', 'i', '<', 'N', ';', '++', 'i', ')', '{', 'final', 'View', 'childView', '=', 'element', '.', 'getChildAt', '(', 'i', ')', ';', 'if', '(', 'isChildVisible', '(', 'childView', ')', ')', '{', 'final', 'Object', 'childElement', '=', 'getElementForView', '(', 'element', ',', 'childView', ')', ';', 'children', '.', 'store', '(', 'childElement', ')', ';', '}', '}', '}']","['d', 'onGetChildren', '(', 'ViewGroup', 't', ',', 'r', '<', 't', '>', 'children', ')', '{', 'for', '(', 'i', '(', ')', ';', ';', ')', '{', 'if', '(', 'isChildVisible', '(', 'i', ')', ')', '{', '(', 'e', ')', ';', '(', 'c', ')', ';', '}', '}', '}']",79,41,6,38,52.05479452054794
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getEntityDescriptor_1.txt,0.3199,1.3808,"{'n_total': 358, 'n_valid': 91, 'n_correct': 9}",257.86571,public java.util.List getEntityDescriptor() { return _getEntityDescriptor(); },public java.l.L getEntityDescriptor(){return getEntityDescriptor();},78,68,25,10,18.867924528301888,"['public', 'java', '.', 'util', '.', 'List', 'getEntityDescriptor', '(', ')', '{', 'return', '_getEntityDescriptor', '(', ')', ';', '}']","['public', 'java', '.', 'l', '.', 'L', 'getEntityDescriptor', '(', ')', '{', 'return', 'getEntityDescriptor', '(', ')', ';', '}']",16,16,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getHavingClause_1.txt,0.4955,1.1377,"{'n_total': 177, 'n_valid': 39, 'n_correct': 6}",114.517983,public ValueNode getHavingClause() { return havingClause; },e getHavingClause(){return havingClause;},59,41,21,18,47.368421052631575,"['public', 'ValueNode', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}']","['e', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getServerSessionContext_1.txt,0.1495,3.4322,"{'n_total': 300, 'n_valid': 73, 'n_correct': 8}",220.066648,ProvSSLSessionContext getServerSessionContext() { return serverSessionContext; },on getServerSessionContext(){return serverSessionContext;},80,58,29,22,43.13725490196079,"['ProvSSLSessionContext', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}']","['on', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}']",9,9,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,toValueArray_1.txt,0.3435,1.7992,"{'n_total': 682, 'n_valid': 182, 'n_correct': 42}",507.925537,private static String[] toValueArray(Vector values) { String[] tmp = new String[values.size()]; for (int i = 0; i != tmp.length; i++) { tmp[i] = (String) values.elementAt(i); } return tmp; },vng[]toValueArray(Vector values){for(;;){tmp=(String)(i);}return tmp;},190,70,18,120,69.76744186046511,"['private', 'static', 'String', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'String', '[', ']', 'tmp', '=', 'new', 'String', '[', 'values', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '!=', 'tmp', '.', 'length', ';', 'i', '++', ')', '{', 'tmp', '[', 'i', ']', '=', '(', 'String', ')', 'values', '.', 'elementAt', '(', 'i', ')', ';', '}', 'return', 'tmp', ';', '}']","['vng', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'for', '(', ';', ';', ')', '{', 'tmp', '=', '(', 'String', ')', '(', 'i', ')', ';', '}', 'return', 'tmp', ';', '}']",63,29,6,34,59.64912280701754
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setPss_1.txt,0.3612,2.8434,"{'n_total': 175, 'n_valid': 36, 'n_correct': 5}",100.845523,public void setPss(int pss) { this.pss = pss; },public void setPss(int pss){pss pss;},47,37,12,10,28.57142857142857,"['public', 'void', 'setPss', '(', 'int', 'pss', ')', '{', 'this', '.', 'pss', '=', 'pss', ';', '}']","['public', 'void', 'setPss', '(', 'int', 'pss', ')', '{', 'pss', 'pss', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setLogError_1.txt,0.3029,1.4257,"{'n_total': 329, 'n_valid': 96, 'n_correct': 12}",270.129578,public void setLogError(final boolean logError) { this.logError = logError; },d setLogError(final boolean logError){trro=logError;},77,53,17,24,40.0,"['public', 'void', 'setLogError', '(', 'final', 'boolean', 'logError', ')', '{', 'this', '.', 'logError', '=', 'logError', ';', '}']","['d', 'setLogError', '(', 'final', 'boolean', 'logError', ')', '{', 'trro', '=', 'logError', ';', '}']",16,13,6,3,30.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setDirective_1.txt,0.4032,0.9317,"{'n_total': 370, 'n_valid': 96, 'n_correct': 19}",274.161435,"public void setDirective(Directive directive, String value) { directives.put(directive, value); }","i setDirective(Directive e,g ve){dvst(directive,ue);}",97,53,18,44,55.69620253164557,"['public', 'void', 'setDirective', '(', 'Directive', 'directive', ',', 'String', 'value', ')', '{', 'directives', '.', 'put', '(', 'directive', ',', 'value', ')', ';', '}']","['i', 'setDirective', '(', 'Directive', 'e', ',', 'g', 've', ')', '{', 'dvst', '(', 'directive', ',', 'ue', ')', ';', '}']",21,18,6,3,20.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,finishCommand_1.txt,0.3903,1.1902,"{'n_total': 356, 'n_valid': 90, 'n_correct': 17}",255.472265,protected final void finishCommand() { this.executing = false; this.finished = true; this.notifyAll(); },protected finalid finishCommand(){s.executing=alsl();},104,54,19,50,58.82352941176471,"['protected', 'final', 'void', 'finishCommand', '(', ')', '{', 'this', '.', 'executing', '=', 'false', ';', 'this', '.', 'finished', '=', 'true', ';', 'this', '.', 'notifyAll', '(', ')', ';', '}']","['protected', 'finalid', 'finishCommand', '(', ')', '{', 's', '.', 'executing', '=', 'alsl', '(', ')', ';', '}']",26,15,6,11,55.00000000000001
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,fromFlags_1.txt,0.4012,1.4482,"{'n_total': 354, 'n_valid': 102, 'n_correct': 13}",275.409264,public static final RedNetConnectionType fromFlags(short flags) { return connections.get(flags); },static final RedNetConnectionType fromFlags(sho flags){connections.t();},98,72,15,26,31.32530120481928,"['public', 'static', 'final', 'RedNetConnectionType', 'fromFlags', '(', 'short', 'flags', ')', '{', 'return', 'connections', '.', 'get', '(', 'flags', ')', ';', '}']","['static', 'final', 'RedNetConnectionType', 'fromFlags', '(', 'sho', 'flags', ')', '{', 'connections', '.', 't', '(', ')', ';', '}']",19,16,6,3,23.07692307692308
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,preAnimateRemoveImpl_1.txt,0.4428,0.9425,"{'n_total': 371, 'n_valid': 81, 'n_correct': 24}",242.156447,"@Override protected void preAnimateRemoveImpl(RecyclerView.ViewHolder holder) { ViewCompat.setPivotX(holder.itemView, holder.itemView.getWidth()); }",d preAnimateRemoveImpl(R holder){V.setPivotX(h);},148,49,26,99,81.14754098360656,"['@', 'Override', 'protected', 'void', 'preAnimateRemoveImpl', '(', 'RecyclerView', '.', 'ViewHolder', 'holder', ')', '{', 'ViewCompat', '.', 'setPivotX', '(', 'holder', '.', 'itemView', ',', 'holder', '.', 'itemView', '.', 'getWidth', '(', ')', ')', ';', '}']","['d', 'preAnimateRemoveImpl', '(', 'R', 'holder', ')', '{', 'V', '.', 'setPivotX', '(', 'h', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setDefaultUri_1.txt,0.4727,1.2875,"{'n_total': 272, 'n_valid': 59, 'n_correct': 17}",171.095118,public final void setDefaultUri(String uri) { webServiceTemplate.setDefaultUri(uri); },d setDefaultUri(g i){v.setDefaultUri();},86,40,19,46,68.65671641791045,"['public', 'final', 'void', 'setDefaultUri', '(', 'String', 'uri', ')', '{', 'webServiceTemplate', '.', 'setDefaultUri', '(', 'uri', ')', ';', '}']","['d', 'setDefaultUri', '(', 'g', 'i', ')', '{', 'v', '.', 'setDefaultUri', '(', ')', ';', '}']",17,14,6,3,27.27272727272727
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,removeLocationListener_1.txt,0.4702,0.7736,"{'n_total': 415, 'n_valid': 104, 'n_correct': 18}",305.224197,public synchronized void removeLocationListener(LocationListener listener) { locationListeners.remove(listener); },d removeLocationListener(LocationListener lr){locationListeners.r();},114,69,28,45,52.32558139534884,"['public', 'synchronized', 'void', 'removeLocationListener', '(', 'LocationListener', 'listener', ')', '{', 'locationListeners', '.', 'remove', '(', 'listener', ')', ';', '}']","['d', 'removeLocationListener', '(', 'LocationListener', 'lr', ')', '{', 'locationListeners', '.', 'r', '(', ')', ';', '}']",17,14,6,3,27.27272727272727
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,supportsReturnType_1.txt,0.4893,1.7947,"{'n_total': 756, 'n_valid': 178, 'n_correct': 45}",518.721343,"@Override public final boolean supportsReturnType(MethodParameter returnType) { Assert.isTrue(returnType.getParameterIndex() == -1, ""Parameter index is not -1""); if (returnType.getMethodAnnotation(ResponsePayload.class) == null) { return false; } else { return supportsResponsePayloadReturnType(returnType); } }","n supportsReturnType(MethodParameter returnType){e(ndex()==1,"""");if((s)){r();}}",311,79,24,232,80.8362369337979,"['@', 'Override', 'public', 'final', 'boolean', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', 'Assert', '.', 'isTrue', '(', 'returnType', '.', 'getParameterIndex', '(', ')', '==', '-', '1', ',', '""Parameter index is not -1""', ')', ';', 'if', '(', 'returnType', '.', 'getMethodAnnotation', '(', 'ResponsePayload', '.', 'class', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'supportsResponsePayloadReturnType', '(', 'returnType', ')', ';', '}', '}']","['n', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', 'e', '(', 'ndex', '(', ')', '==', '1', ',', '""""', ')', ';', 'if', '(', '(', 's', ')', ')', '{', 'r', '(', ')', ';', '}', '}']",55,31,6,24,48.97959183673469
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onOutputFormatChanged_1.txt,0.4324,0.977,"{'n_total': 325, 'n_valid': 70, 'n_correct': 15}",205.110495,@Override protected void onOutputFormatChanged(MediaFormat format) { mAudioPlayback.init(format); },@d v onOutputFormatChanged(MediaFormat format){ck.init(o);},99,59,27,40,55.55555555555556,"['@', 'Override', 'protected', 'void', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'mAudioPlayback', '.', 'init', '(', 'format', ')', ';', '}']","['@', 'd', 'v', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'ck', '.', 'init', '(', 'o', ')', ';', '}']",18,17,6,1,8.333333333333332
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isSynthesized_1.txt,0.3271,3.0053,"{'n_total': 402, 'n_valid': 110, 'n_correct': 23}",317.126367,public boolean isSynthesized(ResResource res) { return mPackage.isSynthesized(res.getResSpec().getId()); },n isSynthesized(R s){return e.isSynthesized(d);},106,48,19,58,66.66666666666666,"['public', 'boolean', 'isSynthesized', '(', 'ResResource', 'res', ')', '{', 'return', 'mPackage', '.', 'isSynthesized', '(', 'res', '.', 'getResSpec', '(', ')', '.', 'getId', '(', ')', ')', ';', '}']","['n', 'isSynthesized', '(', 'R', 's', ')', '{', 'return', 'e', '.', 'isSynthesized', '(', 'd', ')', ';', '}']",25,16,6,9,47.368421052631575
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getPollTime_1.txt,0.484,1.3666,"{'n_total': 180, 'n_valid': 45, 'n_correct': 5}",124.520751,public int getPollTime() { return pollTime; },publicint getPollTime(){return pollTime;},45,41,17,4,14.285714285714285,"['public', 'int', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}']","['publicint', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getRationale_1.txt,0.4218,2.1693,"{'n_total': 521, 'n_valid': 104, 'n_correct': 36}",298.69031,"public String getRationale() { int count = getItemGradingDataArray().size(); if (count > 0) { ItemGradingData data = getItemGradingDataArray().get(count - 1); rationale = FormattedText.convertFormattedTextToPlaintext(data.getRationale()); } return Validator.check(rationale, """"); }","publicg getRationale(){if(0){(d);}return r.h(rationale,"""");}",281,60,18,221,84.03041825095056,"['public', 'String', 'getRationale', '(', ')', '{', 'int', 'count', '=', 'getItemGradingDataArray', '(', ')', '.', 'size', '(', ')', ';', 'if', '(', 'count', '>', '0', ')', '{', 'ItemGradingData', 'data', '=', 'getItemGradingDataArray', '(', ')', '.', 'get', '(', 'count', '-', '1', ')', ';', 'rationale', '=', 'FormattedText', '.', 'convertFormattedTextToPlaintext', '(', 'data', '.', 'getRationale', '(', ')', ')', ';', '}', 'return', 'Validator', '.', 'check', '(', 'rationale', ',', '""""', ')', ';', '}']","['publicg', 'getRationale', '(', ')', '{', 'if', '(', '0', ')', '{', '(', 'd', ')', ';', '}', 'return', 'r', '.', 'h', '(', 'rationale', ',', '""""', ')', ';', '}']",63,26,6,37,64.91228070175438
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setCountdown_1.txt,0.4973,0.7209,"{'n_total': 300, 'n_valid': 91, 'n_correct': 14}",256.928,public void setCountdown(Integer countdown) { this.countdown = countdown; },d setCountdown(r countdown){s.cou=countdown;},75,45,18,30,52.63157894736842,"['public', 'void', 'setCountdown', '(', 'Integer', 'countdown', ')', '{', 'this', '.', 'countdown', '=', 'countdown', ';', '}']","['d', 'setCountdown', '(', 'r', 'countdown', ')', '{', 's', '.', 'cou', '=', 'countdown', ';', '}']",15,14,6,1,11.11111111111111
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getInstanceMap_1.txt,0.4072,1.0946,"{'n_total': 1038, 'n_valid': 252, 'n_correct': 73}",710.204772,"public static Map<String, List<Rule>> getInstanceMap(final NameType nameType, final RuleType rt, final String lang) { final Map<String, List<Rule>> rules = RULES.get(nameType).get(rt).get(lang); if (rules == null) { throw new IllegalArgumentException(String.format(""No rules found for %s, %s, %s."", nameType.getName(), rt.getName(), lang)); } return rules; }","p<Strin,t<Rule>>getInstanceMap(fipe nameType,e t,ring g){p<r>s=(e).get();if(r){n();}}",358,85,20,273,80.76923076923077,"['public', 'static', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'getInstanceMap', '(', 'final', 'NameType', 'nameType', ',', 'final', 'RuleType', 'rt', ',', 'final', 'String', 'lang', ')', '{', 'final', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'rules', '=', 'RULES', '.', 'get', '(', 'nameType', ')', '.', 'get', '(', 'rt', ')', '.', 'get', '(', 'lang', ')', ';', 'if', '(', 'rules', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""No rules found for %s, %s, %s.""', ',', 'nameType', '.', 'getName', '(', ')', ',', 'rt', '.', 'getName', '(', ')', ',', 'lang', ')', ')', ';', '}', 'return', 'rules', ';', '}']","['p', '<', 'Strin', ',', 't', '<', 'Rule', '>', '>', 'getInstanceMap', '(', 'fipe', 'nameType', ',', 'e', 't', ',', 'ring', 'g', ')', '{', 'p', '<', 'r', '>', 's', '=', '(', 'e', ')', '.', 'get', '(', ')', ';', 'if', '(', 'r', ')', '{', 'n', '(', ')', ';', '}', '}']",93,46,6,47,54.02298850574713
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setFuel_1.txt,0.4926,1.0749,"{'n_total': 233, 'n_valid': 48, 'n_correct': 19}",138.144518,"public void setFuel(ReactantStack newFuel) { setReactant(FUEL, newFuel); }","d setFuel(k l){ant(FUEL,l);}",74,28,13,46,75.40983606557377,"['public', 'void', 'setFuel', '(', 'ReactantStack', 'newFuel', ')', '{', 'setReactant', '(', 'FUEL', ',', 'newFuel', ')', ';', '}']","['d', 'setFuel', '(', 'k', 'l', ')', '{', 'ant', '(', 'FUEL', ',', 'l', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,removeSecurityRole_1.txt,0.4079,1.1881,"{'n_total': 352, 'n_valid': 92, 'n_correct': 17}",273.967721,@Override public void removeSecurityRole(String role) { securityRoles.remove(role); },d removeSecurityRole(S r){securityRole.remove();},85,49,24,36,59.01639344262295,"['@', 'Override', 'public', 'void', 'removeSecurityRole', '(', 'String', 'role', ')', '{', 'securityRoles', '.', 'remove', '(', 'role', ')', ';', '}']","['d', 'removeSecurityRole', '(', 'S', 'r', ')', '{', 'securityRole', '.', 'remove', '(', ')', ';', '}']",18,14,6,4,33.33333333333333
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,loadModelData_1.txt,0.3584,1.9809,"{'n_total': 347, 'n_valid': 85, 'n_correct': 18}",242.468202,"@Override public ModelData loadModelData(FileHandle fileHandle, ModelLoader.ModelParameters parameters) { return parseModel(fileHandle); }","ModelData loadModelData(e fileHandle,s p){t();}",138,47,19,91,76.47058823529412,"['@', 'Override', 'public', 'ModelData', 'loadModelData', '(', 'FileHandle', 'fileHandle', ',', 'ModelLoader', '.', 'ModelParameters', 'parameters', ')', '{', 'return', 'parseModel', '(', 'fileHandle', ')', ';', '}']","['ModelData', 'loadModelData', '(', 'e', 'fileHandle', ',', 's', 'p', ')', '{', 't', '(', ')', ';', '}']",22,15,6,7,43.75
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,visitCharLiteral_1.txt,0.4465,2.0002,"{'n_total': 523, 'n_valid': 91, 'n_correct': 30}",292.29492,"@Override protected String visitCharLiteral(CharLiteral node, Void context) { return ""CHAR "" + formatStringLiteral(node.getValue()); }","@d g visitCharLiteral(CharLiteral o,d c){return""""+(n());}",134,57,22,77,68.75,"['@', 'Override', 'protected', 'String', 'visitCharLiteral', '(', 'CharLiteral', 'node', ',', 'Void', 'context', ')', '{', 'return', '""CHAR ""', '+', 'formatStringLiteral', '(', 'node', '.', 'getValue', '(', ')', ')', ';', '}']","['@', 'd', 'g', 'visitCharLiteral', '(', 'CharLiteral', 'o', ',', 'd', 'c', ')', '{', 'return', '""""', '+', '(', 'n', '(', ')', ')', ';', '}']",26,22,6,4,20.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getMaxTasks_1.txt,0.4888,0.788,"{'n_total': 176, 'n_valid': 32, 'n_correct': 6}",94.585884,public int getMaxTasks() { return maxTasks; },public int getMaxTasks(){maxTasks;},45,35,17,10,35.714285714285715,"['public', 'int', 'getMaxTasks', '(', ')', '{', 'return', 'maxTasks', ';', '}']","['public', 'int', 'getMaxTasks', '(', ')', '{', 'maxTasks', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onPreRemove_1.txt,0.4296,1.0286,"{'n_total': 348, 'n_valid': 96, 'n_correct': 23}",272.292095,"@Override public void onPreRemove(IoFilterChain filterChain, String name, NextFilter nextFilter) { filterChain.getSession().getConfig().setReaderIdleTime(0); }","d onPreRemove(IoFilterChain e,F r){;}",159,37,17,122,85.91549295774648,"['@', 'Override', 'public', 'void', 'onPreRemove', '(', 'IoFilterChain', 'filterChain', ',', 'String', 'name', ',', 'NextFilter', 'nextFilter', ')', '{', 'filterChain', '.', 'getSession', '(', ')', '.', 'getConfig', '(', ')', '.', 'setReaderIdleTime', '(', '0', ')', ';', '}']","['d', 'onPreRemove', '(', 'IoFilterChain', 'e', ',', 'F', 'r', ')', '{', ';', '}']",32,12,6,20,76.92307692307693
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,parseTagFileDirectives_1.txt,0.4959,1.8067,"{'n_total': 639, 'n_valid': 164, 'n_correct': 52}",467.062192,"public Node.Nodes parseTagFileDirectives(String inFileName, Jar jar) throws FileNotFoundException, JasperException, IOException { boolean isTagFileSave = isTagFile; boolean directiveOnlySave = directiveOnly; isTagFile = true; directiveOnly = true; Node.Nodes page = doParse(inFileName, null, jar); directiveOnly = directiveOnlySave; isTagFile = isTagFileSave; return page; }",s parseTagFileDirectives(S r)throws F{e(iar);directiveOnly=v;},374,62,28,312,90.17341040462428,"['public', 'Node', '.', 'Nodes', 'parseTagFileDirectives', '(', 'String', 'inFileName', ',', 'Jar', 'jar', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', ',', 'IOException', '{', 'boolean', 'isTagFileSave', '=', 'isTagFile', ';', 'boolean', 'directiveOnlySave', '=', 'directiveOnly', ';', 'isTagFile', '=', 'true', ';', 'directiveOnly', '=', 'true', ';', 'Node', '.', 'Nodes', 'page', '=', 'doParse', '(', 'inFileName', ',', 'null', ',', 'jar', ')', ';', 'directiveOnly', '=', 'directiveOnlySave', ';', 'isTagFile', '=', 'isTagFileSave', ';', 'return', 'page', ';', '}']","['s', 'parseTagFileDirectives', '(', 'S', 'r', ')', 'throws', 'F', '{', 'e', '(', 'iar', ')', ';', 'directiveOnly', '=', 'v', ';', '}']",63,19,6,44,77.19298245614034
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setNavBarColor_1.txt,0.4374,0.9107,"{'n_total': 454, 'n_valid': 94, 'n_correct': 24}",277.722858,"@RequiresApi(Build.VERSION_CODES.LOLLIPOP) public static void setNavBarColor(@NonNull final Window window, @ColorInt final int color) { window.setNavigationBarColor(color); }","d setNavBarColor(@l w w,@l t o){w.setNavigationBarColor();}",174,59,20,115,74.67532467532467,"['@', 'RequiresApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'LOLLIPOP', ')', 'public', 'static', 'void', 'setNavBarColor', '(', '@', 'NonNull', 'final', 'Window', 'window', ',', '@', 'ColorInt', 'final', 'int', 'color', ')', '{', 'window', '.', 'setNavigationBarColor', '(', 'color', ')', ';', '}']","['d', 'setNavBarColor', '(', '@', 'l', 'w', 'w', ',', '@', 'l', 't', 'o', ')', '{', 'w', '.', 'setNavigationBarColor', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,valueBound_1.txt,0.4852,1.7213,"{'n_total': 588, 'n_valid': 178, 'n_correct': 26}",490.82315,public void valueBound(final SSLSessionBindingEvent event) { CallbackUtil.safeCallback(new Runnable() { public void run() { listener.valueBound(event); } }); },id valueBound(final SSLSessionBindingEvent event){lk(new R(){i(){d();}});},159,74,16,85,59.44055944055944,"['public', 'void', 'valueBound', '(', 'final', 'SSLSessionBindingEvent', 'event', ')', '{', 'CallbackUtil', '.', 'safeCallback', '(', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'listener', '.', 'valueBound', '(', 'event', ')', ';', '}', '}', ')', ';', '}']","['id', 'valueBound', '(', 'final', 'SSLSessionBindingEvent', 'event', ')', '{', 'lk', '(', 'new', 'R', '(', ')', '{', 'i', '(', ')', '{', 'd', '(', ')', ';', '}', '}', ')', ';', '}']",36,28,6,8,26.666666666666668
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getOrderByType_1.txt,0.4153,1.2209,"{'n_total': 204, 'n_valid': 55, 'n_correct': 5}",155.457474,public OrderByType getOrderByType() { return orderByType; },OrderByType getOrderByType(){return orderByType;},59,49,20,10,25.64102564102564,"['public', 'OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}']","['OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getSessionListener_1.txt,0.2991,1.6092,"{'n_total': 256, 'n_valid': 72, 'n_correct': 10}",207.460897,public SessionAttributeListener getSessionListener() { return sessionListener; },t getSessionListener(){return sessionListener;},80,47,24,33,58.92857142857143,"['public', 'SessionAttributeListener', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}']","['t', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getTokenEndPosition_1.txt,0.9923,0.0435,"{'n_total': 704, 'n_valid': 121, 'n_correct': 56}",355.96029,"private static final int getTokenEndPosition(byte[] bytes, int off, int end, int version, boolean isName) { int pos = off; while (pos < end && (!CookieSupport.isHttpSeparator((char) bytes[pos]) || version == 0 && CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 && bytes[pos] != '=' && !CookieSupport.isV0Separator((char) bytes[pos]) || !isName && bytes[pos] == '=' && CookieSupport.ALLOW_EQUALS_IN_VALUE)) { pos++; } if (pos > end) { return end; } return pos; }","t getTokenEndPosition(e[]i,b e){while(pos&&(!CookieSupport.r(s[s])||E)){s++;}if(o){}}",455,85,25,370,86.04651162790698,"['private', 'static', 'final', 'int', 'getTokenEndPosition', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'off', ',', 'int', 'end', ',', 'int', 'version', ',', 'boolean', 'isName', ')', '{', 'int', 'pos', '=', 'off', ';', 'while', '(', 'pos', '<', 'end', '&&', '(', '!', 'CookieSupport', '.', 'isHttpSeparator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', 'version', '==', '0', '&&', 'CookieSupport', '.', 'ALLOW_HTTP_SEPARATORS_IN_V0', '&&', 'bytes', '[', 'pos', ']', '!=', ""'='"", '&&', '!', 'CookieSupport', '.', 'isV0Separator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', '!', 'isName', '&&', 'bytes', '[', 'pos', ']', '==', ""'='"", '&&', 'CookieSupport', '.', 'ALLOW_EQUALS_IN_VALUE', ')', ')', '{', 'pos', '++', ';', '}', 'if', '(', 'pos', '>', 'end', ')', '{', 'return', 'end', ';', '}', 'return', 'pos', ';', '}']","['t', 'getTokenEndPosition', '(', 'e', '[', ']', 'i', ',', 'b', 'e', ')', '{', 'while', '(', 'pos', '&&', '(', '!', 'CookieSupport', '.', 'r', '(', 's', '[', 's', ']', ')', '||', 'E', ')', ')', '{', 's', '++', ';', '}', 'if', '(', 'o', ')', '{', '}', '}']",114,43,6,71,65.74074074074075
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getConditionName_1.txt,0.3356,2.9438,"{'n_total': 742, 'n_valid': 180, 'n_correct': 45}",520.444046,"private String getConditionName() { String conditionName = (String) propertySheetModel.getValue(CONDITION_NAME); conditionName = conditionName.trim(); if (conditionName.length() == 0) { setInlineAlertMessage(CCAlert.TYPE_ERROR, ""message.error"", ""policy.missing.conditionName""); conditionName = null; } return conditionName; }","v getConditionName(){e.tm();if(o()==0){e(C,"""");}return conditionName;}",325,70,22,255,84.15841584158416,"['private', 'String', 'getConditionName', '(', ')', '{', 'String', 'conditionName', '=', '(', 'String', ')', 'propertySheetModel', '.', 'getValue', '(', 'CONDITION_NAME', ')', ';', 'conditionName', '=', 'conditionName', '.', 'trim', '(', ')', ';', 'if', '(', 'conditionName', '.', 'length', '(', ')', '==', '0', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'TYPE_ERROR', ',', '""message.error""', ',', '""policy.missing.conditionName""', ')', ';', 'conditionName', '=', 'null', ';', '}', 'return', 'conditionName', ';', '}']","['v', 'getConditionName', '(', ')', '{', 'e', '.', 'tm', '(', ')', ';', 'if', '(', 'o', '(', ')', '==', '0', ')', '{', 'e', '(', 'C', ',', '""""', ')', ';', '}', 'return', 'conditionName', ';', '}']",58,32,6,26,50.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getConnectionPermissions_1.txt,0.3991,1.5334,"{'n_total': 533, 'n_valid': 160, 'n_correct': 26}",454.118442,@Override public ObjectPermissionSet getConnectionPermissions() throws GuacamoleException { Directory<Connection> connectionDirectory = userContext.getConnectionDirectory(); return new SharedObjectPermissionSet(connectionDirectory.getIdentifiers()); },@viic ObjectPermissionSet getConnectionPermissions()throws eEon{t(getIdentifiers);},251,83,30,168,76.01809954751131,"['@', 'Override', 'public', 'ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'GuacamoleException', '{', 'Directory', '<', 'Connection', '>', 'connectionDirectory', '=', 'userContext', '.', 'getConnectionDirectory', '(', ')', ';', 'return', 'new', 'SharedObjectPermissionSet', '(', 'connectionDirectory', '.', 'getIdentifiers', '(', ')', ')', ';', '}']","['@', 'viic', 'ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'eEon', '{', 't', '(', 'getIdentifiers', ')', ';', '}']",34,15,6,19,67.85714285714286
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addServlets_1.txt,0.334,1.6351,"{'n_total': 486, 'n_valid': 101, 'n_correct': 41}",286.635201,"public static void addServlets(Tomcat tomcat) { Context ctx = tomcat.addContext("""", System.getProperty(""java.io.tmpdir"")); Tomcat.addServlet(ctx, path, new TestBug49158Servlet()); ctx.addServletMapping(""/"" + path, path); }","d addServlets(t tomcat){(("""")).addServlet();g(""""+ath);}",222,55,17,167,81.46341463414633,"['public', 'static', 'void', 'addServlets', '(', 'Tomcat', 'tomcat', ')', '{', 'Context', 'ctx', '=', 'tomcat', '.', 'addContext', '(', '""""', ',', 'System', '.', 'getProperty', '(', '""java.io.tmpdir""', ')', ')', ';', 'Tomcat', '.', 'addServlet', '(', 'ctx', ',', 'path', ',', 'new', 'TestBug49158Servlet', '(', ')', ')', ';', 'ctx', '.', 'addServletMapping', '(', '""/""', '+', 'path', ',', 'path', ')', ';', '}']","['d', 'addServlets', '(', 't', 'tomcat', ')', '{', '(', '(', '""""', ')', ')', '.', 'addServlet', '(', ')', ';', 'g', '(', '""""', '+', 'ath', ')', ';', '}']",52,25,6,27,58.69565217391305
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,writePendingText_1.txt,0.9943,0.0074,"{'n_total': 1072, 'n_valid': 301, 'n_correct': 70}",853.759714,"private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } if (buf.length() > 1024) buf = new StringBuffer(); else buf.setLength(0); }",d writePendingText()throws SAXException{if((u)){S.onText(fll);t();}(b);},312,72,22,240,82.75862068965517,"['private', 'void', 'writePendingText', '(', ')', 'throws', 'SAXException', '{', 'if', '(', '!', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'null', ',', 'null', ')', ')', '{', 'StringRef', 'ref', '=', 'new', 'StringRef', '(', ')', ';', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'ref', ',', 'null', ')', ';', 'context', '.', 'reportEvent', '(', 'target', ',', 'ref', '.', 'str', ')', ';', '}', 'if', '(', 'buf', '.', 'length', '(', ')', '>', '1024', ')', 'buf', '=', 'new', 'StringBuffer', '(', ')', ';', 'else', 'buf', '.', 'setLength', '(', '0', ')', ';', '}']","['d', 'writePendingText', '(', ')', 'throws', 'SAXException', '{', 'if', '(', '(', 'u', ')', ')', '{', 'S', '.', 'onText', '(', 'fll', ')', ';', 't', '(', ')', ';', '}', '(', 'b', ')', ';', '}']",92,31,6,61,70.93023255813954
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setSoapVersion_1.txt,0.4847,1.1102,"{'n_total': 375, 'n_valid': 77, 'n_correct': 21}",223.549728,public void setSoapVersion(SoapVersion version) { if (version != SoapVersion.SOAP_11) { throw new UnsupportedOperationException(); } },public void setSoapVersion(SoapVersion v){if(ve){}},134,51,20,83,72.80701754385966,"['public', 'void', 'setSoapVersion', '(', 'SoapVersion', 'version', ')', '{', 'if', '(', 'version', '!=', 'SoapVersion', '.', 'SOAP_11', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}', '}']","['public', 'void', 'setSoapVersion', '(', 'SoapVersion', 'v', ')', '{', 'if', '(', 've', ')', '{', '}', '}']",25,15,6,10,52.63157894736842
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,checkIsAlive_1.txt,0.3296,1.7891,"{'n_total': 315, 'n_valid': 93, 'n_correct': 9}",258.493988,void checkIsAlive() throws IllegalStateException { mContentViewCore.checkIsAlive(); },void checkIsAlive()throws n{mContentViewCore.checkIsAlive();},85,61,18,24,35.82089552238806,"['void', 'checkIsAlive', '(', ')', 'throws', 'IllegalStateException', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}']","['void', 'checkIsAlive', '(', ')', 'throws', 'n', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}']",14,14,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getResourceInformation_1.txt,0.4608,1.9781,"{'n_total': 464, 'n_valid': 134, 'n_correct': 23}",383.577244,public ResourceInformation getResourceInformation(String resourceType) { return resourceRegistry.getEntry(resourceType).getResourceInformation(); },m getResourceInformation(Stn e){y().getResourceInformation();},147,62,28,85,71.42857142857143,"['public', 'ResourceInformation', 'getResourceInformation', '(', 'String', 'resourceType', ')', '{', 'return', 'resourceRegistry', '.', 'getEntry', '(', 'resourceType', ')', '.', 'getResourceInformation', '(', ')', ';', '}']","['m', 'getResourceInformation', '(', 'Stn', 'e', ')', '{', 'y', '(', ')', '.', 'getResourceInformation', '(', ')', ';', '}']",21,16,6,5,33.33333333333333
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setSocketBuffer_1.txt,0.3012,2.0785,"{'n_total': 517, 'n_valid': 164, 'n_correct': 24}",467.397792,@Override public void setSocketBuffer(int socketBuffer) { super.setSocketBuffer(socketBuffer); outputBuffer.setSocketBuffer(socketBuffer); },o setSocketBuffer(t socketBuffer){socketBuffer(e);r();},140,55,21,85,71.42857142857143,"['@', 'Override', 'public', 'void', 'setSocketBuffer', '(', 'int', 'socketBuffer', ')', '{', 'super', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', 'outputBuffer', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', '}']","['o', 'setSocketBuffer', '(', 't', 'socketBuffer', ')', '{', 'socketBuffer', '(', 'e', ')', ';', 'r', '(', ')', ';', '}']",25,17,6,8,42.10526315789473
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getTimePoints_1.txt,0.3224,2.276,"{'n_total': 302, 'n_valid': 70, 'n_correct': 9}",209.253691,List<TimePoint> getTimePoints() { return Arrays.asList(timePoints); },t<imnt>getTimePoints(){return Arrays.asList(timePoints);},69,57,19,12,24.0,"['List', '<', 'TimePoint', '>', 'getTimePoints', '(', ')', '{', 'return', 'Arrays', '.', 'asList', '(', 'timePoints', ')', ';', '}']","['t', '<', 'imnt', '>', 'getTimePoints', '(', ')', '{', 'return', 'Arrays', '.', 'asList', '(', 'timePoints', ')', ';', '}']",17,17,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getInbox_1.txt,0.3322,1.5217,"{'n_total': 257, 'n_valid': 38, 'n_correct': 16}",118.660759,"protected Folder getInbox() throws MessagingException { return getStore().getFolder(""INBOX""); }","er getInbox()throws i{r(""INBOX"");}",95,34,14,61,75.30864197530865,"['protected', 'Folder', 'getInbox', '(', ')', 'throws', 'MessagingException', '{', 'return', 'getStore', '(', ')', '.', 'getFolder', '(', '""INBOX""', ')', ';', '}']","['er', 'getInbox', '(', ')', 'throws', 'i', '{', 'r', '(', '""INBOX""', ')', ';', '}']",19,13,6,6,46.15384615384615
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getLastmod_1.txt,0.4513,1.2012,"{'n_total': 160, 'n_valid': 45, 'n_correct': 9}",124.89096,public String getLastmod() { return lastmod; },b getLastmod(){return lastmod;},46,31,16,15,50.0,"['public', 'String', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}']","['b', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,startPreviewActivity_1.txt,0.1947,3.1609,"{'n_total': 1365, 'n_valid': 680, 'n_correct': 78}",1862.317918,"private void startPreviewActivity() { Intent intent = PreviewActivity.newIntent(this, getMediaAction(), getCameraController().getOutputFile().toString(), cameraControlPanel.showCrop()); startActivityForResult(intent, REQUEST_PREVIEW_CODE); }","void startPreviewActivity(){t n=PreviewActivity.t(thi,n(),getCameraController().getOutputFile().t());(T);}",241,106,26,135,62.7906976744186,"['private', 'void', 'startPreviewActivity', '(', ')', '{', 'Intent', 'intent', '=', 'PreviewActivity', '.', 'newIntent', '(', 'this', ',', 'getMediaAction', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 'toString', '(', ')', ',', 'cameraControlPanel', '.', 'showCrop', '(', ')', ')', ';', 'startActivityForResult', '(', 'intent', ',', 'REQUEST_PREVIEW_CODE', ')', ';', '}']","['void', 'startPreviewActivity', '(', ')', '{', 't', 'n', '=', 'PreviewActivity', '.', 't', '(', 'thi', ',', 'n', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 't', '(', ')', ')', ';', '(', 'T', ')', ';', '}']",46,36,6,10,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getResponseBytes_1.txt,0.388,2.0139,"{'n_total': 280, 'n_valid': 59, 'n_correct': 10}",172.742406,public byte[] getResponseBytes() { return _transaction.getResponseBytes(); },yte[]getResponseBytes(){return transaction.gtes();},76,51,22,25,46.2962962962963,"['public', 'byte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', '_transaction', '.', 'getResponseBytes', '(', ')', ';', '}']","['yte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', 'transaction', '.', 'gtes', '(', ')', ';', '}']",16,15,6,1,10.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getQuestionNumber_1.txt,0.26,3.5219,"{'n_total': 361, 'n_valid': 98, 'n_correct': 16}",284.515757,"public String getQuestionNumber() { return Validator.check(questionNumber, ""N/A""); }","iig getQuestionNumber(){r.e(questionNumber,"""");}",84,48,23,36,59.01639344262295,"['public', 'String', 'getQuestionNumber', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'questionNumber', ',', '""N/A""', ')', ';', '}']","['iig', 'getQuestionNumber', '(', ')', '{', 'r', '.', 'e', '(', 'questionNumber', ',', '""""', ')', ';', '}']",17,15,6,2,18.181818181818183
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setOverlap_1.txt,0.4925,0.7974,"{'n_total': 298, 'n_valid': 93, 'n_correct': 15}",279.898361,public void setOverlap(double overlap) { this.overlap = overlap; },d setOverlap(dble overlap){p=overlap;},66,38,16,28,56.00000000000001,"['public', 'void', 'setOverlap', '(', 'double', 'overlap', ')', '{', 'this', '.', 'overlap', '=', 'overlap', ';', '}']","['d', 'setOverlap', '(', 'dble', 'overlap', ')', '{', 'p', '=', 'overlap', ';', '}']",15,12,6,3,33.33333333333333
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getDefaultRemoteAddress_1.txt,0.4303,1.3443,"{'n_total': 345, 'n_valid': 90, 'n_correct': 4}",261.885979,public SocketAddress getDefaultRemoteAddress() { return defaultRemoteAddress; },public SocketAddress getDefaultRemoteAddress(){return defaultRemoteAddress;},79,76,29,3,6.0,"['public', 'SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}']","['public', 'SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}']",10,10,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getWaiter_1.txt,0.1653,4.8084,"{'n_total': 523, 'n_valid': 91, 'n_correct': 51}",262.789149,public SignupAttendee getWaiter(String attendeeId) { if (waitingList == null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; },n getWaiter(g d){if(l)for(e w:ist){if((d))return waiter;}},217,58,15,159,78.71287128712872,"['public', 'SignupAttendee', 'getWaiter', '(', 'String', 'attendeeId', ')', '{', 'if', '(', 'waitingList', '==', 'null', ')', 'return', 'null', ';', 'for', '(', 'SignupAttendee', 'waiter', ':', 'waitingList', ')', '{', 'if', '(', 'waiter', '.', 'getAttendeeUserId', '(', ')', '.', 'equals', '(', 'attendeeId', ')', ')', 'return', 'waiter', ';', '}', 'return', 'null', ';', '}']","['n', 'getWaiter', '(', 'g', 'd', ')', '{', 'if', '(', 'l', ')', 'for', '(', 'e', 'w', ':', 'ist', ')', '{', 'if', '(', '(', 'd', ')', ')', 'return', 'waiter', ';', '}', '}']",46,30,6,16,40.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setDebugOutput_1.txt,0.4052,1.0324,"{'n_total': 322, 'n_valid': 71, 'n_correct': 18}",216.242353,public static void setDebugOutput(Writer writer) { debugOutput = writer; },i setDebugOutput(r er){debugOutput=er;},74,39,20,35,64.81481481481481,"['public', 'static', 'void', 'setDebugOutput', '(', 'Writer', 'writer', ')', '{', 'debugOutput', '=', 'writer', ';', '}']","['i', 'setDebugOutput', '(', 'r', 'er', ')', '{', 'debugOutput', '=', 'er', ';', '}']",14,12,6,2,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getSharedState_1.txt,0.3259,2.2093,"{'n_total': 176, 'n_valid': 44, 'n_correct': 6}",125.213416,public Map getSharedState() { return sharedState; },Map getSharedState(){return sharedState;},51,41,20,10,32.25806451612903,"['public', 'Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}']","['Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}']",10,9,6,1,25.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setExclusionStrategies_1.txt,0.4952,0.7062,"{'n_total': 553, 'n_valid': 104, 'n_correct': 36}",318.124983,public Builder setExclusionStrategies(ExclusionStrategy... strategies) { for (ExclusionStrategy strategy : strategies) { addSerializationExclusionStrategy(strategy); } return this; },r setExclusionStrategies(us...s){for(ExclusionStrategy s:s){g();}},182,66,28,116,75.32467532467533,"['public', 'Builder', 'setExclusionStrategies', '(', 'ExclusionStrategy', '...', 'strategies', ')', '{', 'for', '(', 'ExclusionStrategy', 'strategy', ':', 'strategies', ')', '{', 'addSerializationExclusionStrategy', '(', 'strategy', ')', ';', '}', 'return', 'this', ';', '}']","['r', 'setExclusionStrategies', '(', 'us', '...', 's', ')', '{', 'for', '(', 'ExclusionStrategy', 's', ':', 's', ')', '{', 'g', '(', ')', ';', '}', '}']",27,22,6,5,23.809523809523807
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isShearable_1.txt,0.4019,1.0124,"{'n_total': 559, 'n_valid': 94, 'n_correct': 42}",271.185083,"@Override public boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos) { IBlockState state = world.getBlockState(pos); switch((BOPPlants) state.getValue(this.variantProperty)) { case CATTAIL: case RIVERCANE: return false; default: return true; } }","n isShearable(I iem,IBlockAccess s){(p);switch((B)(t)){case C:}}",263,64,17,199,80.89430894308943,"['@', 'Override', 'public', 'boolean', 'isShearable', '(', 'ItemStack', 'item', ',', 'IBlockAccess', 'world', ',', 'BlockPos', 'pos', ')', '{', 'IBlockState', 'state', '=', 'world', '.', 'getBlockState', '(', 'pos', ')', ';', 'switch', '(', '(', 'BOPPlants', ')', 'state', '.', 'getValue', '(', 'this', '.', 'variantProperty', ')', ')', '{', 'case', 'CATTAIL', ':', 'case', 'RIVERCANE', ':', 'return', 'false', ';', 'default', ':', 'return', 'true', ';', '}', '}']","['n', 'isShearable', '(', 'I', 'iem', ',', 'IBlockAccess', 's', ')', '{', '(', 'p', ')', ';', 'switch', '(', '(', 'B', ')', '(', 't', ')', ')', '{', 'case', 'C', ':', '}', '}']",57,29,6,28,54.90196078431373
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,loadTweets_1.txt,0.4525,1.0848,"{'n_total': 709, 'n_valid': 159, 'n_correct': 51}",443.641939,public List<Status> loadTweets(Long sinceId) throws TwitterException { Paging paging = new Paging(); paging.setCount(PAGE_LENGTH); if (sinceId != null) { paging.setSinceId(sinceId); } return twitter.getHomeTimeline(paging); },t<s>loadTweets(g n)throws T{g();t(PAGELENGTH);if(l){(d);}getHomeTimeline(a);},225,77,16,148,70.81339712918661,"['public', 'List', '<', 'Status', '>', 'loadTweets', '(', 'Long', 'sinceId', ')', 'throws', 'TwitterException', '{', 'Paging', 'paging', '=', 'new', 'Paging', '(', ')', ';', 'paging', '.', 'setCount', '(', 'PAGE_LENGTH', ')', ';', 'if', '(', 'sinceId', '!=', 'null', ')', '{', 'paging', '.', 'setSinceId', '(', 'sinceId', ')', ';', '}', 'return', 'twitter', '.', 'getHomeTimeline', '(', 'paging', ')', ';', '}']","['t', '<', 's', '>', 'loadTweets', '(', 'g', 'n', ')', 'throws', 'T', '{', 'g', '(', ')', ';', 't', '(', 'PAGELENGTH', ')', ';', 'if', '(', 'l', ')', '{', '(', 'd', ')', ';', '}', 'getHomeTimeline', '(', 'a', ')', ';', '}']",52,37,6,15,32.608695652173914
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getAutoSave_1.txt,0.2175,4.1036,"{'n_total': 357, 'n_valid': 64, 'n_correct': 25}",187.865116,"public String getAutoSave() { if (""0"".equals(autoSave)) return ""1""; return checker(autoSave, ""1""); }","tg getAutoSave(){if("""".e(autoSave))r(v,"""");}",100,44,17,56,67.46987951807229,"['public', 'String', 'getAutoSave', '(', ')', '{', 'if', '(', '""0""', '.', 'equals', '(', 'autoSave', ')', ')', 'return', '""1""', ';', 'return', 'checker', '(', 'autoSave', ',', '""1""', ')', ';', '}']","['tg', 'getAutoSave', '(', ')', '{', 'if', '(', '""""', '.', 'e', '(', 'autoSave', ')', ')', 'r', '(', 'v', ',', '""""', ')', ';', '}']",27,22,6,5,23.809523809523807
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getInUse_1.txt,0.4358,1.4175,"{'n_total': 203, 'n_valid': 32, 'n_correct': 5}",96.701688,public int getInUse() { return inUse.get(); },public int getInUse(){return inUse.t();},45,40,14,5,16.129032258064516,"['public', 'int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 'get', '(', ')', ';', '}']","['public', 'int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 't', '(', ')', ';', '}']",14,14,6,0,0.0
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getSessionCacheSize_1.txt,0.4217,2.4938,"{'n_total': 331, 'n_valid': 77, 'n_correct': 12}",233.395401,public String getSessionCacheSize() { return endpoint.getSessionCacheSize(); },l getSessionCacheSize(){return t.SessionCacheSize();},78,53,25,25,47.16981132075472,"['public', 'String', 'getSessionCacheSize', '(', ')', '{', 'return', 'endpoint', '.', 'getSessionCacheSize', '(', ')', ';', '}']","['l', 'getSessionCacheSize', '(', ')', '{', 'return', 't', '.', 'SessionCacheSize', '(', ')', ';', '}']",14,13,6,1,12.5
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setWidthAndHeight_1.txt,0.3766,1.6652,"{'n_total': 679, 'n_valid': 205, 'n_correct': 25}",571.929936,"private void setWidthAndHeight(ActivityImpl activity, Map<String, Object> activityInfo) { activityInfo.put(""width"", activity.getWidth()); activityInfo.put(""height"", activity.getHeight()); }","d setWidthAndHeight(ActivityImpl activity,p<St>activityInfo){t(""width"",i.gidt);t(""height"",Height);}",189,99,23,90,54.21686746987952,"['private', 'void', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'Map', '<', 'String', ',', 'Object', '>', 'activityInfo', ')', '{', 'activityInfo', '.', 'put', '(', '""width""', ',', 'activity', '.', 'getWidth', '(', ')', ')', ';', 'activityInfo', '.', 'put', '(', '""height""', ',', 'activity', '.', 'getHeight', '(', ')', ')', ';', '}']","['d', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'p', '<', 'St', '>', 'activityInfo', ')', '{', 't', '(', '""width""', ',', 'i', '.', 'gidt', ')', ';', 't', '(', '""height""', ',', 'Height', ')', ';', '}']",43,30,6,13,35.13513513513514
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createCertificateFactory_1.txt,0.4834,0.8358,"{'n_total': 650, 'n_valid': 171, 'n_correct': 28}",494.491936,"protected CertificateFactory createCertificateFactory(String type) throws CertificateException, NoSuchProviderException { return CertificateFactory.getInstance(type, providerName); }","c createCertificateFactory(r e)throws CertificateException,oS{return C.g(t,providerName);}",182,90,30,92,60.526315789473685,"['protected', 'CertificateFactory', 'createCertificateFactory', '(', 'String', 'type', ')', 'throws', 'CertificateException', ',', 'NoSuchProviderException', '{', 'return', 'CertificateFactory', '.', 'getInstance', '(', 'type', ',', 'providerName', ')', ';', '}']","['c', 'createCertificateFactory', '(', 'r', 'e', ')', 'throws', 'CertificateException', ',', 'oS', '{', 'return', 'C', '.', 'g', '(', 't', ',', 'providerName', ')', ';', '}']",23,22,6,1,5.88235294117647
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getLongB_1.txt,0.8437,0.3951,"{'n_total': 450, 'n_valid': 80, 'n_correct': 39}",230.197699,"private static long getLongB(ByteBuffer bb, int index) { return makeLong(bb.get(index), bb.get(index + 1), bb.get(index + 2), bb.get(index + 3), bb.get(index + 4), bb.get(index + 5), bb.get(index + 6), bb.get(index + 7)); }","g getLongB(B x){return makeLong((x)(n),(i));}",223,45,14,178,85.16746411483254,"['private', 'static', 'long', 'getLongB', '(', 'ByteBuffer', 'bb', ',', 'int', 'index', ')', '{', 'return', 'makeLong', '(', 'bb', '.', 'get', '(', 'index', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '1', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '2', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '3', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '4', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '5', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '6', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '7', ')', ')', ';', '}']","['g', 'getLongB', '(', 'B', 'x', ')', '{', 'return', 'makeLong', '(', '(', 'x', ')', '(', 'n', ')', ',', '(', 'i', ')', ')', ';', '}']",87,23,6,64,79.01234567901234
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,verifyResize_1.txt,0.9994,0.0043,"{'n_total': 634, 'n_valid': 181, 'n_correct': 49}",501.299742,"private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest("""", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); }","i verifyResize(NetworkResponse h,t expectedHeight){I("""",l);(t);}",544,64,18,480,91.25475285171105,"['private', 'void', 'verifyResize', '(', 'NetworkResponse', 'networkResponse', ',', 'int', 'maxWidth', ',', 'int', 'maxHeight', ',', 'ScaleType', 'scaleType', ',', 'int', 'expectedWidth', ',', 'int', 'expectedHeight', ')', '{', 'ImageRequest', 'request', '=', 'new', 'ImageRequest', '(', '""""', ',', 'null', ',', 'maxWidth', ',', 'maxHeight', ',', 'scaleType', ',', 'Config', '.', 'RGB_565', ',', 'null', ')', ';', 'Response', '<', 'Bitmap', '>', 'response', '=', 'request', '.', 'parseNetworkResponse', '(', 'networkResponse', ')', ';', 'assertNotNull', '(', 'response', ')', ';', 'assertTrue', '(', 'response', '.', 'isSuccess', '(', ')', ')', ';', 'Bitmap', 'bitmap', '=', 'response', '.', 'result', ';', 'assertNotNull', '(', 'bitmap', ')', ';', 'assertEquals', '(', 'expectedWidth', ',', 'bitmap', '.', 'getWidth', '(', ')', ')', ';', 'assertEquals', '(', 'expectedHeight', ',', 'bitmap', '.', 'getHeight', '(', ')', ')', ';', '}']","['i', 'verifyResize', '(', 'NetworkResponse', 'h', ',', 't', 'expectedHeight', ')', '{', 'I', '(', '""""', ',', 'l', ')', ';', '(', 't', ')', ';', '}']",108,22,6,86,84.31372549019608
code2vec,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setRemoteAdapter_1.txt,0.4841,0.7274,"{'n_total': 428, 'n_valid': 75, 'n_correct': 33}",234.975715,"@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) private void setRemoteAdapter(Context context, @NonNull final RemoteViews views) { views.setRemoteAdapter(R.id.widget_list, new Intent(context, DetailWidgetRemoteViewsService.class)); }","d setRemoteAdapter(t t,@l s v){setRemoteAdapter((s));}",236,54,22,182,85.04672897196261,"['@', 'TargetApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'ICE_CREAM_SANDWICH', ')', 'private', 'void', 'setRemoteAdapter', '(', 'Context', 'context', ',', '@', 'NonNull', 'final', 'RemoteViews', 'views', ')', '{', 'views', '.', 'setRemoteAdapter', '(', 'R', '.', 'id', '.', 'widget_list', ',', 'new', 'Intent', '(', 'context', ',', 'DetailWidgetRemoteViewsService', '.', 'class', ')', ')', ';', '}']","['d', 'setRemoteAdapter', '(', 't', 't', ',', '@', 'l', 's', 'v', ')', '{', 'setRemoteAdapter', '(', '(', 's', ')', ')', ';', '}']",45,20,6,25,64.1025641025641
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 319, 'n_valid': 104, 'n_correct': 15}",282.839191,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },d onCreate(e savedInstanceState){w(t.onboarding);},134,50,14,84,70.0,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'savedInstanceState', ')', '{', 'w', '(', 't', '.', 'onboarding', ')', ';', '}']",27,15,6,12,57.14285714285714
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 560, 'n_valid': 87, 'n_correct': 52}",257.140825,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c String toString(){if(l)("""");("""");(o);("""");(b);}",211,50,14,161,81.7258883248731,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 343, 'n_valid': 52, 'n_correct': 25}",153.899097,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(l)return""""+o();}",135,37,14,98,80.99173553719008,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', 'return', '""""', '+', 'o', '(', ')', ';', '}']",29,17,6,12,52.17391304347826
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 563, 'n_valid': 89, 'n_correct': 58}",256.240221,"@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } }",d onCreate(e a){r.onCreate();(s);if((e)){((s));}},365,49,14,316,90.02849002849003,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}']","['d', 'onCreate', '(', 'e', 'a', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', '(', 's', ')', ';', 'if', '(', '(', 'e', ')', ')', '{', '(', '(', 's', ')', ')', ';', '}', '}']",66,32,6,34,56.66666666666666
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 358, 'n_valid': 53, 'n_correct': 29}",151.388962,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b oth){if(k){(((S)).s);}return false;},146,47,12,99,73.88059701492537,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'oth', ')', '{', 'if', '(', 'k', ')', '{', '(', '(', '(', 'S', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 358, 'n_valid': 53, 'n_correct': 29}",151.341478,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b oth){if(k){(((S)).s);}return false;},146,47,12,99,73.88059701492537,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'oth', ')', '{', 'if', '(', 'k', ')', '{', '(', '(', '(', 'S', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,27,6,12,36.36363636363637
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 336, 'n_valid': 85, 'n_correct': 20}",236.12207,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },protected void onCreate(B savedInstance){(t);},144,46,14,98,75.38461538461539,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['protected', 'void', 'onCreate', '(', 'B', 'savedInstance', ')', '{', '(', 't', ')', ';', '}']",27,13,6,14,66.66666666666666
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 291, 'n_valid': 25, 'n_correct': 22}",85.681704,"@Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; }","g toString(){if(t){return E+""]"";}e[d];}",183,39,14,144,85.20710059171599,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}']","['g', 'toString', '(', ')', '{', 'if', '(', 't', ')', '{', 'return', 'E', '+', '""]""', ';', '}', 'e', '[', 'd', ']', ';', '}']",43,22,6,21,56.75675675675676
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 294, 'n_valid': 60, 'n_correct': 28}",171.868539,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }",@r String toString(){d();s(sSt);},242,33,14,209,91.66666666666666,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'String', 'toString', '(', ')', '{', 'd', '(', ')', ';', 's', '(', 'sSt', ')', ';', '}']",66,17,6,49,81.66666666666667
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 540, 'n_valid': 94, 'n_correct': 50}",270.364094,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",n equals(Oect o){if(ts){}i=(e);return(l)s()&&equals;},309,53,12,256,86.19528619528619,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['n', 'equals', '(', 'Oect', 'o', ')', '{', 'if', '(', 'ts', ')', '{', '}', 'i', '=', '(', 'e', ')', ';', 'return', '(', 'l', ')', 's', '(', ')', '&&', 'equals', ';', '}']",83,30,6,53,68.83116883116884
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 428, 'n_valid': 91, 'n_correct': 42}",254.253606,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },a equals(c j){if(n){tus(((y)j).e);}},141,36,12,105,81.3953488372093,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['a', 'equals', '(', 'c', 'j', ')', '{', 'if', '(', 'n', ')', '{', 'tus', '(', '(', '(', 'y', ')', 'j', ')', '.', 'e', ')', ';', '}', '}']",37,26,6,11,35.483870967741936
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 241, 'n_valid': 56, 'n_correct': 14}",151.241897,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },@O void init()throws ServletException{t();},99,43,10,56,62.92134831460674,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 't', '(', ')', ';', '}']",23,14,6,9,52.94117647058824
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_2.txt,0.9882,0.0257,"{'n_total': 519, 'n_valid': 97, 'n_correct': 46}",278.269408,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","String toString(){r w=new S(""="");t();for(;;){}}",270,47,14,223,87.109375,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'r', 'w', '=', 'new', 'S', '(', '""=""', ')', ';', 't', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', '}']",77,26,6,51,71.83098591549296
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 260, 'n_valid': 52, 'n_correct': 26}",150.343024,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },d onCreate(B e){onCreate();},172,28,14,144,91.13924050632912,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['d', 'onCreate', '(', 'B', 'e', ')', '{', 'onCreate', '(', ')', ';', '}']",39,12,6,27,81.81818181818183
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 268, 'n_valid': 32, 'n_correct': 23}",100.38157,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","@O v onCreate(){i(L,""onCreate"");(0);}",215,37,14,178,88.55721393034825,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['@', 'O', 'v', 'onCreate', '(', ')', '{', 'i', '(', 'L', ',', '""onCreate""', ')', ';', '(', '0', ')', ';', '}']",52,19,6,33,71.73913043478261
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 504, 'n_valid': 91, 'n_correct': 40}",259.683666,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",public String toString(){if(l){}if(t==0){}(s);},150,47,14,103,75.73529411764706,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '{', '}', 'if', '(', 't', '==', '0', ')', '{', '}', '(', 's', ')', ';', '}']",42,25,6,17,47.22222222222222
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 325, 'n_valid': 73, 'n_correct': 30}",205.543393,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(O j){if(n){}},136,28,12,108,87.09677419354838,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'O', 'j', ')', '{', 'if', '(', 'n', ')', '{', '}', '}']",35,14,6,21,72.41379310344827
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 386, 'n_valid': 60, 'n_correct': 25}",171.546821,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },n equals(O o){if(!(o instanceof u))return false;e();},186,53,12,133,76.4367816091954,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['n', 'equals', '(', 'O', 'o', ')', '{', 'if', '(', '!', '(', 'o', 'instanceof', 'u', ')', ')', 'return', 'false', ';', 'e', '(', ')', ';', '}']",50,24,6,26,59.09090909090909
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 368, 'n_valid': 52, 'n_correct': 31}",149.622896,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","d setUp()throws E{if(ED){(""s"");}setUp();}",181,41,11,140,82.35294117647058,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'ED', ')', '{', '(', '""s""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,22,6,13,44.82758620689656
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_10.txt,0.9997,0.0004,"{'n_total': 504, 'n_valid': 78, 'n_correct': 40}",224.831267,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },@r a equals(Object r){if(oth instanceof k){a();}},247,49,12,198,84.25531914893617,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['@', 'r', 'a', 'equals', '(', 'Object', 'r', ')', '{', 'if', '(', 'oth', 'instanceof', 'k', ')', '{', 'a', '(', ')', ';', '}', '}']",71,22,6,49,75.38461538461539
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 267, 'n_valid': 56, 'n_correct': 17}",159.520234,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","String toString(){r(""]"");r(sb.g());}",132,36,14,96,81.35593220338984,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'r', '(', '""]""', ')', ';', 'r', '(', 'sb', '.', 'g', '(', ')', ')', ';', '}']",34,20,6,14,50.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 370, 'n_valid': 49, 'n_correct': 34}",149.713463,"@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } }",@d v onCreate(B s){p.onCreate();if(n){t();}},219,44,14,175,85.36585365853658,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}']","['@', 'd', 'v', 'onCreate', '(', 'B', 's', ')', '{', 'p', '.', 'onCreate', '(', ')', ';', 'if', '(', 'n', ')', '{', 't', '(', ')', ';', '}', '}']",46,26,6,20,50.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 236, 'n_valid': 55, 'n_correct': 22}",158.088787,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },@O boolean onCreate(){er();},175,28,14,147,91.30434782608695,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['@', 'O', 'boolean', 'onCreate', '(', ')', '{', 'er', '(', ')', ';', '}']",35,12,6,23,79.3103448275862
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 446, 'n_valid': 140, 'n_correct': 24}",383.018251,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }","n equals(Object obj){ih=ob();return(compare(r,r.getRef()));}",190,60,12,130,73.03370786516854,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['n', 'equals', '(', 'Object', 'obj', ')', '{', 'ih', '=', 'ob', '(', ')', ';', 'return', '(', 'compare', '(', 'r', ',', 'r', '.', 'getRef', '(', ')', ')', ')', ';', '}']",60,28,6,32,59.25925925925925
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 487, 'n_valid': 56, 'n_correct': 42}",159.943558,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{p(0);}catch(Ipt e){}t();}},164,47,9,117,75.48387096774194,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', 'p', '(', '0', ')', ';', '}', 'catch', '(', 'Ipt', 'e', ')', '{', '}', 't', '(', ')', ';', '}', '}']",47,31,6,16,39.02439024390244
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 240, 'n_valid': 40, 'n_correct': 17}",115.700853,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",d execute()throws B{execute(-1);},165,33,13,132,86.8421052631579,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'B', '{', 'execute', '(', '-', '1', ')', ';', '}']",44,14,6,30,78.94736842105263
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 321, 'n_valid': 73, 'n_correct': 23}",202.190721,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },@r void setUp()throws E{setContext().r();},114,42,11,72,69.90291262135922,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['@', 'r', 'void', 'setUp', '(', ')', 'throws', 'E', '{', 'setContext', '(', ')', '.', 'r', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 352, 'n_valid': 104, 'n_correct': 23}",277.926173,"@Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); }",void init()throws ServletException{d();},278,40,10,238,88.80597014925374,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'd', '(', ')', ';', '}']",52,12,6,40,86.95652173913044
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 473, 'n_valid': 68, 'n_correct': 46}",186.850828,"@Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); }","@v<T>T get(S z){if(l){(""""+"""");}return(i);}",236,42,9,194,85.46255506607929,"['@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}']","['@', 'v', '<', 'T', '>', 'T', 'get', '(', 'S', 'z', ')', '{', 'if', '(', 'l', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'return', '(', 'i', ')', ';', '}']",61,30,6,31,56.36363636363636
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 438, 'n_valid': 56, 'n_correct': 39}",158.384151,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","d main(S args)throws E{((""""));sln(("""".s()));}",179,45,10,134,79.28994082840237,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['d', 'main', '(', 'S', 'args', ')', 'throws', 'E', '{', '(', '(', '""""', ')', ')', ';', 'sln', '(', '(', '""""', '.', 's', '(', ')', ')', ')', ';', '}']",50,27,6,23,52.27272727272727
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 417, 'n_valid': 58, 'n_correct': 32}",167.406309,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },t main(S[]args){try{(e());}catch(E e){}ne();},154,45,10,109,75.69444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'try', '{', '(', 'e', '(', ')', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '}', 'ne', '(', ')', ';', '}']",38,30,6,8,25.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 241, 'n_valid': 32, 'n_correct': 26}",94.448872,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(l){on("""");}}",109,23,9,86,86.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'l', ')', '{', 'on', '(', '""""', ')', ';', '}', '}']",25,17,6,8,42.10526315789473
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_3.txt,0.8115,0.2495,"{'n_total': 430, 'n_valid': 74, 'n_correct': 51}",206.697767,"@Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); }","@c i init(){("""");("""");t(lIL);t();}",365,34,10,331,93.2394366197183,"['@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}']","['@', 'c', 'i', 'init', '(', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', 't', '(', 'lIL', ')', ';', 't', '(', ')', ';', '}']",61,25,6,36,65.45454545454545
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 228, 'n_valid': 41, 'n_correct': 19}",116.458131,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },@Before d setUp(){(S);(s);},107,27,11,80,83.33333333333334,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['@', 'Before', 'd', 'setUp', '(', ')', '{', '(', 'S', ')', ';', '(', 's', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 408, 'n_valid': 78, 'n_correct': 32}",219.876496,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }",d execute(p<t>t)throws T{(new RootContextPath());},201,50,13,151,80.31914893617021,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['d', 'execute', '(', 'p', '<', 't', '>', 't', ')', 'throws', 'T', '{', '(', 'new', 'RootContextPath', '(', ')', ')', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 300, 'n_valid': 45, 'n_correct': 26}",125.089042,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@c void run(){try{t();}catch(n x){}},127,36,9,91,77.11864406779661,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'c', 'void', 'run', '(', ')', '{', 'try', '{', 't', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', '}', '}']",33,22,6,11,40.74074074074074
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 408, 'n_valid': 78, 'n_correct': 32}",220.139152,"public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); }",d execute(p<t>t)throws T{(new RootContextPath());},201,50,13,151,80.31914893617021,"['public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}']","['d', 'execute', '(', 'p', '<', 't', '>', 't', ')', 'throws', 'T', '{', '(', 'new', 'RootContextPath', '(', ')', ')', ';', '}']",42,20,6,22,61.11111111111112
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 264, 'n_valid': 59, 'n_correct': 18}",161.249427,"@Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); }","@c v init(){addAfterOrdering("""");("""");}",108,39,10,69,70.40816326530613,"['@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}']","['@', 'c', 'v', 'init', '(', ')', '{', 'addAfterOrdering', '(', '""""', ')', ';', '(', '""""', ')', ';', '}']",30,17,6,13,54.16666666666666
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 387, 'n_valid': 65, 'n_correct': 44}",182.398433,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","i get(p<Sect>t,t v){(k);if(l){}}",166,32,9,134,85.35031847133759,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['i', 'get', '(', 'p', '<', 'Sect', '>', 't', ',', 't', 'v', ')', '{', '(', 'k', ')', ';', 'if', '(', 'l', ')', '{', '}', '}']",46,24,6,22,55.00000000000001
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 336, 'n_valid': 47, 'n_correct': 32}",132.101003,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","d main(g args)throws n{(B);(""Pree"");w();}",251,41,10,210,87.13692946058092,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'n', '{', '(', 'B', ')', ';', '(', '""Pree""', ')', ';', 'w', '(', ')', ';', '}']",53,22,6,31,65.95744680851064
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 303, 'n_valid': 60, 'n_correct': 24}",165.574009,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },d main(g args)throws x{run();},132,30,10,102,83.60655737704919,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'x', '{', 'run', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 611, 'n_valid': 104, 'n_correct': 56}",284.597121,"@Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); }","r get(g t,t u)throws n{d.get();if(E){r(g("""",t),l);}return(ult.n());}",350,68,9,282,82.69794721407625,"['@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}']","['r', 'get', '(', 'g', 't', ',', 't', 'u', ')', 'throws', 'n', '{', 'd', '.', 'get', '(', ')', ';', 'if', '(', 'E', ')', '{', 'r', '(', 'g', '(', '""""', ',', 't', ')', ',', 'l', ')', ';', '}', 'return', '(', 'ult', '.', 'n', '(', ')', ')', ';', '}']",73,46,6,27,40.298507462686565
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 261, 'n_valid': 49, 'n_correct': 25}",138.429553,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }",@d vo setUp()throws E{r.solo=(g);},122,34,11,88,79.27927927927928,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['@', 'd', 'vo', 'setUp', '(', ')', 'throws', 'E', '{', 'r', '.', 'solo', '=', '(', 'g', ')', ';', '}']",31,18,6,13,52.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_5.txt,0.9908,0.0113,"{'n_total': 531, 'n_valid': 140, 'n_correct': 32}",386.672404,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","d execute(Tuple tuple){i(""url"");d(""metadata"",(r));(e);}",305,55,13,250,85.61643835616438,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['d', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'i', '(', '""url""', ')', ';', 'd', '(', '""metadata""', ',', '(', 'r', ')', ')', ';', '(', 'e', ')', ';', '}']",70,26,6,44,68.75
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 326, 'n_valid': 45, 'n_correct': 34}",126.855241,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },d run(){try{eep();}catch(E x){}(0);},121,36,9,85,75.89285714285714,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'eep', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 278, 'n_valid': 47, 'n_correct': 28}",134.776471,@Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); },@c V get(jet k){if(l)((y));},110,28,9,82,81.1881188118812,"['@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}']","['@', 'c', 'V', 'get', '(', 'jet', 'k', ')', '{', 'if', '(', 'l', ')', '(', '(', 'y', ')', ')', ';', '}']",33,20,6,13,48.14814814814815
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 429, 'n_valid': 83, 'n_correct': 31}",229.353064,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","d run(){try{dw();}catch(Throwable t){or(""""+e);}}",149,48,9,101,72.14285714285714,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'dw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'or', '(', '""""', '+', 'e', ')', ';', '}', '}']",36,27,6,9,30.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 191, 'n_valid': 36, 'n_correct': 19}",107.848457,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@O int hashCode(){t r;},174,23,14,151,94.375,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",45,11,6,34,87.17948717948718
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 312, 'n_valid': 60, 'n_correct': 24}",168.927044,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }",@r d execute()throws BuildException{(g().o);},123,45,13,78,70.9090909090909,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'd', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', 'g', '(', ')', '.', 'o', ')', ';', '}']",29,18,6,11,47.82608695652174
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 237, 'n_valid': 55, 'n_correct': 24}",153.126452,public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); },d init(){n=new y(Pain);},152,24,10,128,90.14084507042254,"['public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}']","['d', 'init', '(', ')', '{', 'n', '=', 'new', 'y', '(', 'Pain', ')', ';', '}']",39,14,6,25,75.75757575757575
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 266, 'n_valid': 38, 'n_correct': 20}",108.882362,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","d setUp()throws n{("""");setUp();}",149,32,11,117,84.78260869565217,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'n', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_1.txt,1.0,0.0,"{'n_total': 583, 'n_valid': 87, 'n_correct': 62}",244.137959,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","t main(S[]args){("""");("""");(""""+r());n(y(""j""));}",579,46,10,533,93.6731107205624,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', 'r', '(', ')', ')', ';', 'n', '(', 'y', '(', '""j""', ')', ')', ';', '}']",131,34,6,97,77.60000000000001
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_4.txt,0.4355,1.6281,"{'n_total': 910, 'n_valid': 165, 'n_correct': 100}",459.936882,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","d setUp()throws o{r<a>r=g((""""),(""""),l);((""""));a=o(""jd"",c);n=riv();}",946,67,11,879,94.01069518716577,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'o', '{', 'r', '<', 'a', '>', 'r', '=', 'g', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', 'l', ')', ';', '(', '(', '""""', ')', ')', ';', 'a', '=', 'o', '(', '""jd""', ',', 'c', ')', ';', 'n', '=', 'riv', '(', ')', ';', '}']",207,48,6,159,79.1044776119403
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 299, 'n_valid': 78, 'n_correct': 16}",210.686004,"@Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); }","d init(FilterConfig fConfig)throws S{r("""");}",161,44,10,117,77.48344370860927,"['@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}']","['d', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'S', '{', 'r', '(', '""""', ')', ';', '}']",30,15,6,15,62.5
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 533, 'n_valid': 92, 'n_correct': 58}",252.18334,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","@O V get(g timeout,t t)throws I{if(((t))){(""""+t);}}",248,51,9,197,82.42677824267783,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['@', 'O', 'V', 'get', '(', 'g', 'timeout', ',', 't', 't', ')', 'throws', 'I', '{', 'if', '(', '(', '(', 't', ')', ')', ')', '{', '(', '""""', '+', 't', ')', ';', '}', '}']",51,31,6,20,44.44444444444444
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 406, 'n_valid': 72, 'n_correct': 46}",212.798752,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){t=t+((s)?0:s);},262,30,14,232,93.5483870967742,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 't', '=', 't', '+', '(', '(', 's', ')', '?', '0', ':', 's', ')', ';', '}']",75,20,6,55,79.71014492753623
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 497, 'n_valid': 98, 'n_correct': 43}",273.652808,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;i<ITERATIONS;i++){if(l){t();}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'if', '(', 'l', ')', '{', 't', '(', ')', ';', '}', '}', '}']",62,28,6,34,60.71428571428571
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 326, 'n_valid': 45, 'n_correct': 34}",126.923976,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },d run(){try{eep();}catch(E x){}(0);},121,36,9,85,75.89285714285714,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'eep', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 323, 'n_valid': 78, 'n_correct': 20}",217.743751,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }",d execute()throws BuildException{(g);},140,38,13,102,80.31496062992126,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', 'g', ')', ';', '}']",29,12,6,17,73.91304347826086
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 690, 'n_valid': 90, 'n_correct': 60}",254.778865,"@SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } }","o get(g n){try{(e);return(n<T>)t(ph);}catch(n e){("""");}}",405,56,9,349,88.13131313131312,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}']","['o', 'get', '(', 'g', 'n', ')', '{', 'try', '{', '(', 'e', ')', ';', 'return', '(', 'n', '<', 'T', '>', ')', 't', '(', 'ph', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",94,38,6,56,63.63636363636363
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 285, 'n_valid': 49, 'n_correct': 25}",141.699188,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },d setUp()throws E{setUp();T(e);},182,32,11,150,87.71929824561403,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'setUp', '(', ')', ';', 'T', '(', 'e', ')', ';', '}']",38,17,6,21,65.625
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 305, 'n_valid': 96, 'n_correct': 21}",259.677127,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },@O void init(ProcessingEnvironment n){s();},193,43,10,150,81.9672131147541,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', 'ProcessingEnvironment', 'n', ')', '{', 's', '(', ')', ';', '}']",49,14,6,35,81.3953488372093
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 235, 'n_valid': 34, 'n_correct': 20}",97.398396,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },t main(g[]args)throws E{e();},147,29,10,118,86.13138686131386,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'e', '(', ')', ';', '}']",32,16,6,16,61.53846153846154
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 270, 'n_valid': 43, 'n_correct': 27}",120.501189,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","d main(S[]args){y(C,"""");(s);}",136,29,10,107,84.92063492063492,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['d', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'y', '(', 'C', ',', '""""', ')', ';', '(', 's', ')', ';', '}']",30,21,6,9,37.5
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 437, 'n_valid': 66, 'n_correct': 43}",181.92313,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","d main(g[]args)throws E{(n(V,"""")).o("""");}",273,41,10,232,88.212927756654,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', '(', 'n', '(', 'V', ',', '""""', ')', ')', '.', 'o', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 530, 'n_valid': 101, 'n_correct': 42}",277.40176,@Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); },d init(WebConnection n){try{}catch(n e){(e);}(n);},293,50,10,243,85.86572438162544,"['@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}']","['d', 'init', '(', 'WebConnection', 'n', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', ')', ';', '}', '(', 'n', ')', ';', '}']",64,26,6,38,65.51724137931035
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 521, 'n_valid': 117, 'n_correct': 41}",320.136345,"public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } }",g get(r s){try{if(m){(k);}return y;}catch(NoSuchMessageException e){}},222,70,9,152,71.36150234741784,"['public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}']","['g', 'get', '(', 'r', 's', ')', '{', 'try', '{', 'if', '(', 'm', ')', '{', '(', 'k', ')', ';', '}', 'return', 'y', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', '}', '}']",55,31,6,24,48.97959183673469
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 307, 'n_valid': 61, 'n_correct': 21}",173.902735,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","@c v execute()throws BuildException{("""");}",98,42,13,56,65.88235294117646,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['@', 'c', 'v', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '""""', ')', ';', '}']",22,14,6,8,50.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 357, 'n_valid': 44, 'n_correct': 32}",125.848061,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },d run(){try{p(he);n();}catch(n x){e();}},162,40,9,122,79.73856209150327,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'p', '(', 'he', ')', ';', 'n', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', 'e', '(', ')', ';', '}', '}']",44,29,6,15,39.47368421052632
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 429, 'n_valid': 75, 'n_correct': 40}",217.382026,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },i hashCode(){s.hashCode();((l)?0:e());},239,39,14,200,88.88888888888889,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['i', 'hashCode', '(', ')', '{', 's', '.', 'hashCode', '(', ')', ';', '(', '(', 'l', ')', '?', '0', ':', 'e', '(', ')', ')', ';', '}']",66,24,6,42,70.0
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 206, 'n_valid': 60, 'n_correct': 16}",165.132607,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }",d run(){dataRefresh;y();},150,25,9,125,88.65248226950354,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['d', 'run', '(', ')', '{', 'dataRefresh', ';', 'y', '(', ')', ';', '}']",33,12,6,21,77.77777777777779
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 318, 'n_valid': 55, 'n_correct': 29}",166.854446,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },t hashCode(){((l)?0:e.hCode);},154,30,14,124,88.57142857142857,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', '(', '(', 'l', ')', '?', '0', ':', 'e', '.', 'hCode', ')', ';', '}']",45,18,6,27,69.23076923076923
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 560, 'n_valid': 87, 'n_correct': 52}",257.409467,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c String toString(){if(l)("""");("""");(o);("""");(b);}",211,50,14,161,81.7258883248731,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 487, 'n_valid': 56, 'n_correct': 42}",159.848052,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{p(0);}catch(Ipt e){}t();}},164,47,9,117,75.48387096774194,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', 'p', '(', '0', ')', ';', '}', 'catch', '(', 'Ipt', 'e', ')', '{', '}', 't', '(', ')', ';', '}', '}']",47,31,6,16,39.02439024390244
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 28, 'n_correct': 15}",84.624816,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@O int hashCode(){t r;},92,23,14,69,88.46153846153845,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",25,11,6,14,73.68421052631578
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 345, 'n_valid': 56, 'n_correct': 37}",163.210146,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },@Ov int hashCode(){((kl)?0:a);},220,31,14,189,91.747572815534,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'Ov', 'int', 'hashCode', '(', ')', '{', '(', '(', 'kl', ')', '?', '0', ':', 'a', ')', ';', '}']",67,18,6,49,80.32786885245902
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 623, 'n_valid': 128, 'n_correct': 51}",361.136842,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@c o setUp()throws n{n(new Mel[]{});hst(T);},317,44,11,273,89.2156862745098,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'c', 'o', 'setUp', '(', ')', 'throws', 'n', '{', 'n', '(', 'new', 'Mel', '[', ']', '{', '}', ')', ';', 'hst', '(', 'T', ')', ';', '}']",72,25,6,47,71.21212121212122
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 295, 'n_valid': 79, 'n_correct': 18}",214.184724,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },@O void init(rf cong)throws ServletException{;},107,47,10,60,61.855670103092784,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['@', 'O', 'void', 'init', '(', 'rf', 'cong', ')', 'throws', 'ServletException', '{', ';', '}']",24,13,6,11,61.11111111111112
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 536, 'n_valid': 128, 'n_correct': 41}",352.127717,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },d init()throws v{(g().getInitParameter(GIN)).f((O)).e();},344,57,10,287,85.92814371257485,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['d', 'init', '(', ')', 'throws', 'v', '{', '(', 'g', '(', ')', '.', 'getInitParameter', '(', 'GIN', ')', ')', '.', 'f', '(', '(', 'O', ')', ')', '.', 'e', '(', ')', ';', '}']",71,30,6,41,63.07692307692307
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 510, 'n_valid': 108, 'n_correct': 42}",296.954079,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","d setUp()throws Exception{if(D){("""");}super.t(to);}",320,51,11,269,87.05501618122977,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'D', ')', '{', '(', '""""', ')', ';', '}', 'super', '.', 't', '(', 'to', ')', ';', '}']",61,25,6,36,65.45454545454545
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 28, 'n_correct': 15}",84.595445,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@O int hashCode(){t r;},92,23,14,69,88.46153846153845,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', 'r', ';', '}']",25,11,6,14,73.68421052631578
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 497, 'n_valid': 98, 'n_correct': 43}",273.679179,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;i<ITERATIONS;i++){if(l){t();}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'if', '(', 'l', ')', '{', 't', '(', ')', ';', '}', '}', '}']",62,28,6,34,60.71428571428571
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 316, 'n_valid': 60, 'n_correct': 24}",168.344915,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","@r d execute()throws BuildException{(("""").o);}",122,46,13,76,69.72477064220183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'r', 'd', 'execute', '(', ')', 'throws', 'BuildException', '{', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,18,6,11,47.82608695652174
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 364, 'n_valid': 65, 'n_correct': 32}",182.267282,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","@c d execute()throws n{e();excute(creat("""").o);}",126,48,13,78,69.02654867256636,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'n', '{', 'e', '(', ')', ';', 'excute', '(', 'creat', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 310, 'n_valid': 74, 'n_correct': 23}",210.251646,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },public int hashCode(){t e=md.h*r;},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['public', 'int', 'hashCode', '(', ')', '{', 't', 'e', '=', 'md', '.', 'h', '*', 'r', ';', '}']",45,16,6,29,74.35897435897436
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 373, 'n_valid': 52, 'n_correct': 33}",159.050193,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },f get(ce k){y(y);return(l)?n:e;},114,32,9,82,78.0952380952381,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['f', 'get', '(', 'ce', 'k', ')', '{', 'y', '(', 'y', ')', ';', 'return', '(', 'l', ')', '?', 'n', ':', 'e', ';', '}']",30,22,6,8,33.33333333333333
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 609, 'n_valid': 78, 'n_correct': 53}",222.489761,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","t main(g[]args){try{l("""",ls);e();}catch(E e){l(E,"""");}}",295,55,10,240,84.21052631578947,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', '{', 'try', '{', 'l', '(', '""""', ',', 'ls', ')', ';', 'e', '(', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', 'l', '(', 'E', ',', '""""', ')', ';', '}', '}']",78,38,6,40,55.55555555555556
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 219, 'n_valid': 33, 'n_correct': 19}",92.424714,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",i main(g[]args)throws E{n();},124,29,10,95,83.33333333333334,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['i', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'n', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 543, 'n_valid': 129, 'n_correct': 56}",355.724733,public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; },t get(i o){if(r){}n[f];},132,24,9,108,87.8048780487805,"['public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}']","['t', 'get', '(', 'i', 'o', ')', '{', 'if', '(', 'r', ')', '{', '}', 'n', '[', 'f', ']', ';', '}']",35,19,6,16,55.172413793103445
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 408, 'n_valid': 100, 'n_correct': 27}",271.105358,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","@v d execute()throws ld{e();e(createQueryString(""session"").g());}",126,65,13,61,53.98230088495575,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'v', 'd', 'execute', '(', ')', 'throws', 'ld', '{', 'e', '(', ')', ';', 'e', '(', 'createQueryString', '(', '""session""', ')', '.', 'g', '(', ')', ')', ';', '}']",29,26,6,3,13.043478260869565
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 464, 'n_valid': 82, 'n_correct': 52}",242.29333,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },i hashCode(){f=((hll)?0:mtc);t=((u)e());},236,41,14,195,87.83783783783784,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['i', 'hashCode', '(', ')', '{', 'f', '=', '(', '(', 'hll', ')', '?', '0', ':', 'mtc', ')', ';', 't', '=', '(', '(', 'u', ')', 'e', '(', ')', ')', ';', '}']",67,29,6,38,62.29508196721312
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 285, 'n_valid': 49, 'n_correct': 34}",143.3818,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@O int hashCode(){t=(c?1:0);},213,29,14,184,92.46231155778896,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'O', 'int', 'hashCode', '(', ')', '{', 't', '=', '(', 'c', '?', '1', ':', '0', ')', ';', '}']",59,18,6,41,77.35849056603774
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_9.txt,1.0,0.0,"{'n_total': 378, 'n_valid': 82, 'n_correct': 31}",236.824902,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",an equals(Object o){if(o){}that=(it)&&ls(d);},268,45,12,223,87.109375,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['an', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'that', '=', '(', 'it', ')', '&&', 'ls', '(', 'd', ')', ';', '}']",85,25,6,60,75.9493670886076
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 459, 'n_valid': 71, 'n_correct': 28}",201.521805,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },n equals(Object obj){if(o instanceof y){return eqs(((N)).e);}{}},152,64,12,88,62.85714285714285,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['n', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'o', 'instanceof', 'y', ')', '{', 'return', 'eqs', '(', '(', '(', 'N', ')', ')', '.', 'e', ')', ';', '}', '{', '}', '}']",40,30,6,10,29.411764705882355
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 479, 'n_valid': 91, 'n_correct': 48}",258.563318,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },d onCreate(e s){r.onCreate();(g());(s);},319,40,14,279,91.47540983606557,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['d', 'onCreate', '(', 'e', 's', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', '(', 'g', '(', ')', ')', ';', '(', 's', ')', ';', '}']",61,24,6,37,67.27272727272727
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 280, 'n_valid': 42, 'n_correct': 23}",124.671788,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },d onCreate(){r.onCreate();if(l){e();}},171,38,14,133,84.71337579617835,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['d', 'onCreate', '(', ')', '{', 'r', '.', 'onCreate', '(', ')', ';', 'if', '(', 'l', ')', '{', 'e', '(', ')', ';', '}', '}']",35,22,6,13,44.82758620689656
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 445, 'n_valid': 167, 'n_correct': 23}",454.70605,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },o onCreate(e ste){e(savedInstanceState);setContentView;},140,56,14,84,66.66666666666666,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['o', 'onCreate', '(', 'e', 'ste', ')', '{', 'e', '(', 'savedInstanceState', ')', ';', 'setContentView', ';', '}']",27,15,6,12,57.14285714285714
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 479, 'n_valid': 89, 'n_correct': 29}",253.963646,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },public String toString(){r();for(N n:ren){t.a(n.toString());}},165,62,14,103,68.21192052980133,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'r', '(', ')', ';', 'for', '(', 'N', 'n', ':', 'ren', ')', '{', 't', '.', 'a', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', '}']",44,31,6,13,34.21052631578947
code2vec,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 504, 'n_valid': 91, 'n_correct': 40}",259.937108,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",public String toString(){if(l){}if(t==0){}(s);},150,47,14,103,75.73529411764706,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '{', '}', 'if', '(', 't', '==', '0', ')', '{', '}', '(', 's', ')', ';', '}']",42,25,6,17,47.22222222222222
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_2.txt,0.9988,0.0013,"{'n_total': 1646, 'n_valid': 165, 'n_correct': 130}",474.431164,"void onCreate(Bundle savedInstanceState){onCreate();if(null){caldroidFragment(savedInstanceState,"""");}{Bundle().setArguments();}t().commit();listener=new CaldroidListener(){onSelectDate(Date view){makeText(getApplicationContext().format(),SHORT).show();}onChangeMonth(int month,int year){(getApplicationContext()._).show();}onLongClickDate(Date date,View view){(SHORT).show();}onCaldroidViewCreated(){if(caldroidFragment()!=null){makeText(getApplicationContext(),"""",SHORT).show();}}};(listener);textView=(Button)(new OnClickListener(){onClick(){{((R));setMaxDate();}((R));(7);(3);ArrayList=new ArrayList<>();for(;;i++){}setShowNavigationArrows=""""+(Date())+"""";text="""";text="""".format()+"""";for(Date date:disabledDates){}}});Button=(button)(new OnClickListener(){onClick(View v){setCaldroidListener();dialogTag="""";if(state){getArguments();{(args);}}{}show(getSupportFragmentManager(),dialogTag);}});}","d onCreate(e e){onCreate();if(n){a(e,"""");}t().new r(){e(D w){(T);}h(t o,i y){(t);}d(){if(c){(T).w();}}};(r);w=(n)(new O(){o(){{}((R));t=new t<>();for(;;i++)s=(e)"""";if(e){s();{(s);}}(e);}});}",896,190,14,706,80.04535147392289,"['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'if', '(', 'null', ')', '{', 'caldroidFragment', '(', 'savedInstanceState', ',', '""""', ')', ';', '}', '{', 'Bundle', '(', ')', '.', 'setArguments', '(', ')', ';', '}', 't', '(', ')', '.', 'commit', '(', ')', ';', 'listener', '=', 'new', 'CaldroidListener', '(', ')', '{', 'onSelectDate', '(', 'Date', 'view', ')', '{', 'makeText', '(', 'getApplicationContext', '(', ')', '.', 'format', '(', ')', ',', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', 'onChangeMonth', '(', 'int', 'month', ',', 'int', 'year', ')', '{', '(', 'getApplicationContext', '(', ')', '.', '_', ')', '.', 'show', '(', ')', ';', '}', 'onLongClickDate', '(', 'Date', 'date', ',', 'View', 'view', ')', '{', '(', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', 'onCaldroidViewCreated', '(', ')', '{', 'if', '(', 'caldroidFragment', '(', ')', '!=', 'null', ')', '{', 'makeText', '(', 'getApplicationContext', '(', ')', ',', '""""', ',', 'SHORT', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ';', '(', 'listener', ')', ';', 'textView', '=', '(', 'Button', ')', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', ')', '{', '{', '(', '(', 'R', ')', ')', ';', 'setMaxDate', '(', ')', ';', '}', '(', '(', 'R', ')', ')', ';', '(', '7', ')', ';', '(', '3', ')', ';', 'ArrayList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '}', 'setShowNavigationArrows', '=', '""""', '+', '(', 'Date', '(', ')', ')', '+', '""""', ';', 'text', '=', '""""', ';', 'text', '=', '""""', '.', 'format', '(', ')', '+', '""""', ';', 'for', '(', 'Date', 'date', ':', 'disabledDates', ')', '{', '}', '}', '}', ')', ';', 'Button', '=', '(', 'button', ')', '(', 'new', 'OnClickListener', '(', ')', '{', 'onClick', '(', 'View', 'v', ')', '{', 'setCaldroidListener', '(', ')', ';', 'dialogTag', '=', '""""', ';', 'if', '(', 'state', ')', '{', 'getArguments', '(', ')', ';', '{', '(', 'args', ')', ';', '}', '}', '{', '}', 'show', '(', 'getSupportFragmentManager', '(', ')', ',', 'dialogTag', ')', ';', '}', '}', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'e', ')', '{', 'onCreate', '(', ')', ';', 'if', '(', 'n', ')', '{', 'a', '(', 'e', ',', '""""', ')', ';', '}', 't', '(', ')', '.', 'new', 'r', '(', ')', '{', 'e', '(', 'D', 'w', ')', '{', '(', 'T', ')', ';', '}', 'h', '(', 't', 'o', ',', 'i', 'y', ')', '{', '(', 't', ')', ';', '}', 'd', '(', ')', '{', 'if', '(', 'c', ')', '{', '(', 'T', ')', '.', 'w', '(', ')', ';', '}', '}', '}', ';', '(', 'r', ')', ';', 'w', '=', '(', 'n', ')', '(', 'new', 'O', '(', ')', '{', 'o', '(', ')', '{', '{', '}', '(', '(', 'R', ')', ')', ';', 't', '=', 'new', 't', '<', '>', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', 's', '=', '(', 'e', ')', '""""', ';', 'if', '(', 'e', ')', '{', 's', '(', ')', ';', '{', '(', 's', ')', ';', '}', '}', '(', 'e', ')', ';', '}', '}', ')', ';', '}']",304,154,6,150,50.33557046979866
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_1.txt,0.3474,1.6937,"{'n_total': 644, 'n_valid': 80, 'n_correct': 30}",225.222845,boolean equals(){(this==obj);if(obj){(null);}if((other))if(fileSize){}if(equals())(isLink);if(null){(null);}((other));if(mimeType){(null);}((other));if(null){(other);}(status());},boolean equals(){(j);if(j){(l);}if((r)){(l);}((oth));if(y){}((r));if(l){(r);}(t);},179,82,12,97,58.08383233532935,"['boolean', 'equals', '(', ')', '{', '(', 'this', '==', 'obj', ')', ';', 'if', '(', 'obj', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'fileSize', ')', '{', '}', 'if', '(', 'equals', '(', ')', ')', '(', 'isLink', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', '(', '(', 'other', ')', ')', ';', 'if', '(', 'mimeType', ')', '{', '(', 'null', ')', ';', '}', '(', '(', 'other', ')', ')', ';', 'if', '(', 'null', ')', '{', '(', 'other', ')', ';', '}', '(', 'status', '(', ')', ')', ';', '}']","['boolean', 'equals', '(', ')', '{', '(', 'j', ')', ';', 'if', '(', 'j', ')', '{', '(', 'l', ')', ';', '}', 'if', '(', '(', 'r', ')', ')', '{', '(', 'l', ')', ';', '}', '(', '(', 'oth', ')', ')', ';', 'if', '(', 'y', ')', '{', '}', '(', '(', 'r', ')', ')', ';', 'if', '(', 'l', ')', '{', '(', 'r', ')', ';', '}', '(', 't', ')', ';', '}']",92,64,6,28,32.55813953488372
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_3.txt,0.2349,2.4177,"{'n_total': 317, 'n_valid': 61, 'n_correct': 15}",164.284685,boolean equals(Object obj){if(this==NTRUSigningKeyGenerationParameters)if(B){}if(basisType=other){returnfalse;}if(1){}if(d){}if(other){}if(hashAlg){if(other){}}if((other())){}if((keyNormBound)(other)){}if(Double){}if((other)){}if(Double()){}if(polyType)if(sparse){}},an equals(Object j){if(other){returnfalse;}if(1){}if(e){}},266,58,12,208,81.88976377952756,"['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'NTRUSigningKeyGenerationParameters', ')', 'if', '(', 'B', ')', '{', '}', 'if', '(', 'basisType', '=', 'other', ')', '{', 'returnfalse', ';', '}', 'if', '(', '1', ')', '{', '}', 'if', '(', 'd', ')', '{', '}', 'if', '(', 'other', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'other', ')', '{', '}', '}', 'if', '(', '(', 'other', '(', ')', ')', ')', '{', '}', 'if', '(', '(', 'keyNormBound', ')', '(', 'other', ')', ')', '{', '}', 'if', '(', 'Double', ')', '{', '}', 'if', '(', '(', 'other', ')', ')', '{', '}', 'if', '(', 'Double', '(', ')', ')', '{', '}', 'if', '(', 'polyType', ')', 'if', '(', 'sparse', ')', '{', '}', '}']","['an', 'equals', '(', 'Object', 'j', ')', '{', 'if', '(', 'other', ')', '{', 'returnfalse', ';', '}', 'if', '(', '1', ')', '{', '}', 'if', '(', 'e', ')', '{', '}', '}']",113,28,6,85,79.43925233644859
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_1.txt,0.5779,0.5491,"{'n_total': 1349, 'n_valid': 231, 'n_correct': 82}",665.247968,"void onCreate(Bundle savedInstanceState){policy=(MapView)(map)setBuiltInZoomControls();mapController();nodeIcon();for(;;i++){node();(node).setSubDescription((this));(_).setImage();(nodeMarker);}(this);ResourcesCompat();getOverlays().add();if(null){for(POI poi:pois){(map);if(poi){((mThumbnail));}((map));(poi);}}(5);urlForTagSearchKml("""",0);(mKmlDocument);{(drawable);((BitmapDrawable)).getBitmap((""""));}getOverlays();}","d onCreate(e savedInstanceState){pcy(p);for(;;i++){(n).n((s));(_).s();}(s);if(l){for(P p:s){(m);{((l));}((m));(i);}}(5);(u);{(e);((e)).p((""""));}}",419,145,14,274,67.65432098765433,"['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'policy', '=', '(', 'MapView', ')', '(', 'map', ')', 'setBuiltInZoomControls', '(', ')', ';', 'mapController', '(', ')', ';', 'nodeIcon', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'node', '(', ')', ';', '(', 'node', ')', '.', 'setSubDescription', '(', '(', 'this', ')', ')', ';', '(', '_', ')', '.', 'setImage', '(', ')', ';', '(', 'nodeMarker', ')', ';', '}', '(', 'this', ')', ';', 'ResourcesCompat', '(', ')', ';', 'getOverlays', '(', ')', '.', 'add', '(', ')', ';', 'if', '(', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', '(', 'map', ')', ';', 'if', '(', 'poi', ')', '{', '(', '(', 'mThumbnail', ')', ')', ';', '}', '(', '(', 'map', ')', ')', ';', '(', 'poi', ')', ';', '}', '}', '(', '5', ')', ';', 'urlForTagSearchKml', '(', '""""', ',', '0', ')', ';', '(', 'mKmlDocument', ')', ';', '{', '(', 'drawable', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', '.', 'getBitmap', '(', '(', '""""', ')', ')', ';', '}', 'getOverlays', '(', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'savedInstanceState', ')', '{', 'pcy', '(', 'p', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', 'n', ')', '.', 'n', '(', '(', 's', ')', ')', ';', '(', '_', ')', '.', 's', '(', ')', ';', '}', '(', 's', ')', ';', 'if', '(', 'l', ')', '{', 'for', '(', 'P', 'p', ':', 's', ')', '{', '(', 'm', ')', ';', '{', '(', '(', 'l', ')', ')', ';', '}', '(', '(', 'm', ')', ')', ';', '(', 'i', ')', ';', '}', '}', '(', '5', ')', ';', '(', 'u', ')', ';', '{', '(', 'e', ')', ';', '(', '(', 'e', ')', ')', '.', 'p', '(', '(', '""""', ')', ')', ';', '}', '}']",159,109,6,50,32.6797385620915
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 1038, 'n_valid': 150, 'n_correct': 51}",418.862332,"void onCreate(Bundle savedInstanceState){(R);onCreate();mainLayout=(ViewGroup)(android);try{open("""",AssetManager);applicationKey[inputStream];}catch(IOException e){}if(null==applicationKey){e(TAG,"""");}(R)=new Thread(){run(){while(mWaitToExit){if(nanoTime){new Runnable(){run(){}};(runnable);}try{sleep();}catch(InterruptedException e){}}}};}",o onCreate(B savedInstanceSate){(d);try{n();p[m];}catch(n e){}if(n){}(R)=new Thrd(){{while(t){if(e){new e(){r(){}};(e);}try{}catch(I e){}}}};},341,142,14,199,60.85626911314985,"['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'R', ')', ';', 'onCreate', '(', ')', ';', 'mainLayout', '=', '(', 'ViewGroup', ')', '(', 'android', ')', ';', 'try', '{', 'open', '(', '""""', ',', 'AssetManager', ')', ';', 'applicationKey', '[', 'inputStream', ']', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'null', '==', 'applicationKey', ')', '{', 'e', '(', 'TAG', ',', '""""', ')', ';', '}', '(', 'R', ')', '=', 'new', 'Thread', '(', ')', '{', 'run', '(', ')', '{', 'while', '(', 'mWaitToExit', ')', '{', 'if', '(', 'nanoTime', ')', '{', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ';', '(', 'runnable', ')', ';', '}', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}', '}', ';', '}']","['o', 'onCreate', '(', 'B', 'savedInstanceSate', ')', '{', '(', 'd', ')', ';', 'try', '{', 'n', '(', ')', ';', 'p', '[', 'm', ']', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '}', 'if', '(', 'n', ')', '{', '}', '(', 'R', ')', '=', 'new', 'Thrd', '(', ')', '{', '{', 'while', '(', 't', ')', '{', 'if', '(', 'e', ')', '{', 'new', 'e', '(', ')', '{', 'r', '(', ')', '{', '}', '}', ';', '(', 'e', ')', ';', '}', 'try', '{', '}', 'catch', '(', 'I', 'e', ')', '{', '}', '}', '}', '}', ';', '}']",120,88,6,32,28.07017543859649
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_5.txt,0.9901,0.0119,"{'n_total': 3649, 'n_valid': 282, 'n_correct': 229}",815.366475,"void onCreate(){if(PreferenceManager().getBoolean("""",false)){(DayTheme);}onCreate();("""").setOnPreferenceChangeListener(new Preference(){onPreferenceChange(Preference preference,Object o){MainActivity(o(),SUPER);}});("""").setOnPreferenceChangeListener(new OnPreferenceChangeListener(){onPreferenceChange(Preference preference,Object newValue){(newValue());}});(new Preference(){onPreferenceClick(){editText();(editText).setPositiveButton(new DialogInterface(){onClick(DialogInterface dialogInterface,int i){(getText);}}).setNegativeButton().show();}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){clickTime++;if(clickTime){{}(LONG).show();}((Locale));}});("""").setSummary((this));(new Preference(){onPreferenceClick(Preference preference){(SHORT);}onPreferenceClick(Preference preference){(null).show;}});(new OnPreferenceClickListener(){onPreferenceClick(){try{((("""")));}catch(Throwable ignored){}}});(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){try{}catch(ActivityNotFoundException a){((R)).show();}}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){(new Runnable(){run(){String(Locale,"""",getPhoneInfo());(new Runnable(){run(){}});}});}});(new Preference(){onPreferenceClick(Preference preference){(PreferencesActivity);if(HONEYCOMB){(Intent);}}onPreferenceChange(Preference newValue){(NAME);}});}","d onCreate(){if(n("""",e)){(e);}onCreate();(new e(){e(P e,t o){(R);}});("""").e(new r(){k(){(t).n(new e(){k(i e,t i){(e);}}).w();}});("""").s(new r(){k(P e){if(c){}((e));}k(P e){(n).s;}});(new r(){k(){try{((("""")));}catch(b d){}}});(new O(){k(){try{}catch(n a){}}});(new O(){k(){(new u(){r(){i(L,"""",o());(new e(){r(){}});}});}});(new e(){k(e n){(y);if(B){(n);}}e(r n){(E);}});}",1558,370,14,1188,76.94300518134715,"['void', 'onCreate', '(', ')', '{', 'if', '(', 'PreferenceManager', '(', ')', '.', 'getBoolean', '(', '""""', ',', 'false', ')', ')', '{', '(', 'DayTheme', ')', ';', '}', 'onCreate', '(', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '(', 'o', '(', ')', ',', 'SUPER', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'OnPreferenceChangeListener', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', '(', 'newValue', '(', ')', ')', ';', '}', '}', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'editText', '(', ')', ';', '(', 'editText', ')', '.', 'setPositiveButton', '(', 'new', 'DialogInterface', '(', ')', '{', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', '(', 'getText', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', ')', '.', 'show', '(', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', 'clickTime', ')', '{', '{', '}', '(', 'LONG', ')', '.', 'show', '(', ')', ';', '}', '(', '(', 'Locale', ')', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setSummary', '(', '(', 'this', ')', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'SHORT', ')', ';', '}', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'null', ')', '.', 'show', ';', '}', '}', ')', ';', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'try', '{', '(', '(', '(', '""""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', '}', '}', ')', ';', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', '(', '(', 'R', ')', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'String', '(', 'Locale', ',', '""""', ',', 'getPhoneInfo', '(', ')', ')', ';', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ')', ';', '}', '}', ')', ';', '}', '}', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'PreferencesActivity', ')', ';', 'if', '(', 'HONEYCOMB', ')', '{', '(', 'Intent', ')', ';', '}', '}', 'onPreferenceChange', '(', 'Preference', 'newValue', ')', '{', '(', 'NAME', ')', ';', '}', '}', ')', ';', '}']","['d', 'onCreate', '(', ')', '{', 'if', '(', 'n', '(', '""""', ',', 'e', ')', ')', '{', '(', 'e', ')', ';', '}', 'onCreate', '(', ')', ';', '(', 'new', 'e', '(', ')', '{', 'e', '(', 'P', 'e', ',', 't', 'o', ')', '{', '(', 'R', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'e', '(', 'new', 'r', '(', ')', '{', 'k', '(', ')', '{', '(', 't', ')', '.', 'n', '(', 'new', 'e', '(', ')', '{', 'k', '(', 'i', 'e', ',', 't', 'i', ')', '{', '(', 'e', ')', ';', '}', '}', ')', '.', 'w', '(', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 's', '(', 'new', 'r', '(', ')', '{', 'k', '(', 'P', 'e', ')', '{', 'if', '(', 'c', ')', '{', '}', '(', '(', 'e', ')', ')', ';', '}', 'k', '(', 'P', 'e', ')', '{', '(', 'n', ')', '.', 's', ';', '}', '}', ')', ';', '(', 'new', 'r', '(', ')', '{', 'k', '(', ')', '{', 'try', '{', '(', '(', '(', '""""', ')', ')', ')', ';', '}', 'catch', '(', 'b', 'd', ')', '{', '}', '}', '}', ')', ';', '(', 'new', 'O', '(', ')', '{', 'k', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'a', ')', '{', '}', '}', '}', ')', ';', '(', 'new', 'O', '(', ')', '{', 'k', '(', ')', '{', '(', 'new', 'u', '(', ')', '{', 'r', '(', ')', '{', 'i', '(', 'L', ',', '""""', ',', 'o', '(', ')', ')', ';', '(', 'new', 'e', '(', ')', '{', 'r', '(', ')', '{', '}', '}', ')', ';', '}', '}', ')', ';', '}', '}', ')', ';', '(', 'new', 'e', '(', ')', '{', 'k', '(', 'e', 'n', ')', '{', '(', 'y', ')', ';', 'if', '(', 'B', ')', '{', '(', 'n', ')', ';', '}', '}', 'e', '(', 'r', 'n', ')', '{', '(', 'E', ')', ';', '}', '}', ')', ';', '}']",426,295,6,131,31.19047619047619
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_7.txt,0.9957,0.0048,"{'n_total': 2813, 'n_valid': 278, 'n_correct': 155}",802.743153,"@SuppressWarnings()void onCreate(Bundle savedInstanceState){(savedInstanceState).setContentView();(view);listener=new View(){onClick(View view){}};(new View(){onClick(View view){(isSwappedFeeds);}});init(getEglBaseContext(),null);(ScalingType);(_);if(null){(EXTRA);try{(getEglBaseContext());}catch(IOException e){(""""+e);}}for(String permission:PERMISSIONS){if(GRANTED){}}roomUri();if(roomUri){((url));Log(TAG,"""");(RESULT);}(false);videoWidth();if(videoWidth){}if((false)){dataChannelParameters((PROTOCOL)getBooleanExtra(),(EXTRA));}((EXTRA));(""""+"""");if(loopback()){appRtcClient();}{("""");appRtcClient();}RoomConnectionParameters(toString(),urlParameters);if(isSupported()){}(intent);(hudFragment);commit();if(commandLineRun){postDelayed(new Runnable(){run(){}},runTimeMs);}(options);if(screencaptureEnabled){}{}}","@s()d onCreate(Bunde e){(a);r=new w(){o(e v){}};(new w(){k(w w){(s);}});(l);(e);if(l){(E);try{(g);}catch(n e){}}for(g p:E){if(G){}}i();if(r){((l));(T);}(e);h();if(v){}if((a)){((A));}((X));(""""+"""");if(k){}{("""");t();}R();if(n){t(new e(){r(){}},s);}(o);if(E){}}",811,257,14,554,69.51066499372648,"['@', 'SuppressWarnings', '(', ')', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'savedInstanceState', ')', '.', 'setContentView', '(', ')', ';', '(', 'view', ')', ';', 'listener', '=', 'new', 'View', '(', ')', '{', 'onClick', '(', 'View', 'view', ')', '{', '}', '}', ';', '(', 'new', 'View', '(', ')', '{', 'onClick', '(', 'View', 'view', ')', '{', '(', 'isSwappedFeeds', ')', ';', '}', '}', ')', ';', 'init', '(', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', '(', 'ScalingType', ')', ';', '(', '_', ')', ';', 'if', '(', 'null', ')', '{', '(', 'EXTRA', ')', ';', 'try', '{', '(', 'getEglBaseContext', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '}', 'for', '(', 'String', 'permission', ':', 'PERMISSIONS', ')', '{', 'if', '(', 'GRANTED', ')', '{', '}', '}', 'roomUri', '(', ')', ';', 'if', '(', 'roomUri', ')', '{', '(', '(', 'url', ')', ')', ';', 'Log', '(', 'TAG', ',', '""""', ')', ';', '(', 'RESULT', ')', ';', '}', '(', 'false', ')', ';', 'videoWidth', '(', ')', ';', 'if', '(', 'videoWidth', ')', '{', '}', 'if', '(', '(', 'false', ')', ')', '{', 'dataChannelParameters', '(', '(', 'PROTOCOL', ')', 'getBooleanExtra', '(', ')', ',', '(', 'EXTRA', ')', ')', ';', '}', '(', '(', 'EXTRA', ')', ')', ';', '(', '""""', '+', '""""', ')', ';', 'if', '(', 'loopback', '(', ')', ')', '{', 'appRtcClient', '(', ')', ';', '}', '{', '(', '""""', ')', ';', 'appRtcClient', '(', ')', ';', '}', 'RoomConnectionParameters', '(', 'toString', '(', ')', ',', 'urlParameters', ')', ';', 'if', '(', 'isSupported', '(', ')', ')', '{', '}', '(', 'intent', ')', ';', '(', 'hudFragment', ')', ';', 'commit', '(', ')', ';', 'if', '(', 'commandLineRun', ')', '{', 'postDelayed', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ',', 'runTimeMs', ')', ';', '}', '(', 'options', ')', ';', 'if', '(', 'screencaptureEnabled', ')', '{', '}', '{', '}', '}']","['@', 's', '(', ')', 'd', 'onCreate', '(', 'Bunde', 'e', ')', '{', '(', 'a', ')', ';', 'r', '=', 'new', 'w', '(', ')', '{', 'o', '(', 'e', 'v', ')', '{', '}', '}', ';', '(', 'new', 'w', '(', ')', '{', 'k', '(', 'w', 'w', ')', '{', '(', 's', ')', ';', '}', '}', ')', ';', '(', 'l', ')', ';', '(', 'e', ')', ';', 'if', '(', 'l', ')', '{', '(', 'E', ')', ';', 'try', '{', '(', 'g', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', 'for', '(', 'g', 'p', ':', 'E', ')', '{', 'if', '(', 'G', ')', '{', '}', '}', 'i', '(', ')', ';', 'if', '(', 'r', ')', '{', '(', '(', 'l', ')', ')', ';', '(', 'T', ')', ';', '}', '(', 'e', ')', ';', 'h', '(', ')', ';', 'if', '(', 'v', ')', '{', '}', 'if', '(', '(', 'a', ')', ')', '{', '(', '(', 'A', ')', ')', ';', '}', '(', '(', 'X', ')', ')', ';', '(', '""""', '+', '""""', ')', ';', 'if', '(', 'k', ')', '{', '}', '{', '(', '""""', ')', ';', 't', '(', ')', ';', '}', 'R', '(', ')', ';', 'if', '(', 'n', ')', '{', 't', '(', 'new', 'e', '(', ')', '{', 'r', '(', ')', '{', '}', '}', ',', 's', ')', ';', '}', '(', 'o', ')', ';', 'if', '(', 'E', ')', '{', '}', '}']",285,212,6,73,26.16487455197133
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_4.txt,0.4166,1.7767,"{'n_total': 443, 'n_valid': 78, 'n_correct': 22}",212.695841,boolean equals(Object obj){if(this==obj){}{}if(getClass()){}if(bufferLenTrits){}if(fastFp){}if(null){if(other=null){}}{}if(hashSeed){}if(pkLen){}{}if(q)if(sparse){}},boolean equals(Object j){if(ths==j)if(s){}{if(l){}}if(h){}if(q)if(s){}},165,71,12,94,61.43790849673203,"['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', '}', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'if', '(', 'bufferLenTrits', ')', '{', '}', 'if', '(', 'fastFp', ')', '{', '}', 'if', '(', 'null', ')', '{', 'if', '(', 'other', '=', 'null', ')', '{', '}', '}', '{', '}', 'if', '(', 'hashSeed', ')', '{', '}', 'if', '(', 'pkLen', ')', '{', '}', '{', '}', 'if', '(', 'q', ')', 'if', '(', 'sparse', ')', '{', '}', '}']","['boolean', 'equals', '(', 'Object', 'j', ')', '{', 'if', '(', 'ths', '==', 'j', ')', 'if', '(', 's', ')', '{', '}', '{', 'if', '(', 'l', ')', '{', '}', '}', 'if', '(', 'h', ')', '{', '}', 'if', '(', 'q', ')', 'if', '(', 's', ')', '{', '}', '}']",78,44,6,34,47.22222222222222
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_3.txt,0.9999,0.0001,"{'n_total': 3088, 'n_valid': 187, 'n_correct': 103}",531.181697,"void run(){try{if(closeHandshake()){}while(isAppendClosed){{}if((Level)){(""""+getHandshakeStatus());}if(hstatus){synchronized(myNetOutData){while(WRAP){try{(myNetOutData);}catch(Throwable t){(myNetOutData);}hstatus();}}}if(UNWRAP){while(hstatus){if(remaining()>0){if(debugWrap){info();}wrap();hstatus();if(myAppInData){("""");}if(getStatus().CLOSED){}}if(wrap()==(UNWRAP)){compact();try{if(debugWrap){(""""+rd);}}finally{flip();}if(0){{("""");}net();rd().read;if(debugWrap){("""");}}if(rd){}}if(isLoggable()){(sslEngine);}}}if(TASK){currentTimeMillis();while((r)){run();}if((Level)){((t));}}if(hstatus){}}processRealInput(getIn(),in);}catch(Throwable t){("""");try{}catch(IOException ex){log("""",ex);}}}","d run(){try{if(k){}while(id){{}if((L)){(t);}if(h){synchronized(ta){while(WP){try{(a);}catch(h t){(t);}}}}if(P){while(s){if(0){if(d){i();}if(m){("""");}if(g){}}if(wp()){try{if(d){(""""+rd);}}finally{;}if(0){}if(d){}}if(i()){(e);}}}if(K){s();while((r)){r;}if((Le)){((t));}}if(h){}}pt(n(),in);}catch(e t){("""");try{}catch(o ex){g("""",e);}}}",691,331,9,360,52.785923753665685,"['void', 'run', '(', ')', '{', 'try', '{', 'if', '(', 'closeHandshake', '(', ')', ')', '{', '}', 'while', '(', 'isAppendClosed', ')', '{', '{', '}', 'if', '(', '(', 'Level', ')', ')', '{', '(', '""""', '+', 'getHandshakeStatus', '(', ')', ')', ';', '}', 'if', '(', 'hstatus', ')', '{', 'synchronized', '(', 'myNetOutData', ')', '{', 'while', '(', 'WRAP', ')', '{', 'try', '{', '(', 'myNetOutData', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', 'myNetOutData', ')', ';', '}', 'hstatus', '(', ')', ';', '}', '}', '}', 'if', '(', 'UNWRAP', ')', '{', 'while', '(', 'hstatus', ')', '{', 'if', '(', 'remaining', '(', ')', '>', '0', ')', '{', 'if', '(', 'debugWrap', ')', '{', 'info', '(', ')', ';', '}', 'wrap', '(', ')', ';', 'hstatus', '(', ')', ';', 'if', '(', 'myAppInData', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'getStatus', '(', ')', '.', 'CLOSED', ')', '{', '}', '}', 'if', '(', 'wrap', '(', ')', '==', '(', 'UNWRAP', ')', ')', '{', 'compact', '(', ')', ';', 'try', '{', 'if', '(', 'debugWrap', ')', '{', '(', '""""', '+', 'rd', ')', ';', '}', '}', 'finally', '{', 'flip', '(', ')', ';', '}', 'if', '(', '0', ')', '{', '{', '(', '""""', ')', ';', '}', 'net', '(', ')', ';', 'rd', '(', ')', '.', 'read', ';', 'if', '(', 'debugWrap', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', 'rd', ')', '{', '}', '}', 'if', '(', 'isLoggable', '(', ')', ')', '{', '(', 'sslEngine', ')', ';', '}', '}', '}', 'if', '(', 'TASK', ')', '{', 'currentTimeMillis', '(', ')', ';', 'while', '(', '(', 'r', ')', ')', '{', 'run', '(', ')', ';', '}', 'if', '(', '(', 'Level', ')', ')', '{', '(', '(', 't', ')', ')', ';', '}', '}', 'if', '(', 'hstatus', ')', '{', '}', '}', 'processRealInput', '(', 'getIn', '(', ')', ',', 'in', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'log', '(', '""""', ',', 'ex', ')', ';', '}', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'if', '(', 'k', ')', '{', '}', 'while', '(', 'id', ')', '{', '{', '}', 'if', '(', '(', 'L', ')', ')', '{', '(', 't', ')', ';', '}', 'if', '(', 'h', ')', '{', 'synchronized', '(', 'ta', ')', '{', 'while', '(', 'WP', ')', '{', 'try', '{', '(', 'a', ')', ';', '}', 'catch', '(', 'h', 't', ')', '{', '(', 't', ')', ';', '}', '}', '}', '}', 'if', '(', 'P', ')', '{', 'while', '(', 's', ')', '{', 'if', '(', '0', ')', '{', 'if', '(', 'd', ')', '{', 'i', '(', ')', ';', '}', 'if', '(', 'm', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'g', ')', '{', '}', '}', 'if', '(', 'wp', '(', ')', ')', '{', 'try', '{', 'if', '(', 'd', ')', '{', '(', '""""', '+', 'rd', ')', ';', '}', '}', 'finally', '{', ';', '}', 'if', '(', '0', ')', '{', '}', 'if', '(', 'd', ')', '{', '}', '}', 'if', '(', 'i', '(', ')', ')', '{', '(', 'e', ')', ';', '}', '}', '}', 'if', '(', 'K', ')', '{', 's', '(', ')', ';', 'while', '(', '(', 'r', ')', ')', '{', 'r', ';', '}', 'if', '(', '(', 'Le', ')', ')', '{', '(', '(', 't', ')', ')', ';', '}', '}', 'if', '(', 'h', ')', '{', '}', '}', 'pt', '(', 'n', '(', ')', ',', 'in', ')', ';', '}', 'catch', '(', 'e', 't', ')', '{', '(', '""""', ')', ';', 'try', '{', '}', 'catch', '(', 'o', 'ex', ')', '{', 'g', '(', '""""', ',', 'e', ')', ';', '}', '}', '}']",308,243,6,65,21.52317880794702
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,init_2.txt,0.9264,0.7617,"{'n_total': 1587, 'n_valid': 220, 'n_correct': 109}",604.725133,"void init()throws ServletException{appUrl("""",null);chsDomain("""",null);chsUrl("""",null);useContentHostingDomain();("""");if(contentPaths){contentPaths=new String[]{};}("""");if(null){loginPaths=new String[]{""""};}if(null){contentExceptions=new String[]{"""",""""};}if(filterConfig()!=null){if("""".equalsIgnoreCase){}if("""".equalsIgnoreCase()){}if((s)){}{("""");}}if((USER)){((USER));}if((AUTH)){"""".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if((ENABLED)){((CONFIG));}if((CONFIG)){}if((SYSTEM)){(System).L;}if(getProperty){(DIR);}if(null){(CONFIG);}if((THRESHOLD)){((CONFIG));}if(filterConfig){((CONTINUE)).booleanValue();}if(null){(getInitParameter()).booleanValue();}if(uploadMaxPerFile){}("""");(clusterTerracotta);if((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if("""".equals()){try{(allowBypassSession);}catch(Exception e){(""""+allowBypassSession);}}(null);getBoolean();}","d init()throws epn{(l);Urlin("""");if(c){ths=new g[]{};}("""");if(l){s=new g[]{""""};}if(f){if("""".s)if((s)){}}if((R)){((R));}if((H)){"""".q((H));}if((L)){(m).ge();}(I);if(s){try{(n);}catch(n e){(n);}}ean();}",886,199,10,687,78.42465753424658,"['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'appUrl', '(', '""""', ',', 'null', ')', ';', 'chsDomain', '(', '""""', ',', 'null', ')', ';', 'chsUrl', '(', '""""', ',', 'null', ')', ';', 'useContentHostingDomain', '(', ')', ';', '(', '""""', ')', ';', 'if', '(', 'contentPaths', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '}', ';', '}', '(', '""""', ')', ';', 'if', '(', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'if', '(', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""""', ',', '""""', '}', ';', '}', 'if', '(', 'filterConfig', '(', ')', '!=', 'null', ')', '{', 'if', '(', '""""', '.', 'equalsIgnoreCase', ')', '{', '}', 'if', '(', '""""', '.', 'equalsIgnoreCase', '(', ')', ')', '{', '}', 'if', '(', '(', 's', ')', ')', '{', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', 'USER', ')', ')', '{', '(', '(', 'USER', ')', ')', ';', '}', 'if', '(', '(', 'AUTH', ')', ')', '{', '""""', '.', 'equals', '(', '(', 'AUTH', ')', ')', ';', '}', 'if', '(', '(', 'PLACEMENT', ')', ')', '{', '(', 'getInitParameter', ')', '.', 'getInitParameter', '(', ')', ';', '}', 'if', '(', '(', 'ENABLED', ')', ')', '{', '(', '(', 'CONFIG', ')', ')', ';', '}', 'if', '(', '(', 'CONFIG', ')', ')', '{', '}', 'if', '(', '(', 'SYSTEM', ')', ')', '{', '(', 'System', ')', '.', 'L', ';', '}', 'if', '(', 'getProperty', ')', '{', '(', 'DIR', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', 'CONFIG', ')', ';', '}', 'if', '(', '(', 'THRESHOLD', ')', ')', '{', '(', '(', 'CONFIG', ')', ')', ';', '}', 'if', '(', 'filterConfig', ')', '{', '(', '(', 'CONTINUE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', 'getInitParameter', '(', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'uploadMaxPerFile', ')', '{', '}', '(', '""""', ')', ';', '(', 'clusterTerracotta', ')', ';', 'if', '(', '(', 'NAME', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', 'if', '(', '(', 'DOMAIN', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', '(', 'SAKAI', ')', ';', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'try', '{', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', '+', 'allowBypassSession', ')', ';', '}', '}', '(', 'null', ')', ';', 'getBoolean', '(', ')', ';', '}']","['d', 'init', '(', ')', 'throws', 'epn', '{', '(', 'l', ')', ';', 'Urlin', '(', '""""', ')', ';', 'if', '(', 'c', ')', '{', 'ths', '=', 'new', 'g', '[', ']', '{', '}', ';', '}', '(', '""""', ')', ';', 'if', '(', 'l', ')', '{', 's', '=', 'new', 'g', '[', ']', '{', '""""', '}', ';', '}', 'if', '(', 'f', ')', '{', 'if', '(', '""""', '.', 's', ')', 'if', '(', '(', 's', ')', ')', '{', '}', '}', 'if', '(', '(', 'R', ')', ')', '{', '(', '(', 'R', ')', ')', ';', '}', 'if', '(', '(', 'H', ')', ')', '{', '""""', '.', 'q', '(', '(', 'H', ')', ')', ';', '}', 'if', '(', '(', 'L', ')', ')', '{', '(', 'm', ')', '.', 'ge', '(', ')', ';', '}', '(', 'I', ')', ';', 'if', '(', 's', ')', '{', 'try', '{', '(', 'n', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'n', ')', ';', '}', '}', 'ean', '(', ')', ';', '}']",361,151,6,210,59.15492957746479
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_6.txt,0.9895,0.0121,"{'n_total': 289, 'n_valid': 30, 'n_correct': 21}",83.238909,"void main(String[]args){try{setProperty("""","""");"""".verifyEncodedString("""");if(1)println();("""");("""");if(map)(""""+1);("""");("""");("""");(""""+3);(1);(1);(1);("""");getEncodedString();verifyEncodedString();if(null)("""");("""");}catch(Exception exception){(""""+exception);}}","vo main(t[]args){try{f();("""");}catch(n n){(p);}}",256,48,10,208,84.5528455284553,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'setProperty', '(', '""""', ',', '""""', ')', ';', '""""', '.', 'verifyEncodedString', '(', '""""', ')', ';', 'if', '(', '1', ')', 'println', '(', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'if', '(', 'map', ')', '(', '""""', '+', '1', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '3', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '""""', ')', ';', 'getEncodedString', '(', ')', ';', 'verifyEncodedString', '(', ')', ';', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', '(', '""""', '+', 'exception', ')', ';', '}', '}']","['vo', 'main', '(', 't', '[', ']', 'args', ')', '{', 'try', '{', 'f', '(', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'n', 'n', ')', '{', '(', 'p', ')', ';', '}', '}']",120,32,6,88,77.19298245614034
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_14.txt,1.0,0.0,"{'n_total': 3470, 'n_valid': 230, 'n_correct': 88}",661.650046,"void main(String[]argv){for(;;optind++){if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){}if(("""")){}if(argv[optind].startsWith("""")){("""");("""").exit();}}if(optind)(argv[optind++]);if(length)(argv[optind++]);try{(null);if(url){if(host)connect();}getFolder();if(exists()){(""""+src);(1);}open();getMessageCount();if(0){}(""""+"""");if(0){((Flags));for(;;i++){if(msgs[i].isSet())(""""+msgs[i]+"""");}}close();}catch(MessagingException mex){{if(ex)((MessagingException)).getNextException;}(ex);}}","o main(S[]argv){for(;;){if(("""")){v[p];}if(("""")){v[d];}if(("""")){a[n];}if(("""")){r[d];}if(("""")){r[o];}if(("""")){}if(("""")){}if(("""")){}if(g[d].i()){("""").e;}}(o);(v[t]);try{(n);if(l){if(t)c();}t();if("""")if(0){((Fs));for(;;i){if(msg)(s[i]+"""");}}se();}catch(on x){{if(e)((n)).n;}(ex);}}",601,277,10,324,54.82233502538071,"['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '}', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'length', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', '(', 'null', ')', ';', 'if', '(', 'url', ')', '{', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', 'getFolder', '(', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', '(', '""""', '+', 'src', ')', ';', '(', '1', ')', ';', '}', 'open', '(', ')', ';', 'getMessageCount', '(', ')', ';', 'if', '(', '0', ')', '{', '}', '(', '""""', '+', '""""', ')', ';', 'if', '(', '0', ')', '{', '(', '(', 'Flags', ')', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'msgs', '[', 'i', ']', '.', 'isSet', '(', ')', ')', '(', '""""', '+', 'msgs', '[', 'i', ']', '+', '""""', ')', ';', '}', '}', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '{', 'if', '(', 'ex', ')', '(', '(', 'MessagingException', ')', ')', '.', 'getNextException', ';', '}', '(', 'ex', ')', ';', '}', '}']","['o', 'main', '(', 'S', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'v', '[', 'p', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'v', '[', 'd', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'a', '[', 'n', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'r', '[', 'd', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'r', '[', 'o', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'g', '[', 'd', ']', '.', 'i', '(', ')', ')', '{', '(', '""""', ')', '.', 'e', ';', '}', '}', '(', 'o', ')', ';', '(', 'v', '[', 't', ']', ')', ';', 'try', '{', '(', 'n', ')', ';', 'if', '(', 'l', ')', '{', 'if', '(', 't', ')', 'c', '(', ')', ';', '}', 't', '(', ')', ';', 'if', '(', '""""', ')', 'if', '(', '0', ')', '{', '(', '(', 'Fs', ')', ')', ';', 'for', '(', ';', ';', 'i', ')', '{', 'if', '(', 'msg', ')', '(', 's', '[', 'i', ']', '+', '""""', ')', ';', '}', '}', 'se', '(', ')', ';', '}', 'catch', '(', 'on', 'x', ')', '{', '{', 'if', '(', 'e', ')', '(', '(', 'n', ')', ')', '.', 'n', ';', '}', '(', 'ex', ')', ';', '}', '}']",311,227,6,84,27.54098360655738
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_15.txt,0.9999,0.0001,"{'n_total': 2220, 'n_valid': 208, 'n_correct': 94}",580.18791,"void main(String[]argv){for(;;){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){(argv[optind]);}if(("""")){}if(argv[optind].startsWith("""")){System();}{}}try{if(debug)if(null){connect();}{if(protocol)if(host)connect();}folder();if(folder){("""");}if(null)if(folder){("""");}Message[]msgs=(nummsg);if(verbose)println();(msgs);(WRITE);if(verbose)(msgs);("""");(folder);(Folder);(WRITE);if(verbose)(false);(msgs);(false);}catch(Exception ex){(""""+ex).exit();}}","d main(g[]v){for(;;){if(v[n].e("""")){v[o];}if(a[p].u("""")){v[d];}if(("""")){}if(rgv[n].e("""")){}if(("""")){v[o];}if(r[optind].s()){a[d];}if(r()){(a[d]);}if((""""))if(("""")){m();}}try{if(l){;}M(ne);}catch(n e){(""""+x).t();}}",722,212,10,510,71.62921348314607,"['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '(', 'argv', '[', 'optind', ']', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', 'System', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'debug', ')', 'if', '(', 'null', ')', '{', 'connect', '(', ')', ';', '}', '{', 'if', '(', 'protocol', ')', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', 'folder', '(', ')', ';', 'if', '(', 'folder', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', 'if', '(', 'folder', ')', '{', '(', '""""', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', '(', 'nummsg', ')', ';', 'if', '(', 'verbose', ')', 'println', '(', ')', ';', '(', 'msgs', ')', ';', '(', 'WRITE', ')', ';', 'if', '(', 'verbose', ')', '(', 'msgs', ')', ';', '(', '""""', ')', ';', '(', 'folder', ')', ';', '(', 'Folder', ')', ';', '(', 'WRITE', ')', ';', 'if', '(', 'verbose', ')', '(', 'false', ')', ';', '(', 'msgs', ')', ';', '(', 'false', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'ex', ')', '.', 'exit', '(', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'v', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', 'v', '[', 'n', ']', '.', 'e', '(', '""""', ')', ')', '{', 'v', '[', 'o', ']', ';', '}', 'if', '(', 'a', '[', 'p', ']', '.', 'u', '(', '""""', ')', ')', '{', 'v', '[', 'd', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'rgv', '[', 'n', ']', '.', 'e', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'v', '[', 'o', ']', ';', '}', 'if', '(', 'r', '[', 'optind', ']', '.', 's', '(', ')', ')', '{', 'a', '[', 'd', ']', ';', '}', 'if', '(', 'r', '(', ')', ')', '{', '(', 'a', '[', 'd', ']', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', 'if', '(', '(', '""""', ')', ')', '{', 'm', '(', ')', ';', '}', '}', 'try', '{', 'if', '(', 'l', ')', '{', ';', '}', 'M', '(', 'ne', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', '+', 'x', ')', '.', 't', '(', ')', ';', '}', '}']",343,173,6,170,50.44510385756677
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_7.txt,0.9994,0.001,"{'n_total': 1211, 'n_valid': 87, 'n_correct': 49}",244.888025,"void main(String[]args){if((length)(length)){}if(args){try{((args)).intValue();if(0){}}catch(java e){System();}}try{MBeanServerFactory();if((null)){}{server();}(domain);(""""+snmpPort).print("""");(Integer()).snmpV();("""");try{("""").newJMXConnectorServer();}catch(Exception ex){(""""+ex);}("""");("""");}catch(Exception e){printStackTrace();}}","v main(g[]args){if((h)){}if(rgs){try{((s));if(0){}}catch(a e){m();}}try{y();if((n)){}{r();}(d);try{("""").e();}catch(e x){(""""+x);}("""");("""");}catch(c e){}}",331,152,10,179,55.7632398753894,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'length', ')', '(', 'length', ')', ')', '{', '}', 'if', '(', 'args', ')', '{', 'try', '{', '(', '(', 'args', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', '0', ')', '{', '}', '}', 'catch', '(', 'java', 'e', ')', '{', 'System', '(', ')', ';', '}', '}', 'try', '{', 'MBeanServerFactory', '(', ')', ';', 'if', '(', '(', 'null', ')', ')', '{', '}', '{', 'server', '(', ')', ';', '}', '(', 'domain', ')', ';', '(', '""""', '+', 'snmpPort', ')', '.', 'print', '(', '""""', ')', ';', '(', 'Integer', '(', ')', ')', '.', 'snmpV', '(', ')', ';', '(', '""""', ')', ';', 'try', '{', '(', '""""', ')', '.', 'newJMXConnectorServer', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'ex', ')', ';', '}', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']","['v', 'main', '(', 'g', '[', ']', 'args', ')', '{', 'if', '(', '(', 'h', ')', ')', '{', '}', 'if', '(', 'rgs', ')', '{', 'try', '{', '(', '(', 's', ')', ')', ';', 'if', '(', '0', ')', '{', '}', '}', 'catch', '(', 'a', 'e', ')', '{', 'm', '(', ')', ';', '}', '}', 'try', '{', 'y', '(', ')', ';', 'if', '(', '(', 'n', ')', ')', '{', '}', '{', 'r', '(', ')', ';', '}', '(', 'd', ')', ';', 'try', '{', '(', '""""', ')', '.', 'e', '(', ')', ';', '}', 'catch', '(', 'e', 'x', ')', '{', '(', '""""', '+', 'x', ')', ';', '}', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'c', 'e', ')', '{', '}', '}']",150,114,6,36,25.0
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_2.txt,0.9939,0.0078,"{'n_total': 1454, 'n_valid': 90, 'n_correct': 78}",256.824436,"void run(){if(debug){(""""+daemon);}while(running){try{currentTimeMillis();if(nextWakeup){(now);while(hasNext()){readyOps=(valid)?sk:0;if(debugWakeup){(""""+""""+(now)""""+""""+""""+ch);}if(null){("""");}if(channel()){("""");}if(sk){if(debug){(""""+ch);}}try{ready();if(sk()){(ch);}if(sk()&sk()){sk();}if(sk){(ch);}if(0){(""""+""""+callbackCnt);}{}}catch(Throwable t){("""");close();}}}}catch(Throwable e){log("""",e);}}("""");}","d run(){if(g){(""""+n);}while(runin){try{if(p){(w);while(t()){s=(a)?k:0;if(e){((n)""""+h);}if(l){("""");}if(l()){("""");if(e){(h);}}try{if(k){(h);}if(k()&s){}if(0){(t);}}catch(e t){("""");}}}}catch(T e){g();}}("""");}",400,205,9,195,49.87212276214834,"['void', 'run', '(', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', ')', '{', '(', 'now', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', ':', '0', ';', 'if', '(', 'debugWakeup', ')', '{', '(', '""""', '+', '""""', '+', '(', 'now', ')', '""""', '+', '""""', '+', '""""', '+', 'ch', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'channel', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'sk', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'ch', ')', ';', '}', '}', 'try', '{', 'ready', '(', ')', ';', 'if', '(', 'sk', '(', ')', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '(', ')', '&', 'sk', '(', ')', ')', '{', 'sk', '(', ')', ';', '}', 'if', '(', 'sk', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', '0', ')', '{', '(', '""""', '+', '""""', '+', 'callbackCnt', ')', ';', '}', '{', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'close', '(', ')', ';', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '(', '""""', ',', 'e', ')', ';', '}', '}', '(', '""""', ')', ';', '}']","['d', 'run', '(', ')', '{', 'if', '(', 'g', ')', '{', '(', '""""', '+', 'n', ')', ';', '}', 'while', '(', 'runin', ')', '{', 'try', '{', 'if', '(', 'p', ')', '{', '(', 'w', ')', ';', 'while', '(', 't', '(', ')', ')', '{', 's', '=', '(', 'a', ')', '?', 'k', ':', '0', ';', 'if', '(', 'e', ')', '{', '(', '(', 'n', ')', '""""', '+', 'h', ')', ';', '}', 'if', '(', 'l', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'l', '(', ')', ')', '{', '(', '""""', ')', ';', 'if', '(', 'e', ')', '{', '(', 'h', ')', ';', '}', '}', 'try', '{', 'if', '(', 'k', ')', '{', '(', 'h', ')', ';', '}', 'if', '(', 'k', '(', ')', '&', 's', ')', '{', '}', 'if', '(', '0', ')', '{', '(', 't', ')', ';', '}', '}', 'catch', '(', 'e', 't', ')', '{', '(', '""""', ')', ';', '}', '}', '}', '}', 'catch', '(', 'T', 'e', ')', '{', 'g', '(', ')', ';', '}', '}', '(', '""""', ')', ';', '}']",216,161,6,55,26.190476190476197
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,init_1.txt,0.5901,1.2277,"{'n_total': 12189, 'n_valid': 2194, 'n_correct': 275}",6172.482751,"void init(finalContext context){setCanceledOnTouchOutside();mDialogView=(ClosableSlidingLayout)View();addView(View(),mDialogView);if(cancelOnSwipeDown)(new ClosableSlidingLayout(){onClosed(){}onOpened(){showFullItems();}});(new OnShowListener(){onShow(DialogInterface dialogInterface){if(showListener)(dialogInterface);startLayoutAnimation();if(icon=null)(View);{(icon);}}});location=newint[2];(location);if(Build){(0?mStatusBarHeight:0).getChildAt(mNavBarAvailable?(getContext())+mDialogView:0);(title);}(gridview);if(!grid){setNumColumns();}if(builder){for(;;i++){if(getMenu())("""");}}if(0)if(getMenu){clone();ActionMenuItem();add();(true);}new BaseAdapter(){getCount(){}getItem(int position){}getItemId(int position){}getViewTypeCount(){}isEnabled(int position){}areAllItemsEnabled(){}getView(View convertView){if(convertView){(Context);}for(i0;;i++){(valueAt()<position);}item();(getTitle());if(null)(collapseListIcons?View:View);{(View);}(item);} class ViewHolder{TextView title;}}; SimpleSectionedGridAdapter();setAdapter();(list); (new OnItemClickListener(){onItemClick(AdapterView<?> parent,View view,long id) {if(((MenuItem)(position))==more){(false);}if(((ActionMenuItem))){ if(null)(((MenuItem)(position)));}}});if(null){setOnDismissListener();}setListLayout(); }","i init(f cxt){w=(t)(V);if(n)(new u(){o(){}});(new r(){w(a i){if(c)f();{(o);}}});(o);if(d){(0?t:0).i(m?(g())+m:l);}(w);if(d){ts;}if(b){for(;;i++){if(g)("""");}}if(0)if(e){(e);}new Ber(){g(in n){}gd(t o){}d(n t){}a(e w){if(V){(t);}for(;;i++){(o);};(e());(coions?i:w);{(V);}(m);} class e{w e;}};(l);(new O(){tck(A<?>i) {if(((n))=e){(fa);}if(((nem))){ (((n)));}}});if(l){s;}sa;}",1273,372,10,901,71.33808392715756,"['void', 'init', '(', 'finalContext', 'context', ')', '{', 'setCanceledOnTouchOutside', '(', ')', ';', 'mDialogView', '=', '(', 'ClosableSlidingLayout', ')', 'View', '(', ')', ';', 'addView', '(', 'View', '(', ')', ',', 'mDialogView', ')', ';', 'if', '(', 'cancelOnSwipeDown', ')', '(', 'new', 'ClosableSlidingLayout', '(', ')', '{', 'onClosed', '(', ')', '{', '}', 'onOpened', '(', ')', '{', 'showFullItems', '(', ')', ';', '}', '}', ')', ';', '(', 'new', 'OnShowListener', '(', ')', '{', 'onShow', '(', 'DialogInterface', 'dialogInterface', ')', '{', 'if', '(', 'showListener', ')', '(', 'dialogInterface', ')', ';', 'startLayoutAnimation', '(', ')', ';', 'if', '(', 'icon', '=', 'null', ')', '(', 'View', ')', ';', '{', '(', 'icon', ')', ';', '}', '}', '}', ')', ';', 'location', '=', 'newint', '[', '2', ']', ';', '(', 'location', ')', ';', 'if', '(', 'Build', ')', '{', '(', '0', '?', 'mStatusBarHeight', ':', '0', ')', '.', 'getChildAt', '(', 'mNavBarAvailable', '?', '(', 'getContext', '(', ')', ')', '+', 'mDialogView', ':', '0', ')', ';', '(', 'title', ')', ';', '}', '(', 'gridview', ')', ';', 'if', '(', '!', 'grid', ')', '{', 'setNumColumns', '(', ')', ';', '}', 'if', '(', 'builder', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'getMenu', '(', ')', ')', '(', '""""', ')', ';', '}', '}', 'if', '(', '0', ')', 'if', '(', 'getMenu', ')', '{', 'clone', '(', ')', ';', 'ActionMenuItem', '(', ')', ';', 'add', '(', ')', ';', '(', 'true', ')', ';', '}', 'new', 'BaseAdapter', '(', ')', '{', 'getCount', '(', ')', '{', '}', 'getItem', '(', 'int', 'position', ')', '{', '}', 'getItemId', '(', 'int', 'position', ')', '{', '}', 'getViewTypeCount', '(', ')', '{', '}', 'isEnabled', '(', 'int', 'position', ')', '{', '}', 'areAllItemsEnabled', '(', ')', '{', '}', 'getView', '(', 'View', 'convertView', ')', '{', 'if', '(', 'convertView', ')', '{', '(', 'Context', ')', ';', '}', 'for', '(', 'i0', ';', ';', 'i', '++', ')', '{', '(', 'valueAt', '(', ')', '<', 'position', ')', ';', '}', 'item', '(', ')', ';', '(', 'getTitle', '(', ')', ')', ';', 'if', '(', 'null', ')', '(', 'collapseListIcons', '?', 'View', ':', 'View', ')', ';', '{', '(', 'View', ')', ';', '}', '(', 'item', ')', ';', '}', 'class', 'ViewHolder', '{', 'TextView', 'title', ';', '}', '}', ';', 'SimpleSectionedGridAdapter', '(', ')', ';', 'setAdapter', '(', ')', ';', '(', 'list', ')', ';', '(', 'new', 'OnItemClickListener', '(', ')', '{', 'onItemClick', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'long', 'id', ')', '{', 'if', '(', '(', '(', 'MenuItem', ')', '(', 'position', ')', ')', '==', 'more', ')', '{', '(', 'false', ')', ';', '}', 'if', '(', '(', '(', 'ActionMenuItem', ')', ')', ')', '{', 'if', '(', 'null', ')', '(', '(', '(', 'MenuItem', ')', '(', 'position', ')', ')', ')', ';', '}', '}', '}', ')', ';', 'if', '(', 'null', ')', '{', 'setOnDismissListener', '(', ')', ';', '}', 'setListLayout', '(', ')', ';', '}']","['i', 'init', '(', 'f', 'cxt', ')', '{', 'w', '=', '(', 't', ')', '(', 'V', ')', ';', 'if', '(', 'n', ')', '(', 'new', 'u', '(', ')', '{', 'o', '(', ')', '{', '}', '}', ')', ';', '(', 'new', 'r', '(', ')', '{', 'w', '(', 'a', 'i', ')', '{', 'if', '(', 'c', ')', 'f', '(', ')', ';', '{', '(', 'o', ')', ';', '}', '}', '}', ')', ';', '(', 'o', ')', ';', 'if', '(', 'd', ')', '{', '(', '0', '?', 't', ':', '0', ')', '.', 'i', '(', 'm', '?', '(', 'g', '(', ')', ')', '+', 'm', ':', 'l', ')', ';', '}', '(', 'w', ')', ';', 'if', '(', 'd', ')', '{', 'ts', ';', '}', 'if', '(', 'b', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'g', ')', '(', '""""', ')', ';', '}', '}', 'if', '(', '0', ')', 'if', '(', 'e', ')', '{', '(', 'e', ')', ';', '}', 'new', 'Ber', '(', ')', '{', 'g', '(', 'in', 'n', ')', '{', '}', 'gd', '(', 't', 'o', ')', '{', '}', 'd', '(', 'n', 't', ')', '{', '}', 'a', '(', 'e', 'w', ')', '{', 'if', '(', 'V', ')', '{', '(', 't', ')', ';', '}', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', 'o', ')', ';', '}', ';', '(', 'e', '(', ')', ')', ';', '(', 'coions', '?', 'i', ':', 'w', ')', ';', '{', '(', 'V', ')', ';', '}', '(', 'm', ')', ';', '}', 'class', 'e', '{', 'w', 'e', ';', '}', '}', ';', '(', 'l', ')', ';', '(', 'new', 'O', '(', ')', '{', 'tck', '(', 'A', '<', '?', '>', 'i', ')', '{', 'if', '(', '(', '(', 'n', ')', ')', '=', 'e', ')', '{', '(', 'fa', ')', ';', '}', 'if', '(', '(', '(', 'nem', ')', ')', ')', '{', '(', '(', '(', 'n', ')', ')', ')', ';', '}', '}', '}', ')', ';', 'if', '(', 'l', ')', '{', 's', ';', '}', 'sa', ';', '}']",423,304,6,119,28.53717026378897
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_5.txt,0.9944,0.0153,"{'n_total': 2262, 'n_valid': 178, 'n_correct': 67}",516.381355,"void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?"""":args[1];(("""")+"""");File(dir,"""");if(file()){File(dir,"""");}}(""""+"""");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});("""").setSoTimeout();try{("""");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)""""+cert).println(""""+toHexString());(cert).println(""""+toHexString());}("""");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){("""");}(""""+"""");}","d main(g[]rgs)throws i{if((2)){g(c[1]);p=(h)?"""":r[1];(("""")+"""");i(d,"""");if(e){e(d,"""");}}(""""+"""");(k);try{("""");}catch(n e){n();}if(n){}((m)).ge();for(;;){((i)).p(""""+g);}("""");try{k=(0)?0:(e);}catch(n e){("""");}("""");}",481,211,10,270,57.324840764331206,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '(', '2', ')', ')', '{', 'String', '=', 'args', '[', '0', ']', '.', 'split', '(', ')', '?', '3', ':', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'length', ')', '?', '""""', ':', 'args', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'File', '(', 'dir', ',', '""""', ')', ';', 'if', '(', 'file', '(', ')', ')', '{', 'File', '(', 'dir', ',', '""""', ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '(', 'ks', ')', ';', 'X', '=', '(', 'X', ')', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'tm', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', '}', ')', ';', '(', '""""', ')', '.', 'setSoTimeout', '(', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'println', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '(', '(', 'System', ')', ')', '.', 'getInstance', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', '""""', '+', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '(', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', 'length', '(', ')', '==', '0', ')', '?', '0', ':', '(', 'line', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'rgs', ')', 'throws', 'i', '{', 'if', '(', '(', '2', ')', ')', '{', 'g', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'h', ')', '?', '""""', ':', 'r', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'i', '(', 'd', ',', '""""', ')', ';', 'if', '(', 'e', ')', '{', 'e', '(', 'd', ',', '""""', ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '(', 'k', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', 'n', '(', ')', ';', '}', 'if', '(', 'n', ')', '{', '}', '(', '(', 'm', ')', ')', '.', 'ge', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', '.', 'p', '(', '""""', '+', 'g', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', '0', ')', '?', '0', ':', '(', 'e', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', ')', ';', '}']",237,167,6,70,30.303030303030305
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_4.txt,0.9999,0.0001,"{'n_total': 2054, 'n_valid': 133, 'n_correct': 94}",377.984665,"void main(String[]args)throws Exception{jsap(QuasiSuccinctEntityHash,"""",new Parameter[]{FlaggedOption("""",""""),FlaggedOption("""",'q',"""")});jsapResult((""""),(""""),(""""));((("""")));while((readLine())!=null){(parts[1]);(x);}surfaceForms=new Iterable<>(){<CharSequence>iterator(){new AbstractObjectIterator<>(){Iterator<StringAndCandidate>i();hasNext(){}};}};ShiftAddXorSignedStringMap()[size()];EliasFanoMonotoneLongBigList[size()];for(;;i++){new LongIterable(){{(iterator());}};((i));valuesA[i]=(lI);}("""");(quasiSuccinctEntityHash);(getString());("""");checkMap();}","d main(t[]args)throws n{j(S,"""",new P[]{F("""",""""),n("""","""")});t((""""),(""""),(""""));((("""")));while((e)){(s[1]);}s=new I(){<e>r(){new r(){<e>i(){}};}}[e()];for(;;){new e(){{(i);}};((i));a[i]=(I);}(g);("""");}",554,198,10,356,65.44117647058823,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'jsap', '(', 'QuasiSuccinctEntityHash', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'FlaggedOption', '(', '""""', ',', '""""', ')', ',', 'FlaggedOption', '(', '""""', ',', ""'q'"", ',', '""""', ')', '}', ')', ';', 'jsapResult', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', '(', 'parts', '[', '1', ']', ')', ';', '(', 'x', ')', ';', '}', 'surfaceForms', '=', 'new', 'Iterable', '<', '>', '(', ')', '{', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'new', 'AbstractObjectIterator', '<', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '(', ')', ';', 'hasNext', '(', ')', '{', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', '(', ')', '[', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', 'size', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'new', 'LongIterable', '(', ')', '{', '{', '(', 'iterator', '(', ')', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', '(', 'lI', ')', ';', '}', '(', '""""', ')', ';', '(', 'quasiSuccinctEntityHash', ')', ';', '(', 'getString', '(', ')', ')', ';', '(', '""""', ')', ';', 'checkMap', '(', ')', ';', '}']","['d', 'main', '(', 't', '[', ']', 'args', ')', 'throws', 'n', '{', 'j', '(', 'S', ',', '""""', ',', 'new', 'P', '[', ']', '{', 'F', '(', '""""', ',', '""""', ')', ',', 'n', '(', '""""', ',', '""""', ')', '}', ')', ';', 't', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'e', ')', ')', '{', '(', 's', '[', '1', ']', ')', ';', '}', 's', '=', 'new', 'I', '(', ')', '{', '<', 'e', '>', 'r', '(', ')', '{', 'new', 'r', '(', ')', '{', '<', 'e', '>', 'i', '(', ')', '{', '}', '}', ';', '}', '}', '[', 'e', '(', ')', ']', ';', 'for', '(', ';', ';', ')', '{', 'new', 'e', '(', ')', '{', '{', '(', 'i', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'a', '[', 'i', ']', '=', '(', 'I', ')', ';', '}', '(', 'g', ')', ';', '(', '""""', ')', ';', '}']",205,157,6,48,24.12060301507537
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_1.txt,0.9996,0.0006,"{'n_total': 3326, 'n_valid': 133, 'n_correct': 107}",389.32572,"void run()throws IOException{if(isReady()){(getClass().getName()+"""");}if((0)|(("""")>0)|((""""+separator)>0)){(getName()+""""+"""");}if(0){cmdAndArgs();}cmdAndArgs();try{rt((String[cmdAndArgs()]),wd);("""");if("""".equals){(proc());}((proc()));errReaderThread=new Thread(){run(){}};((cgiHeaderStream));while(isRunning){try{while(((line())!=null)&("""".equals)){if(2){(""""+"""");}if(("""")){(getSCFromHttpStatusLine);}if(("""")>0){line(0,("""")).substring(indexOf()+1);if(("""")){((value));(value);}(""""+"""");}}try{while(((bBuf))){if(4){("""");}write();}}finally{if(1){while(((bBuf))){}}}}catch(IllegalThreadStateException e){try{(0);}catch(InterruptedException ignored){}}}}catch(IOException e){(""""+e);}{if(cgiHeaderReader){try{close();}catch(IOException ioe){(""""+ioe);}}if(null){try{}catch(IOException ioe){}catch(InterruptedException e){("""");}}if(4){("""");}if(null){}}}","d run()throws n{if(i()){(e()+"""");}((0)|(("""")>0)|((""""+r)>0));try{((g[s()]));("""");if("""".s){(c);}d=new d(){n(){}};((m));while(ig){try{while(((e())!=s)){if(2){("""");}if(("""")){(1);if(("""")){(e);}("""");}}try{while(((b))){if(4){("""");}}}finally{if(1){while(((f))){}}}}catch(n e){try{(0);}catch(n d){}}}}catch(n e){if(r){try{e();}catch(n e){(e);}}if(l){try{}catch(n i){}catch(r e){("""");}}if(4){("""");}if(l){}}}",841,397,9,444,53.36538461538461,"['void', 'run', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'isReady', '(', ')', ')', '{', '(', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""""', ')', ';', '}', 'if', '(', '(', '0', ')', '|', '(', '(', '""""', ')', '>', '0', ')', '|', '(', '(', '""""', '+', 'separator', ')', '>', '0', ')', ')', '{', '(', 'getName', '(', ')', '+', '""""', '+', '""""', ')', ';', '}', 'if', '(', '0', ')', '{', 'cmdAndArgs', '(', ')', ';', '}', 'cmdAndArgs', '(', ')', ';', 'try', '{', 'rt', '(', '(', 'String', '[', 'cmdAndArgs', '(', ')', ']', ')', ',', 'wd', ')', ';', '(', '""""', ')', ';', 'if', '(', '""""', '.', 'equals', ')', '{', '(', 'proc', '(', ')', ')', ';', '}', '(', '(', 'proc', '(', ')', ')', ')', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ';', '(', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'while', '(', '(', '(', 'line', '(', ')', ')', '!=', 'null', ')', '&', '(', '""""', '.', 'equals', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'getSCFromHttpStatusLine', ')', ';', '}', 'if', '(', '(', '""""', ')', '>', '0', ')', '{', 'line', '(', '0', ',', '(', '""""', ')', ')', '.', 'substring', '(', 'indexOf', '(', ')', '+', '1', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', '(', 'value', ')', ')', ';', '(', 'value', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'write', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '{', 'if', '(', 'cgiHeaderReader', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', '""""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '}', '}']","['d', 'run', '(', ')', 'throws', 'n', '{', 'if', '(', 'i', '(', ')', ')', '{', '(', 'e', '(', ')', '+', '""""', ')', ';', '}', '(', '(', '0', ')', '|', '(', '(', '""""', ')', '>', '0', ')', '|', '(', '(', '""""', '+', 'r', ')', '>', '0', ')', ')', ';', 'try', '{', '(', '(', 'g', '[', 's', '(', ')', ']', ')', ')', ';', '(', '""""', ')', ';', 'if', '(', '""""', '.', 's', ')', '{', '(', 'c', ')', ';', '}', 'd', '=', 'new', 'd', '(', ')', '{', 'n', '(', ')', '{', '}', '}', ';', '(', '(', 'm', ')', ')', ';', 'while', '(', 'ig', ')', '{', 'try', '{', 'while', '(', '(', '(', 'e', '(', ')', ')', '!=', 's', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '1', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', 'e', ')', ';', '}', '(', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'b', ')', ')', ')', '{', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'f', ')', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'n', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'n', 'd', ')', '{', '}', '}', '}', '}', 'catch', '(', 'n', 'e', ')', '{', 'if', '(', 'r', ')', '{', 'try', '{', 'e', '(', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', ')', ';', '}', '}', 'if', '(', 'l', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'i', ')', '{', '}', 'catch', '(', 'r', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'l', ')', '{', '}', '}', '}']",397,296,6,101,25.83120204603581
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,init_4.txt,0.9999,0.0001,"{'n_total': 834, 'n_valid': 85, 'n_correct': 49}",238.349147,"void init(Object arg){if(1instanceof TypeId){}{}switch(getNodeType()){case NODE:{((Integer));}{((Short));}{((Long));(idx);}if(valueInP){((Double));}if(valueInP){setValue();}assert""""+getNodeType;}setType((null)?typeId:booleanValue(),maxwidth);}",d init(t a){if(1instanceof d)switch(e()){case E:{((r));((t));(x);}if(n){((e));}if(valueInP){}}((null)?t:h);},243,108,10,135,57.93991416309014,"['void', 'init', '(', 'Object', 'arg', ')', '{', 'if', '(', '1', 'instanceof', 'TypeId', ')', '{', '}', '{', '}', 'switch', '(', 'getNodeType', '(', ')', ')', '{', 'case', 'NODE', ':', '{', '(', '(', 'Integer', ')', ')', ';', '}', '{', '(', '(', 'Short', ')', ')', ';', '}', '{', '(', '(', 'Long', ')', ')', ';', '(', 'idx', ')', ';', '}', 'if', '(', 'valueInP', ')', '{', '(', '(', 'Double', ')', ')', ';', '}', 'if', '(', 'valueInP', ')', '{', 'setValue', '(', ')', ';', '}', 'assert', '""""', '+', 'getNodeType', ';', '}', 'setType', '(', '(', 'null', ')', '?', 'typeId', ':', 'booleanValue', '(', ')', ',', 'maxwidth', ')', ';', '}']","['d', 'init', '(', 't', 'a', ')', '{', 'if', '(', '1', 'instanceof', 'd', ')', 'switch', '(', 'e', '(', ')', ')', '{', 'case', 'E', ':', '{', '(', '(', 'r', ')', ')', ';', '(', '(', 't', ')', ')', ';', '(', 'x', ')', ';', '}', 'if', '(', 'n', ')', '{', '(', '(', 'e', ')', ')', ';', '}', 'if', '(', 'valueInP', ')', '{', '}', '}', '(', '(', 'null', ')', '?', 't', ':', 'h', ')', ';', '}']",99,71,6,28,30.107526881720432
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_12.txt,0.9996,0.0005,"{'n_total': 1365, 'n_valid': 99, 'n_correct': 64}",280.111439,"void main(String[]argv){for(;;optind++){if(("""")){srcURL[optind][optind];}if(("""")){}if(("""")){}if((""""))if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(argv[optind].equals(""""))if(argv[optind].equals("""")){optind++;}if(argv[optind]){(1);}{}}try{if(srcURL){(1);}(srcURL);if(null){{("""");(1);}}if(dstURLName){}(dstURLName);if(clear()){if((true)){("""");}}copy();}catch(MessagingException mex){(getMessage());printStackTrace();}}","d main(tring[]argv){for(;;d++){if(("""")){L[d];}if(("""")){}if(("""")){}if((""""))if(v[d].e("""")){}if(v[d].e("""")){}if(a[o]){(1);}}try{(L);if(l){{("""");(1);}}if(r){if((e)){("""");}}}catch(e m){(e());p();}}",431,192,10,239,56.76959619952494,"['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'srcURL', '[', 'optind', ']', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', ')', '{', '(', '1', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'srcURL', ')', '{', '(', '1', ')', ';', '}', '(', 'srcURL', ')', ';', 'if', '(', 'null', ')', '{', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', '}', 'if', '(', 'dstURLName', ')', '{', '}', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '(', ')', ')', '{', 'if', '(', '(', 'true', ')', ')', '{', '(', '""""', ')', ';', '}', '}', 'copy', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '(', 'getMessage', '(', ')', ')', ';', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'main', '(', 'tring', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'd', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'L', '[', 'd', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', 'if', '(', 'v', '[', 'd', ']', '.', 'e', '(', '""""', ')', ')', '{', '}', 'if', '(', 'v', '[', 'd', ']', '.', 'e', '(', '""""', ')', ')', '{', '}', 'if', '(', 'a', '[', 'o', ']', ')', '{', '(', '1', ')', ';', '}', '}', 'try', '{', '(', 'L', ')', ';', 'if', '(', 'l', ')', '{', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', '}', 'if', '(', 'r', ')', '{', 'if', '(', '(', 'e', ')', ')', '{', '(', '""""', ')', ';', '}', '}', '}', 'catch', '(', 'e', 'm', ')', '{', '(', 'e', '(', ')', ')', ';', 'p', '(', ')', ';', '}', '}']",213,153,6,60,28.98550724637681
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_13.txt,1.0,0.0,"{'n_total': 1619, 'n_valid': 213, 'n_correct': 79}",586.122316,"void main(String[]argv){for(;;optind++){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){host[optind];}if(argv[optind].equals("""")){user[optind];}if(argv[optind].equals("""")){password[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){optind++;}if(argv[optind].startsWith("""")){("""").exit();}{}}try{if(optind)(argv[optind]).getInstance();if(null){urln();if(protocol)if(host)(host);}{("""").exit();}(mbox);if(exists()){println();(1);}(UIDFolder);{("""");}if(verbose){(""""+totalMessages);(FLAGS);("""");(msgs);for(;;){("""");}}{if(m)println();}}catch(Exception ex){(""""+getMessage());}}","d main(g[]v){for(;;){if(v[opti].s("""")){r[optind];}if(("""")){}if(arv[o].l("""")){e[o];}if(l){}if(arv){("""").t();}}try{if(p){(1);("""");}if(e){(""""+s);}}catch(E x){(g);}}",694,161,10,533,77.92397660818715,"['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'host', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'user', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'password', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', ']', ')', '.', 'getInstance', '(', ')', ';', 'if', '(', 'null', ')', '{', 'urln', '(', ')', ';', 'if', '(', 'protocol', ')', 'if', '(', 'host', ')', '(', 'host', ')', ';', '}', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '(', 'mbox', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'println', '(', ')', ';', '(', '1', ')', ';', '}', '(', 'UIDFolder', ')', ';', '{', '(', '""""', ')', ';', '}', 'if', '(', 'verbose', ')', '{', '(', '""""', '+', 'totalMessages', ')', ';', '(', 'FLAGS', ')', ';', '(', '""""', ')', ';', '(', 'msgs', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'if', '(', 'm', ')', 'println', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'v', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', 'v', '[', 'opti', ']', '.', 's', '(', '""""', ')', ')', '{', 'r', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'arv', '[', 'o', ']', '.', 'l', '(', '""""', ')', ')', '{', 'e', '[', 'o', ']', ';', '}', 'if', '(', 'l', ')', '{', '}', 'if', '(', 'arv', ')', '{', '(', '""""', ')', '.', 't', '(', ')', ';', '}', '}', 'try', '{', 'if', '(', 'p', ')', '{', '(', '1', ')', ';', '(', '""""', ')', ';', '}', 'if', '(', 'e', ')', '{', '(', '""""', '+', 's', ')', ';', '}', '}', 'catch', '(', 'E', 'x', ')', '{', '(', 'g', ')', ';', '}', '}']",328,123,6,205,63.66459627329193
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_4.txt,0.9999,0.0001,"{'n_total': 543, 'n_valid': 77, 'n_correct': 37}",205.962027,"void run(){getHeight();switch(mMode){case _:{if(0){}if(mLastSeenPos){(this);}extraScroll=lastPos?mExtraScroll:mExtraScroll;if(mBoundPos){smoothScrollBy((0),mScrollDuration);}if(mBoundPos){if(bottom){((lastViewBottom));}}}}}",d run(){t();switch(m){case _:{(s);if(s){smoothScrollBy(n);}if(m){if(m){((l));}}}}},223,82,9,141,65.88785046728972,"['void', 'run', '(', ')', '{', 'getHeight', '(', ')', ';', 'switch', '(', 'mMode', ')', '{', 'case', '_', ':', '{', 'if', '(', '0', ')', '{', '}', 'if', '(', 'mLastSeenPos', ')', '{', '(', 'this', ')', ';', '}', 'extraScroll', '=', 'lastPos', '?', 'mExtraScroll', ':', 'mExtraScroll', ';', 'if', '(', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', '(', '0', ')', ',', 'mScrollDuration', ')', ';', '}', 'if', '(', 'mBoundPos', ')', '{', 'if', '(', 'bottom', ')', '{', '(', '(', 'lastViewBottom', ')', ')', ';', '}', '}', '}', '}', '}']","['d', 'run', '(', ')', '{', 't', '(', ')', ';', 'switch', '(', 'm', ')', '{', 'case', '_', ':', '{', '(', 's', ')', ';', 'if', '(', 's', ')', '{', 'smoothScrollBy', '(', 'n', ')', ';', '}', 'if', '(', 'm', ')', '{', 'if', '(', 'm', ')', '{', '(', '(', 'l', ')', ')', ';', '}', '}', '}', '}', '}']",78,54,6,24,33.33333333333333
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_6.txt,0.823,0.3553,"{'n_total': 1834, 'n_valid': 165, 'n_correct': 91}",462.539119,"void run(){Integer[1];try{(inconnection);}catch(IOException e){debug("""",e);(remotePort);closeSockets();}{if(debug){message(""""+""""+"""",ex);}}if(toProxySocket){}try{out=""""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("""");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"""");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("""")){("""");}try{}catch(IOException ioe){error("""",ioe);}RWGroupJSSProxy();}","d run(){try{(n);}catch(n e){(e);(t);}{if(g){a(""""+""""+"""",x);}}if(ck){}try{o=""""+(g);try{s();}catch(n go){}while(n){if(i){("""");}if('r'){if(h){}}}}catch(I e){t(0,"""");}catch(n d){r(0,n);}if(("""")){}try{}catch(I e){(e);}}",478,213,9,265,56.50319829424307,"['void', 'run', '(', ')', '{', 'Integer', '[', '1', ']', ';', 'try', '{', '(', 'inconnection', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '(', '""""', ',', 'e', ')', ';', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', '}', '{', 'if', '(', 'debug', ')', '{', 'message', '(', '""""', '+', '""""', '+', '""""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', ')', '{', '}', 'try', '{', 'out', '=', '""""', '+', '(', 'msg', ')', ';', 'try', '{', 'getBytes', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', '}', '(', 'b', ')', ';', 'while', '(', 'newlinesSeen', ')', '{', 'i', '(', ')', ';', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'length', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '(', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'error', '(', '""""', ',', 'ioe', ')', ';', '}', 'RWGroupJSSProxy', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'try', '{', '(', 'n', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', ')', ';', '(', 't', ')', ';', '}', '{', 'if', '(', 'g', ')', '{', 'a', '(', '""""', '+', '""""', '+', '""""', ',', 'x', ')', ';', '}', '}', 'if', '(', 'ck', ')', '{', '}', 'try', '{', 'o', '=', '""""', '+', '(', 'g', ')', ';', 'try', '{', 's', '(', ')', ';', '}', 'catch', '(', 'n', 'go', ')', '{', '}', 'while', '(', 'n', ')', '{', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'h', ')', '{', '}', '}', '}', '}', 'catch', '(', 'I', 'e', ')', '{', 't', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'n', 'd', ')', '{', 'r', '(', '0', ',', 'n', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'try', '{', '}', 'catch', '(', 'I', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",187,156,6,31,17.12707182320442
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,execute_2.txt,0.5527,1.1355,"{'n_total': 2930, 'n_valid': 313, 'n_correct': 100}",880.710016,"void execute(String command,InputStream istream,String contentType,int contentLength)throws BuildException{try{(false);(false);if(istream){setDoOutput();if(contentLength){("""");}}{(false);("""");}("""").encodeBase((StandardCharsets));setRequestProperty();if(null){(4);newbyte[4];while(true){(buffer);if(0){}(n);}flush();}(CHARSET);while(true){if(0){}if(('r')){if(buff){line();(0);if(first){if(("""")){}}handleOutput();}}{((char)ch);}}if(null){}}catch(Exception e){if(isFailOnError){(e);}}{if(null){try{}catch(IOException ioe){}}if(null){try{close();}catch(IOException ioe){}}}}","d execute(g d,t t)throws BuildException{try{(e);if(m){if(h){("""");}(f);("""");}("""").a((h));if(l){(4);while(u){(b);if(0)(n);}}(T);while(e){if(0){if(b){(0);if(t){if(("""")){}}n();}}{((c));}}if(l){}}catch(E e){if(or){(e);}}{if(n){try{}catch(E e){}}if(l){try{l();}catch(I i){}}}}",570,270,13,300,53.85996409335727,"['void', 'execute', '(', 'String', 'command', ',', 'InputStream', 'istream', ',', 'String', 'contentType', ',', 'int', 'contentLength', ')', 'throws', 'BuildException', '{', 'try', '{', '(', 'false', ')', ';', '(', 'false', ')', ';', 'if', '(', 'istream', ')', '{', 'setDoOutput', '(', ')', ';', 'if', '(', 'contentLength', ')', '{', '(', '""""', ')', ';', '}', '}', '{', '(', 'false', ')', ';', '(', '""""', ')', ';', '}', '(', '""""', ')', '.', 'encodeBase', '(', '(', 'StandardCharsets', ')', ')', ';', 'setRequestProperty', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', '4', ')', ';', 'newbyte', '[', '4', ']', ';', 'while', '(', 'true', ')', '{', '(', 'buffer', ')', ';', 'if', '(', '0', ')', '{', '}', '(', 'n', ')', ';', '}', 'flush', '(', ')', ';', '}', '(', 'CHARSET', ')', ';', 'while', '(', 'true', ')', '{', 'if', '(', '0', ')', '{', '}', 'if', '(', '(', ""'r'"", ')', ')', '{', 'if', '(', 'buff', ')', '{', 'line', '(', ')', ';', '(', '0', ')', ';', 'if', '(', 'first', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', 'handleOutput', '(', ')', ';', '}', '}', '{', '(', '(', 'char', ')', 'ch', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'isFailOnError', ')', '{', '(', 'e', ')', ';', '}', '}', '{', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}', '}']","['d', 'execute', '(', 'g', 'd', ',', 't', 't', ')', 'throws', 'BuildException', '{', 'try', '{', '(', 'e', ')', ';', 'if', '(', 'm', ')', '{', 'if', '(', 'h', ')', '{', '(', '""""', ')', ';', '}', '(', 'f', ')', ';', '(', '""""', ')', ';', '}', '(', '""""', ')', '.', 'a', '(', '(', 'h', ')', ')', ';', 'if', '(', 'l', ')', '{', '(', '4', ')', ';', 'while', '(', 'u', ')', '{', '(', 'b', ')', ';', 'if', '(', '0', ')', '(', 'n', ')', ';', '}', '}', '(', 'T', ')', ';', 'while', '(', 'e', ')', '{', 'if', '(', '0', ')', '{', 'if', '(', 'b', ')', '{', '(', '0', ')', ';', 'if', '(', 't', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', 'n', '(', ')', ';', '}', '}', '{', '(', '(', 'c', ')', ')', ';', '}', '}', 'if', '(', 'l', ')', '{', '}', '}', 'catch', '(', 'E', 'e', ')', '{', 'if', '(', 'or', ')', '{', '(', 'e', ')', ';', '}', '}', '{', 'if', '(', 'n', ')', '{', 'try', '{', '}', 'catch', '(', 'E', 'e', ')', '{', '}', '}', 'if', '(', 'l', ')', '{', 'try', '{', 'l', '(', ')', ';', '}', 'catch', '(', 'I', 'i', ')', '{', '}', '}', '}', '}']",240,196,6,44,18.803418803418804
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_3.txt,1.0,0.0001,"{'n_total': 2875, 'n_valid': 228, 'n_correct': 113}",653.081104,"void main(String[]args){jsap(Word(),"""",new Parameter[]{UnflaggedOption(""""._,""""),(""""),Switch("""","""")});try(BufferedReader lines=(FileReader())){(header[0]).start("""");indexToWord=new ArrayList<>();for(;;){}pl();("""");for(;;){pl();("""");for(;;){entry[col]=(entry);}}done();}golombModuli[vectorSize];for(;;){if(numWords){f=((double)numWords)/columnAbsSum[col];m=(int)((2)-(f));}golombModuli[col];}((TransformationStrategies)build());permutation[numWords];for(;;){}FastByteArrayOutputStream();obs=(oa)("""");for(;;){(writtenBits());permutation[i];for(;;){entries[col].writeGolomb((entry)[col]);}}while(0){(0);}array("""",length);VecCompress();if(null){(word);}if(("""")){for(;;){((i));for(;;){expected[i];got[col];if(got){error("""",got);(1);}}}done();}}","d main(g[]rgs){jp("""",new P[]{(""""),("""")});try(r s=(r())){(r[0]).new t<>();for(;;){}("""");for(;;){("""");for(;;){n[l]=(n);}}ne;}i[e];for(;;){if(ds){f=((d)ds)/c[c];(in-(f));}i[ol];}((s)b);p=(a)("""");for(;;){(ts());on[i];for(;;){e();}}wy();if(nl){(w);}if(("""")){for(;;){((i));for(;;){ex[c];if(g){(1);}}};}}",738,297,10,441,60.57692307692307,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'jsap', '(', 'Word', '(', ')', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'UnflaggedOption', '(', '""""', '.', '_', ',', '""""', ')', ',', '(', '""""', ')', ',', 'Switch', '(', '""""', ',', '""""', ')', '}', ')', ';', 'try', '(', 'BufferedReader', 'lines', '=', '(', 'FileReader', '(', ')', ')', ')', '{', '(', 'header', '[', '0', ']', ')', '.', 'start', '(', '""""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'entry', '[', 'col', ']', '=', '(', 'entry', ')', ';', '}', '}', 'done', '(', ')', ';', '}', 'golombModuli', '[', 'vectorSize', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 'numWords', ')', '{', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', '(', '(', '2', ')', '-', '(', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', ';', '}', '(', '(', 'TransformationStrategies', ')', 'build', '(', ')', ')', ';', 'permutation', '[', 'numWords', ']', ';', 'for', '(', ';', ';', ')', '{', '}', 'FastByteArrayOutputStream', '(', ')', ';', 'obs', '=', '(', 'oa', ')', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', '(', 'writtenBits', '(', ')', ')', ';', 'permutation', '[', 'i', ']', ';', 'for', '(', ';', ';', ')', '{', 'entries', '[', 'col', ']', '.', 'writeGolomb', '(', '(', 'entry', ')', '[', 'col', ']', ')', ';', '}', '}', 'while', '(', '0', ')', '{', '(', '0', ')', ';', '}', 'array', '(', '""""', ',', 'length', ')', ';', 'VecCompress', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', 'word', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'expected', '[', 'i', ']', ';', 'got', '[', 'col', ']', ';', 'if', '(', 'got', ')', '{', 'error', '(', '""""', ',', 'got', ')', ';', '(', '1', ')', ';', '}', '}', '}', 'done', '(', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'rgs', ')', '{', 'jp', '(', '""""', ',', 'new', 'P', '[', ']', '{', '(', '""""', ')', ',', '(', '""""', ')', '}', ')', ';', 'try', '(', 'r', 's', '=', '(', 'r', '(', ')', ')', ')', '{', '(', 'r', '[', '0', ']', ')', '.', 'new', 't', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'n', '[', 'l', ']', '=', '(', 'n', ')', ';', '}', '}', 'ne', ';', '}', 'i', '[', 'e', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 'ds', ')', '{', 'f', '=', '(', '(', 'd', ')', 'ds', ')', '/', 'c', '[', 'c', ']', ';', '(', 'in', '-', '(', 'f', ')', ')', ';', '}', 'i', '[', 'ol', ']', ';', '}', '(', '(', 's', ')', 'b', ')', ';', 'p', '=', '(', 'a', ')', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', '(', 'ts', '(', ')', ')', ';', 'on', '[', 'i', ']', ';', 'for', '(', ';', ';', ')', '{', 'e', '(', ')', ';', '}', '}', 'wy', '(', ')', ';', 'if', '(', 'nl', ')', '{', '(', 'w', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'ex', '[', 'c', ']', ';', 'if', '(', 'g', ')', '{', '(', '1', ')', ';', '}', '}', '}', ';', '}', '}']",345,244,6,101,29.793510324483773
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_7.txt,0.9984,0.0017,"{'n_total': 1357, 'n_valid': 75, 'n_correct': 70}",211.594089,"void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}Command();}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("""");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}","d run(){(G);try{while(e){if(d){{try{try{}catch(n e){if(0){}}(v);}catch(n e){(o);}}(e);if((t)){}}try{if(i){switch(c){case C:(l);if(s)d();}}if(e){}}catch(n e){(e()).$$("""");}if(ev){if(c){}}}}catch(e e){(e).$();}}",549,209,9,340,62.96296296296296,"['void', 'run', '(', ')', '{', '(', 'RUNNING', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', 'connected', ')', '{', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'AuthenticationConfigException', 'e', ')', '{', 'close', '(', ')', ';', '(', 'JournalClientEvents', ')', ';', '}', '}', '(', 'true', ')', ';', 'if', '(', '(', 'retryCount', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'isRunning', ')', '{', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', ':', '(', 'channel', ')', ';', '(', 'statsChannel', ')', ';', '(', '0', ')', ';', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', '}', 'Command', '(', ')', ';', '}', '}', 'if', '(', 'event', ')', '{', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', '(', 'e', '(', ')', ')', '.', '$', '(', ')', '.', '$', '(', '""""', ')', ';', '}', 'if', '(', 'event', ')', '{', 'if', '(', 'channel', '(', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', '(', 'G', ')', ';', 'try', '{', 'while', '(', 'e', ')', '{', 'if', '(', 'd', ')', '{', '{', 'try', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 'v', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'o', ')', ';', '}', '}', '(', 'e', ')', ';', 'if', '(', '(', 't', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'i', ')', '{', 'switch', '(', 'c', ')', '{', 'case', 'C', ':', '(', 'l', ')', ';', 'if', '(', 's', ')', 'd', '(', ')', ';', '}', '}', 'if', '(', 'e', ')', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', '(', ')', ')', '.', '$$', '(', '""""', ')', ';', '}', 'if', '(', 'ev', ')', '{', 'if', '(', 'c', ')', '{', '}', '}', '}', '}', 'catch', '(', 'e', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']",195,154,6,41,21.693121693121693
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_9.txt,0.9451,0.0719,"{'n_total': 3849, 'n_valid': 457, 'n_correct': 161}",1284.737252,"void run(){(ACTION);try{getPath();for(String path:paths){(TestHandler);}}catch(Exception e){}("""");for(;;i++){("""");}visualUpdate(_,"""");result();visualUpdate(DISPLAY,"""");visualUpdate(TestHandler,"""");visualUpdate(DISPLAY,"""");("""");("""");visualUpdate(PDISPLAY,"""");("""");try{new Command(){commandOutput(int id,String line){("""");}}.add();}catch(Exception e){}("""");try{(true);new Command(0,""""){Override(int id,String line){("""");(id);}}.add();}catch(Exception e){}("""");("""");try{shell();Command=new Command(){commandOutput(int id,String line){(id);}}.add();}catch(Exception e){}try{shell=new Command(""""){_(int id,String line){if(_){("""");}commandOutput();}commandTerminated(int id,String reason){synchronized(com){visualUpdate(PDISPLAY,"""");(TestHandler);try{}catch(IOException e){printStackTrace();}}}commandCompleted(int id,int exitCode){synchronized(com){visualUpdate(PDISPLAY,"""");(TestHandler);try{}catch(IOException e){printStackTrace();}}}};}catch(Exception e){printStackTrace();}}","d run(){(N);try{for(g h:p){(n);}}catch(n e){}("""");for(;;i){}e(Y,"""");try{new C(){t(i e){("""");}};}catch(x e){}("""");try{new d(){v(i e){("""");(d);}}.a;}catch(n e){}("""");try{hel();d=new C(){t(g e){(d);}}.d=new o(""""){_(in i,t li){t();}m(i a){synchronized(m){ae(IS);try{}catch(o e){e();}}}ted(t ede){synchronized(m){at(P,"""");(e);try{}catch(n e){i();}}}};}catch(E e){e();}}",973,364,9,609,63.17427385892116,"['void', 'run', '(', ')', '{', '(', 'ACTION', ')', ';', 'try', '{', 'getPath', '(', ')', ';', 'for', '(', 'String', 'path', ':', 'paths', ')', '{', '(', 'TestHandler', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', '""""', ')', ';', '}', 'visualUpdate', '(', '_', ',', '""""', ')', ';', 'result', '(', ')', ';', 'visualUpdate', '(', 'DISPLAY', ',', '""""', ')', ';', 'visualUpdate', '(', 'TestHandler', ',', '""""', ')', ';', 'visualUpdate', '(', 'DISPLAY', ',', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', '""""', ')', ';', 'try', '{', 'new', 'Command', '(', ')', '{', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', '""""', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', 'try', '{', '(', 'true', ')', ';', 'new', 'Command', '(', '0', ',', '""""', ')', '{', 'Override', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', '""""', ')', ';', '(', 'id', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '""""', ')', ';', '(', '""""', ')', ';', 'try', '{', 'shell', '(', ')', ';', 'Command', '=', 'new', 'Command', '(', ')', '{', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', '(', 'id', ')', ';', '}', '}', '.', 'add', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'try', '{', 'shell', '=', 'new', 'Command', '(', '""""', ')', '{', '_', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'if', '(', '_', ')', '{', '(', '""""', ')', ';', '}', 'commandOutput', '(', ')', ';', '}', 'commandTerminated', '(', 'int', 'id', ',', 'String', 'reason', ')', '{', 'synchronized', '(', 'com', ')', '{', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', 'TestHandler', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}', '}', 'commandCompleted', '(', 'int', 'id', ',', 'int', 'exitCode', ')', '{', 'synchronized', '(', 'com', ')', '{', 'visualUpdate', '(', 'PDISPLAY', ',', '""""', ')', ';', '(', 'TestHandler', ')', ';', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', '(', 'N', ')', ';', 'try', '{', 'for', '(', 'g', 'h', ':', 'p', ')', '{', '(', 'n', ')', ';', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '(', '""""', ')', ';', 'for', '(', ';', ';', 'i', ')', '{', '}', 'e', '(', 'Y', ',', '""""', ')', ';', 'try', '{', 'new', 'C', '(', ')', '{', 't', '(', 'i', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', ';', '}', 'catch', '(', 'x', 'e', ')', '{', '}', '(', '""""', ')', ';', 'try', '{', 'new', 'd', '(', ')', '{', 'v', '(', 'i', 'e', ')', '{', '(', '""""', ')', ';', '(', 'd', ')', ';', '}', '}', '.', 'a', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '(', '""""', ')', ';', 'try', '{', 'hel', '(', ')', ';', 'd', '=', 'new', 'C', '(', ')', '{', 't', '(', 'g', 'e', ')', '{', '(', 'd', ')', ';', '}', '}', '.', 'd', '=', 'new', 'o', '(', '""""', ')', '{', '_', '(', 'in', 'i', ',', 't', 'li', ')', '{', 't', '(', ')', ';', '}', 'm', '(', 'i', 'a', ')', '{', 'synchronized', '(', 'm', ')', '{', 'ae', '(', 'IS', ')', ';', 'try', '{', '}', 'catch', '(', 'o', 'e', ')', '{', 'e', '(', ')', ';', '}', '}', '}', 'ted', '(', 't', 'ede', ')', '{', 'synchronized', '(', 'm', ')', '{', 'at', '(', 'P', ',', '""""', ')', ';', '(', 'e', ')', ';', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', 'i', '(', ')', ';', '}', '}', '}', '}', ';', '}', 'catch', '(', 'E', 'e', ')', '{', 'e', '(', ')', ';', '}', '}']",369,254,6,115,31.68044077134986
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_8.txt,0.9845,0.0303,"{'n_total': 1972, 'n_valid': 90, 'n_correct': 84}",259.073119,"void run(){("""");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){}}newbyte[1];reply[6];while(stop){try{client();try{(remoteport);}catch(IOException e){(""""+"""");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}","d run(){("""");try{try{if(s()){}}catch(d b){try{d();}catch(I i){}if(s){}}y[6];while(so){try{t();try{(t);}catch(n e){("""");}(()->{try{while((b)){{try{}catch(n e){}}(t);}}catch(n e){}}).d;try{while((b)){try{}catch(n e){}(d);}}catch(n e){}}catch(n e){try{if(e){}}catch(I e){}}}}catch(I e){}}",577,285,9,292,51.40845070422535,"['void', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'newbyte', '[', '1', ']', ';', 'reply', '[', '6', ']', ';', 'while', '(', 'stop', ')', '{', 'try', '{', 'client', '(', ')', ';', 'try', '{', '(', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'fromServer', '(', ')', ';', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '(', 'request', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', 'bytesRead', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'try', '{', 'if', '(', 'server', ')', '{', 'close', '(', ')', ';', '}', 'if', '(', 'client', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 's', '(', ')', ')', '{', '}', '}', 'catch', '(', 'd', 'b', ')', '{', 'try', '{', 'd', '(', ')', ';', '}', 'catch', '(', 'I', 'i', ')', '{', '}', 'if', '(', 's', ')', '{', '}', '}', 'y', '[', '6', ']', ';', 'while', '(', 'so', ')', '{', 'try', '{', 't', '(', ')', ';', 'try', '{', '(', 't', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'b', ')', ')', '{', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', '(', 't', ')', ';', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', ')', '.', 'd', ';', 'try', '{', 'while', '(', '(', 'b', ')', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '(', 'd', ')', ';', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', 'try', '{', 'if', '(', 'e', ')', '{', '}', '}', 'catch', '(', 'I', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'I', 'e', ')', '{', '}', '}']",228,193,6,35,15.765765765765764
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,hashCode_1.txt,0.9975,0.0032,"{'n_total': 426, 'n_valid': 45, 'n_correct': 33}",135.016437,int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);},int hashCode(){t=l?h():0;t=1*(a?h:0);e=1*(ze?o:0);(t?1:0);},523,59,14,464,91.1591355599214,"['int', 'hashCode', '(', ')', '{', 'result', '=', 'null', '?', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '1', '*', '(', 'password', '?', 'hashCode', '(', ')', ':', '0', ')', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', '(', 'keyPassword', '?', 'enabledSslProtocolSuites', ':', '0', ')', ';', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'socketFactory', '?', 'socketFactory', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'pipe', '?', 'localSocket', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'sharedMemory', ')', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '(', 'interactiveClient', '?', '1', ':', '0', ')', '+', '(', 'useSsl', '?', '1', ':', '0', ')', '*', '(', 'sessionVariables', '?', 'sessionVariables', ':', '0', ')', '*', '(', '1', ')', ';', 'result', '=', '1', '*', '(', 'createDatabaseIfNotExist', ')', ';', 'result', '=', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'minPoolSize', '?', 'hashCode', ':', '0', ')', ';', '(', 'autocommit', '?', '1', ':', '0', ')', ';', '}']","['int', 'hashCode', '(', ')', '{', 't', '=', 'l', '?', 'h', '(', ')', ':', '0', ';', 't', '=', '1', '*', '(', 'a', '?', 'h', ':', '0', ')', ';', 'e', '=', '1', '*', '(', 'ze', '?', 'o', ':', '0', ')', ';', '(', 't', '?', '1', ':', '0', ')', ';', '}']",169,48,6,121,74.23312883435584
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_9.txt,0.9989,0.0017,"{'n_total': 279, 'n_valid': 23, 'n_correct': 18}",66.694658,"void main(String[]args)throws CryptoException{("""");(""""+""""+toString());(""""+(6));(""""+toString());("""".toString());("""");alice("""",random);(Payload);("""");(aliceRound);("""");(""""+(6));(""""+(6));(bobKeyingMaterial);("""");}","d main(r[]args)throws n{("""");((6));((6));(o);("""");}",210,51,10,159,79.5,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', '(', '""""', ')', ';', '(', '""""', '+', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '.', 'toString', '(', ')', ')', ';', '(', '""""', ')', ';', 'alice', '(', '""""', ',', 'random', ')', ';', '(', 'Payload', ')', ';', '(', '""""', ')', ';', '(', 'aliceRound', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', 'bobKeyingMaterial', ')', ';', '(', '""""', ')', ';', '}']","['d', 'main', '(', 'r', '[', ']', 'args', ')', 'throws', 'n', '{', '(', '""""', ')', ';', '(', '(', '6', ')', ')', ';', '(', '(', '6', ')', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '}']",101,36,6,65,68.42105263157895
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_8.txt,0.9665,0.0395,"{'n_total': 1695, 'n_valid': 118, 'n_correct': 81}",335.385715,"void main(String[]args){if((email)){{("""");}((email));}getOAuthToken();if(token){("""");(0);}createUser("""","""",true);if(status){("""");(0);}("""");if(status){("""");(0);}status("""",false);if(status){System();}("""");if(status){("""");}(new String[]{""""});if(status){("""");(0);}("""".ANDROID);if(status){("""");}createPasscodePolicy("""",Constants);if(status){("""");}MobileApplication(Constants,"""");if(application){("""");}uploadAssets();(application="""");uploadAssets();if(iOSApplication){}addApplication("""",true);if(status){("""");(0);}}","d main(g[]rgs){if((l)){{("""");}((e));}r();if(s){("""");}("""");if(s){("""");}s();if(s){m();}("""");if(s){("""");}(new g[]{""""});if(s){("""");}(D);if(s){("""");}c();if(s){("""");}(C="""");s();if(n)dApp("""",e);if(s){("""");}}",509,200,10,309,61.923847695390776,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'email', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'email', ')', ')', ';', '}', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'createUser', '(', '""""', ',', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'status', '(', '""""', ',', 'false', ')', ';', 'if', '(', 'status', ')', '{', 'System', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', '.', 'ANDROID', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'createPasscodePolicy', '(', '""""', ',', 'Constants', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'MobileApplication', '(', 'Constants', ',', '""""', ')', ';', 'if', '(', 'application', ')', '{', '(', '""""', ')', ';', '}', 'uploadAssets', '(', ')', ';', '(', 'application', '=', '""""', ')', ';', 'uploadAssets', '(', ')', ';', 'if', '(', 'iOSApplication', ')', '{', '}', 'addApplication', '(', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'rgs', ')', '{', 'if', '(', '(', 'l', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'e', ')', ')', ';', '}', 'r', '(', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', 's', '(', ')', ';', 'if', '(', 's', ')', '{', 'm', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'g', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'D', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', 'c', '(', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'C', '=', '""""', ')', ';', 's', '(', ')', ';', 'if', '(', 'n', ')', 'dApp', '(', '""""', ',', 'e', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '}']",235,165,6,70,30.567685589519648
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,execute_9.txt,0.6604,0.6071,"{'n_total': 2212, 'n_valid': 184, 'n_correct': 91}",517.929079,"boolean execute(CallbackContext callbackContext)throws JSONException{if(sEnableLogging){(""""+action);}if(("""")){(PluginResult);}if(("""")){pluginResult=(pluginResult)("""");(true);}if(("""")){if(0){try{((0));}catch(Exception e){("""");}}{result(0,"""");}}if(("""")){if(args){try{(get().toString);}catch(Exception e){result(0,"""");}createError(0,"""");}}if(("""")){if(args){try{(""""+args);getString();}catch(Exception e){createError(0,"""").error();}createError(0,"""");}}if(("""")){if(0){try{("""".getString());amount=(float)args;}catch(Exception e){result(0,"""").error();}}{createError(0,"""");(result);}(amount);}if(equals()){}}","n execute(xt callbackContext)throws n{if(g){(""""+c);}if(("""")){(t);}if(("""")){("""");(e);}if(("""")){if(0){try{((0));}catch(E e){("""");}t(0,"""");}}if(("""")){if(s){try{(g);}catch(n e){t(0,"""");}}}if(("""")){if(s){try{("""");}catch(E e){}r();}}if(("""")){{try{}catch(n e){}r();(r);}(t);}if(als){}}",599,278,13,321,54.77815699658704,"['boolean', 'execute', '(', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'if', '(', 'sEnableLogging', ')', '{', '(', '""""', '+', 'action', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'PluginResult', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'pluginResult', '=', '(', 'pluginResult', ')', '(', '""""', ')', ';', '(', 'true', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '(', '(', '0', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', 'get', '(', ')', '.', 'toString', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', '""""', '+', 'args', ')', ';', 'getString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '(', '""""', '.', 'getString', '(', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', '}', '{', 'createError', '(', '0', ',', '""""', ')', ';', '(', 'result', ')', ';', '}', '(', 'amount', ')', ';', '}', 'if', '(', 'equals', '(', ')', ')', '{', '}', '}']","['n', 'execute', '(', 'xt', 'callbackContext', ')', 'throws', 'n', '{', 'if', '(', 'g', ')', '{', '(', '""""', '+', 'c', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 't', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '(', 'e', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '(', '(', '0', ')', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '(', '""""', ')', ';', '}', 't', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 's', ')', '{', 'try', '{', '(', 'g', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', 't', '(', '0', ',', '""""', ')', ';', '}', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 's', ')', '{', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '}', 'r', '(', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', 'r', '(', ')', ';', '(', 'r', ')', ';', '}', '(', 't', ')', ';', '}', 'if', '(', 'als', ')', '{', '}', '}']",271,196,6,75,28.30188679245283
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,execute_12.txt,0.7695,0.5092,"{'n_total': 2197, 'n_valid': 185, 'n_correct': 67}",517.325884,"boolean execute(CallbackContext callbackContext)throws JSONException{if(sEnableLogging){("""");}if(("""")){("""");}if(("""")){}if(("""")){}if(("""")){if(length()>0){try{(toString());}catch(Exception e){createError(0,"""");}}{("""");}}if(("""")){if(args){try{(get());}catch(Exception e){result(0,"""");}createError(0,"""");}}if(("""")){if(length){try{Log(TAG,""""+(0));getString();}catch(Exception e){createError(0,"""").error();}createError(0,"""");}}if(("""")){if(args){try{i(TAG,"""".getString());}catch(Exception e){("""").error();}}{("""");}(amount);}if(action){}}","e execute(t callbackContext)throws J{if(g){}if(("""")){("""");}if(("""")){}if(("""")){}if(("""")){if(h()>0){try{(o);}catch(E e){r();}}{("""");}}if(("""")){if(rg){try{}catch(E e){t(0,"""");}r("""");}}if(("""")){if(th){try{}catch(n e){r();}c(0,"""");}}if(("""")){if(as){try{(T);}catch(e e){r();}}{("""");}(t);}if(n){}}",530,290,13,240,46.42166344294004,"['boolean', 'execute', '(', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'if', '(', 'sEnableLogging', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', '(', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', '(', 'get', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '(', '0', ',', '""""', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'length', ')', '{', 'try', '{', 'Log', '(', 'TAG', ',', '""""', '+', '(', '0', ')', ')', ';', 'getString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'createError', '(', '0', ',', '""""', ')', '.', 'error', '(', ')', ';', '}', 'createError', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'args', ')', '{', 'try', '{', 'i', '(', 'TAG', ',', '""""', '.', 'getString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', '.', 'error', '(', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '(', 'amount', ')', ';', '}', 'if', '(', 'action', ')', '{', '}', '}']","['e', 'execute', '(', 't', 'callbackContext', ')', 'throws', 'J', '{', 'if', '(', 'g', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'h', '(', ')', '>', '0', ')', '{', 'try', '{', '(', 'o', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', 'r', '(', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'rg', ')', '{', 'try', '{', '}', 'catch', '(', 'E', 'e', ')', '{', 't', '(', '0', ',', '""""', ')', ';', '}', 'r', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'th', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', 'r', '(', ')', ';', '}', 'c', '(', '0', ',', '""""', ')', ';', '}', '}', 'if', '(', '(', '""""', ')', ')', '{', 'if', '(', 'as', ')', '{', 'try', '{', '(', 'T', ')', ';', '}', 'catch', '(', 'e', 'e', ')', '{', 'r', '(', ')', ';', '}', '}', '{', '(', '""""', ')', ';', '}', '(', 't', ')', ';', '}', 'if', '(', 'n', ')', '{', '}', '}']",255,205,6,50,20.080321285140563
code2vec,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_8.txt,0.9648,0.0376,"{'n_total': 1466, 'n_valid': 147, 'n_correct': 66}",419.786754,"void onCreate(Bundle savedInstanceState){(this);(5);if(debugFlag){if(("""")){}}(_);if(("""")){File();f(mPath,"""");if(f){if(("""")){}}(mPath);if(p){if(p){(LANDSCAPE);}}mPath();if((toString()).contains("""")){}}if(fullscreen){}try{((""""));close();}catch(IOException e){}(mPath);String(mPath,"""");if(null){}{File(mPath,"""");if(exists()){if(exists()){s="""";}}}(this);("""");}","id onCreate(Bunde t){(s);(5);if(d){if(("""")){}}(_);if(("""")){f(P,"""");if(f){if(("""")){}}(h);if(p){if(p){(E);}}if((g()).ns()){}}if(fullscreen){}try{}catch(n e){}(m);i("""");if(l){if(e){if(e){}}}(s);("""");}",356,197,14,159,46.49122807017544,"['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', '(', 'this', ')', ';', '(', '5', ')', ';', 'if', '(', 'debugFlag', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', '_', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', 'File', '(', ')', ';', 'f', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'f', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', 'mPath', ')', ';', 'if', '(', 'p', ')', '{', 'if', '(', 'p', ')', '{', '(', 'LANDSCAPE', ')', ';', '}', '}', 'mPath', '(', ')', ';', 'if', '(', '(', 'toString', '(', ')', ')', '.', 'contains', '(', '""""', ')', ')', '{', '}', '}', 'if', '(', 'fullscreen', ')', '{', '}', 'try', '{', '(', '(', '""""', ')', ')', ';', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '(', 'mPath', ')', ';', 'String', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'null', ')', '{', '}', '{', 'File', '(', 'mPath', ',', '""""', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'if', '(', 'exists', '(', ')', ')', '{', 's', '=', '""""', ';', '}', '}', '}', '(', 'this', ')', ';', '(', '""""', ')', ';', '}']","['id', 'onCreate', '(', 'Bunde', 't', ')', '{', '(', 's', ')', ';', '(', '5', ')', ';', 'if', '(', 'd', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', '_', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', 'f', '(', 'P', ',', '""""', ')', ';', 'if', '(', 'f', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '(', 'h', ')', ';', 'if', '(', 'p', ')', '{', 'if', '(', 'p', ')', '{', '(', 'E', ')', ';', '}', '}', 'if', '(', '(', 'g', '(', ')', ')', '.', 'ns', '(', ')', ')', '{', '}', '}', 'if', '(', 'fullscreen', ')', '{', '}', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '(', 'm', ')', ';', 'i', '(', '""""', ')', ';', 'if', '(', 'l', ')', '{', 'if', '(', 'e', ')', '{', 'if', '(', 'e', ')', '{', '}', '}', '}', '(', 's', ')', ';', '(', '""""', ')', ';', '}']",186,148,6,38,21.11111111111111
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",296.543732,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },146,68,28,78,66.10169491525424,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",566.246326,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },223,62,28,161,82.56410256410255,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",56,15,10,41,89.13043478260869
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",412.937642,"class T { @Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); } }",class T { @Override String toString() { return ; } },147,52,28,95,79.83193277310924,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'return', ';', '}', '}']",33,14,10,19,82.6086956521739
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",420.971899,"class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } } }",class T { void onCreate( ) { super.onCreate(savedInstanceState); } },377,68,28,309,88.53868194842407,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",70,17,10,53,88.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",259.379356,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { return ; } },158,53,26,105,79.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'return', ';', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",271.015927,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { return ; } },158,53,26,105,79.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'return', ';', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",296.019198,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },156,68,28,88,68.75,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",301.668108,"class T { @Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; } }",class T { @Override String toString() { return ; } },195,52,28,143,85.62874251497006,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'return', ';', '}', '}']",47,14,10,33,89.1891891891892
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",527.208103,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },254,62,28,192,84.95575221238938,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",70,15,10,55,91.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",787.482807,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); } }",class T { boolean equals(Object o) { if ( o) return ; } },321,57,26,264,89.49152542372882,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', ';', '}', '}']",87,18,10,69,89.6103896103896
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",261.913244,class T { @Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; } },class T { boolean equals(Object obj) { return ; } },153,51,26,102,80.31496062992126,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",41,14,10,27,87.09677419354838
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.552961,class T { @Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); } },class T { void init() throws ServletException { super.init(); } },111,65,24,46,52.87356321839081,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",27,18,10,9,52.94117647058824
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_2.txt,0.9681,0.1118,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",314.533836,"class T { @Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); } }",class T { @Override String toString() { pw.println( ); } },282,58,28,224,88.18897637795276,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'pw', '.', 'println', '(', ')', ';', '}', '}']",81,18,10,63,88.73239436619718
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",448.786767,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },184,68,28,116,74.35897435897436,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",43,17,10,26,78.78787878787878
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",524.612555,"class T { @Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); } }","class T { void onCreate() { Log.i(LOG_TAG, ""onCreate""); } }",227,59,28,168,84.42211055276381,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', '}', '}']",56,19,10,37,80.43478260869566
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",743.634124,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { if (null == buff) return ; else if (end - start == 0) return ; } },162,96,28,66,49.25373134328358,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', 'return', ';', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', 'return', ';', '}', '}']",46,29,10,17,47.22222222222222
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",262.22159,class T { @Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; } },class T { boolean equals(Object obj) { return ; } },148,51,26,97,79.50819672131148,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",39,14,10,25,86.20689655172413
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",408.825286,class T { @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); } },class T { boolean equals(Object o) { return true; } },198,53,26,145,84.30232558139535,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'return', 'true', ';', '}', '}']",54,15,10,39,88.63636363636364
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",338.033504,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); } }",class T { void setUp() throws Exception { super.setUp(); } },193,60,25,133,79.16666666666666,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",39,18,10,21,72.41379310344827
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_10.txt,0.9998,0.0002,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",426.142687,class T { @Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; } },class T { @Override boolean equals(Object other) { Mark m ; } },259,63,26,196,84.12017167381974,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'Mark', 'm', ';', '}', '}']",75,17,10,58,89.23076923076924
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",480.667392,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },144,62,28,82,70.6896551724138,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",38,15,10,23,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",382.915203,"class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } } }",class T { @Override void onCreate(Bundle savedInstanceState) { GuidedStepFragment.addAsRoot(this ); } },231,103,28,128,63.05418719211823,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ')', ';', '}', '}']",50,21,10,29,72.5
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",453.779894,class T { @Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; } },class T { @Override boolean onCreate() { Context context ; } },187,62,28,125,78.61635220125787,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', ';', '}', '}']",39,15,10,24,82.75862068965517
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.467188,"class T { @Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); } }",class T { boolean equals(Object obj) { return ; } },202,51,26,151,85.79545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",64,14,10,50,92.5925925925926
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",529.274241,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { Thread.sleep( ); } },176,53,23,123,80.3921568627451,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'Thread', '.', 'sleep', '(', ')', ';', '}', '}']",51,18,10,33,80.48780487804879
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",333.421702,"class T { @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); } }",class T { void execute() throws BuildException { super.execute(); } },177,69,27,108,72.0,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",48,18,10,30,78.94736842105263
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",267.241795,class T { @Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); } },class T { void setUp() throws Exception { super.setUp(); } },126,60,25,66,65.34653465346535,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",31,18,10,13,61.90476190476191
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",409.269999,"class T { @Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); } }",class T { @Override void init() throws ServletException { messageSender = MessageSender ; } },290,93,24,197,74.06015037593986,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'MessageSender', ';', '}', '}']",56,18,10,38,82.6086956521739
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",418.788262,"class T { @Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); } }","class T { <T> T get( ) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } }",248,100,23,148,65.77777777777779,"['class', 'T', '{', '@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}', '}']","['class', 'T', '{', '<', 'T', '>', 'T', 'get', '(', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', '}']",65,24,10,41,74.54545454545455
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",476.077382,"class T { public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); } }",class T { void main(String args) { System.out.println( ); } },191,61,24,130,77.84431137724552,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",54,20,10,34,77.27272727272727
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",454.761216,class T { public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); } },class T { void main(String args) { try { } catch (Exception e) { } } },166,70,24,96,67.6056338028169,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",42,22,10,20,62.5
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",320.267055,"class T { public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; } }","class T { T get() { throw new NoSuchElementException(""No value present""); } }",121,77,23,44,44.89795918367347,"['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'T', 'get', '(', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', '}']",29,17,10,12,63.1578947368421
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_3.txt,0.855,0.1894,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",536.966669,"class T { @Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); } }",class T { @Before void init() { publicIds.put( ); } },377,53,24,324,91.78470254957509,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'init', '(', ')', '{', 'publicIds', '.', 'put', '(', ')', ';', '}', '}']",65,18,10,47,85.45454545454545
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",597.754359,class T { @Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); } },class T { @Before void setUp() { session = mock ; } },119,53,25,66,70.2127659574468,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', ';', '}', '}']",30,16,10,14,70.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",505.138845,"class T { public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); } }","class T { void execute( ) { context.put(""rootContextPath"" ); } }",213,64,27,149,80.10752688172043,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'context', '.', 'put', '(', '""rootContextPath""', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",339.695714,class T { @Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } } },class T { @Override void run() { try { } catch (Exception x) { } } },139,68,23,71,61.206896551724135,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']",37,22,10,15,55.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",549.839309,"class T { public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); } }","class T { void execute( ) { context.put(""rootContextPath"" ); } }",213,64,27,149,80.10752688172043,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'context', '.', 'put', '(', '""rootContextPath""', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",331.158648,"class T { @Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); } }","class T { void init() { a.addAfterOrdering(""b""); } }",120,52,24,68,70.83333333333334,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', '}', '}']",34,17,10,17,70.83333333333334
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",504.661719,"class T { public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; } }","class T { Object get(Map context , Object defaultv) { res = defaultv; } }",178,73,23,105,67.74193548387096,"['class', 'T', '{', 'public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}', '}']","['class', 'T', '{', 'Object', 'get', '(', 'Map', 'context', ',', 'Object', 'defaultv', ')', '{', 'res', '=', 'defaultv', ';', '}', '}']",50,19,10,31,77.5
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",615.406504,"class T { public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); } }",class T { void main(String args) { System.out.println( ); } },263,61,24,202,84.51882845188284,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",57,20,10,37,78.72340425531915
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",550.855134,class T { public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); } },class T { void main(String args) { NioSenderTest sender ; } },144,61,24,83,69.16666666666667,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'NioSenderTest', 'sender', ';', '}', '}']",38,15,10,23,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",783.24645,"class T { @Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); } }","class T { Integer get(long timeout, TimeUnit unit) { throw ExecutionException ; } }",362,83,23,279,82.30088495575221,"['class', 'T', '{', '@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', 'throw', 'ExecutionException', ';', '}', '}']",77,18,10,59,88.05970149253731
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",255.779118,"class T { @Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); } }",class T { void setUp() throws Exception { super.setUp(); } },134,60,25,74,67.88990825688074,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",35,18,10,17,68.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_5.txt,0.9667,0.0361,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",454.257209,"class T { @Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); } }",class T { @Override void execute(Tuple tuple) { String url ; } },317,64,27,253,87.24137931034483,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', ';', '}', '}']",74,17,10,57,89.0625
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",453.56919,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { try { } catch (Exception x) { } } },133,68,23,65,59.09090909090909,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']",43,22,10,21,63.63636363636363
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",301.701474,class T { @Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); } },class T { V get(Object key) { return ; } },122,42,23,80,80.8080808080808,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}', '}']","['class', 'T', '{', 'V', 'get', '(', 'Object', 'key', ')', '{', 'return', ';', '}', '}']",37,14,10,23,85.18518518518519
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",480.659816,"class T { public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } } }",class T { void run() { try { } catch (Throwable t) { logger.error( ); } } },161,75,23,86,62.31884057971014,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', ')', ';', '}', '}', '}']",40,26,10,14,46.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",450.582919,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },186,53,28,133,84.17721518987342,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",256.106626,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },135,69,27,66,61.11111111111112,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",335.308615,class T { public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); } },class T { public void init() { barPaint = Paint ; } },164,53,24,111,79.28571428571428,"['class', 'T', '{', 'public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}', '}']","['class', 'T', '{', 'public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'Paint', ';', '}', '}']",43,15,10,28,84.84848484848484
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",306.88758,"class T { @Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); } }",class T { void setUp() throws Exception { super.setUp(); } },161,60,25,101,74.26470588235294,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",30,18,10,12,60.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_1.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",560.326698,"class T { public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); } }",class T { void main(String args) { System.out.println( ); } },591,61,24,530,93.47442680776014,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",135,20,10,115,92.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_4.txt,0.3353,1.6291,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",680.934758,"class T { @Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); } }",class T { @Before void setUp() { PostgresExecutable runtime ; } },958,65,25,893,95.71275455519827,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'PostgresExecutable', 'runtime', ';', '}', '}']",211,15,10,196,97.51243781094529
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",346.882695,"class T { @Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); } }",class T { void init( ) throws ServletException { filterConfig = fConfig; } },173,76,24,97,65.1006711409396,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'filterConfig', '=', 'fConfig', ';', '}', '}']",34,16,10,18,75.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",456.315305,"class T { @Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; } }","class T { @Override V get( ) { throw new TimeoutException(""Waiting "" + timeout); } }",260,84,23,176,74.26160337552743,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'V', 'get', '(', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', '}']",55,21,10,34,75.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.490644,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },274,48,28,226,91.869918699187,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",79,14,10,65,94.20289855072464
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",390.745773,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { void run() { QUEUE.offer(obj); } },183,44,23,139,86.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', '}']",66,17,10,49,87.5
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",549.545561,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { { } } },133,40,23,93,84.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '{', '}', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",256.599178,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); } }",class T { void execute() throws BuildException { super.execute(); } },152,69,27,83,66.4,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",1464.628395,"class T { @SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } } }",class T { <T> Expression<T> get( ) { try { return (Expression ) field.get(path); } catch ( SecurityException e) { } } },417,119,23,298,75.63451776649747,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', ')', '{', 'try', '{', 'return', '(', 'Expression', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'SecurityException', 'e', ')', '{', '}', '}', '}']",98,37,10,61,69.31818181818183
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",334.096692,class T { @Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); } },class T { void setUp() throws Exception { super.setUp(); } },194,60,25,134,79.28994082840237,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",42,18,10,24,75.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",454.813964,class T { @Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); } },class T { void init( ) { super.init(env); } },205,45,24,160,88.39779005524862,"['class', 'T', '{', '@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', '}', '}']",53,17,10,36,83.72093023255815
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",478.008531,class T { public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); } },class T { void main(String args) throws Exception { recreate = true; } },159,72,24,87,64.44444444444444,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', '}', '}']",36,18,10,18,69.23076923076923
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",377.209044,"class T { public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); } }",class T { void main(String args) { System.setProperty( ); } },148,61,24,87,70.16129032258065,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",34,18,10,16,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",490.042761,"class T { public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); } }",class T { void main(String args) throws Exception { LOG.info( ); } },285,68,24,217,83.14176245210729,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', ')', ';', '}', '}']",66,20,10,46,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",536.211973,class T { @Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); } },class T { void init(WebConnection connection) { try { } catch (IOException ioe) { } } },305,87,24,218,77.58007117437722,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}']",68,22,10,46,79.3103448275862
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",612.779618,"class T { public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } } }",class T { String get( ) { try { return key; } catch (NoSuchMessageException e) { return key; } } },234,98,23,136,64.45497630331754,"['class', 'T', '{', 'public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}', '}']","['class', 'T', '{', 'String', 'get', '(', ')', '{', 'try', '{', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}', '}']",59,26,10,33,67.3469387755102
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.246196,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); } }",class T { void execute() throws BuildException { super.execute(); } },110,69,27,41,49.39759036144578,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",26,18,10,8,50.0
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",380.501262,class T { @Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } } },class T { @Override void run() { try { } catch (InterruptedException x) { x.printStackTrace(); } } },174,100,23,74,49.00662251655629,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']",48,28,10,20,52.63157894736842
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.055866,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },251,48,28,203,91.03139013452916,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",70,14,10,56,93.33333333333331
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",377.519004,"class T { public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); } }",class T { void run() { dataRefresh(); handler.postDelayed( ); } },162,65,23,97,69.7841726618705,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', ')', ';', '}', '}']",37,20,10,17,62.96296296296296
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",372.961177,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },166,48,28,118,85.5072463768116,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",49,14,10,35,89.74358974358975
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",569.961285,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },223,62,28,161,82.56410256410255,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",56,15,10,41,89.13043478260869
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",457.257774,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { try { } catch (InterruptedException e) { } } },176,79,23,97,63.39869281045751,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}']",51,22,10,29,70.73170731707317
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",491.573644,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",448.789626,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },232,48,28,184,90.19607843137256,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",71,14,10,57,93.44262295081968
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",567.974215,"class T { @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); } }",class T { @Before void setUp() { channel1 = GroupChannel ; } },329,62,25,267,87.82894736842105,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'channel1', '=', 'GroupChannel', ';', '}', '}']",76,16,10,60,90.9090909090909
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",377.633547,class T { @Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; } },class T { void init( ) throws ServletException { super.init( ); } },119,67,24,52,54.736842105263165,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",28,18,10,10,55.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",673.951461,class T { @Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); } },class T { void init() throws ServletException { failOnBegin = getServletConfig ; } },356,84,24,272,81.92771084337349,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'getServletConfig', ';', '}', '}']",75,16,10,59,90.76923076923076
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",488.020315,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); } }",class T { void setUp() throws Exception { super.setUp(); } },332,60,25,272,88.59934853420195,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",65,18,10,47,85.45454545454545
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",489.879124,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",377.078076,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { void run() { QUEUE.offer(obj); } },183,44,23,139,86.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', '}']",66,17,10,49,87.5
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",258.269507,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },134,69,27,65,60.74766355140186,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",258.96328,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },138,69,27,69,62.16216216216216,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",450.808804,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },180,53,28,127,83.55263157894737,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",588.700264,class T { public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; } },class T { CBuffer get(CharSequence key) { Entry key ; return entry == null ? null : entry.value; } },126,100,23,26,25.24271844660194,"['class', 'T', '{', 'public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']","['class', 'T', '{', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'key', ';', 'return', 'entry', '==', 'null', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']",34,26,10,8,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",446.383558,"class T { public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } } }",class T { void main(String args) { try { } catch (Exception e) { } } },307,70,24,237,83.74558303886926,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",82,22,10,60,83.33333333333334
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",457.431624,"class T { public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); } }",class T { void main(String args) { CoordinationDemo demo ; } },136,62,24,74,66.07142857142857,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'CoordinationDemo', 'demo', ';', '}', '}']",33,15,10,18,78.26086956521739
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",1522.700448,class T { public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; } },class T { int get( ) { if (start + off >= end) throw ArrayIndexOutOfBoundsException ; } },144,89,23,55,45.45454545454545,"['class', 'T', '{', 'public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}', '}']","['class', 'T', '{', 'int', 'get', '(', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', 'throw', 'ArrayIndexOutOfBoundsException', ';', '}', '}']",39,21,10,18,62.06896551724138
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.841264,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },138,69,27,69,62.16216216216216,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",446.495757,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },248,48,28,200,90.9090909090909,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",71,14,10,57,93.44262295081968
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",525.154413,class T { @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; } },class T { @Override int hashCode() { int result ; } },225,53,28,172,87.30964467005076,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",63,15,10,48,90.56603773584906
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_9.txt,1.0,0.0,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",793.658978,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); } }",class T { boolean equals(Object o) { if ( o) return ; } },280,57,26,223,87.79527559055119,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', ';', '}', '}']",89,18,10,71,89.87341772151899
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",366.033786,class T { @Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } } },class T { boolean equals(Object obj) { { } } },164,46,26,118,85.5072463768116,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '{', '}', '}', '}']",44,14,10,30,88.23529411764706
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",489.046001,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },331,68,28,263,86.79867986798679,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",65,17,10,48,87.27272727272727
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",640.475469,class T { @Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } } },class T { @Override void onCreate() { mNotifManager = (NotificationManager) getSystemService ; } },183,98,28,85,54.83870967741935,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onCreate', '(', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', ';', '}', '}']",39,19,10,20,68.96551724137932
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",298.420922,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },152,68,28,84,67.74193548387096,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",222.243799,class T { @Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); } },class T { @Override public String toString() { result.append( ); } },177,68,28,109,73.15436241610739,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'result', '.', 'append', '(', ')', ';', '}', '}']",48,19,10,29,76.31578947368422
code2vec,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",459.23142,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { @Override String toString() { { } } },162,47,28,115,85.82089552238806,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', '{', '}', '}', '}']",46,14,10,32,88.88888888888889
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,findMappings_1.txt,0.178,2.4832,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",711.335108,class T { @Override public String[] findMappings() { try { mappingsLock.readLock().lock(); return mappings.toArray(new String[mappings.size()]); } finally { mappingsLock.readLock().unlock(); } } },class T { @Override String[] findMappings() { try { mappingsLock.readLock().lock(); return mappings.toArray(new String[mappings.size()]); } finally { mappingsLock.readLock().unlock(); } } },196,189,32,7,4.2682926829268295,"['class', 'T', '{', '@', 'Override', 'public', 'String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'return', 'mappings', '.', 'toArray', '(', 'new', 'String', '[', 'mappings', '.', 'size', '(', ')', ']', ')', ';', '}', 'finally', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', '[', ']', 'findMappings', '(', ')', '{', 'try', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'return', 'mappings', '.', 'toArray', '(', 'new', 'String', '[', 'mappings', '.', 'size', '(', ')', ']', ')', ';', '}', 'finally', '{', 'mappingsLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}', '}']",57,56,10,1,2.127659574468085
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,releaseObject_1.txt,0.4315,1.8319,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",754.359508,"class T { @ChromeDevtoolsMethod public void releaseObject(JsonRpcPeer peer, JSONObject params) throws JSONException { String objectId = params.getString(""objectId""); getSession(peer).getObjects().removeObjectById(Integer.parseInt(objectId)); } }","class T { void releaseObject(JsonRpcPeer peer, JSONObject params) throws JSONException { String objectId ; } }",245,110,33,135,63.67924528301887,"['class', 'T', '{', '@', 'ChromeDevtoolsMethod', 'public', 'void', 'releaseObject', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', 'throws', 'JSONException', '{', 'String', 'objectId', '=', 'params', '.', 'getString', '(', '""objectId""', ')', ';', 'getSession', '(', 'peer', ')', '.', 'getObjects', '(', ')', '.', 'removeObjectById', '(', 'Integer', '.', 'parseInt', '(', 'objectId', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'releaseObject', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', 'throws', 'JSONException', '{', 'String', 'objectId', ';', '}', '}']",49,20,10,29,74.35897435897436
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,clearUndo_1.txt,0.491,0.7137,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",299.991934,class T { @Override public void clearUndo() { m_UndoList = new Vector<File>(); } },class T { @Override void clearUndo() { m_UndoList = new Vector<File>(); } },82,75,29,7,13.20754716981132,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'clearUndo', '(', ')', '{', 'm_UndoList', '=', 'new', 'Vector', '<', 'File', '>', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'clearUndo', '(', ')', '{', 'm_UndoList', '=', 'new', 'Vector', '<', 'File', '>', '(', ')', ';', '}', '}']",23,22,10,1,7.6923076923076925
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getStatusDetail_1.txt,0.4784,1.1596,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.755379,class T { public Element getStatusDetail() { return statusDetail; } },class T { Element getStatusDetail() { return statusDetail; } },69,62,35,7,20.588235294117645,"['class', 'T', '{', 'public', 'Element', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}', '}']","['class', 'T', '{', 'Element', 'getStatusDetail', '(', ')', '{', 'return', 'statusDetail', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getServiceTypeName_1.txt,0.4639,0.8241,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",261.95785,class T { public String getServiceTypeName() { return (serviceTypeName); } },class T { String getServiceTypeName() { return serviceTypeName ; } },76,68,38,8,21.052631578947366,"['class', 'T', '{', 'public', 'String', 'getServiceTypeName', '(', ')', '{', 'return', '(', 'serviceTypeName', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getServiceTypeName', '(', ')', '{', 'return', 'serviceTypeName', ';', '}', '}']",16,13,10,3,50.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getOpenSessions_1.txt,0.2266,3.0289,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",506.15037,class T { @Override public Set<Session> getOpenSessions() { checkState(); return webSocketContainer.getOpenSessions(localEndpoint.getClass()); } },class T { Set<Session> getOpenSessions() { return webSocketContainer.getOpenSessions( ); } },146,92,35,54,48.64864864864865,"['class', 'T', '{', '@', 'Override', 'public', 'Set', '<', 'Session', '>', 'getOpenSessions', '(', ')', '{', 'checkState', '(', ')', ';', 'return', 'webSocketContainer', '.', 'getOpenSessions', '(', 'localEndpoint', '.', 'getClass', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'Set', '<', 'Session', '>', 'getOpenSessions', '(', ')', '{', 'return', 'webSocketContainer', '.', 'getOpenSessions', '(', ')', ';', '}', '}']",32,20,10,12,54.54545454545454
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getJoinClause_1.txt,0.3672,1.7936,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",230.112632,class T { public ValueNode getJoinClause() { return joinClause; } },class T { ValueNode getJoinClause() { return joinClause; } },67,60,33,7,20.588235294117645,"['class', 'T', '{', 'public', 'ValueNode', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}', '}']","['class', 'T', '{', 'ValueNode', 'getJoinClause', '(', ')', '{', 'return', 'joinClause', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onCancelProgress_1.txt,0.4463,0.9729,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",459.462633,class T { @Override public void onCancelProgress() { if (!this.isUnsubscribed()) { this.unsubscribe(); } } },class T { void onCancelProgress() { if (!this.isUnsubscribed()) { this.unsubscribe(); } } },108,91,36,17,23.61111111111111,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'isUnsubscribed', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCancelProgress', '(', ')', '{', 'if', '(', '!', 'this', '.', 'isUnsubscribed', '(', ')', ')', '{', 'this', '.', 'unsubscribe', '(', ')', ';', '}', '}', '}']",30,27,10,3,15.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,drawCachedBitmapWithRootAlpha_1.txt,0.4204,1.5179,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",593.707128,"class T { public void drawCachedBitmapWithRootAlpha(Canvas canvas, ColorFilter filter, Rect originalBounds) { final Paint p = getPaint(filter); canvas.drawBitmap(mCachedBitmap, null, originalBounds, p); } }","class T { void drawCachedBitmapWithRootAlpha(Canvas canvas, ColorFilter filter, Rect originalBounds) { canvas.drawBitmap(mCachedBitmap ); } }",206,141,49,65,41.40127388535032,"['class', 'T', '{', 'public', 'void', 'drawCachedBitmapWithRootAlpha', '(', 'Canvas', 'canvas', ',', 'ColorFilter', 'filter', ',', 'Rect', 'originalBounds', ')', '{', 'final', 'Paint', 'p', '=', 'getPaint', '(', 'filter', ')', ';', 'canvas', '.', 'drawBitmap', '(', 'mCachedBitmap', ',', 'null', ',', 'originalBounds', ',', 'p', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'drawCachedBitmapWithRootAlpha', '(', 'Canvas', 'canvas', ',', 'ColorFilter', 'filter', ',', 'Rect', 'originalBounds', ')', '{', 'canvas', '.', 'drawBitmap', '(', 'mCachedBitmap', ')', ';', '}', '}']",41,25,10,16,51.61290322580645
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getIdForObject_1.txt,0.2976,2.555,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",337.902185,class T { @Nullable public Integer getIdForObject(Object object) { synchronized (mSync) { return mObjectToIdMap.get(object); } } },class T { @Nullable Integer getIdForObject(Object object) { synchronized (mSync) { } } },130,88,34,42,43.75,"['class', 'T', '{', '@', 'Nullable', 'public', 'Integer', 'getIdForObject', '(', 'Object', 'object', ')', '{', 'synchronized', '(', 'mSync', ')', '{', 'return', 'mObjectToIdMap', '.', 'get', '(', 'object', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Nullable', 'Integer', 'getIdForObject', '(', 'Object', 'object', ')', '{', 'synchronized', '(', 'mSync', ')', '{', '}', '}', '}']",29,20,10,9,47.368421052631575
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getVariantProperty_1.txt,0.4638,1.6677,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",261.573128,class T { public PropertyEnum getVariantProperty(int pageNum) { return this.pageNumToProperty.get(pageNum); } },class T { PropertyEnum getVariantProperty(int pageNum) { return ; } },111,69,38,42,57.53424657534247,"['class', 'T', '{', 'public', 'PropertyEnum', 'getVariantProperty', '(', 'int', 'pageNum', ')', '{', 'return', 'this', '.', 'pageNumToProperty', '.', 'get', '(', 'pageNum', ')', ';', '}', '}']","['class', 'T', '{', 'PropertyEnum', 'getVariantProperty', '(', 'int', 'pageNum', ')', '{', 'return', ';', '}', '}']",23,14,10,9,69.23076923076923
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,acceptSocket_1.txt,0.3392,1.1936,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",570.489536,"class T { @Override public Socket acceptSocket(ServerSocket socket) throws IOException { SSLSocket asock = null; try { asock = (SSLSocket) socket.accept(); } catch (SSLException e) { throw new SocketException(""SSL handshake error"" + e.toString()); } return asock; } }",class T { @Override Socket acceptSocket(ServerSocket socket) { SSLSocket asock ; } },267,84,32,183,77.87234042553192,"['class', 'T', '{', '@', 'Override', 'public', 'Socket', 'acceptSocket', '(', 'ServerSocket', 'socket', ')', 'throws', 'IOException', '{', 'SSLSocket', 'asock', '=', 'null', ';', 'try', '{', 'asock', '=', '(', 'SSLSocket', ')', 'socket', '.', 'accept', '(', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'throw', 'new', 'SocketException', '(', '""SSL handshake error""', '+', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'asock', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'Socket', 'acceptSocket', '(', 'ServerSocket', 'socket', ')', '{', 'SSLSocket', 'asock', ';', '}', '}']",59,17,10,42,85.71428571428571
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setScalingType_1.txt,0.3675,3.4159,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",1031.407313,"class T { public void setScalingType(RendererCommon.ScalingType scalingTypeMatchOrientation, RendererCommon.ScalingType scalingTypeMismatchOrientation) { ThreadUtils.checkIsOnMainThread(); videoLayoutMeasure.setScalingType(scalingTypeMatchOrientation, scalingTypeMismatchOrientation); requestLayout(); } }",class T { void setScalingType( ) { videoLayoutMeasure.setScalingType(scalingTypeMatchOrientation ); } },305,103,34,202,74.53874538745387,"['class', 'T', '{', 'public', 'void', 'setScalingType', '(', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMatchOrientation', ',', 'RendererCommon', '.', 'ScalingType', 'scalingTypeMismatchOrientation', ')', '{', 'ThreadUtils', '.', 'checkIsOnMainThread', '(', ')', ';', 'videoLayoutMeasure', '.', 'setScalingType', '(', 'scalingTypeMatchOrientation', ',', 'scalingTypeMismatchOrientation', ')', ';', 'requestLayout', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setScalingType', '(', ')', '{', 'videoLayoutMeasure', '.', 'setScalingType', '(', 'scalingTypeMatchOrientation', ')', ';', '}', '}']",39,17,10,22,75.86206896551724
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setSpout_1.txt,0.3596,1.5657,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",536.412242,"class T { public SpoutDeclarer setSpout(String id, IRichSpout spout, Number parallelismHint) { validateComponentName(id); SpoutDeclarer s = new SpoutDeclarer(id, spout, parallelismHint); spouts.put(id, s); return s; } }","class T { SpoutDeclarer setSpout(String id, IRichSpout spout, Number parallelismHint) { validateComponentName( ); } }",219,117,28,102,53.403141361256544,"['class', 'T', '{', 'public', 'SpoutDeclarer', 'setSpout', '(', 'String', 'id', ',', 'IRichSpout', 'spout', ',', 'Number', 'parallelismHint', ')', '{', 'validateComponentName', '(', 'id', ')', ';', 'SpoutDeclarer', 's', '=', 'new', 'SpoutDeclarer', '(', 'id', ',', 'spout', ',', 'parallelismHint', ')', ';', 'spouts', '.', 'put', '(', 'id', ',', 's', ')', ';', 'return', 's', ';', '}', '}']","['class', 'T', '{', 'SpoutDeclarer', 'setSpout', '(', 'String', 'id', ',', 'IRichSpout', 'spout', ',', 'Number', 'parallelismHint', ')', '{', 'validateComponentName', '(', ')', ';', '}', '}']",49,22,10,27,69.23076923076923
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setActionMode_1.txt,0.3428,1.1626,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",261.269939,class T { private void setActionMode(int actionMode) { this.actionMode = actionMode; } },class T { void setActionMode(int actionMode) { actionMode = actionMode; } },88,75,33,13,23.63636363636364,"['class', 'T', '{', 'private', 'void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'this', '.', 'actionMode', '=', 'actionMode', ';', '}', '}']","['class', 'T', '{', 'void', 'setActionMode', '(', 'int', 'actionMode', ')', '{', 'actionMode', '=', 'actionMode', ';', '}', '}']",19,16,10,3,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getCurrentNetworkState_1.txt,0.4761,1.2122,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",272.197043,class T { public NetworkState getCurrentNetworkState() { return connectivityManagerDelegate.getNetworkState(); } },class T { NetworkState getCurrentNetworkState() { return connectivityManagerDelegate.getNetworkState(); } },114,107,42,7,9.722222222222223,"['class', 'T', '{', 'public', 'NetworkState', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}', '}']","['class', 'T', '{', 'NetworkState', 'getCurrentNetworkState', '(', ')', '{', 'return', 'connectivityManagerDelegate', '.', 'getNetworkState', '(', ')', ';', '}', '}']",18,17,10,1,12.5
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setWrapStyleWord_1.txt,0.3973,2.0067,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",261.100331,class T { public void setWrapStyleWord(boolean value) { m_TextCode.setWrapStyleWord(value); } },class T { void setWrapStyleWord(boolean value) { m_TextCode.setWrapStyleWord(value); } },95,88,36,7,11.864406779661016,"['class', 'T', '{', 'public', 'void', 'setWrapStyleWord', '(', 'boolean', 'value', ')', '{', 'm_TextCode', '.', 'setWrapStyleWord', '(', 'value', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setWrapStyleWord', '(', 'boolean', 'value', ')', '{', 'm_TextCode', '.', 'setWrapStyleWord', '(', 'value', ')', ';', '}', '}']",20,19,10,1,10.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,closeAllShells_1.txt,0.4807,0.7569,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",182.928376,class T { public static void closeAllShells() throws IOException { Shell.closeAll(); } },class T { public static void closeAllShells() { Shell.closeAll(); } },88,69,34,19,35.18518518518518,"['class', 'T', '{', 'public', 'static', 'void', 'closeAllShells', '(', ')', 'throws', 'IOException', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}', '}']","['class', 'T', '{', 'public', 'static', 'void', 'closeAllShells', '(', ')', '{', 'Shell', '.', 'closeAll', '(', ')', ';', '}', '}']",20,18,10,2,20.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,applyExternalChanges_1.txt,0.407,2.5797,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",754.269857,"class T { @Override public void applyExternalChanges(User existingObject, APIUser object) throws GuacamoleException { if (object.getPassword() != null) existingObject.setPassword(object.getPassword()); existingObject.setAttributes(object.getAttributes()); } }",class T { @Override void applyExternalChanges( ) { existingObject.setPassword( ); } },259,85,40,174,79.45205479452055,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'applyExternalChanges', '(', 'User', 'existingObject', ',', 'APIUser', 'object', ')', 'throws', 'GuacamoleException', '{', 'if', '(', 'object', '.', 'getPassword', '(', ')', '!=', 'null', ')', 'existingObject', '.', 'setPassword', '(', 'object', '.', 'getPassword', '(', ')', ')', ';', 'existingObject', '.', 'setAttributes', '(', 'object', '.', 'getAttributes', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'applyExternalChanges', '(', ')', '{', 'existingObject', '.', 'setPassword', '(', ')', ';', '}', '}']",52,18,10,34,80.95238095238095
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setHttpSession_1.txt,0.3168,1.6247,"{'n_total': 1, 'n_valid': -1, 'n_correct': -1}",0.0,class T { void setHttpSession(HttpSession hSession) { httpSession = hSession; } },class T { void setHttpSession(HttpSession hSession) { httpSession = hSession; } },81,81,34,0,0.0,"['class', 'T', '{', 'void', 'setHttpSession', '(', 'HttpSession', 'hSession', ')', '{', 'httpSession', '=', 'hSession', ';', '}', '}']","['class', 'T', '{', 'void', 'setHttpSession', '(', 'HttpSession', 'hSession', ')', '{', 'httpSession', '=', 'hSession', ';', '}', '}']",16,16,10,0,0.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,upperFirstLetter_1.txt,0.2945,1.7626,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",1086.697386,"class T { public static String upperFirstLetter(final String s) { if (s == null || s.length() == 0) return """"; if (!Character.isLowerCase(s.charAt(0))) return s; return String.valueOf((char) (s.charAt(0) - 32)) + s.substring(1); } }",class T { String upperFirstLetter( String s) { if (s == null || s.length() == 0) return ; if (!Character.isLowerCase( )) return ; return String.valueOf( ) + s.substring( ); } },232,176,36,56,28.57142857142857,"['class', 'T', '{', 'public', 'static', 'String', 'upperFirstLetter', '(', 'final', 'String', 's', ')', '{', 'if', '(', 's', '==', 'null', '||', 's', '.', 'length', '(', ')', '==', '0', ')', 'return', '""""', ';', 'if', '(', '!', 'Character', '.', 'isLowerCase', '(', 's', '.', 'charAt', '(', '0', ')', ')', ')', 'return', 's', ';', 'return', 'String', '.', 'valueOf', '(', '(', 'char', ')', '(', 's', '.', 'charAt', '(', '0', ')', '-', '32', ')', ')', '+', 's', '.', 'substring', '(', '1', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'upperFirstLetter', '(', 'String', 's', ')', '{', 'if', '(', 's', '==', 'null', '||', 's', '.', 'length', '(', ')', '==', '0', ')', 'return', ';', 'if', '(', '!', 'Character', '.', 'isLowerCase', '(', ')', ')', 'return', ';', 'return', 'String', '.', 'valueOf', '(', ')', '+', 's', '.', 'substring', '(', ')', ';', '}', '}']",77,52,10,25,37.3134328358209
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setLastState_1.txt,0.4192,1.4964,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",261.962262,class T { protected void setLastState(int lastState) { this.lastState = lastState; } },class T { void setLastState(int lastState) { this.lastState = lastState; } },86,76,32,10,18.51851851851852,"['class', 'T', '{', 'protected', 'void', 'setLastState', '(', 'int', 'lastState', ')', '{', 'this', '.', 'lastState', '=', 'lastState', ';', '}', '}']","['class', 'T', '{', 'void', 'setLastState', '(', 'int', 'lastState', ')', '{', 'this', '.', 'lastState', '=', 'lastState', ';', '}', '}']",19,18,10,1,11.11111111111111
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getInsertPosition_1.txt,0.3956,1.9575,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.325645,class T { public String getInsertPosition() { return insertPosition; } },class T { String getInsertPosition() { return insertPosition; } },72,65,37,7,20.0,"['class', 'T', '{', 'public', 'String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}', '}']","['class', 'T', '{', 'String', 'getInsertPosition', '(', ')', '{', 'return', 'insertPosition', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,launchTasks_1.txt,0.4094,1.3146,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",548.377472,"class T { @Override public Protos.Status launchTasks(Protos.OfferID offerId, Collection<Protos.TaskInfo> tasks) { return null; } }","class T { Protos launchTasks(Protos offerId, Collection tasks) { return ; } }",130,77,31,53,53.535353535353536,"['class', 'T', '{', '@', 'Override', 'public', 'Protos', '.', 'Status', 'launchTasks', '(', 'Protos', '.', 'OfferID', 'offerId', ',', 'Collection', '<', 'Protos', '.', 'TaskInfo', '>', 'tasks', ')', '{', 'return', 'null', ';', '}', '}']","['class', 'T', '{', 'Protos', 'launchTasks', '(', 'Protos', 'offerId', ',', 'Collection', 'tasks', ')', '{', 'return', ';', '}', '}']",30,17,10,13,65.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,presentationTimeMicroseconds_1.txt,0.4425,1.78,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",303.723721,"class T { @CalledByNative(""DequeueOutputResult"") private long presentationTimeMicroseconds() { return mPresentationTimeMicroseconds; } }","class T { @CalledByNative(""DequeueOutputResult"") long presentationTimeMicroseconds() { return ; } }",136,99,48,37,42.04545454545455,"['class', 'T', '{', '@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'private', 'long', 'presentationTimeMicroseconds', '(', ')', '{', 'return', 'mPresentationTimeMicroseconds', ';', '}', '}']","['class', 'T', '{', '@', 'CalledByNative', '(', '""DequeueOutputResult""', ')', 'long', 'presentationTimeMicroseconds', '(', ')', '{', 'return', ';', '}', '}']",19,17,10,2,22.22222222222222
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getUserHistory_1.txt,0.3649,1.4313,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",419.042016,class T { @Override public ActivityRecordSet<ActivityRecord> getUserHistory() throws GuacamoleException { return new SimpleActivityRecordSet<ActivityRecord>(); } },class T { @Override ActivityRecordSet<ActivityRecord> getUserHistory() throws GuacamoleException { return new SimpleActivityRecordSet<ActivityRecord>(); } },163,156,34,7,5.426356589147287,"['class', 'T', '{', '@', 'Override', 'public', 'ActivityRecordSet', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'SimpleActivityRecordSet', '<', 'ActivityRecord', '>', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'ActivityRecordSet', '<', 'ActivityRecord', '>', 'getUserHistory', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'SimpleActivityRecordSet', '<', 'ActivityRecord', '>', '(', ')', ';', '}', '}']",27,26,10,1,5.88235294117647
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onFragmentDetached_1.txt,0.3826,1.1065,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",812.654352,"class T { public void onFragmentDetached(String tag) { FragmentManager fragmentManager = getSupportFragmentManager(); Fragment fragment = fragmentManager.findFragmentByTag(tag); if (fragment != null) { fragmentManager.beginTransaction().disallowAddToBackStack().setCustomAnimations(R.anim.slide_left, R.anim.slide_right).remove(fragment).commitNow(); unlockDrawer(); } } }",class T { void onFragmentDetached(String tag) { if (fragment != null) { fragmentManager.beginTransaction() .remove( ).commitNow(); } } },372,136,38,236,70.65868263473054,"['class', 'T', '{', 'public', 'void', 'onFragmentDetached', '(', 'String', 'tag', ')', '{', 'FragmentManager', 'fragmentManager', '=', 'getSupportFragmentManager', '(', ')', ';', 'Fragment', 'fragment', '=', 'fragmentManager', '.', 'findFragmentByTag', '(', 'tag', ')', ';', 'if', '(', 'fragment', '!=', 'null', ')', '{', 'fragmentManager', '.', 'beginTransaction', '(', ')', '.', 'disallowAddToBackStack', '(', ')', '.', 'setCustomAnimations', '(', 'R', '.', 'anim', '.', 'slide_left', ',', 'R', '.', 'anim', '.', 'slide_right', ')', '.', 'remove', '(', 'fragment', ')', '.', 'commitNow', '(', ')', ';', 'unlockDrawer', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onFragmentDetached', '(', 'String', 'tag', ')', '{', 'if', '(', 'fragment', '!=', 'null', ')', '{', 'fragmentManager', '.', 'beginTransaction', '(', ')', '.', 'remove', '(', ')', '.', 'commitNow', '(', ')', ';', '}', '}', '}']",76,34,10,42,63.63636363636363
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onGetChildren_1.txt,0.3127,2.1598,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",1140.107519,"class T { @Override protected void onGetChildren(ViewGroup element, Accumulator<Object> children) { for (int i = 0, N = element.getChildCount(); i < N; ++i) { final View childView = element.getChildAt(i); if (isChildVisible(childView)) { final Object childElement = getElementForView(element, childView); children.store(childElement); } } } }","class T { void onGetChildren(ViewGroup element, Accumulator children) { for (int i , N = element.getChildCount(); ; ) { if (isChildVisible( )) children.store( ); } } }",342,167,33,175,56.63430420711975,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onGetChildren', '(', 'ViewGroup', 'element', ',', 'Accumulator', '<', 'Object', '>', 'children', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'N', '=', 'element', '.', 'getChildCount', '(', ')', ';', 'i', '<', 'N', ';', '++', 'i', ')', '{', 'final', 'View', 'childView', '=', 'element', '.', 'getChildAt', '(', 'i', ')', ';', 'if', '(', 'isChildVisible', '(', 'childView', ')', ')', '{', 'final', 'Object', 'childElement', '=', 'getElementForView', '(', 'element', ',', 'childView', ')', ';', 'children', '.', 'store', '(', 'childElement', ')', ';', '}', '}', '}', '}']","['class', 'T', '{', 'void', 'onGetChildren', '(', 'ViewGroup', 'element', ',', 'Accumulator', 'children', ')', '{', 'for', '(', 'int', 'i', ',', 'N', '=', 'element', '.', 'getChildCount', '(', ')', ';', ';', ')', '{', 'if', '(', 'isChildVisible', '(', ')', ')', 'children', '.', 'store', '(', ')', ';', '}', '}', '}']",83,44,10,39,53.42465753424658
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getEntityDescriptor_1.txt,0.3199,1.3808,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",500.936982,class T { public java.util.List getEntityDescriptor() { return _getEntityDescriptor(); } },class T { java .List getEntityDescriptor() { return _getEntityDescriptor ; } },90,78,39,12,23.52941176470588,"['class', 'T', '{', 'public', 'java', '.', 'util', '.', 'List', 'getEntityDescriptor', '(', ')', '{', 'return', '_getEntityDescriptor', '(', ')', ';', '}', '}']","['class', 'T', '{', 'java', '.', 'List', 'getEntityDescriptor', '(', ')', '{', 'return', '_getEntityDescriptor', ';', '}', '}']",20,15,10,5,50.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getHavingClause_1.txt,0.4955,1.1377,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",229.17237,class T { public ValueNode getHavingClause() { return havingClause; } },class T { ValueNode getHavingClause() { return havingClause; } },71,64,35,7,19.444444444444446,"['class', 'T', '{', 'public', 'ValueNode', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}', '}']","['class', 'T', '{', 'ValueNode', 'getHavingClause', '(', ')', '{', 'return', 'havingClause', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getServerSessionContext_1.txt,0.1495,3.4322,"{'n_total': 1, 'n_valid': -1, 'n_correct': -1}",0.0,class T { ProvSSLSessionContext getServerSessionContext() { return serverSessionContext; } },class T { ProvSSLSessionContext getServerSessionContext() { return serverSessionContext; } },92,92,43,0,0.0,"['class', 'T', '{', 'ProvSSLSessionContext', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}', '}']","['class', 'T', '{', 'ProvSSLSessionContext', 'getServerSessionContext', '(', ')', '{', 'return', 'serverSessionContext', ';', '}', '}']",13,13,10,0,0.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,toValueArray_1.txt,0.3435,1.7992,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",932.915387,class T { private static String[] toValueArray(Vector values) { String[] tmp = new String[values.size()]; for (int i = 0; i != tmp.length; i++) { tmp[i] = (String) values.elementAt(i); } return tmp; } },class T { String[] toValueArray(Vector values) { for ( ; ; ) { tmp[i] = (String) values.elementAt( ); } return tmp; } },202,119,32,83,48.8235294117647,"['class', 'T', '{', 'private', 'static', 'String', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'String', '[', ']', 'tmp', '=', 'new', 'String', '[', 'values', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '!=', 'tmp', '.', 'length', ';', 'i', '++', ')', '{', 'tmp', '[', 'i', ']', '=', '(', 'String', ')', 'values', '.', 'elementAt', '(', 'i', ')', ';', '}', 'return', 'tmp', ';', '}', '}']","['class', 'T', '{', 'String', '[', ']', 'toValueArray', '(', 'Vector', 'values', ')', '{', 'for', '(', ';', ';', ')', '{', 'tmp', '[', 'i', ']', '=', '(', 'String', ')', 'values', '.', 'elementAt', '(', ')', ';', '}', 'return', 'tmp', ';', '}', '}']",67,38,10,29,50.877192982456144
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setPss_1.txt,0.3612,2.8434,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",266.67646,class T { public void setPss(int pss) { this.pss = pss; } },class T { void setPss(int pss) { pss = pss; } },59,47,26,12,36.36363636363637,"['class', 'T', '{', 'public', 'void', 'setPss', '(', 'int', 'pss', ')', '{', 'this', '.', 'pss', '=', 'pss', ';', '}', '}']","['class', 'T', '{', 'void', 'setPss', '(', 'int', 'pss', ')', '{', 'pss', '=', 'pss', ';', '}', '}']",19,16,10,3,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setLogError_1.txt,0.3029,1.4257,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",300.840283,class T { public void setLogError(final boolean logError) { this.logError = logError; } },class T { void setLogError( boolean logError) { logError = logError; } },89,72,31,17,29.310344827586203,"['class', 'T', '{', 'public', 'void', 'setLogError', '(', 'final', 'boolean', 'logError', ')', '{', 'this', '.', 'logError', '=', 'logError', ';', '}', '}']","['class', 'T', '{', 'void', 'setLogError', '(', 'boolean', 'logError', ')', '{', 'logError', '=', 'logError', ';', '}', '}']",20,16,10,4,40.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setDirective_1.txt,0.4032,0.9317,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",379.685797,"class T { public void setDirective(Directive directive, String value) { directives.put(directive, value); } }","class T { void setDirective(Directive directive, String value) { directives.put(directive ); } }",109,96,32,13,16.883116883116884,"['class', 'T', '{', 'public', 'void', 'setDirective', '(', 'Directive', 'directive', ',', 'String', 'value', ')', '{', 'directives', '.', 'put', '(', 'directive', ',', 'value', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setDirective', '(', 'Directive', 'directive', ',', 'String', 'value', ')', '{', 'directives', '.', 'put', '(', 'directive', ')', ';', '}', '}']",25,22,10,3,20.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,finishCommand_1.txt,0.3903,1.1902,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",422.534193,class T { protected final void finishCommand() { this.executing = false; this.finished = true; this.notifyAll(); } },class T { void finishCommand() { executing = false; this.notifyAll(); } },116,73,33,43,51.80722891566265,"['class', 'T', '{', 'protected', 'final', 'void', 'finishCommand', '(', ')', '{', 'this', '.', 'executing', '=', 'false', ';', 'this', '.', 'finished', '=', 'true', ';', 'this', '.', 'notifyAll', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'finishCommand', '(', ')', '{', 'executing', '=', 'false', ';', 'this', '.', 'notifyAll', '(', ')', ';', '}', '}']",30,20,10,10,50.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,fromFlags_1.txt,0.4012,1.4482,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",228.924234,class T { public static final RedNetConnectionType fromFlags(short flags) { return connections.get(flags); } },class T { RedNetConnectionType fromFlags(short flags) { return ; } },110,68,29,42,51.85185185185185,"['class', 'T', '{', 'public', 'static', 'final', 'RedNetConnectionType', 'fromFlags', '(', 'short', 'flags', ')', '{', 'return', 'connections', '.', 'get', '(', 'flags', ')', ';', '}', '}']","['class', 'T', '{', 'RedNetConnectionType', 'fromFlags', '(', 'short', 'flags', ')', '{', 'return', ';', '}', '}']",23,14,10,9,69.23076923076923
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,preAnimateRemoveImpl_1.txt,0.4428,0.9425,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",462.617715,"class T { @Override protected void preAnimateRemoveImpl(RecyclerView.ViewHolder holder) { ViewCompat.setPivotX(holder.itemView, holder.itemView.getWidth()); } }",class T { void preAnimateRemoveImpl(RecyclerView holder) { ViewCompat.setPivotX(holder.itemView ); } },160,102,40,58,48.333333333333336,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'preAnimateRemoveImpl', '(', 'RecyclerView', '.', 'ViewHolder', 'holder', ')', '{', 'ViewCompat', '.', 'setPivotX', '(', 'holder', '.', 'itemView', ',', 'holder', '.', 'itemView', '.', 'getWidth', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'preAnimateRemoveImpl', '(', 'RecyclerView', 'holder', ')', '{', 'ViewCompat', '.', 'setPivotX', '(', 'holder', '.', 'itemView', ')', ';', '}', '}']",34,21,10,13,54.16666666666666
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setDefaultUri_1.txt,0.4727,1.2875,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",227.408566,class T { public final void setDefaultUri(String uri) { webServiceTemplate.setDefaultUri(uri); } },class T { void setDefaultUri(String uri) { webServiceTemplate.setDefaultUri(uri); } },98,85,33,13,20.0,"['class', 'T', '{', 'public', 'final', 'void', 'setDefaultUri', '(', 'String', 'uri', ')', '{', 'webServiceTemplate', '.', 'setDefaultUri', '(', 'uri', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setDefaultUri', '(', 'String', 'uri', ')', '{', 'webServiceTemplate', '.', 'setDefaultUri', '(', 'uri', ')', ';', '}', '}']",21,19,10,2,18.181818181818183
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,removeLocationListener_1.txt,0.4702,0.7736,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",234.057784,class T { public synchronized void removeLocationListener(LocationListener listener) { locationListeners.remove(listener); } },class T { void removeLocationListener(LocationListener listener) { locationListeners.remove(listener); } },126,106,42,20,23.809523809523807,"['class', 'T', '{', 'public', 'synchronized', 'void', 'removeLocationListener', '(', 'LocationListener', 'listener', ')', '{', 'locationListeners', '.', 'remove', '(', 'listener', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'removeLocationListener', '(', 'LocationListener', 'listener', ')', '{', 'locationListeners', '.', 'remove', '(', 'listener', ')', ';', '}', '}']",21,19,10,2,18.181818181818183
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,supportsReturnType_1.txt,0.4893,1.7947,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",502.259293,"class T { @Override public final boolean supportsReturnType(MethodParameter returnType) { Assert.isTrue(returnType.getParameterIndex() == -1, ""Parameter index is not -1""); if (returnType.getMethodAnnotation(ResponsePayload.class) == null) { return false; } else { return supportsResponsePayloadReturnType(returnType); } } }",class T { @Override boolean supportsReturnType(MethodParameter returnType) { Assert.isTrue( ); } },323,98,38,225,78.94736842105263,"['class', 'T', '{', '@', 'Override', 'public', 'final', 'boolean', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', 'Assert', '.', 'isTrue', '(', 'returnType', '.', 'getParameterIndex', '(', ')', '==', '-', '1', ',', '""Parameter index is not -1""', ')', ';', 'if', '(', 'returnType', '.', 'getMethodAnnotation', '(', 'ResponsePayload', '.', 'class', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'supportsResponsePayloadReturnType', '(', 'returnType', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'supportsReturnType', '(', 'MethodParameter', 'returnType', ')', '{', 'Assert', '.', 'isTrue', '(', ')', ';', '}', '}']",59,20,10,39,79.59183673469387
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onOutputFormatChanged_1.txt,0.4324,0.977,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",340.627404,class T { @Override protected void onOutputFormatChanged(MediaFormat format) { mAudioPlayback.init(format); } },class T { @Override void onOutputFormatChanged(MediaFormat format) { mAudioPlayback.init( ); } },111,96,41,15,21.428571428571427,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'mAudioPlayback', '.', 'init', '(', 'format', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onOutputFormatChanged', '(', 'MediaFormat', 'format', ')', '{', 'mAudioPlayback', '.', 'init', '(', ')', ';', '}', '}']",22,20,10,2,16.666666666666664
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isSynthesized_1.txt,0.3271,3.0053,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",418.473356,class T { public boolean isSynthesized(ResResource res) { return mPackage.isSynthesized(res.getResSpec().getId()); } },class T { boolean isSynthesized(ResResource res) { return mPackage.isSynthesized(res.getResSpec() ); } },118,104,33,14,16.470588235294116,"['class', 'T', '{', 'public', 'boolean', 'isSynthesized', '(', 'ResResource', 'res', ')', '{', 'return', 'mPackage', '.', 'isSynthesized', '(', 'res', '.', 'getResSpec', '(', ')', '.', 'getId', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isSynthesized', '(', 'ResResource', 'res', ')', '{', 'return', 'mPackage', '.', 'isSynthesized', '(', 'res', '.', 'getResSpec', '(', ')', ')', ';', '}', '}']",29,24,10,5,26.31578947368421
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getPollTime_1.txt,0.484,1.3666,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.485997,class T { public int getPollTime() { return pollTime; } },class T { int getPollTime() { return pollTime; } },57,50,31,7,26.923076923076923,"['class', 'T', '{', 'public', 'int', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}', '}']","['class', 'T', '{', 'int', 'getPollTime', '(', ')', '{', 'return', 'pollTime', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getRationale_1.txt,0.4218,2.1693,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",549.048527,"class T { public String getRationale() { int count = getItemGradingDataArray().size(); if (count > 0) { ItemGradingData data = getItemGradingDataArray().get(count - 1); rationale = FormattedText.convertFormattedTextToPlaintext(data.getRationale()); } return Validator.check(rationale, """"); } }",class T { String getRationale() { return Validator.check(rationale ); } },293,73,32,220,84.2911877394636,"['class', 'T', '{', 'public', 'String', 'getRationale', '(', ')', '{', 'int', 'count', '=', 'getItemGradingDataArray', '(', ')', '.', 'size', '(', ')', ';', 'if', '(', 'count', '>', '0', ')', '{', 'ItemGradingData', 'data', '=', 'getItemGradingDataArray', '(', ')', '.', 'get', '(', 'count', '-', '1', ')', ';', 'rationale', '=', 'FormattedText', '.', 'convertFormattedTextToPlaintext', '(', 'data', '.', 'getRationale', '(', ')', ')', ';', '}', 'return', 'Validator', '.', 'check', '(', 'rationale', ',', '""""', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getRationale', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'rationale', ')', ';', '}', '}']",67,18,10,49,85.96491228070175
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setCountdown_1.txt,0.4973,0.7209,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",261.384834,class T { public void setCountdown(Integer countdown) { this.countdown = countdown; } },class T { void setCountdown(Integer countdown) { countdown = countdown; } },87,75,32,12,21.818181818181817,"['class', 'T', '{', 'public', 'void', 'setCountdown', '(', 'Integer', 'countdown', ')', '{', 'this', '.', 'countdown', '=', 'countdown', ';', '}', '}']","['class', 'T', '{', 'void', 'setCountdown', '(', 'Integer', 'countdown', ')', '{', 'countdown', '=', 'countdown', ';', '}', '}']",19,16,10,3,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getInstanceMap_1.txt,0.4072,1.0946,"{'n_total': 11, 'n_valid': -1, 'n_correct': -1}",990.367326,"class T { public static Map<String, List<Rule>> getInstanceMap(final NameType nameType, final RuleType rt, final String lang) { final Map<String, List<Rule>> rules = RULES.get(nameType).get(rt).get(lang); if (rules == null) { throw new IllegalArgumentException(String.format(""No rules found for %s, %s, %s."", nameType.getName(), rt.getName(), lang)); } return rules; } }","class T { Map getInstanceMap( NameType nameType, RuleType rt, String lang) { Map rules ; } }",370,92,34,278,82.73809523809523,"['class', 'T', '{', 'public', 'static', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'getInstanceMap', '(', 'final', 'NameType', 'nameType', ',', 'final', 'RuleType', 'rt', ',', 'final', 'String', 'lang', ')', '{', 'final', 'Map', '<', 'String', ',', 'List', '<', 'Rule', '>', '>', 'rules', '=', 'RULES', '.', 'get', '(', 'nameType', ')', '.', 'get', '(', 'rt', ')', '.', 'get', '(', 'lang', ')', ';', 'if', '(', 'rules', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""No rules found for %s, %s, %s.""', ',', 'nameType', '.', 'getName', '(', ')', ',', 'rt', '.', 'getName', '(', ')', ',', 'lang', ')', ')', ';', '}', 'return', 'rules', ';', '}', '}']","['class', 'T', '{', 'Map', 'getInstanceMap', '(', 'NameType', 'nameType', ',', 'RuleType', 'rt', ',', 'String', 'lang', ')', '{', 'Map', 'rules', ';', '}', '}']",97,21,10,76,87.35632183908046
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setFuel_1.txt,0.4926,1.0749,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",373.520844,"class T { public void setFuel(ReactantStack newFuel) { setReactant(FUEL, newFuel); } }",class T { void setFuel(ReactantStack newFuel) { setReactant(FUEL ); } },86,71,27,15,25.42372881355932,"['class', 'T', '{', 'public', 'void', 'setFuel', '(', 'ReactantStack', 'newFuel', ')', '{', 'setReactant', '(', 'FUEL', ',', 'newFuel', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setFuel', '(', 'ReactantStack', 'newFuel', ')', '{', 'setReactant', '(', 'FUEL', ')', ';', '}', '}']",20,17,10,3,30.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,removeSecurityRole_1.txt,0.4079,1.1881,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",261.754524,class T { @Override public void removeSecurityRole(String role) { securityRoles.remove(role); } },class T { void removeSecurityRole(String role) { securityRoles.remove( ); } },97,77,38,20,33.89830508474576,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'removeSecurityRole', '(', 'String', 'role', ')', '{', 'securityRoles', '.', 'remove', '(', 'role', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'removeSecurityRole', '(', 'String', 'role', ')', '{', 'securityRoles', '.', 'remove', '(', ')', ';', '}', '}']",22,18,10,4,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,loadModelData_1.txt,0.3584,1.9809,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",603.547612,"class T { @Override public ModelData loadModelData(FileHandle fileHandle, ModelLoader.ModelParameters parameters) { return parseModel(fileHandle); } }",class T { @Override ModelData loadModelData( ) { return ; } },150,61,33,89,76.06837606837607,"['class', 'T', '{', '@', 'Override', 'public', 'ModelData', 'loadModelData', '(', 'FileHandle', 'fileHandle', ',', 'ModelLoader', '.', 'ModelParameters', 'parameters', ')', '{', 'return', 'parseModel', '(', 'fileHandle', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'ModelData', 'loadModelData', '(', ')', '{', 'return', ';', '}', '}']",26,14,10,12,75.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,visitCharLiteral_1.txt,0.4465,2.0002,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",808.212641,"class T { @Override protected String visitCharLiteral(CharLiteral node, Void context) { return ""CHAR "" + formatStringLiteral(node.getValue()); } }","class T { String visitCharLiteral(CharLiteral node, Void context) { return ""CHAR "" + formatStringLiteral ; } }",146,110,36,36,32.72727272727273,"['class', 'T', '{', '@', 'Override', 'protected', 'String', 'visitCharLiteral', '(', 'CharLiteral', 'node', ',', 'Void', 'context', ')', '{', 'return', '""CHAR ""', '+', 'formatStringLiteral', '(', 'node', '.', 'getValue', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'visitCharLiteral', '(', 'CharLiteral', 'node', ',', 'Void', 'context', ')', '{', 'return', '""CHAR ""', '+', 'formatStringLiteral', ';', '}', '}']",30,20,10,10,50.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getMaxTasks_1.txt,0.4888,0.788,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.719629,class T { public int getMaxTasks() { return maxTasks; } },class T { int getMaxTasks() { return maxTasks; } },57,50,31,7,26.923076923076923,"['class', 'T', '{', 'public', 'int', 'getMaxTasks', '(', ')', '{', 'return', 'maxTasks', ';', '}', '}']","['class', 'T', '{', 'int', 'getMaxTasks', '(', ')', '{', 'return', 'maxTasks', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onPreRemove_1.txt,0.4296,1.0286,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",420.881955,"class T { @Override public void onPreRemove(IoFilterChain filterChain, String name, NextFilter nextFilter) { filterChain.getSession().getConfig().setReaderIdleTime(0); } }","class T { void onPreRemove(IoFilterChain filterChain, String name, NextFilter nextFilter) { filterChain.getSession() .setReaderIdleTime( ); } }",171,143,31,28,20.0,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onPreRemove', '(', 'IoFilterChain', 'filterChain', ',', 'String', 'name', ',', 'NextFilter', 'nextFilter', ')', '{', 'filterChain', '.', 'getSession', '(', ')', '.', 'getConfig', '(', ')', '.', 'setReaderIdleTime', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onPreRemove', '(', 'IoFilterChain', 'filterChain', ',', 'String', 'name', ',', 'NextFilter', 'nextFilter', ')', '{', 'filterChain', '.', 'getSession', '(', ')', '.', 'setReaderIdleTime', '(', ')', ';', '}', '}']",36,28,10,8,30.76923076923077
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,parseTagFileDirectives_1.txt,0.4959,1.8067,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",880.469733,"class T { public Node.Nodes parseTagFileDirectives(String inFileName, Jar jar) throws FileNotFoundException, JasperException, IOException { boolean isTagFileSave = isTagFile; boolean directiveOnlySave = directiveOnly; isTagFile = true; directiveOnly = true; Node.Nodes page = doParse(inFileName, null, jar); directiveOnly = directiveOnlySave; isTagFile = isTagFileSave; return page; } }","class T { Node.Nodes parseTagFileDirectives(String inFileName, Jar jar) throws FileNotFoundException, JasperException { boolean directiveOnlySave = directiveOnly; } }",386,166,42,220,63.95348837209303,"['class', 'T', '{', 'public', 'Node', '.', 'Nodes', 'parseTagFileDirectives', '(', 'String', 'inFileName', ',', 'Jar', 'jar', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', ',', 'IOException', '{', 'boolean', 'isTagFileSave', '=', 'isTagFile', ';', 'boolean', 'directiveOnlySave', '=', 'directiveOnly', ';', 'isTagFile', '=', 'true', ';', 'directiveOnly', '=', 'true', ';', 'Node', '.', 'Nodes', 'page', '=', 'doParse', '(', 'inFileName', ',', 'null', ',', 'jar', ')', ';', 'directiveOnly', '=', 'directiveOnlySave', ';', 'isTagFile', '=', 'isTagFileSave', ';', 'return', 'page', ';', '}', '}']","['class', 'T', '{', 'Node', '.', 'Nodes', 'parseTagFileDirectives', '(', 'String', 'inFileName', ',', 'Jar', 'jar', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', '{', 'boolean', 'directiveOnlySave', '=', 'directiveOnly', ';', '}', '}']",67,26,10,41,71.9298245614035
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setNavBarColor_1.txt,0.4374,0.9107,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",186.515348,"class T { @RequiresApi(Build.VERSION_CODES.LOLLIPOP) public static void setNavBarColor(@NonNull final Window window, @ColorInt final int color) { window.setNavigationBarColor(color); } }",class T { void setNavBarColor( ) { window.setNavigationBarColor(color); } },186,75,34,111,73.02631578947368,"['class', 'T', '{', '@', 'RequiresApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'LOLLIPOP', ')', 'public', 'static', 'void', 'setNavBarColor', '(', '@', 'NonNull', 'final', 'Window', 'window', ',', '@', 'ColorInt', 'final', 'int', 'color', ')', '{', 'window', '.', 'setNavigationBarColor', '(', 'color', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setNavBarColor', '(', ')', '{', 'window', '.', 'setNavigationBarColor', '(', 'color', ')', ';', '}', '}']",39,17,10,22,75.86206896551724
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,valueBound_1.txt,0.4852,1.7213,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",582.520589,class T { public void valueBound(final SSLSessionBindingEvent event) { CallbackUtil.safeCallback(new Runnable() { public void run() { listener.valueBound(event); } }); } },class T { void valueBound( SSLSessionBindingEvent event) { CallbackUtil.safeCallback(new Runnable() { { listener.valueBound( ); } }); } },171,137,30,34,24.113475177304963,"['class', 'T', '{', 'public', 'void', 'valueBound', '(', 'final', 'SSLSessionBindingEvent', 'event', ')', '{', 'CallbackUtil', '.', 'safeCallback', '(', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'listener', '.', 'valueBound', '(', 'event', ')', ';', '}', '}', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'valueBound', '(', 'SSLSessionBindingEvent', 'event', ')', '{', 'CallbackUtil', '.', 'safeCallback', '(', 'new', 'Runnable', '(', ')', '{', '{', 'listener', '.', 'valueBound', '(', ')', ';', '}', '}', ')', ';', '}', '}']",40,32,10,8,26.666666666666668
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getOrderByType_1.txt,0.4153,1.2209,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",227.098314,class T { public OrderByType getOrderByType() { return orderByType; } },class T { OrderByType getOrderByType() { return orderByType; } },71,64,34,7,18.91891891891892,"['class', 'T', '{', 'public', 'OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}', '}']","['class', 'T', '{', 'OrderByType', 'getOrderByType', '(', ')', '{', 'return', 'orderByType', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getSessionListener_1.txt,0.2991,1.6092,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.648,class T { public SessionAttributeListener getSessionListener() { return sessionListener; } },class T { SessionAttributeListener getSessionListener() { return sessionListener; } },92,85,38,7,12.962962962962962,"['class', 'T', '{', 'public', 'SessionAttributeListener', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}', '}']","['class', 'T', '{', 'SessionAttributeListener', 'getSessionListener', '(', ')', '{', 'return', 'sessionListener', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getTokenEndPosition_1.txt,0.9964,0.0256,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",655.554865,"class T { private static final int getTokenEndPosition(byte[] bytes, int off, int end, int version, boolean isName) { int pos = off; while (pos < end && (!CookieSupport.isHttpSeparator((char) bytes[pos]) || version == 0 && CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 && bytes[pos] != '=' && !CookieSupport.isV0Separator((char) bytes[pos]) || !isName && bytes[pos] == '=' && CookieSupport.ALLOW_EQUALS_IN_VALUE)) { pos++; } if (pos > end) { return end; } return pos; } }",class T { int getTokenEndPosition( ) { while (pos < end && CookieSupport.ALLOW_EQUALS_IN_VALUE ) pos++; } },467,107,39,360,84.11214953271028,"['class', 'T', '{', 'private', 'static', 'final', 'int', 'getTokenEndPosition', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'off', ',', 'int', 'end', ',', 'int', 'version', ',', 'boolean', 'isName', ')', '{', 'int', 'pos', '=', 'off', ';', 'while', '(', 'pos', '<', 'end', '&&', '(', '!', 'CookieSupport', '.', 'isHttpSeparator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', 'version', '==', '0', '&&', 'CookieSupport', '.', 'ALLOW_HTTP_SEPARATORS_IN_V0', '&&', 'bytes', '[', 'pos', ']', '!=', ""'='"", '&&', '!', 'CookieSupport', '.', 'isV0Separator', '(', '(', 'char', ')', 'bytes', '[', 'pos', ']', ')', '||', '!', 'isName', '&&', 'bytes', '[', 'pos', ']', '==', ""'='"", '&&', 'CookieSupport', '.', 'ALLOW_EQUALS_IN_VALUE', ')', ')', '{', 'pos', '++', ';', '}', 'if', '(', 'pos', '>', 'end', ')', '{', 'return', 'end', ';', '}', 'return', 'pos', ';', '}', '}']","['class', 'T', '{', 'int', 'getTokenEndPosition', '(', ')', '{', 'while', '(', 'pos', '<', 'end', '&&', 'CookieSupport', '.', 'ALLOW_EQUALS_IN_VALUE', ')', 'pos', '++', ';', '}', '}']",118,23,10,95,87.96296296296296
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getConditionName_1.txt,0.3356,2.9438,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",570.406931,"class T { private String getConditionName() { String conditionName = (String) propertySheetModel.getValue(CONDITION_NAME); conditionName = conditionName.trim(); if (conditionName.length() == 0) { setInlineAlertMessage(CCAlert.TYPE_ERROR, ""message.error"", ""policy.missing.conditionName""); conditionName = null; } return conditionName; } }",class T { String getConditionName() { String conditionName = (String) propertySheetModel.getValue(CONDITION_NAME); } },337,118,36,219,72.75747508305648,"['class', 'T', '{', 'private', 'String', 'getConditionName', '(', ')', '{', 'String', 'conditionName', '=', '(', 'String', ')', 'propertySheetModel', '.', 'getValue', '(', 'CONDITION_NAME', ')', ';', 'conditionName', '=', 'conditionName', '.', 'trim', '(', ')', ';', 'if', '(', 'conditionName', '.', 'length', '(', ')', '==', '0', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'TYPE_ERROR', ',', '""message.error""', ',', '""policy.missing.conditionName""', ')', ';', 'conditionName', '=', 'null', ';', '}', 'return', 'conditionName', ';', '}', '}']","['class', 'T', '{', 'String', 'getConditionName', '(', ')', '{', 'String', 'conditionName', '=', '(', 'String', ')', 'propertySheetModel', '.', 'getValue', '(', 'CONDITION_NAME', ')', ';', '}', '}']",62,23,10,39,75.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getConnectionPermissions_1.txt,0.3991,1.5334,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",452.306104,class T { @Override public ObjectPermissionSet getConnectionPermissions() throws GuacamoleException { Directory<Connection> connectionDirectory = userContext.getConnectionDirectory(); return new SharedObjectPermissionSet(connectionDirectory.getIdentifiers()); } },class T { ObjectPermissionSet getConnectionPermissions() throws GuacamoleException { return new SharedObjectPermissionSet(connectionDirectory.getIdentifiers()); } },263,164,44,99,45.20547945205479,"['class', 'T', '{', '@', 'Override', 'public', 'ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'GuacamoleException', '{', 'Directory', '<', 'Connection', '>', 'connectionDirectory', '=', 'userContext', '.', 'getConnectionDirectory', '(', ')', ';', 'return', 'new', 'SharedObjectPermissionSet', '(', 'connectionDirectory', '.', 'getIdentifiers', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'ObjectPermissionSet', 'getConnectionPermissions', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'SharedObjectPermissionSet', '(', 'connectionDirectory', '.', 'getIdentifiers', '(', ')', ')', ';', '}', '}']",38,23,10,15,53.57142857142857
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addServlets_1.txt,0.334,1.6351,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",806.480973,"class T { public static void addServlets(Tomcat tomcat) { Context ctx = tomcat.addContext("""", System.getProperty(""java.io.tmpdir"")); Tomcat.addServlet(ctx, path, new TestBug49158Servlet()); ctx.addServletMapping(""/"" + path, path); } }",class T { void addServlets(Tomcat tomcat) { Tomcat.addServlet(ctx ); } },234,72,31,162,79.80295566502463,"['class', 'T', '{', 'public', 'static', 'void', 'addServlets', '(', 'Tomcat', 'tomcat', ')', '{', 'Context', 'ctx', '=', 'tomcat', '.', 'addContext', '(', '""""', ',', 'System', '.', 'getProperty', '(', '""java.io.tmpdir""', ')', ')', ';', 'Tomcat', '.', 'addServlet', '(', 'ctx', ',', 'path', ',', 'new', 'TestBug49158Servlet', '(', ')', ')', ';', 'ctx', '.', 'addServletMapping', '(', '""/""', '+', 'path', ',', 'path', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addServlets', '(', 'Tomcat', 'tomcat', ')', '{', 'Tomcat', '.', 'addServlet', '(', 'ctx', ')', ';', '}', '}']",56,19,10,37,80.43478260869566
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,writePendingText_1.txt,0.4279,1.728,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",851.456212,"class T { private void writePendingText() throws SAXException { if (!acceptor.onText2(buf.toString(), this, null, null)) { StringRef ref = new StringRef(); acceptor.onText2(buf.toString(), this, ref, null); context.reportEvent(target, ref.str); } if (buf.length() > 1024) buf = new StringBuffer(); else buf.setLength(0); } }",class T { void writePendingText() throws SAXException { if ( acceptor.onText2( )) { } } },324,89,36,235,81.59722222222221,"['class', 'T', '{', 'private', 'void', 'writePendingText', '(', ')', 'throws', 'SAXException', '{', 'if', '(', '!', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'null', ',', 'null', ')', ')', '{', 'StringRef', 'ref', '=', 'new', 'StringRef', '(', ')', ';', 'acceptor', '.', 'onText2', '(', 'buf', '.', 'toString', '(', ')', ',', 'this', ',', 'ref', ',', 'null', ')', ';', 'context', '.', 'reportEvent', '(', 'target', ',', 'ref', '.', 'str', ')', ';', '}', 'if', '(', 'buf', '.', 'length', '(', ')', '>', '1024', ')', 'buf', '=', 'new', 'StringBuffer', '(', ')', ';', 'else', 'buf', '.', 'setLength', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'writePendingText', '(', ')', 'throws', 'SAXException', '{', 'if', '(', 'acceptor', '.', 'onText2', '(', ')', ')', '{', '}', '}', '}']",96,22,10,74,86.04651162790698
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setSoapVersion_1.txt,0.4847,1.1102,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",471.229473,class T { public void setSoapVersion(SoapVersion version) { if (version != SoapVersion.SOAP_11) { throw new UnsupportedOperationException(); } } },class T { void setSoapVersion(SoapVersion version) { if (version != SoapVersion.SOAP_11) { } } },146,96,34,50,44.642857142857146,"['class', 'T', '{', 'public', 'void', 'setSoapVersion', '(', 'SoapVersion', 'version', ')', '{', 'if', '(', 'version', '!=', 'SoapVersion', '.', 'SOAP_11', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'setSoapVersion', '(', 'SoapVersion', 'version', ')', '{', 'if', '(', 'version', '!=', 'SoapVersion', '.', 'SOAP_11', ')', '{', '}', '}', '}']",29,22,10,7,36.84210526315789
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,checkIsAlive_1.txt,0.3296,1.7891,"{'n_total': 1, 'n_valid': -1, 'n_correct': -1}",0.0,class T { void checkIsAlive() throws IllegalStateException { mContentViewCore.checkIsAlive(); } },class T { void checkIsAlive() throws IllegalStateException { mContentViewCore.checkIsAlive(); } },97,97,32,0,0.0,"['class', 'T', '{', 'void', 'checkIsAlive', '(', ')', 'throws', 'IllegalStateException', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'checkIsAlive', '(', ')', 'throws', 'IllegalStateException', '{', 'mContentViewCore', '.', 'checkIsAlive', '(', ')', ';', '}', '}']",18,18,10,0,0.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getResourceInformation_1.txt,0.4608,1.9781,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",378.292723,class T { public ResourceInformation getResourceInformation(String resourceType) { return resourceRegistry.getEntry(resourceType).getResourceInformation(); } },class T { ResourceInformation getResourceInformation(String resourceType) { return resourceRegistry.getEntry( ).getResourceInformation(); } },159,141,42,18,15.384615384615383,"['class', 'T', '{', 'public', 'ResourceInformation', 'getResourceInformation', '(', 'String', 'resourceType', ')', '{', 'return', 'resourceRegistry', '.', 'getEntry', '(', 'resourceType', ')', '.', 'getResourceInformation', '(', ')', ';', '}', '}']","['class', 'T', '{', 'ResourceInformation', 'getResourceInformation', '(', 'String', 'resourceType', ')', '{', 'return', 'resourceRegistry', '.', 'getEntry', '(', ')', '.', 'getResourceInformation', '(', ')', ';', '}', '}']",25,23,10,2,13.333333333333334
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setSocketBuffer_1.txt,0.3012,2.0785,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",297.570445,class T { @Override public void setSocketBuffer(int socketBuffer) { super.setSocketBuffer(socketBuffer); outputBuffer.setSocketBuffer(socketBuffer); } },class T { void setSocketBuffer( ) { super.setSocketBuffer(socketBuffer); } },152,76,35,76,64.95726495726495,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setSocketBuffer', '(', 'int', 'socketBuffer', ')', '{', 'super', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', 'outputBuffer', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setSocketBuffer', '(', ')', '{', 'super', '.', 'setSocketBuffer', '(', 'socketBuffer', ')', ';', '}', '}']",29,17,10,12,63.1578947368421
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getTimePoints_1.txt,0.3224,2.276,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",224.469066,class T { List<TimePoint> getTimePoints() { return Arrays.asList(timePoints); } },class T { List<TimePoint> getTimePoints() { return asList ; } },81,63,33,18,37.5,"['class', 'T', '{', 'List', '<', 'TimePoint', '>', 'getTimePoints', '(', ')', '{', 'return', 'Arrays', '.', 'asList', '(', 'timePoints', ')', ';', '}', '}']","['class', 'T', '{', 'List', '<', 'TimePoint', '>', 'getTimePoints', '(', ')', '{', 'return', 'asList', ';', '}', '}']",21,16,10,5,45.45454545454545
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getInbox_1.txt,0.3322,1.5217,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",410.07401,"class T { protected Folder getInbox() throws MessagingException { return getStore().getFolder(""INBOX""); } }","class T { Folder getInbox() { return getStore().getFolder(""INBOX""); } }",107,71,28,36,45.56962025316456,"['class', 'T', '{', 'protected', 'Folder', 'getInbox', '(', ')', 'throws', 'MessagingException', '{', 'return', 'getStore', '(', ')', '.', 'getFolder', '(', '""INBOX""', ')', ';', '}', '}']","['class', 'T', '{', 'Folder', 'getInbox', '(', ')', '{', 'return', 'getStore', '(', ')', '.', 'getFolder', '(', '""INBOX""', ')', ';', '}', '}']",23,20,10,3,23.07692307692308
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getLastmod_1.txt,0.4513,1.2012,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",222.135572,class T { public String getLastmod() { return lastmod; } },class T { String getLastmod() { return lastmod; } },58,51,30,7,25.0,"['class', 'T', '{', 'public', 'String', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}', '}']","['class', 'T', '{', 'String', 'getLastmod', '(', ')', '{', 'return', 'lastmod', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,startPreviewActivity_1.txt,0.1947,3.1609,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",1054.839365,"class T { private void startPreviewActivity() { Intent intent = PreviewActivity.newIntent(this, getMediaAction(), getCameraController().getOutputFile().toString(), cameraControlPanel.showCrop()); startActivityForResult(intent, REQUEST_PREVIEW_CODE); } }","class T { void startPreviewActivity() { Intent intent = PreviewActivity.newIntent(this, getMediaAction(), getCameraController().getOutputFile().toString() ); startActivityForResult(intent, REQUEST_PREVIEW_CODE); } }",253,215,40,38,17.84037558685446,"['class', 'T', '{', 'private', 'void', 'startPreviewActivity', '(', ')', '{', 'Intent', 'intent', '=', 'PreviewActivity', '.', 'newIntent', '(', 'this', ',', 'getMediaAction', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 'toString', '(', ')', ',', 'cameraControlPanel', '.', 'showCrop', '(', ')', ')', ';', 'startActivityForResult', '(', 'intent', ',', 'REQUEST_PREVIEW_CODE', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'startPreviewActivity', '(', ')', '{', 'Intent', 'intent', '=', 'PreviewActivity', '.', 'newIntent', '(', 'this', ',', 'getMediaAction', '(', ')', ',', 'getCameraController', '(', ')', '.', 'getOutputFile', '(', ')', '.', 'toString', '(', ')', ')', ';', 'startActivityForResult', '(', 'intent', ',', 'REQUEST_PREVIEW_CODE', ')', ';', '}', '}']",50,43,10,7,17.5
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getResponseBytes_1.txt,0.388,2.0139,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",260.962737,class T { public byte[] getResponseBytes() { return _transaction.getResponseBytes(); } },class T { byte[] getResponseBytes() { return _transaction.getResponseBytes(); } },88,81,36,7,13.461538461538462,"['class', 'T', '{', 'public', 'byte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', '_transaction', '.', 'getResponseBytes', '(', ')', ';', '}', '}']","['class', 'T', '{', 'byte', '[', ']', 'getResponseBytes', '(', ')', '{', 'return', '_transaction', '.', 'getResponseBytes', '(', ')', ';', '}', '}']",20,19,10,1,10.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getQuestionNumber_1.txt,0.26,3.5219,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",382.022641,"class T { public String getQuestionNumber() { return Validator.check(questionNumber, ""N/A""); } }",class T { String getQuestionNumber() { return Validator.check(questionNumber ); } },96,83,37,13,22.033898305084744,"['class', 'T', '{', 'public', 'String', 'getQuestionNumber', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'questionNumber', ',', '""N/A""', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getQuestionNumber', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'questionNumber', ')', ';', '}', '}']",21,18,10,3,27.27272727272727
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setOverlap_1.txt,0.4925,0.7974,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",263.906215,class T { public void setOverlap(double overlap) { this.overlap = overlap; } },class T { void setOverlap(double overlap) { this.overlap = overlap; } },78,71,30,7,14.583333333333334,"['class', 'T', '{', 'public', 'void', 'setOverlap', '(', 'double', 'overlap', ')', '{', 'this', '.', 'overlap', '=', 'overlap', ';', '}', '}']","['class', 'T', '{', 'void', 'setOverlap', '(', 'double', 'overlap', ')', '{', 'this', '.', 'overlap', '=', 'overlap', ';', '}', '}']",19,18,10,1,11.11111111111111
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getDefaultRemoteAddress_1.txt,0.4303,1.3443,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",222.032857,class T { public SocketAddress getDefaultRemoteAddress() { return defaultRemoteAddress; } },class T { SocketAddress getDefaultRemoteAddress() { return defaultRemoteAddress; } },91,84,43,7,14.583333333333334,"['class', 'T', '{', 'public', 'SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}', '}']","['class', 'T', '{', 'SocketAddress', 'getDefaultRemoteAddress', '(', ')', '{', 'return', 'defaultRemoteAddress', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getWaiter_1.txt,0.1653,4.8084,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",914.081227,class T { public SignupAttendee getWaiter(String attendeeId) { if (waitingList == null) return null; for (SignupAttendee waiter : waitingList) { if (waiter.getAttendeeUserId().equals(attendeeId)) return waiter; } return null; } },class T { SignupAttendee getWaiter( ) { return waiter; } },229,58,29,171,85.5,"['class', 'T', '{', 'public', 'SignupAttendee', 'getWaiter', '(', 'String', 'attendeeId', ')', '{', 'if', '(', 'waitingList', '==', 'null', ')', 'return', 'null', ';', 'for', '(', 'SignupAttendee', 'waiter', ':', 'waitingList', ')', '{', 'if', '(', 'waiter', '.', 'getAttendeeUserId', '(', ')', '.', 'equals', '(', 'attendeeId', ')', ')', 'return', 'waiter', ';', '}', 'return', 'null', ';', '}', '}']","['class', 'T', '{', 'SignupAttendee', 'getWaiter', '(', ')', '{', 'return', 'waiter', ';', '}', '}']",50,13,10,37,92.5
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setDebugOutput_1.txt,0.4052,1.0324,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",229.765705,class T { public static void setDebugOutput(Writer writer) { debugOutput = writer; } },class T { void setDebugOutput(Writer writer) { debugOutput = writer; } },86,72,34,14,26.923076923076923,"['class', 'T', '{', 'public', 'static', 'void', 'setDebugOutput', '(', 'Writer', 'writer', ')', '{', 'debugOutput', '=', 'writer', ';', '}', '}']","['class', 'T', '{', 'void', 'setDebugOutput', '(', 'Writer', 'writer', ')', '{', 'debugOutput', '=', 'writer', ';', '}', '}']",18,16,10,2,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getSharedState_1.txt,0.3259,2.2093,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",221.887835,class T { public Map getSharedState() { return sharedState; } },class T { Map getSharedState() { return sharedState; } },63,56,34,7,24.13793103448276,"['class', 'T', '{', 'public', 'Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}', '}']","['class', 'T', '{', 'Map', 'getSharedState', '(', ')', '{', 'return', 'sharedState', ';', '}', '}']",14,13,10,1,25.0
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setExclusionStrategies_1.txt,0.4952,0.7062,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",636.203772,class T { public Builder setExclusionStrategies(ExclusionStrategy... strategies) { for (ExclusionStrategy strategy : strategies) { addSerializationExclusionStrategy(strategy); } return this; } },class T { Builder setExclusionStrategies(ExclusionStrategy... strategies) { addSerializationExclusionStrategy( ); } },194,117,42,77,50.6578947368421,"['class', 'T', '{', 'public', 'Builder', 'setExclusionStrategies', '(', 'ExclusionStrategy', '...', 'strategies', ')', '{', 'for', '(', 'ExclusionStrategy', 'strategy', ':', 'strategies', ')', '{', 'addSerializationExclusionStrategy', '(', 'strategy', ')', ';', '}', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'setExclusionStrategies', '(', 'ExclusionStrategy', '...', 'strategies', ')', '{', 'addSerializationExclusionStrategy', '(', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isShearable_1.txt,0.4019,1.0124,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",453.896535,"class T { @Override public boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos) { IBlockState state = world.getBlockState(pos); switch((BOPPlants) state.getValue(this.variantProperty)) { case CATTAIL: case RIVERCANE: return false; default: return true; } } }","class T { boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos) { IBlockState state ; } }",275,105,31,170,69.67213114754098,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'isShearable', '(', 'ItemStack', 'item', ',', 'IBlockAccess', 'world', ',', 'BlockPos', 'pos', ')', '{', 'IBlockState', 'state', '=', 'world', '.', 'getBlockState', '(', 'pos', ')', ';', 'switch', '(', '(', 'BOPPlants', ')', 'state', '.', 'getValue', '(', 'this', '.', 'variantProperty', ')', ')', '{', 'case', 'CATTAIL', ':', 'case', 'RIVERCANE', ':', 'return', 'false', ';', 'default', ':', 'return', 'true', ';', '}', '}', '}']","['class', 'T', '{', 'boolean', 'isShearable', '(', 'ItemStack', 'item', ',', 'IBlockAccess', 'world', ',', 'BlockPos', 'pos', ')', '{', 'IBlockState', 'state', ';', '}', '}']",61,21,10,40,78.43137254901961
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,loadTweets_1.txt,0.4525,1.0848,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",1356.562639,class T { public List<Status> loadTweets(Long sinceId) throws TwitterException { Paging paging = new Paging(); paging.setCount(PAGE_LENGTH); if (sinceId != null) { paging.setSinceId(sinceId); } return twitter.getHomeTimeline(paging); } },class T { List loadTweets( ) { paging.setCount(PAGE_LENGTH); return twitter.getHomeTimeline( ); } },237,99,30,138,66.66666666666666,"['class', 'T', '{', 'public', 'List', '<', 'Status', '>', 'loadTweets', '(', 'Long', 'sinceId', ')', 'throws', 'TwitterException', '{', 'Paging', 'paging', '=', 'new', 'Paging', '(', ')', ';', 'paging', '.', 'setCount', '(', 'PAGE_LENGTH', ')', ';', 'if', '(', 'sinceId', '!=', 'null', ')', '{', 'paging', '.', 'setSinceId', '(', 'sinceId', ')', ';', '}', 'return', 'twitter', '.', 'getHomeTimeline', '(', 'paging', ')', ';', '}', '}']","['class', 'T', '{', 'List', 'loadTweets', '(', ')', '{', 'paging', '.', 'setCount', '(', 'PAGE_LENGTH', ')', ';', 'return', 'twitter', '.', 'getHomeTimeline', '(', ')', ';', '}', '}']",56,24,10,32,69.56521739130434
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getAutoSave_1.txt,0.2175,4.1036,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",458.017945,"class T { public String getAutoSave() { if (""0"".equals(autoSave)) return ""1""; return checker(autoSave, ""1""); } }","class T { String getAutoSave() { if (""0"".equals(autoSave)) return ; } }",112,71,31,41,50.617283950617285,"['class', 'T', '{', 'public', 'String', 'getAutoSave', '(', ')', '{', 'if', '(', '""0""', '.', 'equals', '(', 'autoSave', ')', ')', 'return', '""1""', ';', 'return', 'checker', '(', 'autoSave', ',', '""1""', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getAutoSave', '(', ')', '{', 'if', '(', '""0""', '.', 'equals', '(', 'autoSave', ')', ')', 'return', ';', '}', '}']",31,21,10,10,47.61904761904761
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getInUse_1.txt,0.4358,1.4175,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",265.574546,class T { public int getInUse() { return inUse.get(); } },class T { int getInUse() { return inUse.get(); } },57,50,28,7,24.13793103448276,"['class', 'T', '{', 'public', 'int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 'get', '(', ')', ';', '}', '}']","['class', 'T', '{', 'int', 'getInUse', '(', ')', '{', 'return', 'inUse', '.', 'get', '(', ')', ';', '}', '}']",18,17,10,1,12.5
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getSessionCacheSize_1.txt,0.4217,2.4938,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",260.042027,class T { public String getSessionCacheSize() { return endpoint.getSessionCacheSize(); } },class T { String getSessionCacheSize() { return endpoint.getSessionCacheSize(); } },90,83,39,7,13.725490196078432,"['class', 'T', '{', 'public', 'String', 'getSessionCacheSize', '(', ')', '{', 'return', 'endpoint', '.', 'getSessionCacheSize', '(', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getSessionCacheSize', '(', ')', '{', 'return', 'endpoint', '.', 'getSessionCacheSize', '(', ')', ';', '}', '}']",18,17,10,1,12.5
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setWidthAndHeight_1.txt,0.3766,1.6652,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",537.813053,"class T { private void setWidthAndHeight(ActivityImpl activity, Map<String, Object> activityInfo) { activityInfo.put(""width"", activity.getWidth()); activityInfo.put(""height"", activity.getHeight()); } }","class T { void setWidthAndHeight(ActivityImpl activity, Map activityInfo) { activityInfo.put(""width"" ); } }",201,107,37,94,57.3170731707317,"['class', 'T', '{', 'private', 'void', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'Map', '<', 'String', ',', 'Object', '>', 'activityInfo', ')', '{', 'activityInfo', '.', 'put', '(', '""width""', ',', 'activity', '.', 'getWidth', '(', ')', ')', ';', 'activityInfo', '.', 'put', '(', '""height""', ',', 'activity', '.', 'getHeight', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setWidthAndHeight', '(', 'ActivityImpl', 'activity', ',', 'Map', 'activityInfo', ')', '{', 'activityInfo', '.', 'put', '(', '""width""', ')', ';', '}', '}']",47,22,10,25,67.56756756756756
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createCertificateFactory_1.txt,0.4834,0.8358,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",621.033877,"class T { protected CertificateFactory createCertificateFactory(String type) throws CertificateException, NoSuchProviderException { return CertificateFactory.getInstance(type, providerName); } }","class T { CertificateFactory createCertificateFactory(String type) throws CertificateException, NoSuchProviderException { return CertificateFactory.getInstance(type, providerName); } }",194,184,44,10,6.666666666666667,"['class', 'T', '{', 'protected', 'CertificateFactory', 'createCertificateFactory', '(', 'String', 'type', ')', 'throws', 'CertificateException', ',', 'NoSuchProviderException', '{', 'return', 'CertificateFactory', '.', 'getInstance', '(', 'type', ',', 'providerName', ')', ';', '}', '}']","['class', 'T', '{', 'CertificateFactory', 'createCertificateFactory', '(', 'String', 'type', ')', 'throws', 'CertificateException', ',', 'NoSuchProviderException', '{', 'return', 'CertificateFactory', '.', 'getInstance', '(', 'type', ',', 'providerName', ')', ';', '}', '}']",27,26,10,1,5.88235294117647
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getLongB_1.txt,0.7938,0.5351,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",1683.984179,"class T { private static long getLongB(ByteBuffer bb, int index) { return makeLong(bb.get(index), bb.get(index + 1), bb.get(index + 2), bb.get(index + 3), bb.get(index + 4), bb.get(index + 5), bb.get(index + 6), bb.get(index + 7)); } }",class T { long getLongB( ) { return makeLong ; } },235,50,28,185,89.3719806763285,"['class', 'T', '{', 'private', 'static', 'long', 'getLongB', '(', 'ByteBuffer', 'bb', ',', 'int', 'index', ')', '{', 'return', 'makeLong', '(', 'bb', '.', 'get', '(', 'index', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '1', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '2', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '3', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '4', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '5', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '6', ')', ',', 'bb', '.', 'get', '(', 'index', '+', '7', ')', ')', ';', '}', '}']","['class', 'T', '{', 'long', 'getLongB', '(', ')', '{', 'return', 'makeLong', ';', '}', '}']",91,13,10,78,96.29629629629628
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,verifyResize_1.txt,0.9957,0.0127,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",1244.242548,"class T { private void verifyResize(NetworkResponse networkResponse, int maxWidth, int maxHeight, ScaleType scaleType, int expectedWidth, int expectedHeight) { ImageRequest request = new ImageRequest("""", null, maxWidth, maxHeight, scaleType, Config.RGB_565, null); Response<Bitmap> response = request.parseNetworkResponse(networkResponse); assertNotNull(response); assertTrue(response.isSuccess()); Bitmap bitmap = response.result; assertNotNull(bitmap); assertEquals(expectedWidth, bitmap.getWidth()); assertEquals(expectedHeight, bitmap.getHeight()); } }","class T { void verifyResize(NetworkResponse networkResponse , int expectedHeight) { ImageRequest request ; } }",556,110,32,446,85.1145038167939,"['class', 'T', '{', 'private', 'void', 'verifyResize', '(', 'NetworkResponse', 'networkResponse', ',', 'int', 'maxWidth', ',', 'int', 'maxHeight', ',', 'ScaleType', 'scaleType', ',', 'int', 'expectedWidth', ',', 'int', 'expectedHeight', ')', '{', 'ImageRequest', 'request', '=', 'new', 'ImageRequest', '(', '""""', ',', 'null', ',', 'maxWidth', ',', 'maxHeight', ',', 'scaleType', ',', 'Config', '.', 'RGB_565', ',', 'null', ')', ';', 'Response', '<', 'Bitmap', '>', 'response', '=', 'request', '.', 'parseNetworkResponse', '(', 'networkResponse', ')', ';', 'assertNotNull', '(', 'response', ')', ';', 'assertTrue', '(', 'response', '.', 'isSuccess', '(', ')', ')', ';', 'Bitmap', 'bitmap', '=', 'response', '.', 'result', ';', 'assertNotNull', '(', 'bitmap', ')', ';', 'assertEquals', '(', 'expectedWidth', ',', 'bitmap', '.', 'getWidth', '(', ')', ')', ';', 'assertEquals', '(', 'expectedHeight', ',', 'bitmap', '.', 'getHeight', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'verifyResize', '(', 'NetworkResponse', 'networkResponse', ',', 'int', 'expectedHeight', ')', '{', 'ImageRequest', 'request', ';', '}', '}']",112,18,10,94,92.15686274509804
code2vec,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setRemoteAdapter_1.txt,0.4841,0.7274,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",517.15838,"class T { @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) private void setRemoteAdapter(Context context, @NonNull final RemoteViews views) { views.setRemoteAdapter(R.id.widget_list, new Intent(context, DetailWidgetRemoteViewsService.class)); } }","class T { void setRemoteAdapter(Context context, @NonNull RemoteViews views) { views.setRemoteAdapter( id ); } }",248,112,36,136,64.15094339622641,"['class', 'T', '{', '@', 'TargetApi', '(', 'Build', '.', 'VERSION_CODES', '.', 'ICE_CREAM_SANDWICH', ')', 'private', 'void', 'setRemoteAdapter', '(', 'Context', 'context', ',', '@', 'NonNull', 'final', 'RemoteViews', 'views', ')', '{', 'views', '.', 'setRemoteAdapter', '(', 'R', '.', 'id', '.', 'widget_list', ',', 'new', 'Intent', '(', 'context', ',', 'DetailWidgetRemoteViewsService', '.', 'class', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setRemoteAdapter', '(', 'Context', 'context', ',', '@', 'NonNull', 'RemoteViews', 'views', ')', '{', 'views', '.', 'setRemoteAdapter', '(', 'id', ')', ';', '}', '}']",49,24,10,25,64.1025641025641
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_2.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",296.543732,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },146,68,28,78,66.10169491525424,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_4.txt,0.9917,0.0102,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",566.246326,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },223,62,28,161,82.56410256410255,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",56,15,10,41,89.13043478260869
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_5.txt,0.9863,0.0149,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",412.937642,"class T { @Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); } }",class T { @Override String toString() { return ; } },147,52,28,95,79.83193277310924,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'return', ';', '}', '}']",33,14,10,19,82.6086956521739
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_3.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",420.971899,"class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this); if (!sharedPreferences.getBoolean(OnboardingFragment.COMPLETED_ONBOARDING, false)) { startActivity(new Intent(this, OnboardingActivity.class)); } } }",class T { void onCreate( ) { super.onCreate(savedInstanceState); } },377,68,28,309,88.53868194842407,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'SharedPreferences', 'sharedPreferences', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', ';', 'if', '(', '!', 'sharedPreferences', '.', 'getBoolean', '(', 'OnboardingFragment', '.', 'COMPLETED_ONBOARDING', ',', 'false', ')', ')', '{', 'startActivity', '(', 'new', 'Intent', '(', 'this', ',', 'OnboardingActivity', '.', 'class', ')', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",70,17,10,53,88.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_1.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",259.379356,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { return ; } },158,53,26,105,79.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'return', ';', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_3.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",271.015927,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { return ; } },158,53,26,105,79.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'return', ';', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_1.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",296.019198,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },156,68,28,88,68.75,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_7.txt,0.9999,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",301.668108,"class T { @Override public String toString() { if (this.image != null) { return ELParserTreeConstants.jjtNodeName[id] + ""["" + this.image + ""]""; } return ELParserTreeConstants.jjtNodeName[id]; } }",class T { @Override String toString() { return ; } },195,52,28,143,85.62874251497006,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'image', '!=', 'null', ')', '{', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', '+', '""[""', '+', 'this', '.', 'image', '+', '""]""', ';', '}', 'return', 'ELParserTreeConstants', '.', 'jjtNodeName', '[', 'id', ']', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'return', ';', '}', '}']",47,14,10,33,89.1891891891892
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_6.txt,0.9977,0.0025,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",527.208103,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },254,62,28,192,84.95575221238938,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",70,15,10,55,91.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_2.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",787.482807,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); } }",class T { boolean equals(Object o) { if ( o) return ; } },321,57,26,264,89.49152542372882,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', ';', '}', '}']",87,18,10,69,89.6103896103896
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_6.txt,0.9999,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",261.913244,class T { @Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; } },class T { boolean equals(Object obj) { return ; } },153,51,26,102,80.31496062992126,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",41,14,10,27,87.09677419354838
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_10.txt,0.9939,0.0063,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.552961,class T { @Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); } },class T { void init() throws ServletException { super.init(); } },111,65,24,46,52.87356321839081,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",27,18,10,9,52.94117647058824
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_2.txt,0.9681,0.1118,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",314.533836,"class T { @Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); } }",class T { @Override String toString() { pw.println( ); } },282,58,28,224,88.18897637795276,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'pw', '.', 'println', '(', ')', ';', '}', '}']",81,18,10,63,88.73239436619718
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",448.786767,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },184,68,28,116,74.35897435897436,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",43,17,10,26,78.78787878787878
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_5.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",524.612555,"class T { @Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); } }","class T { void onCreate() { Log.i(LOG_TAG, ""onCreate""); } }",227,59,28,168,84.42211055276381,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', '}', '}']",56,19,10,37,80.43478260869566
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_3.txt,0.9776,0.0345,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",743.634124,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { if (null == buff) return ; else if (end - start == 0) return ; } },162,96,28,66,49.25373134328358,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', 'return', ';', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', 'return', ';', '}', '}']",46,29,10,17,47.22222222222222
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_7.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",262.22159,class T { @Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; } },class T { boolean equals(Object obj) { return ; } },148,51,26,97,79.50819672131148,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",39,14,10,25,86.20689655172413
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_5.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",408.825286,class T { @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); } },class T { boolean equals(Object o) { return true; } },198,53,26,145,84.30232558139535,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'return', 'true', ';', '}', '}']",54,15,10,39,88.63636363636364
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_10.txt,0.9995,0.0005,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",338.033504,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); } }",class T { void setUp() throws Exception { super.setUp(); } },193,60,25,133,79.16666666666666,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",39,18,10,21,72.41379310344827
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_10.txt,0.9998,0.0002,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",426.142687,class T { @Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; } },class T { @Override boolean equals(Object other) { Mark m ; } },259,63,26,196,84.12017167381974,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'Mark', 'm', ';', '}', '}']",75,17,10,58,89.23076923076924
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_1.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",480.667392,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },144,62,28,82,70.6896551724138,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",38,15,10,23,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_7.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",382.915203,"class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (null == savedInstanceState) { GuidedStepFragment.addAsRoot(this, new FirstStepFragment(), android.R.id.content); } } }",class T { @Override void onCreate(Bundle savedInstanceState) { GuidedStepFragment.addAsRoot(this ); } },231,103,28,128,63.05418719211823,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'if', '(', 'null', '==', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ',', 'new', 'FirstStepFragment', '(', ')', ',', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'GuidedStepFragment', '.', 'addAsRoot', '(', 'this', ')', ';', '}', '}']",50,21,10,29,72.5
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_6.txt,0.9988,0.0031,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",453.779894,class T { @Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; } },class T { @Override boolean onCreate() { Context context ; } },187,62,28,125,78.61635220125787,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', ';', '}', '}']",39,15,10,24,82.75862068965517
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_4.txt,0.9951,0.0056,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.467188,"class T { @Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); } }",class T { boolean equals(Object obj) { return ; } },202,51,26,151,85.79545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",64,14,10,50,92.5925925925926
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_3.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",529.274241,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { Thread.sleep( ); } },176,53,23,123,80.3921568627451,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'Thread', '.', 'sleep', '(', ')', ';', '}', '}']",51,18,10,33,80.48780487804879
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_7.txt,0.9997,0.0004,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",333.421702,"class T { @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); } }",class T { void execute() throws BuildException { super.execute(); } },177,69,27,108,72.0,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",48,18,10,30,78.94736842105263
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_3.txt,0.9992,0.0008,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",267.241795,class T { @Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); } },class T { void setUp() throws Exception { super.setUp(); } },126,60,25,66,65.34653465346535,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",31,18,10,13,61.90476190476191
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_2.txt,0.6334,0.5655,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",409.269999,"class T { @Override public void init() throws ServletException { messageSender = new MessageSender(); Thread messageSenderThread = new Thread(messageSender, ""MessageSender["" + getServletContext().getContextPath() + ""]""); messageSenderThread.setDaemon(true); messageSenderThread.start(); } }",class T { @Override void init() throws ServletException { messageSender = MessageSender ; } },290,93,24,197,74.06015037593986,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'new', 'MessageSender', '(', ')', ';', 'Thread', 'messageSenderThread', '=', 'new', 'Thread', '(', 'messageSender', ',', '""MessageSender[""', '+', 'getServletContext', '(', ')', '.', 'getContextPath', '(', ')', '+', '""]""', ')', ';', 'messageSenderThread', '.', 'setDaemon', '(', 'true', ')', ';', 'messageSenderThread', '.', 'start', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'messageSender', '=', 'MessageSender', ';', '}', '}']",56,18,10,38,82.6086956521739
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_6.txt,0.9799,0.028,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",418.788262,"class T { @Override public <T> T get(String name, Class<T> clazz) { Integer index = selectionBindings.get(name); if (index == null) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } return get(index.intValue(), clazz); } }","class T { <T> T get( ) { throw new IllegalArgumentException(""selection "" + name + "" not found""); } }",248,100,23,148,65.77777777777779,"['class', 'T', '{', '@', 'Override', 'public', '<', 'T', '>', 'T', 'get', '(', 'String', 'name', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'Integer', 'index', '=', 'selectionBindings', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'index', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', 'return', 'get', '(', 'index', '.', 'intValue', '(', ')', ',', 'clazz', ')', ';', '}', '}']","['class', 'T', '{', '<', 'T', '>', 'T', 'get', '(', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""selection ""', '+', 'name', '+', '"" not found""', ')', ';', '}', '}']",65,24,10,41,74.54545454545455
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_6.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",476.077382,"class T { public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); } }",class T { void main(String args) { System.out.println( ); } },191,61,24,130,77.84431137724552,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",54,20,10,34,77.27272727272727
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_7.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",454.761216,class T { public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); } },class T { void main(String args) { try { } catch (Exception e) { } } },166,70,24,96,67.6056338028169,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",42,22,10,20,62.5
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_7.txt,0.8366,0.1807,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",320.267055,"class T { public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; } }","class T { T get() { throw new NoSuchElementException(""No value present""); } }",121,77,23,44,44.89795918367347,"['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'T', 'get', '(', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', '}']",29,17,10,12,63.1578947368421
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_3.txt,0.855,0.1894,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",536.966669,"class T { @Before public void init() { WEB_22_LOCAL = urlFor(""resources/web-app_2_2.dtd""); WEB_31_LOCAL = urlFor(""resources/web-app_3_1.xsd""); WEBCOMMON_31_LOCAL = urlFor(""resources/web-common_3_1.xsd""); publicIds.put(XmlIdentifiers.WEB_22_PUBLIC, WEB_22_LOCAL); systemIds.put(XmlIdentifiers.WEB_31_XSD, WEB_31_LOCAL); systemIds.put(WEBCOMMON_31_LOCAL, WEBCOMMON_31_LOCAL); } }",class T { @Before void init() { publicIds.put( ); } },377,53,24,324,91.78470254957509,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'init', '(', ')', '{', 'WEB_22_LOCAL', '=', 'urlFor', '(', '""resources/web-app_2_2.dtd""', ')', ';', 'WEB_31_LOCAL', '=', 'urlFor', '(', '""resources/web-app_3_1.xsd""', ')', ';', 'WEBCOMMON_31_LOCAL', '=', 'urlFor', '(', '""resources/web-common_3_1.xsd""', ')', ';', 'publicIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_22_PUBLIC', ',', 'WEB_22_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'XmlIdentifiers', '.', 'WEB_31_XSD', ',', 'WEB_31_LOCAL', ')', ';', 'systemIds', '.', 'put', '(', 'WEBCOMMON_31_LOCAL', ',', 'WEBCOMMON_31_LOCAL', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'init', '(', ')', '{', 'publicIds', '.', 'put', '(', ')', ';', '}', '}']",65,18,10,47,85.45454545454545
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_2.txt,0.5487,0.602,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",597.754359,class T { @Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); } },class T { @Before void setUp() { session = mock ; } },119,53,25,66,70.2127659574468,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', ';', '}', '}']",30,16,10,14,70.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_6.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",505.138845,"class T { public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); } }","class T { void execute( ) { context.put(""rootContextPath"" ); } }",213,64,27,149,80.10752688172043,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'context', '.', 'put', '(', '""rootContextPath""', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_2.txt,0.9955,0.0055,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",339.695714,class T { @Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } } },class T { @Override void run() { try { } catch (Exception x) { } } },139,68,23,71,61.206896551724135,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']",37,22,10,15,55.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_4.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",549.839309,"class T { public void execute(Map<String, Object> context) throws Throwable { String contextPath = (String) context.get(""request.contextPath""); context.put(""rootContextPath"", new RootContextPath(contextPath)); } }","class T { void execute( ) { context.put(""rootContextPath"" ); } }",213,64,27,149,80.10752688172043,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ')', 'throws', 'Throwable', '{', 'String', 'contextPath', '=', '(', 'String', ')', 'context', '.', 'get', '(', '""request.contextPath""', ')', ';', 'context', '.', 'put', '(', '""rootContextPath""', ',', 'new', 'RootContextPath', '(', 'contextPath', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'context', '.', 'put', '(', '""rootContextPath""', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_1.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",331.158648,"class T { @Override public void init() { a.addAfterOrdering(""b""); b.addAfterOrdering(""z""); b.addBeforeOrdering(""y""); } }","class T { void init() { a.addAfterOrdering(""b""); } }",120,52,24,68,70.83333333333334,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', 'b', '.', 'addAfterOrdering', '(', '""z""', ')', ';', 'b', '.', 'addBeforeOrdering', '(', '""y""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'a', '.', 'addAfterOrdering', '(', '""b""', ')', ';', '}', '}']",34,17,10,17,70.83333333333334
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_5.txt,0.9754,0.0315,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",504.661719,"class T { public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; } }","class T { Object get(Map context , Object defaultv) { res = defaultv; } }",178,73,23,105,67.74193548387096,"['class', 'T', '{', 'public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}', '}']","['class', 'T', '{', 'Object', 'get', '(', 'Map', 'context', ',', 'Object', 'defaultv', ')', '{', 'res', '=', 'defaultv', ';', '}', '}']",50,19,10,31,77.5
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_5.txt,0.8552,0.1568,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",615.406504,"class T { public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); } }",class T { void main(String args) { System.out.println( ); } },263,61,24,202,84.51882845188284,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",57,20,10,37,78.72340425531915
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_4.txt,0.9993,0.0007,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",550.855134,class T { public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); } },class T { void main(String args) { NioSenderTest sender ; } },144,61,24,83,69.16666666666667,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'NioSenderTest', 'sender', ';', '}', '}']",38,15,10,23,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_4.txt,0.9907,0.0192,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",783.24645,"class T { @Override public Integer get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { Long result = wrapped.get(timeout, unit); if (result.longValue() > Integer.MAX_VALUE) { throw new ExecutionException(sm.getString(""asyncChannelWrapperSecure.tooBig"", result), null); } return new Integer(result.intValue()); } }","class T { Integer get(long timeout, TimeUnit unit) { throw ExecutionException ; } }",362,83,23,279,82.30088495575221,"['class', 'T', '{', '@', 'Override', 'public', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'Long', 'result', '=', 'wrapped', '.', 'get', '(', 'timeout', ',', 'unit', ')', ';', 'if', '(', 'result', '.', 'longValue', '(', ')', '>', 'Integer', '.', 'MAX_VALUE', ')', '{', 'throw', 'new', 'ExecutionException', '(', 'sm', '.', 'getString', '(', '""asyncChannelWrapperSecure.tooBig""', ',', 'result', ')', ',', 'null', ')', ';', '}', 'return', 'new', 'Integer', '(', 'result', '.', 'intValue', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'Integer', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', 'throw', 'ExecutionException', ';', '}', '}']",77,18,10,59,88.05970149253731
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_1.txt,0.9999,0.0001,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",255.779118,"class T { @Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); } }",class T { void setUp() throws Exception { super.setUp(); } },134,60,25,74,67.88990825688074,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",35,18,10,17,68.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_5.txt,0.9667,0.0361,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",454.257209,"class T { @Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); } }",class T { @Override void execute(Tuple tuple) { String url ; } },317,64,27,253,87.24137931034483,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', ';', '}', '}']",74,17,10,57,89.0625
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_1.txt,0.9991,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",453.56919,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { try { } catch (Exception x) { } } },133,68,23,65,59.09090909090909,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']",43,22,10,21,63.63636363636363
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_10.txt,0.965,0.0442,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",301.701474,class T { @Override public V get(Object key) { if (key == null) { return null; } return map.get(createLookupKey(key)); } },class T { V get(Object key) { return ; } },122,42,23,80,80.8080808080808,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'Object', 'key', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'map', '.', 'get', '(', 'createLookupKey', '(', 'key', ')', ')', ';', '}', '}']","['class', 'T', '{', 'V', 'get', '(', 'Object', 'key', ')', '{', 'return', ';', '}', '}']",37,14,10,23,85.18518518518519
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_5.txt,0.9248,0.1011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",480.659816,"class T { public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } } }",class T { void run() { try { } catch (Throwable t) { logger.error( ); } } },161,75,23,86,62.31884057971014,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', ')', ';', '}', '}', '}']",40,26,10,14,46.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_8.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",450.582919,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },186,53,28,133,84.17721518987342,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_1.txt,0.9999,0.0002,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",256.106626,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },135,69,27,66,61.11111111111112,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_4.txt,0.8418,0.2051,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",335.308615,class T { public void init() { barPaint = new Paint(); barPaint.setAntiAlias(true); barPaint.setColor(barColor); barPaint.setStyle(Paint.Style.FILL_AND_STROKE); } },class T { public void init() { barPaint = Paint ; } },164,53,24,111,79.28571428571428,"['class', 'T', '{', 'public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'new', 'Paint', '(', ')', ';', 'barPaint', '.', 'setAntiAlias', '(', 'true', ')', ';', 'barPaint', '.', 'setColor', '(', 'barColor', ')', ';', 'barPaint', '.', 'setStyle', '(', 'Paint', '.', 'Style', '.', 'FILL_AND_STROKE', ')', ';', '}', '}']","['class', 'T', '{', 'public', 'void', 'init', '(', ')', '{', 'barPaint', '=', 'Paint', ';', '}', '}']",43,15,10,28,84.84848484848484
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_5.txt,0.9995,0.0005,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",306.88758,"class T { @Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); } }",class T { void setUp() throws Exception { super.setUp(); } },161,60,25,101,74.26470588235294,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",30,18,10,12,60.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_1.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",560.326698,"class T { public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); } }",class T { void main(String args) { System.out.println( ); } },591,61,24,530,93.47442680776014,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",135,20,10,115,92.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_4.txt,0.3353,1.6291,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",680.934758,"class T { @Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getInstance(new RuntimeConfigBuilder().defaults(Command.PgCtl).build()); final PostgresConfig config = new PostgresConfig(Version.Main.PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password""), Command.PgCtl); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); sleep(2000); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); } }",class T { @Before void setUp() { PostgresExecutable runtime ; } },958,65,25,893,95.71275455519827,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getInstance', '(', 'new', 'RuntimeConfigBuilder', '(', ')', '.', 'defaults', '(', 'Command', '.', 'PgCtl', ')', '.', 'build', '(', ')', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ',', 'Command', '.', 'PgCtl', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'sleep', '(', '2000', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'PostgresExecutable', 'runtime', ';', '}', '}']",211,15,10,196,97.51243781094529
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_5.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",346.882695,"class T { @Override public void init(FilterConfig fConfig) throws ServletException { this.filterConfig = fConfig; this.attribute = fConfig.getInitParameter(""attribute""); } }",class T { void init( ) throws ServletException { filterConfig = fConfig; } },173,76,24,97,65.1006711409396,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'FilterConfig', 'fConfig', ')', 'throws', 'ServletException', '{', 'this', '.', 'filterConfig', '=', 'fConfig', ';', 'this', '.', 'attribute', '=', 'fConfig', '.', 'getInitParameter', '(', '""attribute""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'filterConfig', '=', 'fConfig', ';', '}', '}']",34,16,10,18,75.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_1.txt,0.9959,0.0044,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",456.315305,"class T { @Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; } }","class T { @Override V get( ) { throw new TimeoutException(""Waiting "" + timeout); } }",260,84,23,176,74.26160337552743,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'V', 'get', '(', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', '}']",55,21,10,34,75.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_9.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.490644,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },274,48,28,226,91.869918699187,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",79,14,10,65,94.20289855072464
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_4.txt,0.9991,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",390.745773,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { void run() { QUEUE.offer(obj); } },183,44,23,139,86.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', '}']",66,17,10,49,87.5
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_6.txt,0.9991,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",549.545561,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { { } } },133,40,23,93,84.54545454545455,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '{', '}', '}', '}']",43,14,10,29,87.87878787878788
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_2.txt,0.9997,0.0004,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",256.599178,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); } }",class T { void execute() throws BuildException { super.execute(); } },152,69,27,83,66.4,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_3.txt,0.4351,1.0165,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",1464.628395,"class T { @SuppressWarnings(""unchecked"") public static <T> Expression<T> get(Expression<?> path, String name) { try { Class<?> clazz = path.getClass(); Field field = clazz.getField(name); return (Expression<T>) field.get(path); } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { throw new IllegalStateException(""failed get field "" + path + ""."" + name, e); } } }",class T { <T> Expression<T> get( ) { try { return (Expression ) field.get(path); } catch ( SecurityException e) { } } },417,119,23,298,75.63451776649747,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', 'Expression', '<', '?', '>', 'path', ',', 'String', 'name', ')', '{', 'try', '{', 'Class', '<', '?', '>', 'clazz', '=', 'path', '.', 'getClass', '(', ')', ';', 'Field', 'field', '=', 'clazz', '.', 'getField', '(', 'name', ')', ';', 'return', '(', 'Expression', '<', 'T', '>', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', '|', 'SecurityException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""failed get field ""', '+', 'path', '+', '"".""', '+', 'name', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', '<', 'T', '>', 'Expression', '<', 'T', '>', 'get', '(', ')', '{', 'try', '{', 'return', '(', 'Expression', ')', 'field', '.', 'get', '(', 'path', ')', ';', '}', 'catch', '(', 'SecurityException', 'e', ')', '{', '}', '}', '}']",98,37,10,61,69.31818181818183
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_6.txt,0.9826,0.0177,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",334.096692,class T { @Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); } },class T { void setUp() throws Exception { super.setUp(); } },194,60,25,134,79.28994082840237,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",42,18,10,24,75.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_7.txt,0.9998,0.0002,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",454.813964,class T { @Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); } },class T { void init( ) { super.init(env); } },205,45,24,160,88.39779005524862,"['class', 'T', '{', '@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', '}', '}']",53,17,10,36,83.72093023255815
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_3.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",478.008531,class T { public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); } },class T { void main(String args) throws Exception { recreate = true; } },159,72,24,87,64.44444444444444,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', '}', '}']",36,18,10,18,69.23076923076923
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_10.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",377.209044,"class T { public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); } }",class T { void main(String args) { System.setProperty( ); } },148,61,24,87,70.16129032258065,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",34,18,10,16,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_2.txt,0.9839,0.018,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",490.042761,"class T { public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); } }",class T { void main(String args) throws Exception { LOG.info( ); } },285,68,24,217,83.14176245210729,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', ')', ';', '}', '}']",66,20,10,46,82.14285714285714
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_6.txt,0.9932,0.0071,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",536.211973,class T { @Override public void init(WebConnection connection) { try { sis = connection.getInputStream(); sos = connection.getOutputStream(); } catch (IOException ioe) { throw new IllegalStateException(ioe); } sis.setReadListener(new EchoReadListener()); sos.setWriteListener(new EchoWriteListener()); } },class T { void init(WebConnection connection) { try { } catch (IOException ioe) { } } },305,87,24,218,77.58007117437722,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', 'sis', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'sos', '=', 'connection', '.', 'getOutputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'ioe', ')', ';', '}', 'sis', '.', 'setReadListener', '(', 'new', 'EchoReadListener', '(', ')', ')', ';', 'sos', '.', 'setWriteListener', '(', 'new', 'EchoWriteListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', 'WebConnection', 'connection', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}']",68,22,10,46,79.3103448275862
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_2.txt,0.5293,0.6468,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",612.779618,"class T { public String get(String key, Object... args) { try { if (messageSource != null) { return messageSource.getMessage(key, args, key, LocaleUtil.getLocale()); } return key; } catch (NoSuchMessageException e) { return key; } } }",class T { String get( ) { try { return key; } catch (NoSuchMessageException e) { return key; } } },234,98,23,136,64.45497630331754,"['class', 'T', '{', 'public', 'String', 'get', '(', 'String', 'key', ',', 'Object', '...', 'args', ')', '{', 'try', '{', 'if', '(', 'messageSource', '!=', 'null', ')', '{', 'return', 'messageSource', '.', 'getMessage', '(', 'key', ',', 'args', ',', 'key', ',', 'LocaleUtil', '.', 'getLocale', '(', ')', ')', ';', '}', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}', '}']","['class', 'T', '{', 'String', 'get', '(', ')', '{', 'try', '{', 'return', 'key', ';', '}', 'catch', '(', 'NoSuchMessageException', 'e', ')', '{', 'return', 'key', ';', '}', '}', '}']",59,26,10,33,67.3469387755102
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_3.txt,0.9999,0.0002,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.246196,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); } }",class T { void execute() throws BuildException { super.execute(); } },110,69,27,41,49.39759036144578,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",26,18,10,8,50.0
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_7.txt,0.9985,0.0029,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",380.501262,class T { @Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } } },class T { @Override void run() { try { } catch (InterruptedException x) { x.printStackTrace(); } } },174,100,23,74,49.00662251655629,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']",48,28,10,20,52.63157894736842
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_7.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",449.055866,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },251,48,28,203,91.03139013452916,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",70,14,10,56,93.33333333333331
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_10.txt,0.9317,0.1117,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",377.519004,"class T { public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); } }",class T { void run() { dataRefresh(); handler.postDelayed( ); } },162,65,23,97,69.7841726618705,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', ')', ';', '}', '}']",37,20,10,17,62.96296296296296
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_6.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",372.961177,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },166,48,28,118,85.5072463768116,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",49,14,10,35,89.74358974358975
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_10.txt,0.9917,0.0102,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",569.961285,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }",class T { @Override String toString() { StringBuilder sb ; } },223,62,28,161,82.56410256410255,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', ';', '}', '}']",56,15,10,41,89.13043478260869
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_9.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",457.257774,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { try { } catch (InterruptedException e) { } } },176,79,23,97,63.39869281045751,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}']",51,22,10,29,70.73170731707317
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_4.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",491.573644,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_10.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",448.789626,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },232,48,28,184,90.19607843137256,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",71,14,10,57,93.44262295081968
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_9.txt,0.9999,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",567.974215,"class T { @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); } }",class T { @Before void setUp() { channel1 = GroupChannel ; } },329,62,25,267,87.82894736842105,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', 'channel1', '=', 'GroupChannel', ';', '}', '}']",76,16,10,60,90.9090909090909
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_8.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",377.633547,class T { @Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; } },class T { void init( ) throws ServletException { super.init( ); } },119,67,24,52,54.736842105263165,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",28,18,10,10,55.55555555555556
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_9.txt,0.9943,0.0115,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",673.951461,class T { @Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); } },class T { void init() throws ServletException { failOnBegin = getServletConfig ; } },356,84,24,272,81.92771084337349,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'getServletConfig', ';', '}', '}']",75,16,10,59,90.76923076923076
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_8.txt,0.9695,0.0357,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",488.020315,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); } }",class T { void setUp() throws Exception { super.setUp(); } },332,60,25,272,88.59934853420195,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",65,18,10,47,85.45454545454545
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_5.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",489.879124,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_8.txt,0.9991,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",377.078076,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { void run() { QUEUE.offer(obj); } },183,44,23,139,86.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', '}']",66,17,10,49,87.5
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_10.txt,0.9992,0.0015,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",258.269507,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },134,69,27,65,60.74766355140186,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_8.txt,0.999,0.0022,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",258.96328,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },138,69,27,69,62.16216216216216,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",450.808804,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },180,53,28,127,83.55263157894737,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_9.txt,0.5868,0.8345,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",588.700264,class T { public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; } },class T { CBuffer get(CharSequence key) { Entry key ; return entry == null ? null : entry.value; } },126,100,23,26,25.24271844660194,"['class', 'T', '{', 'public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']","['class', 'T', '{', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'key', ';', 'return', 'entry', '==', 'null', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']",34,26,10,8,33.33333333333333
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_9.txt,0.9597,0.0426,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",446.383558,"class T { public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } } }",class T { void main(String args) { try { } catch (Exception e) { } } },307,70,24,237,83.74558303886926,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",82,22,10,60,83.33333333333334
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_8.txt,0.9999,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",457.431624,"class T { public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); } }",class T { void main(String args) { CoordinationDemo demo ; } },136,62,24,74,66.07142857142857,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'CoordinationDemo', 'demo', ';', '}', '}']",33,15,10,18,78.26086956521739
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_8.txt,0.6972,0.6652,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",1522.700448,class T { public int get(int off) { if (start + off >= end) { throw new ArrayIndexOutOfBoundsException(); } return buff[start + off] & 0xFF; } },class T { int get( ) { if (start + off >= end) throw ArrayIndexOutOfBoundsException ; } },144,89,23,55,45.45454545454545,"['class', 'T', '{', 'public', 'int', 'get', '(', 'int', 'off', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', '{', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', '}', 'return', 'buff', '[', 'start', '+', 'off', ']', '&', '0xFF', ';', '}', '}']","['class', 'T', '{', 'int', 'get', '(', ')', '{', 'if', '(', 'start', '+', 'off', '>=', 'end', ')', 'throw', 'ArrayIndexOutOfBoundsException', ';', '}', '}']",39,21,10,18,62.06896551724138
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_9.txt,0.9999,0.0001,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",257.841264,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); } }",class T { void execute() throws BuildException { super.execute(); } },138,69,27,69,62.16216216216216,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,18,10,15,65.21739130434783
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_2.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",446.495757,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; } },class T { int hashCode() { final int prime ; } },248,48,28,200,90.9090909090909,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', ';', '}', '}']",71,14,10,57,93.44262295081968
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_3.txt,0.9998,0.0002,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",525.154413,class T { @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; } },class T { @Override int hashCode() { int result ; } },225,53,28,172,87.30964467005076,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",63,15,10,48,90.56603773584906
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_9.txt,1.0,0.0,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",793.658978,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); } }",class T { boolean equals(Object o) { if ( o) return ; } },280,57,26,223,87.79527559055119,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', ';', '}', '}']",89,18,10,71,89.87341772151899
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_8.txt,0.9998,0.0002,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",366.033786,class T { @Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } } },class T { boolean equals(Object obj) { { } } },164,46,26,118,85.5072463768116,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '{', '}', '}', '}']",44,14,10,30,88.23529411764706
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_8.txt,1.0,0.0,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",489.046001,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },331,68,28,263,86.79867986798679,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",65,17,10,48,87.27272727272727
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_9.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",640.475469,class T { @Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } } },class T { @Override void onCreate() { mNotifManager = (NotificationManager) getSystemService ; } },183,98,28,85,54.83870967741935,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onCreate', '(', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', ';', '}', '}']",39,19,10,20,68.96551724137932
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_10.txt,1.0,0.0,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",298.420922,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); } },class T { void onCreate( ) { super.onCreate(savedInstanceState); } },152,68,28,84,67.74193548387096,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",31,17,10,14,66.66666666666666
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_8.txt,0.9981,0.0026,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",222.243799,class T { @Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); } },class T { @Override public String toString() { result.append( ); } },177,68,28,109,73.15436241610739,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'result', '.', 'append', '(', ')', ';', '}', '}']",48,19,10,29,76.31578947368422
code2vec,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_9.txt,0.9776,0.0345,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",459.23142,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { @Override String toString() { { } } },162,47,28,115,85.82089552238806,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', '{', '}', '}', '}']",46,14,10,32,88.88888888888889
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_1.txt,1.0,0.0,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",482.940658,class T { @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; } },class T { boolean equals(Object obj) { return ; } },2106,51,26,2055,98.79807692307692,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', 'return', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', 'return', 'false', ';', 'GradingAttachmentData', 'other', '=', '(', 'GradingAttachmentData', ')', 'obj', ';', 'if', '(', 'attachmentId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentId', '.', 'equals', '(', 'other', '.', 'attachmentId', ')', ')', 'return', 'false', ';', 'if', '(', 'attachmentType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentType', '.', 'equals', '(', 'other', '.', 'attachmentType', ')', ')', 'return', 'false', ';', 'if', '(', 'createdBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdBy', '.', 'equals', '(', 'other', '.', 'createdBy', ')', ')', 'return', 'false', ';', 'if', '(', 'createdDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdDate', '.', 'equals', '(', 'other', '.', 'createdDate', ')', ')', 'return', 'false', ';', 'if', '(', 'description', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'description', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'description', '.', 'equals', '(', 'other', '.', 'description', ')', ')', 'return', 'false', ';', 'if', '(', 'fileSize', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'fileSize', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'fileSize', '.', 'equals', '(', 'other', '.', 'fileSize', ')', ')', 'return', 'false', ';', 'if', '(', 'filename', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'filename', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'filename', '.', 'equals', '(', 'other', '.', 'filename', ')', ')', 'return', 'false', ';', 'if', '(', 'isLink', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'isLink', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'isLink', '.', 'equals', '(', 'other', '.', 'isLink', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedBy', '.', 'equals', '(', 'other', '.', 'lastModifiedBy', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedDate', '.', 'equals', '(', 'other', '.', 'lastModifiedDate', ')', ')', 'return', 'false', ';', 'if', '(', 'location', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'location', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'location', '.', 'equals', '(', 'other', '.', 'location', ')', ')', 'return', 'false', ';', 'if', '(', 'mimeType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'mimeType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'mimeType', '.', 'equals', '(', 'other', '.', 'mimeType', ')', ')', 'return', 'false', ';', 'if', '(', 'resourceId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'resourceId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceId', '.', 'equals', '(', 'other', '.', 'resourceId', ')', ')', 'return', 'false', ';', 'if', '(', 'status', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'status', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'status', '.', 'equals', '(', 'other', '.', 'status', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",549,14,10,535,99.25788497217069
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_3.txt,0.9995,0.0006,"{'n_total': 11, 'n_valid': -1, 'n_correct': -1}",1081.877223,class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (!(obj instanceof NTRUSigningKeyGenerationParameters)) { return false; } NTRUSigningKeyGenerationParameters other = (NTRUSigningKeyGenerationParameters) obj; if (B != other.B) { return false; } if (N != other.N) { return false; } if (basisType != other.basisType) { return false; } if (Double.doubleToLongBits(beta) != Double.doubleToLongBits(other.beta)) { return false; } if (Double.doubleToLongBits(betaSq) != Double.doubleToLongBits(other.betaSq)) { return false; } if (bitsF != other.bitsF) { return false; } if (d != other.d) { return false; } if (d1 != other.d1) { return false; } if (d2 != other.d2) { return false; } if (d3 != other.d3) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (keyGenAlg != other.keyGenAlg) { return false; } if (Double.doubleToLongBits(keyNormBound) != Double.doubleToLongBits(other.keyNormBound)) { return false; } if (Double.doubleToLongBits(keyNormBoundSq) != Double.doubleToLongBits(other.keyNormBoundSq)) { return false; } if (Double.doubleToLongBits(normBound) != Double.doubleToLongBits(other.normBound)) { return false; } if (Double.doubleToLongBits(normBoundSq) != Double.doubleToLongBits(other.normBoundSq)) { return false; } if (polyType != other.polyType) { return false; } if (primeCheck != other.primeCheck) { return false; } if (q != other.q) { return false; } if (signFailTolerance != other.signFailTolerance) { return false; } if (sparse != other.sparse) { return false; } return true; } },class T { boolean equals(Object obj) { return ; } },1699,51,26,1648,98.5056784219964,"['class', 'T', '{', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', '(', 'obj', 'instanceof', 'NTRUSigningKeyGenerationParameters', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUSigningKeyGenerationParameters', 'other', '=', '(', 'NTRUSigningKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'B', '!=', 'other', '.', 'B', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'basisType', '!=', 'other', '.', 'basisType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'beta', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'beta', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'betaSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'betaSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bitsF', '!=', 'other', '.', 'bitsF', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd', '!=', 'other', '.', 'd', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd1', '!=', 'other', '.', 'd1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd2', '!=', 'other', '.', 'd2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd3', '!=', 'other', '.', 'd3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'keyGenAlg', '!=', 'other', '.', 'keyGenAlg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'primeCheck', '!=', 'other', '.', 'primeCheck', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'signFailTolerance', '!=', 'other', '.', 'signFailTolerance', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",427,14,10,413,99.04076738609112
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_1.txt,0.8582,0.153,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",531.042918,"class T { @Override protected void onCreate(Bundle savedInstanceState) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy); super.onCreate(savedInstanceState); setContentView(R.layout.main); map = (MapView) findViewById(R.id.map); map.setBuiltInZoomControls(true); map.setMultiTouchControls(true); GeoPoint startPoint = new GeoPoint(48.13, -1.63); IMapController mapController = map.getController(); mapController.setZoom(10.0); mapController.setCenter(startPoint); Marker startMarker = new Marker(map); startMarker.setPosition(startPoint); startMarker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_BOTTOM); startMarker.setTitle(""Start point""); startMarker.setDraggable(true); startMarker.setOnMarkerDragListener(new OnMarkerDragListenerDrawer()); map.getOverlays().add(startMarker); RoadManager roadManager = new OSRMRoadManager(this); ArrayList<GeoPoint> waypoints = new ArrayList<GeoPoint>(); waypoints.add(startPoint); GeoPoint endPoint = new GeoPoint(48.4, -1.9); waypoints.add(endPoint); Road road = roadManager.getRoad(waypoints); if (road.mStatus != Road.STATUS_OK) Toast.makeText(this, ""Error when loading the road - status="" + road.mStatus, Toast.LENGTH_SHORT).show(); Polyline roadOverlay = RoadManager.buildRoadOverlay(road); map.getOverlays().add(roadOverlay); FolderOverlay roadMarkers = new FolderOverlay(); map.getOverlays().add(roadMarkers); Drawable nodeIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_node, null); for (int i = 0; i < road.mNodes.size(); i++) { RoadNode node = road.mNodes.get(i); Marker nodeMarker = new Marker(map); nodeMarker.setPosition(node.mLocation); nodeMarker.setIcon(nodeIcon); nodeMarker.setTitle(""Step "" + i); nodeMarker.setSnippet(node.mInstructions); nodeMarker.setSubDescription(Road.getLengthDurationText(this, node.mLength, node.mDuration)); Drawable iconContinue = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_continue, null); nodeMarker.setImage(iconContinue); roadMarkers.add(nodeMarker); } NominatimPOIProvider poiProvider = new NominatimPOIProvider(""OsmNavigator/1.0""); ArrayList<POI> pois = poiProvider.getPOICloseTo(startPoint, ""cinema"", 50, 0.1); RadiusMarkerClusterer poiMarkers = new RadiusMarkerClusterer(this); Drawable clusterIconD = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_cluster, null); Bitmap clusterIcon = ((BitmapDrawable) clusterIconD).getBitmap(); poiMarkers.setIcon(clusterIcon); poiMarkers.getTextPaint().setTextSize(12 * getResources().getDisplayMetrics().density); poiMarkers.mAnchorV = Marker.ANCHOR_BOTTOM; poiMarkers.mTextAnchorU = 0.70f; poiMarkers.mTextAnchorV = 0.27f; map.getOverlays().add(poiMarkers); Drawable poiIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_default, null); if (pois != null) { for (POI poi : pois) { Marker poiMarker = new Marker(map); poiMarker.setTitle(poi.mType); poiMarker.setSnippet(poi.mDescription); poiMarker.setPosition(poi.mLocation); poiMarker.setIcon(poiIcon); if (poi.mThumbnail != null) { poiMarker.setImage(new BitmapDrawable(getResources(), poi.mThumbnail)); } poiMarker.setInfoWindow(new CustomInfoWindow(map)); poiMarker.setRelatedObject(poi); poiMarkers.add(poiMarker); } } mKmlDocument = new KmlDocument(); OverpassAPIProvider overpassProvider = new OverpassAPIProvider(); BoundingBox oBB = new BoundingBox(startPoint.getLatitude() + 0.25, startPoint.getLongitude() + 0.25, startPoint.getLatitude() - 0.25, startPoint.getLongitude() - 0.25); String oUrl = overpassProvider.urlForTagSearchKml(""highway=speed_camera"", oBB, 500, 30); boolean ok = overpassProvider.addInKmlFolder(mKmlDocument.mKmlRoot, oUrl); if (ok) { Drawable defaultMarker = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_kml_point, null); Bitmap defaultBitmap = ((BitmapDrawable) defaultMarker).getBitmap(); Style defaultStyle = new Style(defaultBitmap, 0x901010AA, 3.0f, 0x20AA1010); KmlFeature.Styler styler = new MyKmlStyler(defaultStyle); FolderOverlay kmlOverlay = (FolderOverlay) mKmlDocument.mKmlRoot.buildOverlay(map, defaultStyle, styler, mKmlDocument); map.getOverlays().add(kmlOverlay); BoundingBox bb = mKmlDocument.mKmlRoot.getBoundingBox(); if (bb != null) { setInitialViewOn(bb); } } else Toast.makeText(this, ""Error when loading KML"", Toast.LENGTH_SHORT).show(); if (mKmlDocument.mKmlRoot != null) { KmlFolder root = mKmlDocument.mKmlRoot; root.addOverlay(roadOverlay, mKmlDocument); root.addOverlay(roadMarkers, mKmlDocument); mKmlDocument.saveAsKML(mKmlDocument.getDefaultPathForAndroid(""my_route.kml"")); mKmlDocument.saveAsGeoJSON(mKmlDocument.getDefaultPathForAndroid(""my_route.json"")); } MapEventsOverlay mapEventsOverlay = new MapEventsOverlay(this); map.getOverlays().add(0, mapEventsOverlay); } }",class T { void onCreate(Bundle savedInstanceState) { root.addOverlay( ); } },4790,76,28,4714,98.9920201595968,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'StrictMode', '.', 'ThreadPolicy', 'policy', '=', 'new', 'StrictMode', '.', 'ThreadPolicy', '.', 'Builder', '(', ')', '.', 'permitAll', '(', ')', '.', 'build', '(', ')', ';', 'StrictMode', '.', 'setThreadPolicy', '(', 'policy', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'map', '=', '(', 'MapView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'map', ')', ';', 'map', '.', 'setBuiltInZoomControls', '(', 'true', ')', ';', 'map', '.', 'setMultiTouchControls', '(', 'true', ')', ';', 'GeoPoint', 'startPoint', '=', 'new', 'GeoPoint', '(', '48.13', ',', '-', '1.63', ')', ';', 'IMapController', 'mapController', '=', 'map', '.', 'getController', '(', ')', ';', 'mapController', '.', 'setZoom', '(', '10.0', ')', ';', 'mapController', '.', 'setCenter', '(', 'startPoint', ')', ';', 'Marker', 'startMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'startMarker', '.', 'setPosition', '(', 'startPoint', ')', ';', 'startMarker', '.', 'setAnchor', '(', 'Marker', '.', 'ANCHOR_CENTER', ',', 'Marker', '.', 'ANCHOR_BOTTOM', ')', ';', 'startMarker', '.', 'setTitle', '(', '""Start point""', ')', ';', 'startMarker', '.', 'setDraggable', '(', 'true', ')', ';', 'startMarker', '.', 'setOnMarkerDragListener', '(', 'new', 'OnMarkerDragListenerDrawer', '(', ')', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'startMarker', ')', ';', 'RoadManager', 'roadManager', '=', 'new', 'OSRMRoadManager', '(', 'this', ')', ';', 'ArrayList', '<', 'GeoPoint', '>', 'waypoints', '=', 'new', 'ArrayList', '<', 'GeoPoint', '>', '(', ')', ';', 'waypoints', '.', 'add', '(', 'startPoint', ')', ';', 'GeoPoint', 'endPoint', '=', 'new', 'GeoPoint', '(', '48.4', ',', '-', '1.9', ')', ';', 'waypoints', '.', 'add', '(', 'endPoint', ')', ';', 'Road', 'road', '=', 'roadManager', '.', 'getRoad', '(', 'waypoints', ')', ';', 'if', '(', 'road', '.', 'mStatus', '!=', 'Road', '.', 'STATUS_OK', ')', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading the road - status=""', '+', 'road', '.', 'mStatus', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'Polyline', 'roadOverlay', '=', 'RoadManager', '.', 'buildRoadOverlay', '(', 'road', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadOverlay', ')', ';', 'FolderOverlay', 'roadMarkers', '=', 'new', 'FolderOverlay', '(', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadMarkers', ')', ';', 'Drawable', 'nodeIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_node', ',', 'null', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'road', '.', 'mNodes', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'RoadNode', 'node', '=', 'road', '.', 'mNodes', '.', 'get', '(', 'i', ')', ';', 'Marker', 'nodeMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'nodeMarker', '.', 'setPosition', '(', 'node', '.', 'mLocation', ')', ';', 'nodeMarker', '.', 'setIcon', '(', 'nodeIcon', ')', ';', 'nodeMarker', '.', 'setTitle', '(', '""Step ""', '+', 'i', ')', ';', 'nodeMarker', '.', 'setSnippet', '(', 'node', '.', 'mInstructions', ')', ';', 'nodeMarker', '.', 'setSubDescription', '(', 'Road', '.', 'getLengthDurationText', '(', 'this', ',', 'node', '.', 'mLength', ',', 'node', '.', 'mDuration', ')', ')', ';', 'Drawable', 'iconContinue', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'ic_continue', ',', 'null', ')', ';', 'nodeMarker', '.', 'setImage', '(', 'iconContinue', ')', ';', 'roadMarkers', '.', 'add', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', 'poiProvider', '=', 'new', 'NominatimPOIProvider', '(', '""OsmNavigator/1.0""', ')', ';', 'ArrayList', '<', 'POI', '>', 'pois', '=', 'poiProvider', '.', 'getPOICloseTo', '(', 'startPoint', ',', '""cinema""', ',', '50', ',', '0.1', ')', ';', 'RadiusMarkerClusterer', 'poiMarkers', '=', 'new', 'RadiusMarkerClusterer', '(', 'this', ')', ';', 'Drawable', 'clusterIconD', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_cluster', ',', 'null', ')', ';', 'Bitmap', 'clusterIcon', '=', '(', '(', 'BitmapDrawable', ')', 'clusterIconD', ')', '.', 'getBitmap', '(', ')', ';', 'poiMarkers', '.', 'setIcon', '(', 'clusterIcon', ')', ';', 'poiMarkers', '.', 'getTextPaint', '(', ')', '.', 'setTextSize', '(', '12', '*', 'getResources', '(', ')', '.', 'getDisplayMetrics', '(', ')', '.', 'density', ')', ';', 'poiMarkers', '.', 'mAnchorV', '=', 'Marker', '.', 'ANCHOR_BOTTOM', ';', 'poiMarkers', '.', 'mTextAnchorU', '=', '0.70f', ';', 'poiMarkers', '.', 'mTextAnchorV', '=', '0.27f', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'poiMarkers', ')', ';', 'Drawable', 'poiIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_default', ',', 'null', ')', ';', 'if', '(', 'pois', '!=', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', 'Marker', 'poiMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'poiMarker', '.', 'setTitle', '(', 'poi', '.', 'mType', ')', ';', 'poiMarker', '.', 'setSnippet', '(', 'poi', '.', 'mDescription', ')', ';', 'poiMarker', '.', 'setPosition', '(', 'poi', '.', 'mLocation', ')', ';', 'poiMarker', '.', 'setIcon', '(', 'poiIcon', ')', ';', 'if', '(', 'poi', '.', 'mThumbnail', '!=', 'null', ')', '{', 'poiMarker', '.', 'setImage', '(', 'new', 'BitmapDrawable', '(', 'getResources', '(', ')', ',', 'poi', '.', 'mThumbnail', ')', ')', ';', '}', 'poiMarker', '.', 'setInfoWindow', '(', 'new', 'CustomInfoWindow', '(', 'map', ')', ')', ';', 'poiMarker', '.', 'setRelatedObject', '(', 'poi', ')', ';', 'poiMarkers', '.', 'add', '(', 'poiMarker', ')', ';', '}', '}', 'mKmlDocument', '=', 'new', 'KmlDocument', '(', ')', ';', 'OverpassAPIProvider', 'overpassProvider', '=', 'new', 'OverpassAPIProvider', '(', ')', ';', 'BoundingBox', 'oBB', '=', 'new', 'BoundingBox', '(', 'startPoint', '.', 'getLatitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLatitude', '(', ')', '-', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '-', '0.25', ')', ';', 'String', 'oUrl', '=', 'overpassProvider', '.', 'urlForTagSearchKml', '(', '""highway=speed_camera""', ',', 'oBB', ',', '500', ',', '30', ')', ';', 'boolean', 'ok', '=', 'overpassProvider', '.', 'addInKmlFolder', '(', 'mKmlDocument', '.', 'mKmlRoot', ',', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'Drawable', 'defaultMarker', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_kml_point', ',', 'null', ')', ';', 'Bitmap', 'defaultBitmap', '=', '(', '(', 'BitmapDrawable', ')', 'defaultMarker', ')', '.', 'getBitmap', '(', ')', ';', 'Style', 'defaultStyle', '=', 'new', 'Style', '(', 'defaultBitmap', ',', '0x901010AA', ',', '3.0f', ',', '0x20AA1010', ')', ';', 'KmlFeature', '.', 'Styler', 'styler', '=', 'new', 'MyKmlStyler', '(', 'defaultStyle', ')', ';', 'FolderOverlay', 'kmlOverlay', '=', '(', 'FolderOverlay', ')', 'mKmlDocument', '.', 'mKmlRoot', '.', 'buildOverlay', '(', 'map', ',', 'defaultStyle', ',', 'styler', ',', 'mKmlDocument', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'kmlOverlay', ')', ';', 'BoundingBox', 'bb', '=', 'mKmlDocument', '.', 'mKmlRoot', '.', 'getBoundingBox', '(', ')', ';', 'if', '(', 'bb', '!=', 'null', ')', '{', 'setInitialViewOn', '(', 'bb', ')', ';', '}', '}', 'else', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading KML""', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'if', '(', 'mKmlDocument', '.', 'mKmlRoot', '!=', 'null', ')', '{', 'KmlFolder', 'root', '=', 'mKmlDocument', '.', 'mKmlRoot', ';', 'root', '.', 'addOverlay', '(', 'roadOverlay', ',', 'mKmlDocument', ')', ';', 'root', '.', 'addOverlay', '(', 'roadMarkers', ',', 'mKmlDocument', ')', ';', 'mKmlDocument', '.', 'saveAsKML', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.kml""', ')', ')', ';', 'mKmlDocument', '.', 'saveAsGeoJSON', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.json""', ')', ')', ';', '}', 'MapEventsOverlay', 'mapEventsOverlay', '=', 'new', 'MapEventsOverlay', '(', 'this', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', '0', ',', 'mapEventsOverlay', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'root', '.', 'addOverlay', '(', ')', ';', '}', '}']",1035,18,10,1017,99.21951219512196
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",724.934272,"class T { @Override protected void onCreate(Bundle savedInstanceState) { setContentView(R.layout.activity_main); super.onCreate(savedInstanceState); ViewGroup mainLayout = (ViewGroup) this.findViewById(android.R.id.content); mainLayout.setOnClickListener(mClickListener); mainLayout.setKeepScreenOn(true); byte[] applicationKey = null; try { AssetManager assetManager = getAssets(); InputStream inputStream = assetManager.open(""key.der"", AssetManager.ACCESS_BUFFER); applicationKey = new byte[inputStream.available()]; inputStream.read(applicationKey); inputStream.close(); } catch (IOException e) { e.printStackTrace(); } if (null == applicationKey) { Log.e(TAG, ""Failed to load signing key""); return; } mOuyaFacade = OuyaFacade.getInstance(); Bundle developerInfo = new Bundle(); developerInfo.putString(OuyaFacade.OUYA_DEVELOPER_ID, ""310a8f51-4d6e-4ae5-bda0-b93878e5f5d0""); developerInfo.putByteArray(OuyaFacade.OUYA_DEVELOPER_PUBLIC_KEY, applicationKey); mOuyaFacade.init(this, developerInfo); txtSystem = (TextView) findViewById(R.id.txtSystem); txtController = (TextView) findViewById(R.id.txtController); imgButtonMenu = (ImageView) findViewById(R.id.imgButtonMenu); txtKeyCode = (TextView) findViewById(R.id.txtKeyCode); txtKeyCode2 = (TextView) findViewById(R.id.txtKeyCode2); imgControllerO = (ImageView) findViewById(R.id.imgControllerO); imgControllerU = (ImageView) findViewById(R.id.imgControllerU); imgControllerY = (ImageView) findViewById(R.id.imgControllerY); imgControllerA = (ImageView) findViewById(R.id.imgControllerA); imgControllerL1 = (ImageView) findViewById(R.id.imgControllerL1); imgControllerL2 = (ImageView) findViewById(R.id.imgControllerL2); imgControllerL3 = (ImageView) findViewById(R.id.imgControllerl3); imgControllerR1 = (ImageView) findViewById(R.id.imgControllerR1); imgControllerR2 = (ImageView) findViewById(R.id.imgControllerR2); imgControllerR3 = (ImageView) findViewById(R.id.imgControllerR3); imgControllerDpad = (ImageView) findViewById(R.id.imgControllerDpad); imgControllerDpadDown = (ImageView) findViewById(R.id.imgControllerDpadDown); imgControllerDpadLeft = (ImageView) findViewById(R.id.imgControllerDpadLeft); imgControllerDpadRight = (ImageView) findViewById(R.id.imgControllerDpadRight); imgControllerDpadUp = (ImageView) findViewById(R.id.imgControllerDpadUp); imgControllerBack = (ImageView) findViewById(R.id.imgControllerBack); imgControllerHome = (ImageView) findViewById(R.id.imgControllerHome); imgControllerMenu = (ImageView) findViewById(R.id.imgControllerMenu); imgControllerNext = (ImageView) findViewById(R.id.imgControllerNext); imgControllerPrevious = (ImageView) findViewById(R.id.imgControllerPrevious); imgControllerPower = (ImageView) findViewById(R.id.imgControllerPower); imgControllerLS = (ImageView) findViewById(R.id.imgControllerLS); imgControllerRS = (ImageView) findViewById(R.id.imgControllerRS); imgButtonA = (ImageView) findViewById(R.id.imgButtonA); imgDpadDown = (ImageView) findViewById(R.id.imgDpadDown); imgDpadLeft = (ImageView) findViewById(R.id.imgDpadLeft); imgDpadRight = (ImageView) findViewById(R.id.imgDpadRight); imgDpadUp = (ImageView) findViewById(R.id.imgDpadUp); imgLeftStick = (ImageView) findViewById(R.id.imgLeftStick); imgLeftBumper = (ImageView) findViewById(R.id.imgLeftBumper); imgLeftTrigger = (ImageView) findViewById(R.id.imgLeftTrigger); imgButtonO = (ImageView) findViewById(R.id.imgButtonO); imgRightStick = (ImageView) findViewById(R.id.imgRightStick); imgRightBumper = (ImageView) findViewById(R.id.imgRightBumper); imgRightTrigger = (ImageView) findViewById(R.id.imgRightTrigger); imgLeftThumb = (ImageView) findViewById(R.id.imgLeftThumb); imgRightThumb = (ImageView) findViewById(R.id.imgRightThumb); imgButtonU = (ImageView) findViewById(R.id.imgButtonU); imgButtonY = (ImageView) findViewById(R.id.imgButtonY); OuyaInputMapper.setEnableControllerDispatch(true); OuyaController.showCursor(true); Thread timer = new Thread() { public void run() { while (mWaitToExit) { if (mMenuDetected != 0 && mMenuDetected < System.nanoTime()) { mMenuDetected = 0; Runnable runnable = new Runnable() { public void run() { imgButtonMenu.setVisibility(View.INVISIBLE); } }; runOnUiThread(runnable); } try { Thread.sleep(50); } catch (InterruptedException e) { } } } }; timer.start(); } }",class T { void onCreate(Bundle savedInstanceState) { setContentView( ); } },4292,75,28,4217,98.89774859287056,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'ViewGroup', 'mainLayout', '=', '(', 'ViewGroup', ')', 'this', '.', 'findViewById', '(', 'android', '.', 'R', '.', 'id', '.', 'content', ')', ';', 'mainLayout', '.', 'setOnClickListener', '(', 'mClickListener', ')', ';', 'mainLayout', '.', 'setKeepScreenOn', '(', 'true', ')', ';', 'byte', '[', ']', 'applicationKey', '=', 'null', ';', 'try', '{', 'AssetManager', 'assetManager', '=', 'getAssets', '(', ')', ';', 'InputStream', 'inputStream', '=', 'assetManager', '.', 'open', '(', '""key.der""', ',', 'AssetManager', '.', 'ACCESS_BUFFER', ')', ';', 'applicationKey', '=', 'new', 'byte', '[', 'inputStream', '.', 'available', '(', ')', ']', ';', 'inputStream', '.', 'read', '(', 'applicationKey', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'if', '(', 'null', '==', 'applicationKey', ')', '{', 'Log', '.', 'e', '(', 'TAG', ',', '""Failed to load signing key""', ')', ';', 'return', ';', '}', 'mOuyaFacade', '=', 'OuyaFacade', '.', 'getInstance', '(', ')', ';', 'Bundle', 'developerInfo', '=', 'new', 'Bundle', '(', ')', ';', 'developerInfo', '.', 'putString', '(', 'OuyaFacade', '.', 'OUYA_DEVELOPER_ID', ',', '""310a8f51-4d6e-4ae5-bda0-b93878e5f5d0""', ')', ';', 'developerInfo', '.', 'putByteArray', '(', 'OuyaFacade', '.', 'OUYA_DEVELOPER_PUBLIC_KEY', ',', 'applicationKey', ')', ';', 'mOuyaFacade', '.', 'init', '(', 'this', ',', 'developerInfo', ')', ';', 'txtSystem', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtSystem', ')', ';', 'txtController', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtController', ')', ';', 'imgButtonMenu', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonMenu', ')', ';', 'txtKeyCode', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtKeyCode', ')', ';', 'txtKeyCode2', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'txtKeyCode2', ')', ';', 'imgControllerO', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerO', ')', ';', 'imgControllerU', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerU', ')', ';', 'imgControllerY', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerY', ')', ';', 'imgControllerA', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerA', ')', ';', 'imgControllerL1', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerL1', ')', ';', 'imgControllerL2', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerL2', ')', ';', 'imgControllerL3', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerl3', ')', ';', 'imgControllerR1', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR1', ')', ';', 'imgControllerR2', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR2', ')', ';', 'imgControllerR3', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerR3', ')', ';', 'imgControllerDpad', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpad', ')', ';', 'imgControllerDpadDown', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadDown', ')', ';', 'imgControllerDpadLeft', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadLeft', ')', ';', 'imgControllerDpadRight', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadRight', ')', ';', 'imgControllerDpadUp', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerDpadUp', ')', ';', 'imgControllerBack', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerBack', ')', ';', 'imgControllerHome', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerHome', ')', ';', 'imgControllerMenu', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerMenu', ')', ';', 'imgControllerNext', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerNext', ')', ';', 'imgControllerPrevious', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerPrevious', ')', ';', 'imgControllerPower', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerPower', ')', ';', 'imgControllerLS', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerLS', ')', ';', 'imgControllerRS', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgControllerRS', ')', ';', 'imgButtonA', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonA', ')', ';', 'imgDpadDown', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadDown', ')', ';', 'imgDpadLeft', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadLeft', ')', ';', 'imgDpadRight', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadRight', ')', ';', 'imgDpadUp', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgDpadUp', ')', ';', 'imgLeftStick', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftStick', ')', ';', 'imgLeftBumper', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftBumper', ')', ';', 'imgLeftTrigger', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftTrigger', ')', ';', 'imgButtonO', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonO', ')', ';', 'imgRightStick', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightStick', ')', ';', 'imgRightBumper', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightBumper', ')', ';', 'imgRightTrigger', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightTrigger', ')', ';', 'imgLeftThumb', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgLeftThumb', ')', ';', 'imgRightThumb', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgRightThumb', ')', ';', 'imgButtonU', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonU', ')', ';', 'imgButtonY', '=', '(', 'ImageView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'imgButtonY', ')', ';', 'OuyaInputMapper', '.', 'setEnableControllerDispatch', '(', 'true', ')', ';', 'OuyaController', '.', 'showCursor', '(', 'true', ')', ';', 'Thread', 'timer', '=', 'new', 'Thread', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'while', '(', 'mWaitToExit', ')', '{', 'if', '(', 'mMenuDetected', '!=', '0', '&&', 'mMenuDetected', '<', 'System', '.', 'nanoTime', '(', ')', ')', '{', 'mMenuDetected', '=', '0', ';', 'Runnable', 'runnable', '=', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'imgButtonMenu', '.', 'setVisibility', '(', 'View', '.', 'INVISIBLE', ')', ';', '}', '}', ';', 'runOnUiThread', '(', 'runnable', ')', ';', '}', 'try', '{', 'Thread', '.', 'sleep', '(', '50', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}', '}', ';', 'timer', '.', 'start', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'setContentView', '(', ')', ';', '}', '}']",926,16,10,910,99.34497816593888
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_5.txt,0.9997,0.0003,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",268.274605,"class T { @Override protected void onCreate(Bundle savedInstanceState) { if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(""theme"", false)) { setTheme(R.style.DayTheme); } super.onCreate(savedInstanceState); addPreferencesFromResource(R.xml.preference); findPreference(""super_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object o) { MainActivity.writePreferences(o.toString(), SUPER_MODE_NAME); return true; } }); findPreference(""only_once"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ONLY_ONCE_NAME); return true; } }); findPreference(""standard_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), STANDARD_MODE_NAME); return true; } }); findPreference(""import"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { final AppCompatEditText editText = new AppCompatEditText(PreferencesActivity.this); editText.setHint(R.string.import_rules); new AlertDialog.Builder(PreferencesActivity.this).setTitle(R.string.conf_import_rules_name).setView(editText).setPositiveButton(R.string.OK, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialogInterface, int i) { MainActivity.appendPreferences(""
"" + editText.getText().toString(), Constant.LIST_NAME); } }).setNegativeButton(R.string.cancel, null).show(); return false; } }); findPreference(""online_rules"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { setResult(RESULT_OK); finish(); return false; } }); findPreference(""about"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { clickTime++; if (clickTime >= 5 * 59) { clickTime = 0; try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id="" + getPackageName()))); } catch (Throwable ignored) { } Toast.makeText(PreferencesActivity.this, R.string.give_me_five_stars, Toast.LENGTH_LONG).show(); } preference.setSummary(String.format(Locale.CHINA, getString(R.string.conf_joke), clickTime / 59, clickTime % 59)); return false; } }); findPreference(""version"").setSummary(getVersionName(this)); findPreference(""pay"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { Toast.makeText(PreferencesActivity.this, R.string.no_donate, Toast.LENGTH_SHORT).show(); return false; } }); findPreference(""source"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new AlertDialog.Builder(PreferencesActivity.this).setTitle(""Open Source"").setMessage(""Nothing"").setPositiveButton(getString(R.string.OK), null).show(); return false; } }); findPreference(""qq"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://jq.qq.com/?_wv=1027&k=4EepPOs""))); } catch (Throwable ignored) { } return false; } }); findPreference(""guide"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { setResult(RESULT_GUIDE); finish(); } catch (ActivityNotFoundException a) { a.printStackTrace(); Toast.makeText(PreferencesActivity.this, getString(R.string.unsupport_of_package), Toast.LENGTH_SHORT).show(); } return false; } }); findPreference(""log"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new Thread(new Runnable() { @Override public void run() { final String bug = String.format(Locale.CHINA, ""Logcat:

%s

"" + ""=================

"" + ""XposedLog:

%s

"" + ""=================

"" + ""Phone:

%s

"", getLogcatInfo(), getXposedLogInfo(), getPhoneInfo()); runOnUiThread(new Runnable() { @Override public void run() { shareText(bug); } }); } }).start(); return false; } }); findPreference(""theme"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { finish(); Intent restart = new Intent(PreferencesActivity.this, MainActivity.class); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK); } else { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } startActivity(restart); return false; } }); findPreference(""enable_log"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ENABLE_LOG_NAME); return true; } }); } }",class T { void onCreate(Bundle savedInstanceState) { setTheme( ); } },5343,69,28,5274,99.2285983066792,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', '.', 'getBoolean', '(', '""theme""', ',', 'false', ')', ')', '{', 'setTheme', '(', 'R', '.', 'style', '.', 'DayTheme', ')', ';', '}', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'addPreferencesFromResource', '(', 'R', '.', 'xml', '.', 'preference', ')', ';', 'findPreference', '(', '""super_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'o', '.', 'toString', '(', ')', ',', 'SUPER_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""only_once""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ONLY_ONCE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""standard_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'STANDARD_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""import""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'final', 'AppCompatEditText', 'editText', '=', 'new', 'AppCompatEditText', '(', 'PreferencesActivity', '.', 'this', ')', ';', 'editText', '.', 'setHint', '(', 'R', '.', 'string', '.', 'import_rules', ')', ';', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'conf_import_rules_name', ')', '.', 'setView', '(', 'editText', ')', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'OK', ',', 'new', 'DialogInterface', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', 'MainActivity', '.', 'appendPreferences', '(', '""\n""', '+', 'editText', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', 'Constant', '.', 'LIST_NAME', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', 'R', '.', 'string', '.', 'cancel', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""online_rules""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'setResult', '(', 'RESULT_OK', ')', ';', 'finish', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""about""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', 'clickTime', '>=', '5', '*', '59', ')', '{', 'clickTime', '=', '0', ';', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""market://details?id=""', '+', 'getPackageName', '(', ')', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'give_me_five_stars', ',', 'Toast', '.', 'LENGTH_LONG', ')', '.', 'show', '(', ')', ';', '}', 'preference', '.', 'setSummary', '(', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', 'getString', '(', 'R', '.', 'string', '.', 'conf_joke', ')', ',', 'clickTime', '/', '59', ',', 'clickTime', '%', '59', ')', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""version""', ')', '.', 'setSummary', '(', 'getVersionName', '(', 'this', ')', ')', ';', 'findPreference', '(', '""pay""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'no_donate', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""source""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', '""Open Source""', ')', '.', 'setMessage', '(', '""Nothing""', ')', '.', 'setPositiveButton', '(', 'getString', '(', 'R', '.', 'string', '.', 'OK', ')', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""qq""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""https://jq.qq.com/?_wv=1027&k=4EepPOs""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""guide""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'setResult', '(', 'RESULT_GUIDE', ')', ';', 'finish', '(', ')', ';', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', 'a', '.', 'printStackTrace', '(', ')', ';', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'getString', '(', 'R', '.', 'string', '.', 'unsupport_of_package', ')', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""log""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'Thread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'final', 'String', 'bug', '=', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', '""Logcat:\n\n%s\n\n""', '+', '""=================\n\n""', '+', '""XposedLog:\n\n%s\n\n""', '+', '""=================\n\n""', '+', '""Phone:\n\n%s\n\n""', ',', 'getLogcatInfo', '(', ')', ',', 'getXposedLogInfo', '(', ')', ',', 'getPhoneInfo', '(', ')', ')', ';', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'shareText', '(', 'bug', ')', ';', '}', '}', ')', ';', '}', '}', ')', '.', 'start', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""theme""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'finish', '(', ')', ';', 'Intent', 'restart', '=', 'new', 'Intent', '(', 'PreferencesActivity', '.', 'this', ',', 'MainActivity', '.', 'class', ')', ';', 'if', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', '>=', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', '|', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ';', '}', 'else', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ')', ';', '}', 'startActivity', '(', 'restart', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""enable_log""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ENABLE_LOG_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'setTheme', '(', ')', ';', '}', '}']",1053,16,10,1037,99.424736337488
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_7.txt,0.9761,0.0261,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",779.335276,"class T { @Override @SuppressWarnings(""deprecation"") public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Thread.setDefaultUncaughtExceptionHandler(new UnhandledExceptionHandler(this)); requestWindowFeature(Window.FEATURE_NO_TITLE); getWindow().addFlags(LayoutParams.FLAG_FULLSCREEN | LayoutParams.FLAG_KEEP_SCREEN_ON | LayoutParams.FLAG_SHOW_WHEN_LOCKED | LayoutParams.FLAG_TURN_SCREEN_ON); getWindow().getDecorView().setSystemUiVisibility(getSystemUiVisibility()); setContentView(R.layout.activity_call); iceConnected = false; signalingParameters = null; pipRenderer = findViewById(R.id.pip_video_view); fullscreenRenderer = findViewById(R.id.fullscreen_video_view); callFragment = new CallFragment(); hudFragment = new HudFragment(); View.OnClickListener listener = new View.OnClickListener() { @Override public void onClick(View view) { toggleCallControlFragmentVisibility(); } }; pipRenderer.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { setSwappedFeeds(!isSwappedFeeds); } }); fullscreenRenderer.setOnClickListener(listener); remoteSinks.add(remoteProxyRenderer); final Intent intent = getIntent(); final EglBase eglBase = EglBase.create(); pipRenderer.init(eglBase.getEglBaseContext(), null); pipRenderer.setScalingType(ScalingType.SCALE_ASPECT_FIT); String saveRemoteVideoToFile = intent.getStringExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE); if (saveRemoteVideoToFile != null) { int videoOutWidth = intent.getIntExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_WIDTH, 0); int videoOutHeight = intent.getIntExtra(EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_HEIGHT, 0); try { videoFileRenderer = new VideoFileRenderer(saveRemoteVideoToFile, videoOutWidth, videoOutHeight, eglBase.getEglBaseContext()); remoteSinks.add(videoFileRenderer); } catch (IOException e) { throw new RuntimeException(""Failed to open video file for output: "" + saveRemoteVideoToFile, e); } } fullscreenRenderer.init(eglBase.getEglBaseContext(), null); fullscreenRenderer.setScalingType(ScalingType.SCALE_ASPECT_FILL); pipRenderer.setZOrderMediaOverlay(true); pipRenderer.setEnableHardwareScaler(true); fullscreenRenderer.setEnableHardwareScaler(false); setSwappedFeeds(true); for (String permission : MANDATORY_PERMISSIONS) { if (checkCallingOrSelfPermission(permission) != PackageManager.PERMISSION_GRANTED) { logAndToast(""Permission "" + permission + "" is not granted""); setResult(RESULT_CANCELED); finish(); return; } } Uri roomUri = intent.getData(); if (roomUri == null) { logAndToast(getString(R.string.missing_url)); Log.e(TAG, ""Didn't get any URL in intent!""); setResult(RESULT_CANCELED); finish(); return; } String roomId = intent.getStringExtra(EXTRA_ROOMID); Log.d(TAG, ""Room ID: "" + roomId); if (roomId == null || roomId.length() == 0) { logAndToast(getString(R.string.missing_url)); Log.e(TAG, ""Incorrect room ID in intent!""); setResult(RESULT_CANCELED); finish(); return; } boolean loopback = intent.getBooleanExtra(EXTRA_LOOPBACK, false); boolean tracing = intent.getBooleanExtra(EXTRA_TRACING, false); int videoWidth = intent.getIntExtra(EXTRA_VIDEO_WIDTH, 0); int videoHeight = intent.getIntExtra(EXTRA_VIDEO_HEIGHT, 0); screencaptureEnabled = intent.getBooleanExtra(EXTRA_SCREENCAPTURE, false); if (screencaptureEnabled && videoWidth == 0 && videoHeight == 0) { DisplayMetrics displayMetrics = getDisplayMetrics(); videoWidth = displayMetrics.widthPixels; videoHeight = displayMetrics.heightPixels; } DataChannelParameters dataChannelParameters = null; if (intent.getBooleanExtra(EXTRA_DATA_CHANNEL_ENABLED, false)) { dataChannelParameters = new DataChannelParameters(intent.getBooleanExtra(EXTRA_ORDERED, true), intent.getIntExtra(EXTRA_MAX_RETRANSMITS_MS, -1), intent.getIntExtra(EXTRA_MAX_RETRANSMITS, -1), intent.getStringExtra(EXTRA_PROTOCOL), intent.getBooleanExtra(EXTRA_NEGOTIATED, false), intent.getIntExtra(EXTRA_ID, -1)); } peerConnectionParameters = new PeerConnectionParameters(intent.getBooleanExtra(EXTRA_VIDEO_CALL, true), loopback, tracing, videoWidth, videoHeight, intent.getIntExtra(EXTRA_VIDEO_FPS, 0), intent.getIntExtra(EXTRA_VIDEO_BITRATE, 0), intent.getStringExtra(EXTRA_VIDEOCODEC), intent.getBooleanExtra(EXTRA_HWCODEC_ENABLED, true), intent.getBooleanExtra(EXTRA_FLEXFEC_ENABLED, false), intent.getIntExtra(EXTRA_AUDIO_BITRATE, 0), intent.getStringExtra(EXTRA_AUDIOCODEC), intent.getBooleanExtra(EXTRA_NOAUDIOPROCESSING_ENABLED, false), intent.getBooleanExtra(EXTRA_AECDUMP_ENABLED, false), intent.getBooleanExtra(EXTRA_SAVE_INPUT_AUDIO_TO_FILE_ENABLED, false), intent.getBooleanExtra(EXTRA_OPENSLES_ENABLED, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_AEC, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_AGC, false), intent.getBooleanExtra(EXTRA_DISABLE_BUILT_IN_NS, false), intent.getBooleanExtra(EXTRA_DISABLE_WEBRTC_AGC_AND_HPF, false), intent.getBooleanExtra(EXTRA_ENABLE_RTCEVENTLOG, false), intent.getBooleanExtra(EXTRA_USE_LEGACY_AUDIO_DEVICE, false), dataChannelParameters); commandLineRun = intent.getBooleanExtra(EXTRA_CMDLINE, false); int runTimeMs = intent.getIntExtra(EXTRA_RUNTIME, 0); Log.d(TAG, ""VIDEO_FILE: '"" + intent.getStringExtra(EXTRA_VIDEO_FILE_AS_CAMERA) + ""'""); if (loopback || !DirectRTCClient.IP_PATTERN.matcher(roomId).matches()) { appRtcClient = new WebSocketRTCClient(this); } else { Log.i(TAG, ""Using DirectRTCClient because room name looks like an IP.""); appRtcClient = new DirectRTCClient(this); } String urlParameters = intent.getStringExtra(EXTRA_URLPARAMETERS); roomConnectionParameters = new RoomConnectionParameters(roomUri.toString(), roomId, loopback, urlParameters); if (CpuMonitor.isSupported()) { cpuMonitor = new CpuMonitor(this); hudFragment.setCpuMonitor(cpuMonitor); } callFragment.setArguments(intent.getExtras()); hudFragment.setArguments(intent.getExtras()); FragmentTransaction ft = getFragmentManager().beginTransaction(); ft.add(R.id.call_fragment_container, callFragment); ft.add(R.id.hud_fragment_container, hudFragment); ft.commit(); if (commandLineRun && runTimeMs > 0) { (new Handler()).postDelayed(new Runnable() { @Override public void run() { disconnect(); } }, runTimeMs); } peerConnectionClient = new PeerConnectionClient(getApplicationContext(), eglBase, peerConnectionParameters, CallActivity.this); PeerConnectionFactory.Options options = new PeerConnectionFactory.Options(); if (loopback) { options.networkIgnoreMask = 0; } peerConnectionClient.createPeerConnectionFactory(options); if (screencaptureEnabled) { startScreenCapture(); } else { startCall(); } } }",class T { void onCreate( ) { super.onCreate(savedInstanceState); } },6518,68,28,6450,99.38366718027734,"['class', 'T', '{', '@', 'Override', '@', 'SuppressWarnings', '(', '""deprecation""', ')', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'Thread', '.', 'setDefaultUncaughtExceptionHandler', '(', 'new', 'UnhandledExceptionHandler', '(', 'this', ')', ')', ';', 'requestWindowFeature', '(', 'Window', '.', 'FEATURE_NO_TITLE', ')', ';', 'getWindow', '(', ')', '.', 'addFlags', '(', 'LayoutParams', '.', 'FLAG_FULLSCREEN', '|', 'LayoutParams', '.', 'FLAG_KEEP_SCREEN_ON', '|', 'LayoutParams', '.', 'FLAG_SHOW_WHEN_LOCKED', '|', 'LayoutParams', '.', 'FLAG_TURN_SCREEN_ON', ')', ';', 'getWindow', '(', ')', '.', 'getDecorView', '(', ')', '.', 'setSystemUiVisibility', '(', 'getSystemUiVisibility', '(', ')', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_call', ')', ';', 'iceConnected', '=', 'false', ';', 'signalingParameters', '=', 'null', ';', 'pipRenderer', '=', 'findViewById', '(', 'R', '.', 'id', '.', 'pip_video_view', ')', ';', 'fullscreenRenderer', '=', 'findViewById', '(', 'R', '.', 'id', '.', 'fullscreen_video_view', ')', ';', 'callFragment', '=', 'new', 'CallFragment', '(', ')', ';', 'hudFragment', '=', 'new', 'HudFragment', '(', ')', ';', 'View', '.', 'OnClickListener', 'listener', '=', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'view', ')', '{', 'toggleCallControlFragmentVisibility', '(', ')', ';', '}', '}', ';', 'pipRenderer', '.', 'setOnClickListener', '(', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'view', ')', '{', 'setSwappedFeeds', '(', '!', 'isSwappedFeeds', ')', ';', '}', '}', ')', ';', 'fullscreenRenderer', '.', 'setOnClickListener', '(', 'listener', ')', ';', 'remoteSinks', '.', 'add', '(', 'remoteProxyRenderer', ')', ';', 'final', 'Intent', 'intent', '=', 'getIntent', '(', ')', ';', 'final', 'EglBase', 'eglBase', '=', 'EglBase', '.', 'create', '(', ')', ';', 'pipRenderer', '.', 'init', '(', 'eglBase', '.', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', 'pipRenderer', '.', 'setScalingType', '(', 'ScalingType', '.', 'SCALE_ASPECT_FIT', ')', ';', 'String', 'saveRemoteVideoToFile', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE', ')', ';', 'if', '(', 'saveRemoteVideoToFile', '!=', 'null', ')', '{', 'int', 'videoOutWidth', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_WIDTH', ',', '0', ')', ';', 'int', 'videoOutHeight', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_SAVE_REMOTE_VIDEO_TO_FILE_HEIGHT', ',', '0', ')', ';', 'try', '{', 'videoFileRenderer', '=', 'new', 'VideoFileRenderer', '(', 'saveRemoteVideoToFile', ',', 'videoOutWidth', ',', 'videoOutHeight', ',', 'eglBase', '.', 'getEglBaseContext', '(', ')', ')', ';', 'remoteSinks', '.', 'add', '(', 'videoFileRenderer', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Failed to open video file for output: ""', '+', 'saveRemoteVideoToFile', ',', 'e', ')', ';', '}', '}', 'fullscreenRenderer', '.', 'init', '(', 'eglBase', '.', 'getEglBaseContext', '(', ')', ',', 'null', ')', ';', 'fullscreenRenderer', '.', 'setScalingType', '(', 'ScalingType', '.', 'SCALE_ASPECT_FILL', ')', ';', 'pipRenderer', '.', 'setZOrderMediaOverlay', '(', 'true', ')', ';', 'pipRenderer', '.', 'setEnableHardwareScaler', '(', 'true', ')', ';', 'fullscreenRenderer', '.', 'setEnableHardwareScaler', '(', 'false', ')', ';', 'setSwappedFeeds', '(', 'true', ')', ';', 'for', '(', 'String', 'permission', ':', 'MANDATORY_PERMISSIONS', ')', '{', 'if', '(', 'checkCallingOrSelfPermission', '(', 'permission', ')', '!=', 'PackageManager', '.', 'PERMISSION_GRANTED', ')', '{', 'logAndToast', '(', '""Permission ""', '+', 'permission', '+', '"" is not granted""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', '}', 'Uri', 'roomUri', '=', 'intent', '.', 'getData', '(', ')', ';', 'if', '(', 'roomUri', '==', 'null', ')', '{', 'logAndToast', '(', 'getString', '(', 'R', '.', 'string', '.', 'missing_url', ')', ')', ';', 'Log', '.', 'e', '(', 'TAG', ',', '""Didn\'t get any URL in intent!""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', 'String', 'roomId', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_ROOMID', ')', ';', 'Log', '.', 'd', '(', 'TAG', ',', '""Room ID: ""', '+', 'roomId', ')', ';', 'if', '(', 'roomId', '==', 'null', '||', 'roomId', '.', 'length', '(', ')', '==', '0', ')', '{', 'logAndToast', '(', 'getString', '(', 'R', '.', 'string', '.', 'missing_url', ')', ')', ';', 'Log', '.', 'e', '(', 'TAG', ',', '""Incorrect room ID in intent!""', ')', ';', 'setResult', '(', 'RESULT_CANCELED', ')', ';', 'finish', '(', ')', ';', 'return', ';', '}', 'boolean', 'loopback', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_LOOPBACK', ',', 'false', ')', ';', 'boolean', 'tracing', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_TRACING', ',', 'false', ')', ';', 'int', 'videoWidth', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_WIDTH', ',', '0', ')', ';', 'int', 'videoHeight', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_HEIGHT', ',', '0', ')', ';', 'screencaptureEnabled', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_SCREENCAPTURE', ',', 'false', ')', ';', 'if', '(', 'screencaptureEnabled', '&&', 'videoWidth', '==', '0', '&&', 'videoHeight', '==', '0', ')', '{', 'DisplayMetrics', 'displayMetrics', '=', 'getDisplayMetrics', '(', ')', ';', 'videoWidth', '=', 'displayMetrics', '.', 'widthPixels', ';', 'videoHeight', '=', 'displayMetrics', '.', 'heightPixels', ';', '}', 'DataChannelParameters', 'dataChannelParameters', '=', 'null', ';', 'if', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DATA_CHANNEL_ENABLED', ',', 'false', ')', ')', '{', 'dataChannelParameters', '=', 'new', 'DataChannelParameters', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_ORDERED', ',', 'true', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_MAX_RETRANSMITS_MS', ',', '-', '1', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_MAX_RETRANSMITS', ',', '-', '1', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_PROTOCOL', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_NEGOTIATED', ',', 'false', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_ID', ',', '-', '1', ')', ')', ';', '}', 'peerConnectionParameters', '=', 'new', 'PeerConnectionParameters', '(', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_VIDEO_CALL', ',', 'true', ')', ',', 'loopback', ',', 'tracing', ',', 'videoWidth', ',', 'videoHeight', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_FPS', ',', '0', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_VIDEO_BITRATE', ',', '0', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_VIDEOCODEC', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_HWCODEC_ENABLED', ',', 'true', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_FLEXFEC_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getIntExtra', '(', 'EXTRA_AUDIO_BITRATE', ',', '0', ')', ',', 'intent', '.', 'getStringExtra', '(', 'EXTRA_AUDIOCODEC', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_NOAUDIOPROCESSING_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_AECDUMP_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_SAVE_INPUT_AUDIO_TO_FILE_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_OPENSLES_ENABLED', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_AEC', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_AGC', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_BUILT_IN_NS', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_DISABLE_WEBRTC_AGC_AND_HPF', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_ENABLE_RTCEVENTLOG', ',', 'false', ')', ',', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_USE_LEGACY_AUDIO_DEVICE', ',', 'false', ')', ',', 'dataChannelParameters', ')', ';', 'commandLineRun', '=', 'intent', '.', 'getBooleanExtra', '(', 'EXTRA_CMDLINE', ',', 'false', ')', ';', 'int', 'runTimeMs', '=', 'intent', '.', 'getIntExtra', '(', 'EXTRA_RUNTIME', ',', '0', ')', ';', 'Log', '.', 'd', '(', 'TAG', ',', '""VIDEO_FILE: \'""', '+', 'intent', '.', 'getStringExtra', '(', 'EXTRA_VIDEO_FILE_AS_CAMERA', ')', '+', '""\'""', ')', ';', 'if', '(', 'loopback', '||', '!', 'DirectRTCClient', '.', 'IP_PATTERN', '.', 'matcher', '(', 'roomId', ')', '.', 'matches', '(', ')', ')', '{', 'appRtcClient', '=', 'new', 'WebSocketRTCClient', '(', 'this', ')', ';', '}', 'else', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""Using DirectRTCClient because room name looks like an IP.""', ')', ';', 'appRtcClient', '=', 'new', 'DirectRTCClient', '(', 'this', ')', ';', '}', 'String', 'urlParameters', '=', 'intent', '.', 'getStringExtra', '(', 'EXTRA_URLPARAMETERS', ')', ';', 'roomConnectionParameters', '=', 'new', 'RoomConnectionParameters', '(', 'roomUri', '.', 'toString', '(', ')', ',', 'roomId', ',', 'loopback', ',', 'urlParameters', ')', ';', 'if', '(', 'CpuMonitor', '.', 'isSupported', '(', ')', ')', '{', 'cpuMonitor', '=', 'new', 'CpuMonitor', '(', 'this', ')', ';', 'hudFragment', '.', 'setCpuMonitor', '(', 'cpuMonitor', ')', ';', '}', 'callFragment', '.', 'setArguments', '(', 'intent', '.', 'getExtras', '(', ')', ')', ';', 'hudFragment', '.', 'setArguments', '(', 'intent', '.', 'getExtras', '(', ')', ')', ';', 'FragmentTransaction', 'ft', '=', 'getFragmentManager', '(', ')', '.', 'beginTransaction', '(', ')', ';', 'ft', '.', 'add', '(', 'R', '.', 'id', '.', 'call_fragment_container', ',', 'callFragment', ')', ';', 'ft', '.', 'add', '(', 'R', '.', 'id', '.', 'hud_fragment_container', ',', 'hudFragment', ')', ';', 'ft', '.', 'commit', '(', ')', ';', 'if', '(', 'commandLineRun', '&&', 'runTimeMs', '>', '0', ')', '{', '(', 'new', 'Handler', '(', ')', ')', '.', 'postDelayed', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'disconnect', '(', ')', ';', '}', '}', ',', 'runTimeMs', ')', ';', '}', 'peerConnectionClient', '=', 'new', 'PeerConnectionClient', '(', 'getApplicationContext', '(', ')', ',', 'eglBase', ',', 'peerConnectionParameters', ',', 'CallActivity', '.', 'this', ')', ';', 'PeerConnectionFactory', '.', 'Options', 'options', '=', 'new', 'PeerConnectionFactory', '.', 'Options', '(', ')', ';', 'if', '(', 'loopback', ')', '{', 'options', '.', 'networkIgnoreMask', '=', '0', ';', '}', 'peerConnectionClient', '.', 'createPeerConnectionFactory', '(', 'options', ')', ';', 'if', '(', 'screencaptureEnabled', ')', '{', 'startScreenCapture', '(', ')', ';', '}', 'else', '{', 'startCall', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",1206,17,10,1189,99.41471571906354
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_6.txt,0.401,1.0391,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",608.816074,"class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button buttonAbout = (Button) findViewById(R.id.button_about); buttonAbout.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this).setTitle(R.string.about).setMessage(R.string.about_text).setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { dialog.dismiss(); } }); dialog.show(); } }); progressWheel = (ProgressWheel) findViewById(R.id.progress_wheel); progressWheelInterpolated = (ProgressWheel) findViewById(R.id.interpolated); progressWheelLinear = (ProgressWheel) findViewById(R.id.linear); interpolatedValue = (TextView) findViewById(R.id.interpolatedValue); linearValue = (TextView) findViewById(R.id.linearValue); Spinner spinnerOptions = (Spinner) findViewById(R.id.spinner_options); spinnerOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheelLinear.setProgress(0.0f); progressWheelInterpolated.setProgress(0.0f); progressWheelInterpolated.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelInterpolated.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelInterpolated.setProgress(0.0f); } interpolatedValue.setText(String.format(""%.2f"", progress)); } }); progressWheelLinear.setCallback(new ProgressWheel.ProgressCallback() { @Override public void onProgressUpdate(float progress) { if (progress == 0) { progressWheelLinear.setProgress(1.0f); } else if (progress == 1.0f) { progressWheelLinear.setProgress(0.0f); } linearValue.setText(String.format(""%.2f"", progress)); } }); break; case 1: setProgress(0.0f); break; case 2: setProgress(0.1f); break; case 3: setProgress(0.25f); break; case 4: setProgress(0.5f); break; case 5: setProgress(0.75f); break; case 6: setProgress(1.0f); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); final int defaultBarColor = progressWheel.getBarColor(); final int defaultWheelColor = progressWheel.getRimColor(); Spinner colorOptions = (Spinner) findViewById(R.id.spinner_options_color); colorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setBarColor(defaultBarColor); progressWheelInterpolated.setBarColor(defaultBarColor); progressWheelLinear.setBarColor(defaultBarColor); break; case 1: progressWheel.setBarColor(Color.RED); progressWheelInterpolated.setBarColor(Color.RED); progressWheelLinear.setBarColor(Color.RED); break; case 2: progressWheel.setBarColor(Color.MAGENTA); progressWheelInterpolated.setBarColor(Color.MAGENTA); progressWheelLinear.setBarColor(Color.MAGENTA); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); Spinner wheelColorOptions = (Spinner) findViewById(R.id.spinner_options_rim_color); wheelColorOptions.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() { @Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id) { switch(position) { case 0: progressWheel.setRimColor(defaultWheelColor); progressWheelInterpolated.setRimColor(defaultWheelColor); progressWheelLinear.setRimColor(defaultWheelColor); break; case 1: progressWheel.setRimColor(Color.LTGRAY); progressWheelInterpolated.setRimColor(Color.LTGRAY); progressWheelLinear.setRimColor(Color.LTGRAY); break; case 2: progressWheel.setRimColor(Color.GRAY); progressWheelInterpolated.setRimColor(Color.GRAY); progressWheelLinear.setRimColor(Color.GRAY); break; } } @Override public void onNothingSelected(AdapterView<?> parent) { } }); } }",class T { void onCreate( ) { super.onCreate(savedInstanceState); } },4048,68,28,3980,99.00497512437812,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'activity_main', ')', ';', 'Button', 'buttonAbout', '=', '(', 'Button', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'button_about', ')', ';', 'buttonAbout', '.', 'setOnClickListener', '(', 'new', 'View', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'View', 'v', ')', '{', 'AlertDialog', '.', 'Builder', 'dialog', '=', 'new', 'AlertDialog', '.', 'Builder', '(', 'MainActivity', '.', 'this', ')', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'about', ')', '.', 'setMessage', '(', 'R', '.', 'string', '.', 'about_text', ')', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'ok', ',', 'new', 'DialogInterface', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'DialogInterface', 'dialog', ',', 'int', 'which', ')', '{', 'dialog', '.', 'dismiss', '(', ')', ';', '}', '}', ')', ';', 'dialog', '.', 'show', '(', ')', ';', '}', '}', ')', ';', 'progressWheel', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'progress_wheel', ')', ';', 'progressWheelInterpolated', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'interpolated', ')', ';', 'progressWheelLinear', '=', '(', 'ProgressWheel', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'linear', ')', ';', 'interpolatedValue', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'interpolatedValue', ')', ';', 'linearValue', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'linearValue', ')', ';', 'Spinner', 'spinnerOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options', ')', ';', 'spinnerOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheelLinear', '.', 'setProgress', '(', '0.0f', ')', ';', 'progressWheelInterpolated', '.', 'setProgress', '(', '0.0f', ')', ';', 'progressWheelInterpolated', '.', 'setCallback', '(', 'new', 'ProgressWheel', '.', 'ProgressCallback', '(', ')', '{', '@', 'Override', 'public', 'void', 'onProgressUpdate', '(', 'float', 'progress', ')', '{', 'if', '(', 'progress', '==', '0', ')', '{', 'progressWheelInterpolated', '.', 'setProgress', '(', '1.0f', ')', ';', '}', 'else', 'if', '(', 'progress', '==', '1.0f', ')', '{', 'progressWheelInterpolated', '.', 'setProgress', '(', '0.0f', ')', ';', '}', 'interpolatedValue', '.', 'setText', '(', 'String', '.', 'format', '(', '""%.2f""', ',', 'progress', ')', ')', ';', '}', '}', ')', ';', 'progressWheelLinear', '.', 'setCallback', '(', 'new', 'ProgressWheel', '.', 'ProgressCallback', '(', ')', '{', '@', 'Override', 'public', 'void', 'onProgressUpdate', '(', 'float', 'progress', ')', '{', 'if', '(', 'progress', '==', '0', ')', '{', 'progressWheelLinear', '.', 'setProgress', '(', '1.0f', ')', ';', '}', 'else', 'if', '(', 'progress', '==', '1.0f', ')', '{', 'progressWheelLinear', '.', 'setProgress', '(', '0.0f', ')', ';', '}', 'linearValue', '.', 'setText', '(', 'String', '.', 'format', '(', '""%.2f""', ',', 'progress', ')', ')', ';', '}', '}', ')', ';', 'break', ';', 'case', '1', ':', 'setProgress', '(', '0.0f', ')', ';', 'break', ';', 'case', '2', ':', 'setProgress', '(', '0.1f', ')', ';', 'break', ';', 'case', '3', ':', 'setProgress', '(', '0.25f', ')', ';', 'break', ';', 'case', '4', ':', 'setProgress', '(', '0.5f', ')', ';', 'break', ';', 'case', '5', ':', 'setProgress', '(', '0.75f', ')', ';', 'break', ';', 'case', '6', ':', 'setProgress', '(', '1.0f', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'final', 'int', 'defaultBarColor', '=', 'progressWheel', '.', 'getBarColor', '(', ')', ';', 'final', 'int', 'defaultWheelColor', '=', 'progressWheel', '.', 'getRimColor', '(', ')', ';', 'Spinner', 'colorOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options_color', ')', ';', 'colorOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheel', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'defaultBarColor', ')', ';', 'break', ';', 'case', '1', ':', 'progressWheel', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'Color', '.', 'RED', ')', ';', 'break', ';', 'case', '2', ':', 'progressWheel', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'progressWheelInterpolated', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'progressWheelLinear', '.', 'setBarColor', '(', 'Color', '.', 'MAGENTA', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', 'Spinner', 'wheelColorOptions', '=', '(', 'Spinner', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'spinner_options_rim_color', ')', ';', 'wheelColorOptions', '.', 'setOnItemSelectedListener', '(', 'new', 'AdapterView', '.', 'OnItemSelectedListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onItemSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ',', 'View', 'view', ',', 'int', 'position', ',', 'long', 'id', ')', '{', 'switch', '(', 'position', ')', '{', 'case', '0', ':', 'progressWheel', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'defaultWheelColor', ')', ';', 'break', ';', 'case', '1', ':', 'progressWheel', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'Color', '.', 'LTGRAY', ')', ';', 'break', ';', 'case', '2', ':', 'progressWheel', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'progressWheelInterpolated', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'progressWheelLinear', '.', 'setRimColor', '(', 'Color', '.', 'GRAY', ')', ';', 'break', ';', '}', '}', '@', 'Override', 'public', 'void', 'onNothingSelected', '(', 'AdapterView', '<', '?', '>', 'parent', ')', '{', '}', '}', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",853,17,10,836,99.16963226571768
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_4.txt,0.9975,0.0046,"{'n_total': 11, 'n_valid': -1, 'n_correct': -1}",1041.498948,"class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; } }",class T { boolean equals(Object obj) { return ; } },1607,51,26,1556,98.41872232764072,"['class', 'T', '{', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUEncryptionKeyGenerationParameters', 'other', '=', '(', 'NTRUEncryptionKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenBits', '!=', 'other', '.', 'bufferLenBits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenTrits', '!=', 'other', '.', 'bufferLenTrits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'c', '!=', 'other', '.', 'c', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'db', '!=', 'other', '.', 'db', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df', '!=', 'other', '.', 'df', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df1', '!=', 'other', '.', 'df1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df2', '!=', 'other', '.', 'df2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df3', '!=', 'other', '.', 'df3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dg', '!=', 'other', '.', 'dg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dm0', '!=', 'other', '.', 'dm0', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr', '!=', 'other', '.', 'dr', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr1', '!=', 'other', '.', 'dr1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr2', '!=', 'other', '.', 'dr2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr3', '!=', 'other', '.', 'dr3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'fastFp', '!=', 'other', '.', 'fastFp', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashSeed', '!=', 'other', '.', 'hashSeed', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'llen', '!=', 'other', '.', 'llen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'maxMsgLenBytes', '!=', 'other', '.', 'maxMsgLenBytes', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsMask', '!=', 'other', '.', 'minCallsMask', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsR', '!=', 'other', '.', 'minCallsR', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'Arrays', '.', 'equals', '(', 'oid', ',', 'other', '.', 'oid', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'pkLen', '!=', 'other', '.', 'pkLen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', ';', '}', '}']",454,14,10,440,99.09909909909908
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_3.txt,0.7174,0.7283,"{'n_total': 22, 'n_valid': -1, 'n_correct': -1}",2628.386208,"class T { public void run() { try { boolean initial = true; SSLEngineResult wrap = null; HandshakeStatus hstatus = sslEngine.getHandshakeStatus(); if (!closeHandshake && (hstatus == HandshakeStatus.NOT_HANDSHAKING || initial)) { sslEngine.beginHandshake(); hstatus = sslEngine.getHandshakeStatus(); } long t0 = System.currentTimeMillis(); while (hstatus != HandshakeStatus.NOT_HANDSHAKING && hstatus != HandshakeStatus.FINISHED && !net.getIn().isAppendClosed()) { if (System.currentTimeMillis() - t0 > handshakeTimeout) { throw new TimeoutException(); } if (wrap != null && wrap.getStatus() == Status.CLOSED) { break; } if (log.isLoggable(Level.FINEST)) { log.info(""-->doHandshake() loop: status = "" + hstatus + "" "" + sslEngine.getHandshakeStatus()); } if (hstatus == HandshakeStatus.NEED_WRAP) { initial = false; synchronized (myNetOutData) { while (hstatus == HandshakeStatus.NEED_WRAP) { myNetOutData.compact(); try { wrap = sslEngine.wrap(myAppOutData, myNetOutData); } catch (Throwable t) { log.log(Level.SEVERE, ""Wrap error"", t); close(); return; } finally { myNetOutData.flip(); } if (myNetOutData.remaining() > 0) { net.getOut().write(myNetOutData); } hstatus = wrap.getHandshakeStatus(); } } net.startSending(); } else if (hstatus == HandshakeStatus.NEED_UNWRAP) { while (hstatus == HandshakeStatus.NEED_UNWRAP) { if (myNetInData.remaining() > 0) { myAppInData.clear(); if (debugWrap) { log.info(""UNWRAP: rem="" + myNetInData.remaining()); } wrap = sslEngine.unwrap(myNetInData, myAppInData); hstatus = wrap.getHandshakeStatus(); myAppInData.flip(); if (myAppInData.remaining() > 0) { log.severe(""Unexpected data after unwrap""); } if (wrap.getStatus() == Status.CLOSED) { break; } } if (wrap == null || wrap.getStatus() == Status.BUFFER_UNDERFLOW || (hstatus == HandshakeStatus.NEED_UNWRAP && myNetInData.remaining() == 0)) { myNetInData.compact(); int rd; try { rd = net.getIn().read(myNetInData); if (debugWrap) { log.info(""Read: "" + rd); } } finally { myNetInData.flip(); } if (rd == 0) { if (debugWrap) { log.info(""Wait: "" + handshakeTimeout); } net.getIn().waitData(handshakeTimeout); rd = net.getIn().read(myNetInData); if (debugWrap) { log.info(""Read after wait: "" + rd); } } if (rd < 0) { break; } } if (log.isLoggable(Level.FINEST)) { log.info(""Unwrap chunk done "" + hstatus + "" "" + wrap + "" "" + sslEngine.getHandshakeStatus()); } } } else if (hstatus == HandshakeStatus.NEED_TASK) { long t0task = System.currentTimeMillis(); Runnable r; while ((r = sslEngine.getDelegatedTask()) != null) { r.run(); } long t1task = System.currentTimeMillis(); hstatus = sslEngine.getHandshakeStatus(); if (log.isLoggable(Level.FINEST)) { log.info(""Tasks done in "" + (t1task - t0task) + "" new status "" + hstatus); } } if (hstatus == HandshakeStatus.NOT_HANDSHAKING) { break; } } endHandshake(); processRealInput(net.getIn(), in); } catch (Throwable t) { log.log(Level.SEVERE, ""Error handshaking"", t); try { close(); net.close(); sendHandleReceivedCallback(); } catch (IOException ex) { log.log(Level.SEVERE, ""Error closing"", ex); } } } }",class T { void run() { try { if (myNetOutData.remaining() > 0) net.getOut().write( ); } catch (Throwable t) { } } },3037,115,23,2922,96.9475779694758,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'boolean', 'initial', '=', 'true', ';', 'SSLEngineResult', 'wrap', '=', 'null', ';', 'HandshakeStatus', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', 'if', '(', '!', 'closeHandshake', '&&', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', '||', 'initial', ')', ')', '{', 'sslEngine', '.', 'beginHandshake', '(', ')', ';', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', '}', 'long', 't0', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'while', '(', 'hstatus', '!=', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', '&&', 'hstatus', '!=', 'HandshakeStatus', '.', 'FINISHED', '&&', '!', 'net', '.', 'getIn', '(', ')', '.', 'isAppendClosed', '(', ')', ')', '{', 'if', '(', 'System', '.', 'currentTimeMillis', '(', ')', '-', 't0', '>', 'handshakeTimeout', ')', '{', 'throw', 'new', 'TimeoutException', '(', ')', ';', '}', 'if', '(', 'wrap', '!=', 'null', '&&', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'CLOSED', ')', '{', 'break', ';', '}', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""-->doHandshake() loop: status = ""', '+', 'hstatus', '+', '"" ""', '+', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ')', ';', '}', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_WRAP', ')', '{', 'initial', '=', 'false', ';', 'synchronized', '(', 'myNetOutData', ')', '{', 'while', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_WRAP', ')', '{', 'myNetOutData', '.', 'compact', '(', ')', ';', 'try', '{', 'wrap', '=', 'sslEngine', '.', 'wrap', '(', 'myAppOutData', ',', 'myNetOutData', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Wrap error""', ',', 't', ')', ';', 'close', '(', ')', ';', 'return', ';', '}', 'finally', '{', 'myNetOutData', '.', 'flip', '(', ')', ';', '}', 'if', '(', 'myNetOutData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'net', '.', 'getOut', '(', ')', '.', 'write', '(', 'myNetOutData', ')', ';', '}', 'hstatus', '=', 'wrap', '.', 'getHandshakeStatus', '(', ')', ';', '}', '}', 'net', '.', 'startSending', '(', ')', ';', '}', 'else', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', ')', '{', 'while', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', ')', '{', 'if', '(', 'myNetInData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'myAppInData', '.', 'clear', '(', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""UNWRAP: rem=""', '+', 'myNetInData', '.', 'remaining', '(', ')', ')', ';', '}', 'wrap', '=', 'sslEngine', '.', 'unwrap', '(', 'myNetInData', ',', 'myAppInData', ')', ';', 'hstatus', '=', 'wrap', '.', 'getHandshakeStatus', '(', ')', ';', 'myAppInData', '.', 'flip', '(', ')', ';', 'if', '(', 'myAppInData', '.', 'remaining', '(', ')', '>', '0', ')', '{', 'log', '.', 'severe', '(', '""Unexpected data after unwrap""', ')', ';', '}', 'if', '(', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'CLOSED', ')', '{', 'break', ';', '}', '}', 'if', '(', 'wrap', '==', 'null', '||', 'wrap', '.', 'getStatus', '(', ')', '==', 'Status', '.', 'BUFFER_UNDERFLOW', '||', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_UNWRAP', '&&', 'myNetInData', '.', 'remaining', '(', ')', '==', '0', ')', ')', '{', 'myNetInData', '.', 'compact', '(', ')', ';', 'int', 'rd', ';', 'try', '{', 'rd', '=', 'net', '.', 'getIn', '(', ')', '.', 'read', '(', 'myNetInData', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Read: ""', '+', 'rd', ')', ';', '}', '}', 'finally', '{', 'myNetInData', '.', 'flip', '(', ')', ';', '}', 'if', '(', 'rd', '==', '0', ')', '{', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Wait: ""', '+', 'handshakeTimeout', ')', ';', '}', 'net', '.', 'getIn', '(', ')', '.', 'waitData', '(', 'handshakeTimeout', ')', ';', 'rd', '=', 'net', '.', 'getIn', '(', ')', '.', 'read', '(', 'myNetInData', ')', ';', 'if', '(', 'debugWrap', ')', '{', 'log', '.', 'info', '(', '""Read after wait: ""', '+', 'rd', ')', ';', '}', '}', 'if', '(', 'rd', '<', '0', ')', '{', 'break', ';', '}', '}', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""Unwrap chunk done ""', '+', 'hstatus', '+', '"" ""', '+', 'wrap', '+', '"" ""', '+', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ')', ';', '}', '}', '}', 'else', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NEED_TASK', ')', '{', 'long', 't0task', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'Runnable', 'r', ';', 'while', '(', '(', 'r', '=', 'sslEngine', '.', 'getDelegatedTask', '(', ')', ')', '!=', 'null', ')', '{', 'r', '.', 'run', '(', ')', ';', '}', 'long', 't1task', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'hstatus', '=', 'sslEngine', '.', 'getHandshakeStatus', '(', ')', ';', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINEST', ')', ')', '{', 'log', '.', 'info', '(', '""Tasks done in ""', '+', '(', 't1task', '-', 't0task', ')', '+', '"" new status ""', '+', 'hstatus', ')', ';', '}', '}', 'if', '(', 'hstatus', '==', 'HandshakeStatus', '.', 'NOT_HANDSHAKING', ')', '{', 'break', ';', '}', '}', 'endHandshake', '(', ')', ';', 'processRealInput', '(', 'net', '.', 'getIn', '(', ')', ',', 'in', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Error handshaking""', ',', 't', ')', ';', 'try', '{', 'close', '(', ')', ';', 'net', '.', 'close', '(', ')', ';', 'sendHandleReceivedCallback', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Error closing""', ',', 'ex', ')', ';', '}', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', 'if', '(', 'myNetOutData', '.', 'remaining', '(', ')', '>', '0', ')', 'net', '.', 'getOut', '(', ')', '.', 'write', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '}', '}', '}']",775,40,10,735,96.07843137254902
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,init_2.txt,0.9991,0.0018,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",484.544825,"class T { public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(""serverUrl"", null); chsDomain = serverConfigurationService.getString(""content.chs.serverName"", null); chsUrl = serverConfigurationService.getString(""content.chs.serverUrl"", null); useContentHostingDomain = serverConfigurationService.getBoolean(""content.separateDomains"", false); contentPaths = serverConfigurationService.getStrings(""content.chs.urlprefixes""); if (contentPaths == null) { contentPaths = new String[] { ""/access/"", ""/web/"" }; } loginPaths = serverConfigurationService.getStrings(""content.login.urlprefixes""); if (loginPaths == null) { loginPaths = new String[] { ""/access/login"", ""/sakai-login-tool"", ""/access/require"", ""/access/accept"" }; } contentExceptions = serverConfigurationService.getStrings(""content.chsexception.urlprefixes""); if (contentExceptions == null) { contentExceptions = new String[] { ""/access/calendar/"", ""/access/citation/export_ris_sel/"", ""/access/citation/export_ris_all/"" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (""container"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (""sakai"".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (""context"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (""tool"".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(""invalid "" + CONFIG_SESSION + "" setting ("" + s + ""): not one of container, sakai, context, tool""); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = ""basic"".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(""overridding "" + CONFIG_MAX_PER_FILE + "" setting: must be 'true' with "" + CONFIG_CONTINUE + "" ='true'""); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(""sakai.cluster.terracotta""); TERRACOTTA_CLUSTER = ""true"".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!""none"".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(""Unable to compile "" + SAKAI_SESSION_PARAM_ALLOW + ""="" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, ""lax""); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); } }",class T { void init( ) throws ServletException { m_uploadTempDir = System.getProperty( ); } },5728,93,24,5635,98.79032258064515,"['class', 'T', '{', 'public', 'void', 'init', '(', 'FilterConfig', 'filterConfig', ')', 'throws', 'ServletException', '{', 'appUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""serverUrl""', ',', 'null', ')', ';', 'chsDomain', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverName""', ',', 'null', ')', ';', 'chsUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverUrl""', ',', 'null', ')', ';', 'useContentHostingDomain', '=', 'serverConfigurationService', '.', 'getBoolean', '(', '""content.separateDomains""', ',', 'false', ')', ';', 'contentPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chs.urlprefixes""', ')', ';', 'if', '(', 'contentPaths', '==', 'null', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '""/access/""', ',', '""/web/""', '}', ';', '}', 'loginPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.login.urlprefixes""', ')', ';', 'if', '(', 'loginPaths', '==', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""/access/login""', ',', '""/sakai-login-tool""', ',', '""/access/require""', ',', '""/access/accept""', '}', ';', '}', 'contentExceptions', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chsexception.urlprefixes""', ')', ';', 'if', '(', 'contentExceptions', '==', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""/access/calendar/""', ',', '""/access/citation/export_ris_sel/""', ',', '""/access/citation/export_ris_all/""', '}', ';', '}', 'm_servletContext', '=', 'filterConfig', '.', 'getServletContext', '(', ')', ';', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', '!=', 'null', ')', '{', 'String', 's', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', ';', 'if', '(', '""container""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTAINER_SESSION', ';', '}', 'else', 'if', '(', '""sakai""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'SAKAI_SESSION', ';', '}', 'else', 'if', '(', '""context""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTEXT_SESSION', ';', '}', 'else', 'if', '(', '""tool""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'TOOL_SESSION', ';', '}', 'else', '{', 'log', '.', 'warn', '(', '""invalid ""', '+', 'CONFIG_SESSION', '+', '"" setting (""', '+', 's', '+', '""): not one of container, sakai, context, tool""', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', '!=', 'null', ')', '{', 'm_sakaiRemoteUser', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', '!=', 'null', ')', '{', 'm_checkPrincipal', '=', '""basic""', '.', 'equals', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', '!=', 'null', ')', '{', 'm_toolPlacement', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', '!=', 'null', ')', '{', 'm_contextId', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', ';', '}', 'else', '{', 'm_contextId', '=', 'm_servletContext', '.', 'getServletContextName', '(', ')', ';', 'if', '(', 'm_contextId', '==', 'null', ')', '{', 'm_contextId', '=', 'toString', '(', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', '!=', 'null', ')', '{', 'm_characterEncoding', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', '!=', 'null', ')', '{', 'm_characterEncodingEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', '!=', 'null', ')', '{', 'm_uploadEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', 'm_uploadCeiling', '=', 'm_uploadMaxSize', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '!=', 'null', ')', '{', 'm_uploadCeiling', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', '!=', 'null', ')', '{', 'm_uploadThreshold', '=', 'Integer', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', ')', '.', 'intValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', '!=', 'null', ')', '{', 'm_uploadContinue', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', '!=', 'null', ')', '{', 'm_uploadMaxPerFile', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'm_uploadContinue', '&&', '!', 'm_uploadMaxPerFile', ')', '{', 'log', '.', 'warn', '(', '""overridding ""', '+', 'CONFIG_MAX_PER_FILE', '+', '"" setting: must be \'true\' with ""', '+', 'CONFIG_CONTINUE', '+', '"" =\'true\'""', ')', ';', 'm_uploadMaxPerFile', '=', 'true', ';', '}', 'String', 'clusterTerracotta', '=', 'System', '.', 'getProperty', '(', '""sakai.cluster.terracotta""', ')', ';', 'TERRACOTTA_CLUSTER', '=', '""true""', '.', 'equals', '(', 'clusterTerracotta', ')', ';', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', '!=', 'null', ')', '{', 'cookieName', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', '!=', 'null', ')', '{', 'cookieDomain', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', ';', '}', 'm_sessionParamAllow', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_SESSION_PARAM_ALLOW', ',', 'false', ')', ';', 'String', 'allowBypassSession', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS', ',', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT', ')', ';', 'if', '(', '!', '""none""', '.', 'equals', '(', 'allowBypassSession', ')', ')', '{', 'try', '{', 'm_sessionParamRegex', '=', 'Pattern', '.', 'compile', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', '""Unable to compile ""', '+', 'SAKAI_SESSION_PARAM_ALLOW', '+', '""=""', '+', 'allowBypassSession', ')', ';', 'm_sessionParamRegex', '=', 'null', ';', '}', '}', 'm_cookieHttpOnly', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_COOKIE_HTTP_ONLY', ',', 'true', ')', ';', 'm_cookieSameSite', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_COOKIE_SAME_SITE', ',', '""lax""', ')', ';', 'm_UACompatible', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_UA_COMPATIBLE', ',', 'null', ')', ';', 'isLTIProviderAllowed', '=', '(', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_BLTI_PROVIDER_TOOLS', ',', 'null', ')', '!=', 'null', ')', ';', 'm_redirectRandomNode', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_CLUSTER_REDIRECT_RANDOM', ',', 'true', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'm_uploadTempDir', '=', 'System', '.', 'getProperty', '(', ')', ';', '}', '}']",963,20,10,943,98.95068205666315
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_6.txt,0.9978,0.0052,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",423.432349,"class T { static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(""keystorefile"", ""mykeystore""); properties.setProperty(""keystoretype"", ""JKS""); properties.setProperty(""keystorepass"", ""22222222""); properties.setProperty(""privatekeyalias"", ""test""); properties.setProperty(""publickeyalias"", ""test""); properties.setProperty(""privatekeypass"", ""22222222""); properties.setProperty(""encryptionkeystrength"", ""56""); properties.setProperty(""encryptionalgorithm"", ""DES""); SecureAttrs.init(""testsym"", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(""testasym"", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(""TEST 1 START test encoded str ===========""); SecureAttrs secureattrs = SecureAttrs.getInstance(""testsym""); String s = ""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""; Map map = secureattrs.verifyEncodedString(s, ""secret""); if (map == null) System.out.println("" FAILED""); else System.out.println("" PASSED"" + map); System.out.println(""TEST 1 END ================""); System.out.println(""TEST 2 START : encode followed by decode ===""); HashMap hashmap = new HashMap(); hashmap.put(""branch"", ""bb""); hashmap.put(""mail"", ""mm""); hashmap.put(""sun.userid"", ""uu""); hashmap.put(""sun.spappurl"", ""apapp""); System.out.println("" TEST 2a START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); String s1 = ""secret""; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 2a PASSED "" + map1); else System.out.println("" 2a FAILED "" + map1); System.out.println("" TEST 2b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 2b PASSED "" + map1); else System.out.println("" 2b FAILED "" + map1); System.out.println(""TEST 2 END ====================""); System.out.println(""TEST 3 START : decode with incorrect secret""); System.out.println("" TEST 3a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); map1 = secureattrs.verifyEncodedString(s2, ""junk""); if (map1 != null) System.out.println("" 3a FAILED "" + map1); else System.out.println("" 3a PASSED "" + map1); System.out.println("" TEST 3b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); map1 = secureattrs.verifyEncodedString(s3, ""junk""); if (map1 != null) System.out.println("" 3b FAILED "" + map1); else System.out.println("" 3b PASSED "" + map1); System.out.println(""TEST 3 END ====================""); System.out.println(""TEST 4 START : decode with correct secret""); System.out.println("" TEST 4a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); s1 = ""secret""; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println("" TEST 4b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println(""TEST 4 END ====================""); System.out.println("" TEST 5a START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println("" 5a PASSED "" + map1); else System.out.println("" 5a FAILED "" + map1); System.out.println("" TEST 5b START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); s1 = ""secret""; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println("" 5b PASSED "" + map1); else System.out.println("" 5b FAILED "" + map1); System.out.println(""TEST 5 END ====================""); } catch (Exception exception) { exception.printStackTrace(); System.out.println(""TEST Exc : "" + exception); } } }",class T { void main(String[] args) { try { } catch (Exception exception) { } } },4363,80,24,4283,98.70938004148422,"['class', 'T', '{', 'static', 'public', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'SecureAttrs', '.', 'dbg', '=', 'true', ';', 'Properties', 'properties', '=', 'new', 'Properties', '(', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorefile""', ',', '""mykeystore""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystoretype""', ',', '""JKS""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorepass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""publickeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeypass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionkeystrength""', ',', '""56""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionalgorithm""', ',', '""DES""', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testsym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_SYM', ',', 'properties', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testasym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_ASYM', ',', 'properties', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 START test encoded str ===========""', ')', ';', 'SecureAttrs', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's', '=', '""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""', ';', 'Map', 'map', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's', ',', '""secret""', ')', ';', 'if', '(', 'map', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" FAILED""', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" PASSED""', '+', 'map', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 END ================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 START : encode followed by decode ===""', ')', ';', 'HashMap', 'hashmap', '=', 'new', 'HashMap', '(', ')', ';', 'hashmap', '.', 'put', '(', '""branch""', ',', '""bb""', ')', ';', 'hashmap', '.', 'put', '(', '""mail""', ',', '""mm""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.userid""', ',', '""uu""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.spappurl""', ',', '""apapp""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's1', '=', '""secret""', ';', 'String', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's2', ')', ';', 'Map', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'String', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 START : decode with incorrect secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3a FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3a PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3b FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3b PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 START : decode with correct secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5a START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5b START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's2', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 5 END ====================""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'exception', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST Exc : ""', '+', 'exception', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', '}', 'catch', '(', 'Exception', 'exception', ')', '{', '}', '}', '}']",910,24,10,886,98.44444444444444
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_14.txt,1.0,0.0,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",594.308589,"class T { public static void main(String[] argv) { int start = 1; int end = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-s"")) { src = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dest = argv[++optind]; } else if (argv[optind].equals(""-x"")) { expunge = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""); System.out.println(""	[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""); System.out.println(""	 The -x option => EXPUNGE deleted messages""); System.out.println(""	 msgnum1 => start of message-range; msgnum2 => end of message-range""); System.exit(1); } else { break; } } if (optind < argv.length) start = Integer.parseInt(argv[optind++]); if (optind < argv.length) end = Integer.parseInt(argv[optind++]); try { Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getFolder(src); if (folder == null || !folder.exists()) { System.out.println(""Invalid folder: "" + src); System.exit(1); } folder.open(Folder.READ_WRITE); int count = folder.getMessageCount(); if (count == 0) { System.out.println(folder.getName() + "" is empty""); folder.close(false); store.close(); return; } Folder dfolder = store.getFolder(dest); if (!dfolder.exists()) dfolder.create(Folder.HOLDS_MESSAGES); if (end == -1) end = count; Message[] msgs = folder.getMessages(start, end); System.out.println(""Moving "" + msgs.length + "" messages""); if (msgs.length != 0) { folder.copyMessages(msgs, dfolder); folder.setFlags(msgs, new Flags(Flags.Flag.DELETED), true); for (int i = 0; i < msgs.length; i++) { if (!msgs[i].isSet(Flags.Flag.DELETED)) System.out.println(""Message # "" + msgs[i] + "" not deleted""); } } folder.close(expunge); store.close(); } catch (MessagingException mex) { Exception ex = mex; do { System.out.println(ex.getMessage()); if (ex instanceof MessagingException) ex = ((MessagingException) ex).getNextException(); else ex = null; } while (ex != null); } } }",class T { void main(String argv) { int start ; } },2791,50,24,2741,99.06035417419588,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'start', '=', '1', ';', 'int', 'end', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'src', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dest', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-x""', ')', ')', '{', 'expunge', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t The -x option => EXPUNGE deleted messages""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t msgnum1 => start of message-range; msgnum2 => end of message-range""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'start', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'end', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getFolder', '(', 'src', ')', ';', 'if', '(', 'folder', '==', 'null', '||', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder: ""', '+', 'src', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'count', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'count', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'folder', '.', 'getName', '(', ')', '+', '"" is empty""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'return', ';', '}', 'Folder', 'dfolder', '=', 'store', '.', 'getFolder', '(', 'dest', ')', ';', 'if', '(', '!', 'dfolder', '.', 'exists', '(', ')', ')', 'dfolder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'if', '(', 'end', '==', '-', '1', ')', 'end', '=', 'count', ';', 'Message', '[', ']', 'msgs', '=', 'folder', '.', 'getMessages', '(', 'start', ',', 'end', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Moving ""', '+', 'msgs', '.', 'length', '+', '"" messages""', ')', ';', 'if', '(', 'msgs', '.', 'length', '!=', '0', ')', '{', 'folder', '.', 'copyMessages', '(', 'msgs', ',', 'dfolder', ')', ';', 'folder', '.', 'setFlags', '(', 'msgs', ',', 'new', 'Flags', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ',', 'true', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'msgs', '[', 'i', ']', '.', 'isSet', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ')', 'System', '.', 'out', '.', 'println', '(', '""Message # ""', '+', 'msgs', '[', 'i', ']', '+', '"" not deleted""', ')', ';', '}', '}', 'folder', '.', 'close', '(', 'expunge', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'Exception', 'ex', '=', 'mex', ';', 'do', '{', 'System', '.', 'out', '.', 'println', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'if', '(', 'ex', 'instanceof', 'MessagingException', ')', 'ex', '=', '(', '(', 'MessagingException', ')', 'ex', ')', '.', 'getNextException', '(', ')', ';', 'else', 'ex', '=', 'null', ';', '}', 'while', '(', 'ex', '!=', 'null', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', 'int', 'start', ';', '}', '}']",799,15,10,784,99.36628643852978
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_15.txt,1.0,0.0001,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",649.60681,"class T { public static void main(String[] argv) { int nummsg = 256; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-p"")) { port = Integer.parseInt(argv[++optind]); } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""); System.out.println(""	[-P password] [-f mailbox] [msgnum] [-v] [-D]""); System.exit(1); } else { break; } } try { if (optind < argv.length) nummsg = Integer.parseInt(argv[optind]); Properties props = System.getProperties(); session = Session.getInstance(props, null); session.setDebug(debug); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, port, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } if (mbox == null) mbox = ""messagecachetest""; folder = folder.getFolder(mbox); if (folder == null) { System.out.println(""Invalid folder""); System.exit(1); } Message[] msgs = createMessages(nummsg); if (folder.exists()) folder.delete(false); folder.create(Folder.HOLDS_MESSAGES); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""fill folder""); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test message number""); testMessageNumber(folder); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge forward""); testExpungeForward(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge reverse""); testExpungeReverse(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge random""); testExpungeRandom(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge other""); testExpungeOther(folder); folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); System.exit(1); } System.exit(0); } }",class T { void main(String argv) { int nummsg ; } },3155,51,24,3104,99.13765570105396,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'nummsg', '=', '256', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-p""', ')', ')', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', '++', 'optind', ']', ')', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'nummsg', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'port', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'mbox', '==', 'null', ')', 'mbox', '=', '""messagecachetest""', ';', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', 'createMessages', '(', 'nummsg', ')', ';', 'if', '(', 'folder', '.', 'exists', '(', ')', ')', 'folder', '.', 'delete', '(', 'false', ')', ';', 'folder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""fill folder""', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test message number""', ')', ';', 'testMessageNumber', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge forward""', ')', ';', 'testExpungeForward', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge reverse""', ')', ';', 'testExpungeReverse', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge random""', ')', ';', 'testExpungeRandom', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge other""', ')', ';', 'testExpungeOther', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', 'int', 'nummsg', ';', '}', '}']",890,15,10,875,99.43181818181816
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_7.txt,0.9947,0.0174,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",376.747292,"class T { public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + "":class=HtmlAdaptorServer,protocol=html,port="" + htmlPort); println(""Adding HTML adaptor to MBean server with name 
 "" + htmlObjName); println(""NOTE: HTML adaptor is bound on TCP port "" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + "":class=SnmpAdaptorServer,protocol=snmp,port="" + snmpPort); println(""Adding SNMP adaptor to MBean server with name 
 "" + snmpObjName); println(""NOTE: SNMP Adaptor is bound on UDP port "" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(""NOTE: Sending a coldStart SNMP trap"" + "" to each destination defined in the ACL file...""); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(""Done.""); try { JMXServiceURL url = new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://localhost:9999/server""); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(""Error starting RMI : execute rmiregistry 9999; ex="" + ex); } sunMibObjName = new ObjectName(""snmp:class=SUN_OPENSSO_SERVER_MIB""); println(""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name"" + ""
 "" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_CTS_MIB""); println(""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name"" + ""
 "" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""); println(""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name"" + ""
 "" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""); println(""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name"" + ""
 "" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(""trapGenerator"" + "":class=LinkTrapGenerator,ifIndex="" + ifIndex); println(""Adding LinkTrapGenerator to MBean server with name"" + ""
 "" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(""
>> Press <Enter> if you want to start sending traps.""); println("" -or-""); println("">> Press <Ctrl-C> if you want to stop this agent.""); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } } }",class T { void main(String args) { usage(); } },3995,47,24,3948,99.42080080584236,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'final', 'MBeanServer', 'server', ';', 'final', 'ObjectName', 'htmlObjName', ';', 'final', 'ObjectName', 'snmpObjName', ';', 'final', 'ObjectName', 'sunMibObjName', ';', 'final', 'ObjectName', 'forgerockCtsMibObjName', ';', 'final', 'ObjectName', 'forgerockPolicyMibObjName', ';', 'final', 'ObjectName', 'forgerockSessionMibObjName', ';', 'final', 'ObjectName', 'trapGeneratorObjName', ';', 'int', 'htmlPort', '=', '8082', ';', 'int', 'snmpPort', '=', '11161', ';', 'if', '(', '(', 'args', '.', 'length', '!=', '0', ')', '&&', '(', 'args', '.', 'length', '!=', '1', ')', ')', '{', 'usage', '(', ')', ';', 'java', '.', 'lang', '.', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', 'if', '(', 'args', '.', 'length', '==', '1', ')', '{', 'try', '{', 'nbTraps', '=', '(', 'new', 'Integer', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', '<', '0', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'NumberFormatException', 'e', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'try', '{', 'List', '<', 'MBeanServer', '>', 'servers', '=', 'MBeanServerFactory', '.', 'findMBeanServer', '(', 'null', ')', ';', 'if', '(', '(', 'servers', '!=', 'null', ')', '&&', '!', 'servers', '.', 'isEmpty', '(', ')', ')', '{', 'server', '=', 'servers', '.', 'get', '(', '0', ')', ';', '}', 'else', '{', 'server', '=', 'MBeanServerFactory', '.', 'createMBeanServer', '(', ')', ';', '}', 'String', 'domain', '=', 'server', '.', 'getDefaultDomain', '(', ')', ';', 'htmlObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=HtmlAdaptorServer,protocol=html,port=""', '+', 'htmlPort', ')', ';', 'println', '(', '""Adding HTML adaptor to MBean server with name \n ""', '+', 'htmlObjName', ')', ';', 'println', '(', '""NOTE: HTML adaptor is bound on TCP port ""', '+', 'htmlPort', ')', ';', 'HtmlAdaptorServer', 'htmlAdaptor', '=', 'new', 'HtmlAdaptorServer', '(', 'htmlPort', ')', ';', 'server', '.', 'registerMBean', '(', 'htmlAdaptor', ',', 'htmlObjName', ')', ';', 'htmlAdaptor', '.', 'start', '(', ')', ';', 'snmpPort', '=', '11161', ';', 'snmpObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=SnmpAdaptorServer,protocol=snmp,port=""', '+', 'snmpPort', ')', ';', 'println', '(', '""Adding SNMP adaptor to MBean server with name \n ""', '+', 'snmpObjName', ')', ';', 'println', '(', '""NOTE: SNMP Adaptor is bound on UDP port ""', '+', 'snmpPort', ')', ';', 'snmpAdaptor', '=', 'new', 'SnmpAdaptorServer', '(', 'snmpPort', ')', ';', 'server', '.', 'registerMBean', '(', 'snmpAdaptor', ',', 'snmpObjName', ')', ';', 'snmpAdaptor', '.', 'start', '(', ')', ';', 'print', '(', '""NOTE: Sending a coldStart SNMP trap""', '+', '"" to each destination defined in the ACL file...""', ')', ';', 'snmpAdaptor', '.', 'setTrapPort', '(', 'new', 'Integer', '(', 'snmpPort', '+', '1', ')', ')', ';', 'snmpAdaptor', '.', 'snmpV1Trap', '(', '0', ',', '0', ',', 'null', ')', ';', 'println', '(', '""Done.""', ')', ';', 'try', '{', 'JMXServiceURL', 'url', '=', 'new', 'JMXServiceURL', '(', '""service:jmx:rmi:///jndi/rmi://localhost:9999/server""', ')', ';', 'JMXConnectorServer', 'cs', '=', 'JMXConnectorServerFactory', '.', 'newJMXConnectorServer', '(', 'url', ',', 'null', ',', 'server', ')', ';', 'cs', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'println', '(', '""Error starting RMI : execute rmiregistry 9999; ex=""', '+', 'ex', ')', ';', '}', 'sunMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=SUN_OPENSSO_SERVER_MIB""', ')', ';', 'println', '(', '""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'sunMibObjName', ')', ';', 'SUN_OPENSSO_SERVER_MIB', 'mib2', '=', 'new', 'SUN_OPENSSO_SERVER_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib2', ',', 'sunMibObjName', ')', ';', 'forgerockCtsMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_CTS_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockCtsMibObjName', ')', ';', 'forgerockPolicyMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockPolicyMibObjName', ')', ';', 'forgerockSessionMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockSessionMibObjName', ')', ';', 'FORGEROCK_OPENAM_CTS_MIB', 'mib3', '=', 'new', 'FORGEROCK_OPENAM_CTS_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib3', ',', 'forgerockCtsMibObjName', ')', ';', 'FORGEROCK_OPENAM_POLICY_MIB', 'mib4', '=', 'new', 'FORGEROCK_OPENAM_POLICY_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib4', ',', 'forgerockPolicyMibObjName', ')', ';', 'FORGEROCK_OPENAM_SESSION_MIB', 'mib5', '=', 'new', 'FORGEROCK_OPENAM_SESSION_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib5', ',', 'forgerockSessionMibObjName', ')', ';', 'mib2', '.', 'setSnmpAdaptor', '(', 'snmpAdaptor', ')', ';', 'int', 'ifIndex', '=', '1', ';', 'trapGeneratorObjName', '=', 'new', 'ObjectName', '(', '""trapGenerator""', '+', '"":class=LinkTrapGenerator,ifIndex=""', '+', 'ifIndex', ')', ';', 'println', '(', '""Adding LinkTrapGenerator to MBean server with name""', '+', '""\n ""', '+', 'trapGeneratorObjName', ')', ';', 'LinkTrapGenerator', 'trapGenerator', '=', 'new', 'LinkTrapGenerator', '(', 'nbTraps', ')', ';', 'server', '.', 'registerMBean', '(', 'trapGenerator', ',', 'trapGeneratorObjName', ')', ';', 'println', '(', '""\n>> Press <Enter> if you want to start sending traps.""', ')', ';', 'println', '(', '"" -or-""', ')', ';', 'println', '(', '"">> Press <Ctrl-C> if you want to stop this agent.""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'trapGenerator', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'usage', '(', ')', ';', '}', '}']",641,16,10,625,99.04912836767036
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_2.txt,0.9997,0.001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",457.789709,"class T { public void run() { int sloops = 0; if (debug) { log.info(""Start NIO thread, daemon="" + daemon); } while (running) { try { loops.incrementAndGet(); processPending(); long now = System.currentTimeMillis(); if (nextWakeup < now) { updateSleepTimeAndProcessTimeouts(now); } int selected = selector.select(sleepTime); lastWakeup = System.currentTimeMillis(); long slept = lastWakeup - now; if (debugWakeup && selected == 0) { if (sleepTime < maxSleep - 1000) { log.info(""Wakeup "" + selected + "" "" + slept + "" "" + sleepTime); } } if (slept < 10 && selected == 0) { if (sloops > 50) { sloops = 0; log.severe(""Looping !""); resetSelector(); } sloops++; } if (selected != 0) { sloops = 0; int callbackCnt = 0; Set<SelectionKey> sel = selector.selectedKeys(); Iterator<SelectionKey> i = sel.iterator(); while (i.hasNext()) { callbackCnt++; long beforeCallback = System.currentTimeMillis(); SelectionKey sk = i.next(); i.remove(); boolean valid = sk.isValid(); int readyOps = (valid) ? sk.readyOps() : 0; NioChannel ch = (NioChannel) sk.attachment(); if (debugWakeup) { log.info(""Wakeup selCnt="" + selected + "" slept="" + (lastWakeup - now) + "" ready: "" + readyOps + "" v="" + sk.isValid() + "" ch="" + ch); } if (ch == null) { log.severe(""Missing channel""); sk.cancel(); continue; } if (ch.selKey != sk) { log.severe(""Invalid state, selKey doesn't match ""); ch.selKey = sk; } if (ch.channel != sk.channel()) { ch.channel = sk.channel(); log.severe(""Invalid state, channel doesn't match ""); } if (!sk.isValid()) { if (debug) { log.info(""!isValid, closed socket "" + ch); } ch.close(); continue; } try { int ready = sk.readyOps(); if (sk.isValid() && sk.isAcceptable()) { handleAccept(ch, sk); } if (sk.isValid() && sk.isConnectable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_CONNECT); SocketChannel sc = (SocketChannel) sk.channel(); handleConnect(ch, sc); } if (sk.isValid() && sk.isWritable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_WRITE); ch.writeInterest = false; handleDataWriteable(ch); } if (sk.isValid() && sk.isReadable()) { handleReadable(ch); } long callbackTime = System.currentTimeMillis() - beforeCallback; if (callbackTime > 250) { log.warning(""Callback too long ! ops="" + ready + "" time="" + callbackTime + "" ch="" + ch + "" "" + callbackCnt); } if (callbackTime > maxCallbackTime) { maxCallbackTime = callbackTime; } callbackCount.incrementAndGet(); this.callbackTotalTime.addAndGet(callbackTime); } catch (Throwable t) { log.log(Level.SEVERE, ""SelectorThread: Channel error, closing"", t); ch.lastException = t; ch.close(); } } sel.clear(); } } catch (Throwable e) { log.log(Level.SEVERE, ""SelectorThread: Error in select"", e); } } log.info(""SelectorThread done""); } }",class T { void run() { int sloops = 0; } },2702,42,23,2660,99.29078014184395,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'int', 'sloops', '=', '0', ';', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""Start NIO thread, daemon=""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'loops', '.', 'incrementAndGet', '(', ')', ';', 'processPending', '(', ')', ';', 'long', 'now', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', '<', 'now', ')', '{', 'updateSleepTimeAndProcessTimeouts', '(', 'now', ')', ';', '}', 'int', 'selected', '=', 'selector', '.', 'select', '(', 'sleepTime', ')', ';', 'lastWakeup', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'slept', '=', 'lastWakeup', '-', 'now', ';', 'if', '(', 'debugWakeup', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sleepTime', '<', 'maxSleep', '-', '1000', ')', '{', 'log', '.', 'info', '(', '""Wakeup ""', '+', 'selected', '+', '"" ""', '+', 'slept', '+', '"" ""', '+', 'sleepTime', ')', ';', '}', '}', 'if', '(', 'slept', '<', '10', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sloops', '>', '50', ')', '{', 'sloops', '=', '0', ';', 'log', '.', 'severe', '(', '""Looping !""', ')', ';', 'resetSelector', '(', ')', ';', '}', 'sloops', '++', ';', '}', 'if', '(', 'selected', '!=', '0', ')', '{', 'sloops', '=', '0', ';', 'int', 'callbackCnt', '=', '0', ';', 'Set', '<', 'SelectionKey', '>', 'sel', '=', 'selector', '.', 'selectedKeys', '(', ')', ';', 'Iterator', '<', 'SelectionKey', '>', 'i', '=', 'sel', '.', 'iterator', '(', ')', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'callbackCnt', '++', ';', 'long', 'beforeCallback', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'SelectionKey', 'sk', '=', 'i', '.', 'next', '(', ')', ';', 'i', '.', 'remove', '(', ')', ';', 'boolean', 'valid', '=', 'sk', '.', 'isValid', '(', ')', ';', 'int', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', '.', 'readyOps', '(', ')', ':', '0', ';', 'NioChannel', 'ch', '=', '(', 'NioChannel', ')', 'sk', '.', 'attachment', '(', ')', ';', 'if', '(', 'debugWakeup', ')', '{', 'log', '.', 'info', '(', '""Wakeup selCnt=""', '+', 'selected', '+', '"" slept=""', '+', '(', 'lastWakeup', '-', 'now', ')', '+', '"" ready: ""', '+', 'readyOps', '+', '"" v=""', '+', 'sk', '.', 'isValid', '(', ')', '+', '"" ch=""', '+', 'ch', ')', ';', '}', 'if', '(', 'ch', '==', 'null', ')', '{', 'log', '.', 'severe', '(', '""Missing channel""', ')', ';', 'sk', '.', 'cancel', '(', ')', ';', 'continue', ';', '}', 'if', '(', 'ch', '.', 'selKey', '!=', 'sk', ')', '{', 'log', '.', 'severe', '(', '""Invalid state, selKey doesn\'t match ""', ')', ';', 'ch', '.', 'selKey', '=', 'sk', ';', '}', 'if', '(', 'ch', '.', 'channel', '!=', 'sk', '.', 'channel', '(', ')', ')', '{', 'ch', '.', 'channel', '=', 'sk', '.', 'channel', '(', ')', ';', 'log', '.', 'severe', '(', '""Invalid state, channel doesn\'t match ""', ')', ';', '}', 'if', '(', '!', 'sk', '.', 'isValid', '(', ')', ')', '{', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""!isValid, closed socket ""', '+', 'ch', ')', ';', '}', 'ch', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'try', '{', 'int', 'ready', '=', 'sk', '.', 'readyOps', '(', ')', ';', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isAcceptable', '(', ')', ')', '{', 'handleAccept', '(', 'ch', ',', 'sk', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isConnectable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_CONNECT', ')', ';', 'SocketChannel', 'sc', '=', '(', 'SocketChannel', ')', 'sk', '.', 'channel', '(', ')', ';', 'handleConnect', '(', 'ch', ',', 'sc', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isWritable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_WRITE', ')', ';', 'ch', '.', 'writeInterest', '=', 'false', ';', 'handleDataWriteable', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isReadable', '(', ')', ')', '{', 'handleReadable', '(', 'ch', ')', ';', '}', 'long', 'callbackTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'beforeCallback', ';', 'if', '(', 'callbackTime', '>', '250', ')', '{', 'log', '.', 'warning', '(', '""Callback too long ! ops=""', '+', 'ready', '+', '"" time=""', '+', 'callbackTime', '+', '"" ch=""', '+', 'ch', '+', '"" ""', '+', 'callbackCnt', ')', ';', '}', 'if', '(', 'callbackTime', '>', 'maxCallbackTime', ')', '{', 'maxCallbackTime', '=', 'callbackTime', ';', '}', 'callbackCount', '.', 'incrementAndGet', '(', ')', ';', 'this', '.', 'callbackTotalTime', '.', 'addAndGet', '(', 'callbackTime', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Channel error, closing""', ',', 't', ')', ';', 'ch', '.', 'lastException', '=', 't', ';', 'ch', '.', 'close', '(', ')', ';', '}', '}', 'sel', '.', 'clear', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Error in select""', ',', 'e', ')', ';', '}', '}', 'log', '.', 'info', '(', '""SelectorThread done""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'int', 'sloops', '=', '0', ';', '}', '}']",718,15,10,703,99.29378531073446
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_5.txt,0.9999,0.0012,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",866.136054,"class T { public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split("":""); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? ""changeit"" : args[1]; passphrase = p.toCharArray(); } else { System.out.println(""Usage: java InstallCert <host>[:port] [passphrase]""); return; } File file = new File(""jssecacerts""); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty(""java.home"") + SEP + ""lib"" + SEP + ""security""); file = new File(dir, ""jssecacerts""); if (file.isFile() == false) { file = new File(dir, ""cacerts""); } } System.out.println(""Loading KeyStore "" + file + ""...""); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(""TLS""); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(""Opening connection to "" + host + "":"" + port + ""...""); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(""Starting SSL handshake...""); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(""No errors, certificate is already trusted""); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(""Could not obtain server certificate chain""); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(""Server sent "" + chain.length + "" certificate(s):""); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(""SHA1""); MessageDigest md5 = MessageDigest.getInstance(""MD5""); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println("" "" + (i + 1) + "" Subject "" + cert.getSubjectDN()); System.out.println("" Issuer "" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println("" sha1 "" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println("" md5 "" + toHexString(md5.digest())); System.out.println(); } System.out.println(""Enter certificate to add to trusted keystore or 'q' to quit: [1]""); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(""KeyStore not changed""); return; } X509Certificate cert = chain[k]; String alias = host + ""-"" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(""jssecacerts""); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(""Added certificate to keystore 'jssecacerts' using alias '"" + alias + ""'""); } }",class T { void main(String args) { String host; } },3285,51,24,3234,99.17203311867524,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'host', ';', 'int', 'port', ';', 'char', '[', ']', 'passphrase', ';', 'if', '(', '(', 'args', '.', 'length', '==', '1', ')', '||', '(', 'args', '.', 'length', '==', '2', ')', ')', '{', 'String', '[', ']', 'c', '=', 'args', '[', '0', ']', '.', 'split', '(', '"":""', ')', ';', 'host', '=', 'c', '[', '0', ']', ';', 'port', '=', '(', 'c', '.', 'length', '==', '1', ')', '?', '443', ':', 'Integer', '.', 'parseInt', '(', 'c', '[', '1', ']', ')', ';', 'String', 'p', '=', '(', 'args', '.', 'length', '==', '1', ')', '?', '""changeit""', ':', 'args', '[', '1', ']', ';', 'passphrase', '=', 'p', '.', 'toCharArray', '(', ')', ';', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: java InstallCert <host>[:port] [passphrase]""', ')', ';', 'return', ';', '}', 'File', 'file', '=', 'new', 'File', '(', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'char', 'SEP', '=', 'File', '.', 'separatorChar', ';', 'File', 'dir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '""java.home""', ')', '+', 'SEP', '+', '""lib""', '+', 'SEP', '+', '""security""', ')', ';', 'file', '=', 'new', 'File', '(', 'dir', ',', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'file', '=', 'new', 'File', '(', 'dir', ',', '""cacerts""', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '""Loading KeyStore ""', '+', 'file', '+', '""...""', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'KeyStore', 'ks', '=', 'KeyStore', '.', 'getInstance', '(', 'KeyStore', '.', 'getDefaultType', '(', ')', ')', ';', 'ks', '.', 'load', '(', 'in', ',', 'passphrase', ')', ';', 'in', '.', 'close', '(', ')', ';', 'SSLContext', 'context', '=', 'SSLContext', '.', 'getInstance', '(', '""TLS""', ')', ';', 'TrustManagerFactory', 'tmf', '=', 'TrustManagerFactory', '.', 'getInstance', '(', 'TrustManagerFactory', '.', 'getDefaultAlgorithm', '(', ')', ')', ';', 'tmf', '.', 'init', '(', 'ks', ')', ';', 'X509TrustManager', 'defaultTrustManager', '=', '(', 'X509TrustManager', ')', 'tmf', '.', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'SavingTrustManager', 'tm', '=', 'new', 'SavingTrustManager', '(', 'defaultTrustManager', ')', ';', 'context', '.', 'init', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', 'tm', '}', ',', 'null', ')', ';', 'SSLSocketFactory', 'factory', '=', 'context', '.', 'getSocketFactory', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Opening connection to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '""...""', ')', ';', 'SSLSocket', 'socket', '=', '(', 'SSLSocket', ')', 'factory', '.', 'createSocket', '(', 'host', ',', 'port', ')', ';', 'socket', '.', 'setSoTimeout', '(', '10000', ')', ';', 'try', '{', 'System', '.', 'out', '.', 'println', '(', '""Starting SSL handshake...""', ')', ';', 'socket', '.', 'startHandshake', '(', ')', ';', 'socket', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""No errors, certificate is already trusted""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'out', ')', ';', '}', 'X509Certificate', '[', ']', 'chain', '=', 'tm', '.', 'chain', ';', 'if', '(', 'chain', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Could not obtain server certificate chain""', ')', ';', 'return', ';', '}', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'System', '.', 'in', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server sent ""', '+', 'chain', '.', 'length', '+', '"" certificate(s):""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', '""SHA1""', ')', ';', 'MessageDigest', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '""MD5""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chain', '.', 'length', ';', 'i', '++', ')', '{', 'X509Certificate', 'cert', '=', 'chain', '[', 'i', ']', ';', 'System', '.', 'out', '.', 'println', '(', '"" ""', '+', '(', 'i', '+', '1', ')', '+', '"" Subject ""', '+', 'cert', '.', 'getSubjectDN', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" Issuer ""', '+', 'cert', '.', 'getIssuerDN', '(', ')', ')', ';', 'sha1', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" sha1 ""', '+', 'toHexString', '(', 'sha1', '.', 'digest', '(', ')', ')', ')', ';', 'md5', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" md5 ""', '+', 'toHexString', '(', 'md5', '.', 'digest', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Enter certificate to add to trusted keystore or \'q\' to quit: [1]""', ')', ';', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ';', 'int', 'k', ';', 'try', '{', 'k', '=', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', '?', '0', ':', 'Integer', '.', 'parseInt', '(', 'line', ')', '-', '1', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""KeyStore not changed""', ')', ';', 'return', ';', '}', 'X509Certificate', 'cert', '=', 'chain', '[', 'k', ']', ';', 'String', 'alias', '=', 'host', '+', '""-""', '+', '(', 'k', '+', '1', ')', ';', 'ks', '.', 'setCertificateEntry', '(', 'alias', ',', 'cert', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', '""jssecacerts""', ')', ';', 'ks', '.', 'store', '(', 'out', ',', 'passphrase', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'cert', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Added certificate to keystore \'jssecacerts\' using alias \'""', '+', 'alias', '+', '""\'""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'String', 'host', ';', '}', '}']",836,15,10,821,99.39467312348668
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,execute_5.txt,0.9824,0.02,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",642.502288,"class T { public void execute(JobExecutionContext arg0) throws JobExecutionException { Connection clConnection = null; Statement statement = null; ResultSet unreadMessageCountRS = null; ResultSet allTopicsAndForumsRS = null; ResultSet synotpicSitesRS = null; PreparedStatement unreadMessagesbySitePS = null; PreparedStatement findSitesbySitePS = null; String siteFilter = ServerConfigurationService.getString(""msgcntr.synoptic.updateMessageCountsSiteFilter""); boolean filterSites = siteFilter != null && !"""".equals(siteFilter); int count = 0; log.info(""UpdateSynopticMessageCounts job launched: "" + new Date()); try { clConnection = sqlService.borrowConnection(); statement = clConnection.createStatement(); if (filterSites) { unreadMessagesbySitePS = clConnection.prepareStatement(UNREAD_MESSAGES_BY_SITE_QUERY); unreadMessagesbySitePS.setString(1, siteFilter); unreadMessageCountRS = unreadMessagesbySitePS.executeQuery(); } else { unreadMessageCountRS = statement.executeQuery(UNREAD_MESSAGES_QUERY); } HashMap<String, HashMap<String, Integer>> siteAndUserMessageCountHM = getSiteAndUserMessageCountHM(unreadMessageCountRS); allTopicsAndForumsRS = statement.executeQuery(TOPICS_AND_FORUMS_QUERY); HashMap<String, HashMap<Long, DecoratedForumInfo>> allTopicsAndForumsHM = getAllTopicsAndForumsHM(allTopicsAndForumsRS); String siteId = """"; String siteTitle = """"; int BINARY_FLAGS; if (runOracleSQL) { if (filterSites) { findSitesbySitePS = clConnection.prepareStatement(FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_ORACLE); findSitesbySitePS.setString(1, siteFilter); synotpicSitesRS = findSitesbySitePS.executeQuery(); } else { synotpicSitesRS = statement.executeQuery(FIND_ALL_SYNOPTIC_SITES_QUERY_ORACLE); } } else { if (filterSites) { findSitesbySitePS = clConnection.prepareStatement(FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_GENERIC); findSitesbySitePS.setString(1, siteFilter); synotpicSitesRS = findSitesbySitePS.executeQuery(); } else { synotpicSitesRS = statement.executeQuery(FIND_ALL_SYNOPTIC_SITES_QUERY_GENERIC); } } while (synotpicSitesRS.next()) { boolean isMessageForumsPageInSite = false; boolean isMessagesPageInSite = false; boolean isForumsPageInSite = false; siteId = synotpicSitesRS.getString(""SITE_ID""); siteTitle = synotpicSitesRS.getString(""TITLE""); if (runOracleSQL) { BINARY_FLAGS = synotpicSitesRS.getInt(""BINARY_FLAGS""); if (BINARY_FLAGS % 10 >= 1) isForumsPageInSite = true; if (BINARY_FLAGS % 100 >= 10) isMessagesPageInSite = true; if (BINARY_FLAGS % 1000 >= 100) isMessageForumsPageInSite = true; } updateSynopticToolInfoForAllUsers(siteId, siteTitle, clConnection, isMessageForumsPageInSite, isMessagesPageInSite, isForumsPageInSite, siteAndUserMessageCountHM, allTopicsAndForumsHM); count++; if (count % 1000 == 0) { log.info(""UpdateSynopticMessageCounts Progress: "" + count + "" Sites updated""); } } } catch (Exception e1) { log.error(e1.getMessage(), e1); } finally { try { if (unreadMessageCountRS != null) unreadMessageCountRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (allTopicsAndForumsRS != null) allTopicsAndForumsRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (synotpicSitesRS != null) synotpicSitesRS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (statement != null) statement.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (unreadMessagesbySitePS != null) unreadMessagesbySitePS.close(); } catch (Exception e) { log.warn(e.getMessage()); } try { if (findSitesbySitePS != null) findSitesbySitePS.close(); } catch (Exception e) { log.warn(e.getMessage()); } sqlService.returnConnection(clConnection); } log.info(""UpdateSynopticMessageCounts job finished: "" + new Date()); } }",class T { void execute(JobExecutionContext arg0) throws JobExecutionException { Connection clConnection ; } },3710,109,27,3601,97.773554167798,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', 'throws', 'JobExecutionException', '{', 'Connection', 'clConnection', '=', 'null', ';', 'Statement', 'statement', '=', 'null', ';', 'ResultSet', 'unreadMessageCountRS', '=', 'null', ';', 'ResultSet', 'allTopicsAndForumsRS', '=', 'null', ';', 'ResultSet', 'synotpicSitesRS', '=', 'null', ';', 'PreparedStatement', 'unreadMessagesbySitePS', '=', 'null', ';', 'PreparedStatement', 'findSitesbySitePS', '=', 'null', ';', 'String', 'siteFilter', '=', 'ServerConfigurationService', '.', 'getString', '(', '""msgcntr.synoptic.updateMessageCountsSiteFilter""', ')', ';', 'boolean', 'filterSites', '=', 'siteFilter', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'siteFilter', ')', ';', 'int', 'count', '=', '0', ';', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts job launched: ""', '+', 'new', 'Date', '(', ')', ')', ';', 'try', '{', 'clConnection', '=', 'sqlService', '.', 'borrowConnection', '(', ')', ';', 'statement', '=', 'clConnection', '.', 'createStatement', '(', ')', ';', 'if', '(', 'filterSites', ')', '{', 'unreadMessagesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'UNREAD_MESSAGES_BY_SITE_QUERY', ')', ';', 'unreadMessagesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'unreadMessageCountRS', '=', 'unreadMessagesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'unreadMessageCountRS', '=', 'statement', '.', 'executeQuery', '(', 'UNREAD_MESSAGES_QUERY', ')', ';', '}', 'HashMap', '<', 'String', ',', 'HashMap', '<', 'String', ',', 'Integer', '>', '>', 'siteAndUserMessageCountHM', '=', 'getSiteAndUserMessageCountHM', '(', 'unreadMessageCountRS', ')', ';', 'allTopicsAndForumsRS', '=', 'statement', '.', 'executeQuery', '(', 'TOPICS_AND_FORUMS_QUERY', ')', ';', 'HashMap', '<', 'String', ',', 'HashMap', '<', 'Long', ',', 'DecoratedForumInfo', '>', '>', 'allTopicsAndForumsHM', '=', 'getAllTopicsAndForumsHM', '(', 'allTopicsAndForumsRS', ')', ';', 'String', 'siteId', '=', '""""', ';', 'String', 'siteTitle', '=', '""""', ';', 'int', 'BINARY_FLAGS', ';', 'if', '(', 'runOracleSQL', ')', '{', 'if', '(', 'filterSites', ')', '{', 'findSitesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_ORACLE', ')', ';', 'findSitesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'synotpicSitesRS', '=', 'findSitesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'synotpicSitesRS', '=', 'statement', '.', 'executeQuery', '(', 'FIND_ALL_SYNOPTIC_SITES_QUERY_ORACLE', ')', ';', '}', '}', 'else', '{', 'if', '(', 'filterSites', ')', '{', 'findSitesbySitePS', '=', 'clConnection', '.', 'prepareStatement', '(', 'FIND_ALL_SYNOPTIC_SITES_BY_SITE_QUERY_GENERIC', ')', ';', 'findSitesbySitePS', '.', 'setString', '(', '1', ',', 'siteFilter', ')', ';', 'synotpicSitesRS', '=', 'findSitesbySitePS', '.', 'executeQuery', '(', ')', ';', '}', 'else', '{', 'synotpicSitesRS', '=', 'statement', '.', 'executeQuery', '(', 'FIND_ALL_SYNOPTIC_SITES_QUERY_GENERIC', ')', ';', '}', '}', 'while', '(', 'synotpicSitesRS', '.', 'next', '(', ')', ')', '{', 'boolean', 'isMessageForumsPageInSite', '=', 'false', ';', 'boolean', 'isMessagesPageInSite', '=', 'false', ';', 'boolean', 'isForumsPageInSite', '=', 'false', ';', 'siteId', '=', 'synotpicSitesRS', '.', 'getString', '(', '""SITE_ID""', ')', ';', 'siteTitle', '=', 'synotpicSitesRS', '.', 'getString', '(', '""TITLE""', ')', ';', 'if', '(', 'runOracleSQL', ')', '{', 'BINARY_FLAGS', '=', 'synotpicSitesRS', '.', 'getInt', '(', '""BINARY_FLAGS""', ')', ';', 'if', '(', 'BINARY_FLAGS', '%', '10', '>=', '1', ')', 'isForumsPageInSite', '=', 'true', ';', 'if', '(', 'BINARY_FLAGS', '%', '100', '>=', '10', ')', 'isMessagesPageInSite', '=', 'true', ';', 'if', '(', 'BINARY_FLAGS', '%', '1000', '>=', '100', ')', 'isMessageForumsPageInSite', '=', 'true', ';', '}', 'updateSynopticToolInfoForAllUsers', '(', 'siteId', ',', 'siteTitle', ',', 'clConnection', ',', 'isMessageForumsPageInSite', ',', 'isMessagesPageInSite', ',', 'isForumsPageInSite', ',', 'siteAndUserMessageCountHM', ',', 'allTopicsAndForumsHM', ')', ';', 'count', '++', ';', 'if', '(', 'count', '%', '1000', '==', '0', ')', '{', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts Progress: ""', '+', 'count', '+', '"" Sites updated""', ')', ';', '}', '}', '}', 'catch', '(', 'Exception', 'e1', ')', '{', 'log', '.', 'error', '(', 'e1', '.', 'getMessage', '(', ')', ',', 'e1', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'unreadMessageCountRS', '!=', 'null', ')', 'unreadMessageCountRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'allTopicsAndForumsRS', '!=', 'null', ')', 'allTopicsAndForumsRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'synotpicSitesRS', '!=', 'null', ')', 'synotpicSitesRS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'statement', '!=', 'null', ')', 'statement', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'unreadMessagesbySitePS', '!=', 'null', ')', 'unreadMessagesbySitePS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'try', '{', 'if', '(', 'findSitesbySitePS', '!=', 'null', ')', 'findSitesbySitePS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'sqlService', '.', 'returnConnection', '(', 'clConnection', ')', ';', '}', 'log', '.', 'info', '(', '""UpdateSynopticMessageCounts job finished: ""', '+', 'new', 'Date', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', 'throws', 'JobExecutionException', '{', 'Connection', 'clConnection', ';', '}', '}']",687,17,10,670,98.96602658788774
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,init_4.txt,0.9997,0.0005,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",532.208034,"class T { public void init(Object arg1) throws StandardException { int precision = 0, scal = 0, maxwidth = 0; Boolean isNullable; boolean valueInP; TypeId typeId = null; int typeid = 0; if (arg1 instanceof TypeId) { typeId = (TypeId) arg1; isNullable = Boolean.TRUE; valueInP = false; maxwidth = 0; } else { isNullable = Boolean.FALSE; valueInP = true; } switch(getNodeType()) { case NodeTypes.TINYINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.TINYINT; setValue((Byte) arg1); } break; case NodeTypes.INT_CONSTANT_NODE: precision = TypeId.INT_PRECISION; scal = TypeId.INT_SCALE; if (valueInP) { maxwidth = TypeId.INT_MAXWIDTH; typeid = Types.INTEGER; setValue((Integer) arg1); } break; case NodeTypes.SMALLINT_CONSTANT_NODE: precision = TypeId.SMALLINT_PRECISION; scal = TypeId.SMALLINT_SCALE; if (valueInP) { maxwidth = TypeId.SMALLINT_MAXWIDTH; typeid = Types.SMALLINT; setValue((Short) arg1); } break; case NodeTypes.LONGINT_CONSTANT_NODE: precision = TypeId.LONGINT_PRECISION; scal = TypeId.LONGINT_SCALE; if (valueInP) { maxwidth = TypeId.LONGINT_MAXWIDTH; typeid = Types.BIGINT; setValue((Long) arg1); } break; case NodeTypes.DECIMAL_CONSTANT_NODE: if (valueInP) { typeid = Types.DECIMAL; String image = (String) arg1; int length = image.length(); int idx = image.indexOf('.'); precision = length; if (!Character.isDigit(image.charAt(0)) && (idx != 0)) precision--; if (idx < 0) scal = 0; else { precision--; scal = length - idx - 1; } maxwidth = length; setValue(new BigDecimal(image)); } else { precision = TypeId.DEFAULT_DECIMAL_PRECISION; scal = TypeId.DEFAULT_DECIMAL_SCALE; maxwidth = TypeId.DECIMAL_MAXWIDTH; } break; case NodeTypes.DOUBLE_CONSTANT_NODE: precision = TypeId.DOUBLE_PRECISION; scal = TypeId.DOUBLE_SCALE; if (valueInP) { maxwidth = TypeId.DOUBLE_MAXWIDTH; typeid = Types.DOUBLE; setValue((Double) arg1); } break; case NodeTypes.FLOAT_CONSTANT_NODE: precision = TypeId.REAL_PRECISION; scal = TypeId.REAL_SCALE; if (valueInP) { maxwidth = TypeId.REAL_MAXWIDTH; typeid = Types.REAL; setValue((Float) arg1); } break; default: assert false : ""Unexpected nodeType = "" + getNodeType(); break; } setType((typeId != null) ? typeId : TypeId.getBuiltInTypeId(typeid), precision, scal, isNullable.booleanValue(), maxwidth); } }",class T { public void init( ) { boolean valueInP; } },2352,53,24,2299,98.75429553264604,"['class', 'T', '{', 'public', 'void', 'init', '(', 'Object', 'arg1', ')', 'throws', 'StandardException', '{', 'int', 'precision', '=', '0', ',', 'scal', '=', '0', ',', 'maxwidth', '=', '0', ';', 'Boolean', 'isNullable', ';', 'boolean', 'valueInP', ';', 'TypeId', 'typeId', '=', 'null', ';', 'int', 'typeid', '=', '0', ';', 'if', '(', 'arg1', 'instanceof', 'TypeId', ')', '{', 'typeId', '=', '(', 'TypeId', ')', 'arg1', ';', 'isNullable', '=', 'Boolean', '.', 'TRUE', ';', 'valueInP', '=', 'false', ';', 'maxwidth', '=', '0', ';', '}', 'else', '{', 'isNullable', '=', 'Boolean', '.', 'FALSE', ';', 'valueInP', '=', 'true', ';', '}', 'switch', '(', 'getNodeType', '(', ')', ')', '{', 'case', 'NodeTypes', '.', 'TINYINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'SMALLINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'SMALLINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'SMALLINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'TINYINT', ';', 'setValue', '(', '(', 'Byte', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'INT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'INT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'INT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'INT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'INTEGER', ';', 'setValue', '(', '(', 'Integer', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'SMALLINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'SMALLINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'SMALLINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'SMALLINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'SMALLINT', ';', 'setValue', '(', '(', 'Short', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'LONGINT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'LONGINT_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'LONGINT_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'LONGINT_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'BIGINT', ';', 'setValue', '(', '(', 'Long', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'DECIMAL_CONSTANT_NODE', ':', 'if', '(', 'valueInP', ')', '{', 'typeid', '=', 'Types', '.', 'DECIMAL', ';', 'String', 'image', '=', '(', 'String', ')', 'arg1', ';', 'int', 'length', '=', 'image', '.', 'length', '(', ')', ';', 'int', 'idx', '=', 'image', '.', 'indexOf', '(', ""'.'"", ')', ';', 'precision', '=', 'length', ';', 'if', '(', '!', 'Character', '.', 'isDigit', '(', 'image', '.', 'charAt', '(', '0', ')', ')', '&&', '(', 'idx', '!=', '0', ')', ')', 'precision', '--', ';', 'if', '(', 'idx', '<', '0', ')', 'scal', '=', '0', ';', 'else', '{', 'precision', '--', ';', 'scal', '=', 'length', '-', 'idx', '-', '1', ';', '}', 'maxwidth', '=', 'length', ';', 'setValue', '(', 'new', 'BigDecimal', '(', 'image', ')', ')', ';', '}', 'else', '{', 'precision', '=', 'TypeId', '.', 'DEFAULT_DECIMAL_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'DEFAULT_DECIMAL_SCALE', ';', 'maxwidth', '=', 'TypeId', '.', 'DECIMAL_MAXWIDTH', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'DOUBLE_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'DOUBLE_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'DOUBLE_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'DOUBLE_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'DOUBLE', ';', 'setValue', '(', '(', 'Double', ')', 'arg1', ')', ';', '}', 'break', ';', 'case', 'NodeTypes', '.', 'FLOAT_CONSTANT_NODE', ':', 'precision', '=', 'TypeId', '.', 'REAL_PRECISION', ';', 'scal', '=', 'TypeId', '.', 'REAL_SCALE', ';', 'if', '(', 'valueInP', ')', '{', 'maxwidth', '=', 'TypeId', '.', 'REAL_MAXWIDTH', ';', 'typeid', '=', 'Types', '.', 'REAL', ';', 'setValue', '(', '(', 'Float', ')', 'arg1', ')', ';', '}', 'break', ';', 'default', ':', 'assert', 'false', ':', '""Unexpected nodeType = ""', '+', 'getNodeType', '(', ')', ';', 'break', ';', '}', 'setType', '(', '(', 'typeId', '!=', 'null', ')', '?', 'typeId', ':', 'TypeId', '.', 'getBuiltInTypeId', '(', 'typeid', ')', ',', 'precision', ',', 'scal', ',', 'isNullable', '.', 'booleanValue', '(', ')', ',', 'maxwidth', ')', ';', '}', '}']","['class', 'T', '{', 'public', 'void', 'init', '(', ')', '{', 'boolean', 'valueInP', ';', '}', '}']",539,14,10,525,99.24385633270322
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_12.txt,1.0,0.0,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",585.197298,"class T { public static void main(String[] argv) { String srcURL = null; String dstURL = null; boolean debug = false; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-s"")) { srcURL = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dstURL = argv[++optind]; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { force = true; } else if (argv[optind].equals(""-S"")) { skipSpecial = true; } else if (argv[optind].equals(""-c"")) { clear = true; } else if (argv[optind].equals(""-P"")) { dontPreserveFlags = true; } else if (argv[optind].equals(""-W"")) { warn = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { printUsage(); System.exit(1); } else { break; } } try { if (srcURL == null || dstURL == null) { printUsage(); System.exit(1); } Session session = Session.getInstance(System.getProperties(), null); session.setDebug(debug); URLName srcURLName = new URLName(srcURL); Folder srcFolder; if (srcURLName.getFile() == null) { Store s = session.getStore(srcURLName); s.connect(); srcFolder = s.getDefaultFolder(); } else { srcFolder = session.getFolder(new URLName(srcURL)); if (!srcFolder.exists()) { System.out.println(""source folder does not exist""); srcFolder.getStore().close(); System.exit(1); } } URLName dstURLName = new URLName(dstURL); Folder dstFolder; if (dstURLName.getFile() == null) { Store s = session.getStore(dstURLName); s.connect(); dstFolder = s.getFolder(srcFolder.getName()); } else dstFolder = session.getFolder(dstURLName); if (clear && dstFolder.exists()) { if (!dstFolder.delete(true)) { System.out.println(""couldn't delete "" + dstFolder.getFullName()); return; } } copy(srcFolder, dstFolder); srcFolder.getStore().close(); dstFolder.getStore().close(); } catch (MessagingException mex) { System.out.println(mex.getMessage()); mex.printStackTrace(); } } }",class T { void main(String argv) { String srcURL ; } },1918,54,24,1864,98.41605068637804,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'String', 'srcURL', '=', 'null', ';', 'String', 'dstURL', '=', 'null', ';', 'boolean', 'debug', '=', 'false', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'srcURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dstURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'force', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-S""', ')', ')', '{', 'skipSpecial', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-c""', ')', ')', '{', 'clear', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'dontPreserveFlags', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-W""', ')', ')', '{', 'warn', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'srcURL', '==', 'null', '||', 'dstURL', '==', 'null', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'System', '.', 'getProperties', '(', ')', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'URLName', 'srcURLName', '=', 'new', 'URLName', '(', 'srcURL', ')', ';', 'Folder', 'srcFolder', ';', 'if', '(', 'srcURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'srcURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'srcFolder', '=', 's', '.', 'getDefaultFolder', '(', ')', ';', '}', 'else', '{', 'srcFolder', '=', 'session', '.', 'getFolder', '(', 'new', 'URLName', '(', 'srcURL', ')', ')', ';', 'if', '(', '!', 'srcFolder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""source folder does not exist""', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'URLName', 'dstURLName', '=', 'new', 'URLName', '(', 'dstURL', ')', ';', 'Folder', 'dstFolder', ';', 'if', '(', 'dstURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'dstURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'dstFolder', '=', 's', '.', 'getFolder', '(', 'srcFolder', '.', 'getName', '(', ')', ')', ';', '}', 'else', 'dstFolder', '=', 'session', '.', 'getFolder', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '&&', 'dstFolder', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'dstFolder', '.', 'delete', '(', 'true', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""couldn\'t delete ""', '+', 'dstFolder', '.', 'getFullName', '(', ')', ')', ';', 'return', ';', '}', '}', 'copy', '(', 'srcFolder', ',', 'dstFolder', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'dstFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mex', '.', 'getMessage', '(', ')', ')', ';', 'mex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', 'String', 'srcURL', ';', '}', '}']",568,15,10,553,99.10394265232976
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_13.txt,0.9987,0.0045,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",583.896409,"class T { public static void main(String[] argv) { long uid = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""); System.exit(1); } else { break; } } try { if (optind < argv.length) uid = Long.parseLong(argv[optind]); Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } folder = folder.getFolder(mbox); if (!folder.exists()) { System.out.println(mbox + "" does not exist""); System.exit(1); } if (!(folder instanceof UIDFolder)) { System.out.println(""This Provider or this folder does not support UIDs""); System.exit(1); } UIDFolder ufolder = (UIDFolder) folder; folder.open(Folder.READ_WRITE); int totalMessages = folder.getMessageCount(); if (totalMessages == 0) { System.out.println(""Empty folder""); folder.close(false); store.close(); System.exit(1); } if (verbose) { int newMessages = folder.getNewMessageCount(); System.out.println(""Total messages = "" + totalMessages); System.out.println(""New messages = "" + newMessages); System.out.println(""-------------------------------""); } if (uid == -1) { Message[] msgs = ufolder.getMessagesByUID(1, UIDFolder.LASTUID); FetchProfile fp = new FetchProfile(); fp.add(FetchProfile.Item.ENVELOPE); fp.add(FetchProfile.Item.FLAGS); fp.add(""X-Mailer""); folder.fetch(msgs, fp); for (int i = 0; i < msgs.length; i++) { System.out.println(""--------------------------""); System.out.println(""MESSAGE UID #"" + ufolder.getUID(msgs[i]) + "":""); dumpEnvelope(msgs[i]); } } else { System.out.println(""Getting message UID: "" + uid); Message m = ufolder.getMessageByUID(uid); if (m != null) dumpPart(m); else System.out.println(""This Message does not exist on this folder""); } folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); } System.exit(1); } }",class T { void main(String argv) { long uid ; } },2944,49,24,2895,99.14383561643837,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'long', 'uid', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'uid', '=', 'Long', '.', 'parseLong', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mbox', '+', '"" does not exist""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '!', '(', 'folder', 'instanceof', 'UIDFolder', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""This Provider or this folder does not support UIDs""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'UIDFolder', 'ufolder', '=', '(', 'UIDFolder', ')', 'folder', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'totalMessages', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'totalMessages', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Empty folder""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'verbose', ')', '{', 'int', 'newMessages', '=', 'folder', '.', 'getNewMessageCount', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Total messages = ""', '+', 'totalMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""New messages = ""', '+', 'newMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""-------------------------------""', ')', ';', '}', 'if', '(', 'uid', '==', '-', '1', ')', '{', 'Message', '[', ']', 'msgs', '=', 'ufolder', '.', 'getMessagesByUID', '(', '1', ',', 'UIDFolder', '.', 'LASTUID', ')', ';', 'FetchProfile', 'fp', '=', 'new', 'FetchProfile', '(', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'ENVELOPE', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'FLAGS', ')', ';', 'fp', '.', 'add', '(', '""X-Mailer""', ')', ';', 'folder', '.', 'fetch', '(', 'msgs', ',', 'fp', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""--------------------------""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MESSAGE UID #""', '+', 'ufolder', '.', 'getUID', '(', 'msgs', '[', 'i', ']', ')', '+', '"":""', ')', ';', 'dumpEnvelope', '(', 'msgs', '[', 'i', ']', ')', ';', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Getting message UID: ""', '+', 'uid', ')', ';', 'Message', 'm', '=', 'ufolder', '.', 'getMessageByUID', '(', 'uid', ')', ';', 'if', '(', 'm', '!=', 'null', ')', 'dumpPart', '(', 'm', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '""This Message does not exist on this folder""', ')', ';', '}', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', 'long', 'uid', ';', '}', '}']",821,15,10,806,99.38347718865596
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_1.txt,0.9913,0.0147,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",759.857746,"class T { public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { ""-help"" }; } for (int i = 0; i < args.length; i++) { if (""-threads"".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (""-count"".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(""Sending "" + count + "" messages.""); } else if (""-pause"".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (""-break"".equals(args[i])) { breakOnEx = true; } else if (""-shutdown"".equals(args[i])) { shutdown = true; } else if (""-stats"".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(""Stats every "" + stats + "" message""); } else if (""-sendoptions"".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(""Setting send options to "" + channelOptions); } else if (""-startoptions"".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(""Setting start options to "" + startoptions); } else if (""-size"".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(""Message size will be:"" + (size + 4) + "" bytes""); } else if (""-mode"".equals(args[i])) { if (""receive"".equals(args[++i])) send = false; } else if (""-debug"".equals(args[i])) { debug = true; } else if (""-help"".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(""System test complete, sleeping to let threads finish.""); Thread.sleep(60 * 1000 * 60); } }",class T { void main(String args) { boolean send ; } },2447,53,24,2394,98.80313660751136,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'boolean', 'send', '=', 'true', ';', 'boolean', 'debug', '=', 'false', ';', 'long', 'pause', '=', '0', ';', 'int', 'count', '=', '1000000', ';', 'int', 'stats', '=', '10000', ';', 'boolean', 'breakOnEx', '=', 'false', ';', 'int', 'threads', '=', '1', ';', 'boolean', 'shutdown', '=', 'false', ';', 'int', 'startoptions', '=', 'Channel', '.', 'DEFAULT', ';', 'int', 'channelOptions', '=', 'Channel', '.', 'SEND_OPTIONS_DEFAULT', ';', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""-help""', '}', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '""-threads""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'threads', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', '}', 'else', 'if', '(', '""-count""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'count', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Sending ""', '+', 'count', '+', '"" messages.""', ')', ';', '}', 'else', 'if', '(', '""-pause""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'pause', '=', 'Long', '.', 'parseLong', '(', 'args', '[', '++', 'i', ']', ')', '*', '1000', ';', '}', 'else', 'if', '(', '""-break""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'breakOnEx', '=', 'true', ';', '}', 'else', 'if', '(', '""-shutdown""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'shutdown', '=', 'true', ';', '}', 'else', 'if', '(', '""-stats""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'stats', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Stats every ""', '+', 'stats', '+', '"" message""', ')', ';', '}', 'else', 'if', '(', '""-sendoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting send options to ""', '+', 'channelOptions', ')', ';', '}', 'else', 'if', '(', '""-startoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'startoptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting start options to ""', '+', 'startoptions', ')', ';', '}', 'else', 'if', '(', '""-size""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'size', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', '-', '4', ';', 'System', '.', 'out', '.', 'println', '(', '""Message size will be:""', '+', '(', 'size', '+', '4', ')', '+', '"" bytes""', ')', ';', '}', 'else', 'if', '(', '""-mode""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'if', '(', '""receive""', '.', 'equals', '(', 'args', '[', '++', 'i', ']', ')', ')', 'send', '=', 'false', ';', '}', 'else', 'if', '(', '""-debug""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', '""-help""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'ManagedChannel', 'channel', '=', '(', 'ManagedChannel', ')', 'ChannelCreator', '.', 'createChannel', '(', 'args', ')', ';', 'LoadTest', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', 'LoadMessage', 'msg', '=', 'new', 'LoadMessage', '(', ')', ';', 'messageSize', '=', 'LoadMessage', '.', 'getMessageSize', '(', 'msg', ')', ';', 'channel', '.', 'addChannelListener', '(', 'test', ')', ';', 'channel', '.', 'addMembershipListener', '(', 'test', ')', ';', 'channel', '.', 'start', '(', 'startoptions', ')', ';', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'addShutdownHook', '(', 'new', 'Shutdown', '(', 'channel', ')', ')', ';', 'while', '(', 'threads', '>', '1', ')', '{', 'Thread', 't', '=', 'new', 'Thread', '(', 'test', ')', ';', 't', '.', 'setDaemon', '(', 'true', ')', ';', 't', '.', 'start', '(', ')', ';', 'threads', '--', ';', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', '}', 'test', '.', 'run', '(', ')', ';', 'if', '(', 'shutdown', '&&', 'send', ')', 'channel', '.', 'stop', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""System test complete, sleeping to let threads finish.""', ')', ';', 'Thread', '.', 'sleep', '(', '60', '*', '1000', '*', '60', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'boolean', 'send', ';', '}', '}']",682,15,10,667,99.25595238095238
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,get_1.txt,1.0,0.0,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",793.100087,"class T { @Override public List<Method> get() { List<Method> vtable = Lists.newArrayList(); String superclassType; try { superclassType = getSuperclass(); } catch (UnresolvedClassException ex) { vtable.addAll(((ClassProto) classPath.getClass(""Ljava/lang/Object;"")).getVtable()); vtableFullyResolved = false; return vtable; } if (superclassType != null) { ClassProto superclass = (ClassProto) classPath.getClass(superclassType); vtable.addAll(superclass.getVtable()); if (!superclass.vtableFullyResolved) { vtableFullyResolved = false; return vtable; } } if (!isInterface()) { addToVtable(getClassDef().getVirtualMethods(), vtable, true, true); Iterable<ClassDef> interfaces = Lists.reverse(Lists.newArrayList(getDirectInterfaces())); List<Method> defaultMethods = Lists.newArrayList(); List<Method> defaultConflictMethods = Lists.newArrayList(); List<Method> mirandaMethods = Lists.newArrayList(); final HashMap<MethodReference, Integer> methodOrder = Maps.newHashMap(); for (ClassDef interfaceDef : interfaces) { for (Method interfaceMethod : interfaceDef.getVirtualMethods()) { int vtableIndex = findMethodIndexInVtable(vtable, interfaceMethod); if (vtableIndex >= 0) { if (interfaceMethodOverrides(interfaceMethod, vtable.get(vtableIndex))) { vtable.set(vtableIndex, interfaceMethod); } } else { int defaultMethodIndex = findMethodIndexInVtable(defaultMethods, interfaceMethod); if (defaultMethodIndex >= 0) { if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { ClassProto existingInterface = (ClassProto) classPath.getClass(defaultMethods.get(defaultMethodIndex).getDefiningClass()); if (!existingInterface.implementsInterface(interfaceMethod.getDefiningClass())) { Method removedMethod = defaultMethods.remove(defaultMethodIndex); defaultConflictMethods.add(removedMethod); } } continue; } int defaultConflictMethodIndex = findMethodIndexInVtable(defaultConflictMethods, interfaceMethod); if (defaultConflictMethodIndex >= 0) { continue; } int mirandaMethodIndex = findMethodIndexInVtable(mirandaMethods, interfaceMethod); if (mirandaMethodIndex >= 0) { if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { ClassProto existingInterface = (ClassProto) classPath.getClass(mirandaMethods.get(mirandaMethodIndex).getDefiningClass()); if (!existingInterface.implementsInterface(interfaceMethod.getDefiningClass())) { Method oldMethod = mirandaMethods.remove(mirandaMethodIndex); int methodOrderValue = methodOrder.get(oldMethod); methodOrder.put(interfaceMethod, methodOrderValue); defaultMethods.add(interfaceMethod); } } continue; } if (!AccessFlags.ABSTRACT.isSet(interfaceMethod.getAccessFlags())) { defaultMethods.add(interfaceMethod); methodOrder.put(interfaceMethod, methodOrder.size()); } else { mirandaMethods.add(interfaceMethod); methodOrder.put(interfaceMethod, methodOrder.size()); } } } } Comparator<MethodReference> comparator = new Comparator<MethodReference>() { @Override public int compare(MethodReference o1, MethodReference o2) { return Ints.compare(methodOrder.get(o1), methodOrder.get(o2)); } }; Collections.sort(defaultMethods, comparator); Collections.sort(defaultConflictMethods, comparator); Collections.sort(mirandaMethods, comparator); addToVtable(defaultMethods, vtable, false, false); addToVtable(defaultConflictMethods, vtable, false, false); addToVtable(mirandaMethods, vtable, false, false); } return vtable; } }",class T { List get() { { vtableFullyResolved = false; } } },3379,59,23,3320,98.92729439809295,"['class', 'T', '{', '@', 'Override', 'public', 'List', '<', 'Method', '>', 'get', '(', ')', '{', 'List', '<', 'Method', '>', 'vtable', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'String', 'superclassType', ';', 'try', '{', 'superclassType', '=', 'getSuperclass', '(', ')', ';', '}', 'catch', '(', 'UnresolvedClassException', 'ex', ')', '{', 'vtable', '.', 'addAll', '(', '(', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', '""Ljava/lang/Object;""', ')', ')', '.', 'getVtable', '(', ')', ')', ';', 'vtableFullyResolved', '=', 'false', ';', 'return', 'vtable', ';', '}', 'if', '(', 'superclassType', '!=', 'null', ')', '{', 'ClassProto', 'superclass', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'superclassType', ')', ';', 'vtable', '.', 'addAll', '(', 'superclass', '.', 'getVtable', '(', ')', ')', ';', 'if', '(', '!', 'superclass', '.', 'vtableFullyResolved', ')', '{', 'vtableFullyResolved', '=', 'false', ';', 'return', 'vtable', ';', '}', '}', 'if', '(', '!', 'isInterface', '(', ')', ')', '{', 'addToVtable', '(', 'getClassDef', '(', ')', '.', 'getVirtualMethods', '(', ')', ',', 'vtable', ',', 'true', ',', 'true', ')', ';', 'Iterable', '<', 'ClassDef', '>', 'interfaces', '=', 'Lists', '.', 'reverse', '(', 'Lists', '.', 'newArrayList', '(', 'getDirectInterfaces', '(', ')', ')', ')', ';', 'List', '<', 'Method', '>', 'defaultMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'List', '<', 'Method', '>', 'defaultConflictMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'List', '<', 'Method', '>', 'mirandaMethods', '=', 'Lists', '.', 'newArrayList', '(', ')', ';', 'final', 'HashMap', '<', 'MethodReference', ',', 'Integer', '>', 'methodOrder', '=', 'Maps', '.', 'newHashMap', '(', ')', ';', 'for', '(', 'ClassDef', 'interfaceDef', ':', 'interfaces', ')', '{', 'for', '(', 'Method', 'interfaceMethod', ':', 'interfaceDef', '.', 'getVirtualMethods', '(', ')', ')', '{', 'int', 'vtableIndex', '=', 'findMethodIndexInVtable', '(', 'vtable', ',', 'interfaceMethod', ')', ';', 'if', '(', 'vtableIndex', '>=', '0', ')', '{', 'if', '(', 'interfaceMethodOverrides', '(', 'interfaceMethod', ',', 'vtable', '.', 'get', '(', 'vtableIndex', ')', ')', ')', '{', 'vtable', '.', 'set', '(', 'vtableIndex', ',', 'interfaceMethod', ')', ';', '}', '}', 'else', '{', 'int', 'defaultMethodIndex', '=', 'findMethodIndexInVtable', '(', 'defaultMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'defaultMethodIndex', '>=', '0', ')', '{', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'ClassProto', 'existingInterface', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'defaultMethods', '.', 'get', '(', 'defaultMethodIndex', ')', '.', 'getDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'existingInterface', '.', 'implementsInterface', '(', 'interfaceMethod', '.', 'getDefiningClass', '(', ')', ')', ')', '{', 'Method', 'removedMethod', '=', 'defaultMethods', '.', 'remove', '(', 'defaultMethodIndex', ')', ';', 'defaultConflictMethods', '.', 'add', '(', 'removedMethod', ')', ';', '}', '}', 'continue', ';', '}', 'int', 'defaultConflictMethodIndex', '=', 'findMethodIndexInVtable', '(', 'defaultConflictMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'defaultConflictMethodIndex', '>=', '0', ')', '{', 'continue', ';', '}', 'int', 'mirandaMethodIndex', '=', 'findMethodIndexInVtable', '(', 'mirandaMethods', ',', 'interfaceMethod', ')', ';', 'if', '(', 'mirandaMethodIndex', '>=', '0', ')', '{', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'ClassProto', 'existingInterface', '=', '(', 'ClassProto', ')', 'classPath', '.', 'getClass', '(', 'mirandaMethods', '.', 'get', '(', 'mirandaMethodIndex', ')', '.', 'getDefiningClass', '(', ')', ')', ';', 'if', '(', '!', 'existingInterface', '.', 'implementsInterface', '(', 'interfaceMethod', '.', 'getDefiningClass', '(', ')', ')', ')', '{', 'Method', 'oldMethod', '=', 'mirandaMethods', '.', 'remove', '(', 'mirandaMethodIndex', ')', ';', 'int', 'methodOrderValue', '=', 'methodOrder', '.', 'get', '(', 'oldMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrderValue', ')', ';', 'defaultMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', '}', '}', 'continue', ';', '}', 'if', '(', '!', 'AccessFlags', '.', 'ABSTRACT', '.', 'isSet', '(', 'interfaceMethod', '.', 'getAccessFlags', '(', ')', ')', ')', '{', 'defaultMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrder', '.', 'size', '(', ')', ')', ';', '}', 'else', '{', 'mirandaMethods', '.', 'add', '(', 'interfaceMethod', ')', ';', 'methodOrder', '.', 'put', '(', 'interfaceMethod', ',', 'methodOrder', '.', 'size', '(', ')', ')', ';', '}', '}', '}', '}', 'Comparator', '<', 'MethodReference', '>', 'comparator', '=', 'new', 'Comparator', '<', 'MethodReference', '>', '(', ')', '{', '@', 'Override', 'public', 'int', 'compare', '(', 'MethodReference', 'o1', ',', 'MethodReference', 'o2', ')', '{', 'return', 'Ints', '.', 'compare', '(', 'methodOrder', '.', 'get', '(', 'o1', ')', ',', 'methodOrder', '.', 'get', '(', 'o2', ')', ')', ';', '}', '}', ';', 'Collections', '.', 'sort', '(', 'defaultMethods', ',', 'comparator', ')', ';', 'Collections', '.', 'sort', '(', 'defaultConflictMethods', ',', 'comparator', ')', ';', 'Collections', '.', 'sort', '(', 'mirandaMethods', ',', 'comparator', ')', ';', 'addToVtable', '(', 'defaultMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', 'addToVtable', '(', 'defaultConflictMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', 'addToVtable', '(', 'mirandaMethods', ',', 'vtable', ',', 'false', ',', 'false', ')', ';', '}', 'return', 'vtable', ';', '}', '}']","['class', 'T', '{', 'List', 'get', '(', ')', '{', '{', 'vtableFullyResolved', '=', 'false', ';', '}', '}', '}']",687,16,10,671,99.11373707533237
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_4.txt,1.0,0.0,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",263.835379,"class T { public void run() { final int listHeight = getHeight(); final int firstPos = mFirstPosition; switch(mMode) { case MOVE_DOWN_POS: { final int lastViewIndex = getChildCount() - 1; final int lastPos = firstPos + lastViewIndex; if (lastViewIndex < 0) { return; } if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; final int extraScroll = lastPos < mItemCount - 1 ? mExtraScroll : mListPadding.bottom; smoothScrollBy(lastViewHeight - lastViewPixelsShowing + extraScroll, mScrollDuration); mLastSeenPos = lastPos; if (lastPos < mTargetPos) { post(this); } break; } case MOVE_DOWN_BOUND: { final int nextViewIndex = 1; final int childCount = getChildCount(); if (firstPos == mBoundPos || childCount <= nextViewIndex || firstPos + childCount >= mItemCount) { return; } final int nextPos = firstPos + nextViewIndex; if (nextPos == mLastSeenPos) { post(this); return; } final View nextView = getChildAt(nextViewIndex); final int nextViewHeight = nextView.getHeight(); final int nextViewTop = nextView.getTop(); final int extraScroll = mExtraScroll; if (nextPos < mBoundPos) { smoothScrollBy(Math.max(0, nextViewHeight + nextViewTop - extraScroll), mScrollDuration); mLastSeenPos = nextPos; post(this); } else { if (nextViewTop > extraScroll) { smoothScrollBy(nextViewTop - extraScroll, mScrollDuration); } } break; } case MOVE_UP_POS: { if (firstPos == mLastSeenPos) { post(this); return; } final View firstView = getChildAt(0); if (firstView == null) { return; } final int firstViewTop = firstView.getTop(); final int extraScroll = firstPos > 0 ? mExtraScroll : mListPadding.top; smoothScrollBy(firstViewTop - extraScroll, mScrollDuration); mLastSeenPos = firstPos; if (firstPos > mTargetPos) { post(this); } break; } case MOVE_UP_BOUND: { final int lastViewIndex = getChildCount() - 2; if (lastViewIndex < 0) { return; } final int lastPos = firstPos + lastViewIndex; if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; mLastSeenPos = lastPos; if (lastPos > mBoundPos) { smoothScrollBy(-(lastViewPixelsShowing - mExtraScroll), mScrollDuration); post(this); } else { final int bottom = listHeight - mExtraScroll; final int lastViewBottom = lastViewTop + lastViewHeight; if (bottom > lastViewBottom) { smoothScrollBy(-(bottom - lastViewBottom), mScrollDuration); } } break; } default: break; } } }","class T { public void run() { switch(mMode) { case MOVE_DOWN_POS: { final int lastViewIndex = getChildCount() - 1; final int lastPos = firstPos + lastViewIndex; if (lastViewIndex < 0) { return; } if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; final int extraScroll = lastPos < mItemCount - 1 ? mExtraScroll : mListPadding.bottom; smoothScrollBy(lastViewHeight - lastViewPixelsShowing + extraScroll, mScrollDuration); mLastSeenPos = lastPos; if (lastPos < mTargetPos) { post(this); } break; } case MOVE_DOWN_BOUND: { final int nextViewIndex = 1; final int childCount = getChildCount(); if (firstPos == mBoundPos || childCount <= nextViewIndex || firstPos + childCount >= mItemCount) { return; } final int nextPos = firstPos + nextViewIndex; if (nextPos == mLastSeenPos) { post(this); return; } final View nextView = getChildAt(nextViewIndex); final int nextViewHeight = nextView.getHeight(); final int nextViewTop = nextView.getTop(); final int extraScroll = mExtraScroll; if (nextPos < mBoundPos) { smoothScrollBy(Math.max(0, nextViewHeight + nextViewTop - extraScroll), mScrollDuration); mLastSeenPos = nextPos; post(this); } else { if (nextViewTop > extraScroll) { smoothScrollBy(nextViewTop - extraScroll, mScrollDuration); } } break; } case MOVE_UP_POS: { if (firstPos == mLastSeenPos) { post(this); return; } final View firstView = getChildAt(0); if (firstView == null) { return; } final int firstViewTop = firstView.getTop(); final int extraScroll = firstPos > 0 ? mExtraScroll : mListPadding.top; smoothScrollBy(firstViewTop - extraScroll, mScrollDuration); mLastSeenPos = firstPos; if (firstPos > mTargetPos) { post(this); } break; } case MOVE_UP_BOUND: { final int lastViewIndex = getChildCount() - 2; if (lastViewIndex < 0) { return; } final int lastPos = firstPos + lastViewIndex; if (lastPos == mLastSeenPos) { post(this); return; } final View lastView = getChildAt(lastViewIndex); final int lastViewHeight = lastView.getHeight(); final int lastViewTop = lastView.getTop(); final int lastViewPixelsShowing = listHeight - lastViewTop; mLastSeenPos = lastPos; if (lastPos > mBoundPos) { smoothScrollBy(-(lastViewPixelsShowing - mExtraScroll), mScrollDuration); post(this); } else { final int bottom = listHeight - mExtraScroll; final int lastViewBottom = lastViewTop + lastViewHeight; if (bottom > lastViewBottom) { smoothScrollBy(-(bottom - lastViewBottom), mScrollDuration); } } break; } default: break; } } }",2701,2628,23,73,2.725914861837192,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'final', 'int', 'listHeight', '=', 'getHeight', '(', ')', ';', 'final', 'int', 'firstPos', '=', 'mFirstPosition', ';', 'switch', '(', 'mMode', ')', '{', 'case', 'MOVE_DOWN_POS', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '1', ';', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'final', 'int', 'extraScroll', '=', 'lastPos', '<', 'mItemCount', '-', '1', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'bottom', ';', 'smoothScrollBy', '(', 'lastViewHeight', '-', 'lastViewPixelsShowing', '+', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '<', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_DOWN_BOUND', ':', '{', 'final', 'int', 'nextViewIndex', '=', '1', ';', 'final', 'int', 'childCount', '=', 'getChildCount', '(', ')', ';', 'if', '(', 'firstPos', '==', 'mBoundPos', '||', 'childCount', '<=', 'nextViewIndex', '||', 'firstPos', '+', 'childCount', '>=', 'mItemCount', ')', '{', 'return', ';', '}', 'final', 'int', 'nextPos', '=', 'firstPos', '+', 'nextViewIndex', ';', 'if', '(', 'nextPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'nextView', '=', 'getChildAt', '(', 'nextViewIndex', ')', ';', 'final', 'int', 'nextViewHeight', '=', 'nextView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'nextViewTop', '=', 'nextView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'mExtraScroll', ';', 'if', '(', 'nextPos', '<', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', 'Math', '.', 'max', '(', '0', ',', 'nextViewHeight', '+', 'nextViewTop', '-', 'extraScroll', ')', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'nextPos', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'if', '(', 'nextViewTop', '>', 'extraScroll', ')', '{', 'smoothScrollBy', '(', 'nextViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'case', 'MOVE_UP_POS', ':', '{', 'if', '(', 'firstPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'firstView', '=', 'getChildAt', '(', '0', ')', ';', 'if', '(', 'firstView', '==', 'null', ')', '{', 'return', ';', '}', 'final', 'int', 'firstViewTop', '=', 'firstView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'firstPos', '>', '0', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'top', ';', 'smoothScrollBy', '(', 'firstViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'firstPos', ';', 'if', '(', 'firstPos', '>', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_UP_BOUND', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '2', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '>', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', '-', '(', 'lastViewPixelsShowing', '-', 'mExtraScroll', ')', ',', 'mScrollDuration', ')', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'final', 'int', 'bottom', '=', 'listHeight', '-', 'mExtraScroll', ';', 'final', 'int', 'lastViewBottom', '=', 'lastViewTop', '+', 'lastViewHeight', ';', 'if', '(', 'bottom', '>', 'lastViewBottom', ')', '{', 'smoothScrollBy', '(', '-', '(', 'bottom', '-', 'lastViewBottom', ')', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'default', ':', 'break', ';', '}', '}', '}']","['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'switch', '(', 'mMode', ')', '{', 'case', 'MOVE_DOWN_POS', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '1', ';', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'final', 'int', 'extraScroll', '=', 'lastPos', '<', 'mItemCount', '-', '1', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'bottom', ';', 'smoothScrollBy', '(', 'lastViewHeight', '-', 'lastViewPixelsShowing', '+', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '<', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_DOWN_BOUND', ':', '{', 'final', 'int', 'nextViewIndex', '=', '1', ';', 'final', 'int', 'childCount', '=', 'getChildCount', '(', ')', ';', 'if', '(', 'firstPos', '==', 'mBoundPos', '||', 'childCount', '<=', 'nextViewIndex', '||', 'firstPos', '+', 'childCount', '>=', 'mItemCount', ')', '{', 'return', ';', '}', 'final', 'int', 'nextPos', '=', 'firstPos', '+', 'nextViewIndex', ';', 'if', '(', 'nextPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'nextView', '=', 'getChildAt', '(', 'nextViewIndex', ')', ';', 'final', 'int', 'nextViewHeight', '=', 'nextView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'nextViewTop', '=', 'nextView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'mExtraScroll', ';', 'if', '(', 'nextPos', '<', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', 'Math', '.', 'max', '(', '0', ',', 'nextViewHeight', '+', 'nextViewTop', '-', 'extraScroll', ')', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'nextPos', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'if', '(', 'nextViewTop', '>', 'extraScroll', ')', '{', 'smoothScrollBy', '(', 'nextViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'case', 'MOVE_UP_POS', ':', '{', 'if', '(', 'firstPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'firstView', '=', 'getChildAt', '(', '0', ')', ';', 'if', '(', 'firstView', '==', 'null', ')', '{', 'return', ';', '}', 'final', 'int', 'firstViewTop', '=', 'firstView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'extraScroll', '=', 'firstPos', '>', '0', '?', 'mExtraScroll', ':', 'mListPadding', '.', 'top', ';', 'smoothScrollBy', '(', 'firstViewTop', '-', 'extraScroll', ',', 'mScrollDuration', ')', ';', 'mLastSeenPos', '=', 'firstPos', ';', 'if', '(', 'firstPos', '>', 'mTargetPos', ')', '{', 'post', '(', 'this', ')', ';', '}', 'break', ';', '}', 'case', 'MOVE_UP_BOUND', ':', '{', 'final', 'int', 'lastViewIndex', '=', 'getChildCount', '(', ')', '-', '2', ';', 'if', '(', 'lastViewIndex', '<', '0', ')', '{', 'return', ';', '}', 'final', 'int', 'lastPos', '=', 'firstPos', '+', 'lastViewIndex', ';', 'if', '(', 'lastPos', '==', 'mLastSeenPos', ')', '{', 'post', '(', 'this', ')', ';', 'return', ';', '}', 'final', 'View', 'lastView', '=', 'getChildAt', '(', 'lastViewIndex', ')', ';', 'final', 'int', 'lastViewHeight', '=', 'lastView', '.', 'getHeight', '(', ')', ';', 'final', 'int', 'lastViewTop', '=', 'lastView', '.', 'getTop', '(', ')', ';', 'final', 'int', 'lastViewPixelsShowing', '=', 'listHeight', '-', 'lastViewTop', ';', 'mLastSeenPos', '=', 'lastPos', ';', 'if', '(', 'lastPos', '>', 'mBoundPos', ')', '{', 'smoothScrollBy', '(', '-', '(', 'lastViewPixelsShowing', '-', 'mExtraScroll', ')', ',', 'mScrollDuration', ')', ';', 'post', '(', 'this', ')', ';', '}', 'else', '{', 'final', 'int', 'bottom', '=', 'listHeight', '-', 'mExtraScroll', ';', 'final', 'int', 'lastViewBottom', '=', 'lastViewTop', '+', 'lastViewHeight', ';', 'if', '(', 'bottom', '>', 'lastViewBottom', ')', '{', 'smoothScrollBy', '(', '-', '(', 'bottom', '-', 'lastViewBottom', ')', ',', 'mScrollDuration', ')', ';', '}', '}', 'break', ';', '}', 'default', ':', 'break', ';', '}', '}', '}']",566,552,10,14,2.5179856115107917
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,execute_2.txt,0.9528,0.1275,"{'n_total': 17, 'n_valid': -1, 'n_correct': -1}",2063.545435,"class T { public void execute(String command, InputStream istream, String contentType, int contentLength) throws BuildException { URLConnection conn = null; InputStreamReader reader = null; try { conn = (new URL(url + command)).openConnection(); HttpURLConnection hconn = (HttpURLConnection) conn; hconn.setAllowUserInteraction(false); hconn.setDoInput(true); hconn.setUseCaches(false); if (istream != null) { hconn.setDoOutput(true); hconn.setRequestMethod(""PUT""); if (contentType != null) { hconn.setRequestProperty(""Content-Type"", contentType); } if (contentLength >= 0) { hconn.setRequestProperty(""Content-Length"", """" + contentLength); hconn.setFixedLengthStreamingMode(contentLength); } } else { hconn.setDoOutput(false); hconn.setRequestMethod(""GET""); } hconn.setRequestProperty(""User-Agent"", ""Catalina-Ant-Task/1.0""); String input = username + "":"" + password; String output = Base64.encodeBase64String(input.getBytes(StandardCharsets.ISO_8859_1)); hconn.setRequestProperty(""Authorization"", ""Basic "" + output); hconn.connect(); if (istream != null) { BufferedOutputStream ostream = new BufferedOutputStream(hconn.getOutputStream(), 1024); byte[] buffer = new byte[1024]; while (true) { int n = istream.read(buffer); if (n < 0) { break; } ostream.write(buffer, 0, n); } ostream.flush(); ostream.close(); istream.close(); } reader = new InputStreamReader(hconn.getInputStream(), CHARSET); StringBuilder buff = new StringBuilder(); String error = null; int msgPriority = Project.MSG_INFO; boolean first = true; while (true) { int ch = reader.read(); if (ch < 0) { break; } else if ((ch == '') || (ch == '
')) { if (buff.length() > 0) { String line = buff.toString(); buff.setLength(0); if (first) { if (!line.startsWith(""OK -"")) { error = line; msgPriority = Project.MSG_ERR; } first = false; } handleOutput(line, msgPriority); } } else { buff.append((char) ch); } } if (buff.length() > 0) { handleOutput(buff.toString(), msgPriority); } if (error != null && isFailOnError()) { throw new BuildException(error); } } catch (Exception e) { if (isFailOnError()) { throw new BuildException(e); } else { handleErrorOutput(e.getMessage()); } } finally { closeRedirector(); if (reader != null) { try { reader.close(); } catch (IOException ioe) { } reader = null; } if (istream != null) { try { istream.close(); } catch (IOException ioe) { } } } } }",class T { void execute( ) throws BuildException { hconn.setDoInput( ); } },2344,74,27,2270,97.97151488994388,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'String', 'command', ',', 'InputStream', 'istream', ',', 'String', 'contentType', ',', 'int', 'contentLength', ')', 'throws', 'BuildException', '{', 'URLConnection', 'conn', '=', 'null', ';', 'InputStreamReader', 'reader', '=', 'null', ';', 'try', '{', 'conn', '=', '(', 'new', 'URL', '(', 'url', '+', 'command', ')', ')', '.', 'openConnection', '(', ')', ';', 'HttpURLConnection', 'hconn', '=', '(', 'HttpURLConnection', ')', 'conn', ';', 'hconn', '.', 'setAllowUserInteraction', '(', 'false', ')', ';', 'hconn', '.', 'setDoInput', '(', 'true', ')', ';', 'hconn', '.', 'setUseCaches', '(', 'false', ')', ';', 'if', '(', 'istream', '!=', 'null', ')', '{', 'hconn', '.', 'setDoOutput', '(', 'true', ')', ';', 'hconn', '.', 'setRequestMethod', '(', '""PUT""', ')', ';', 'if', '(', 'contentType', '!=', 'null', ')', '{', 'hconn', '.', 'setRequestProperty', '(', '""Content-Type""', ',', 'contentType', ')', ';', '}', 'if', '(', 'contentLength', '>=', '0', ')', '{', 'hconn', '.', 'setRequestProperty', '(', '""Content-Length""', ',', '""""', '+', 'contentLength', ')', ';', 'hconn', '.', 'setFixedLengthStreamingMode', '(', 'contentLength', ')', ';', '}', '}', 'else', '{', 'hconn', '.', 'setDoOutput', '(', 'false', ')', ';', 'hconn', '.', 'setRequestMethod', '(', '""GET""', ')', ';', '}', 'hconn', '.', 'setRequestProperty', '(', '""User-Agent""', ',', '""Catalina-Ant-Task/1.0""', ')', ';', 'String', 'input', '=', 'username', '+', '"":""', '+', 'password', ';', 'String', 'output', '=', 'Base64', '.', 'encodeBase64String', '(', 'input', '.', 'getBytes', '(', 'StandardCharsets', '.', 'ISO_8859_1', ')', ')', ';', 'hconn', '.', 'setRequestProperty', '(', '""Authorization""', ',', '""Basic ""', '+', 'output', ')', ';', 'hconn', '.', 'connect', '(', ')', ';', 'if', '(', 'istream', '!=', 'null', ')', '{', 'BufferedOutputStream', 'ostream', '=', 'new', 'BufferedOutputStream', '(', 'hconn', '.', 'getOutputStream', '(', ')', ',', '1024', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'n', '=', 'istream', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'n', '<', '0', ')', '{', 'break', ';', '}', 'ostream', '.', 'write', '(', 'buffer', ',', '0', ',', 'n', ')', ';', '}', 'ostream', '.', 'flush', '(', ')', ';', 'ostream', '.', 'close', '(', ')', ';', 'istream', '.', 'close', '(', ')', ';', '}', 'reader', '=', 'new', 'InputStreamReader', '(', 'hconn', '.', 'getInputStream', '(', ')', ',', 'CHARSET', ')', ';', 'StringBuilder', 'buff', '=', 'new', 'StringBuilder', '(', ')', ';', 'String', 'error', '=', 'null', ';', 'int', 'msgPriority', '=', 'Project', '.', 'MSG_INFO', ';', 'boolean', 'first', '=', 'true', ';', 'while', '(', 'true', ')', '{', 'int', 'ch', '=', 'reader', '.', 'read', '(', ')', ';', 'if', '(', 'ch', '<', '0', ')', '{', 'break', ';', '}', 'else', 'if', '(', '(', 'ch', '==', ""'\r'"", ')', '||', '(', 'ch', '==', ""'\n'"", ')', ')', '{', 'if', '(', 'buff', '.', 'length', '(', ')', '>', '0', ')', '{', 'String', 'line', '=', 'buff', '.', 'toString', '(', ')', ';', 'buff', '.', 'setLength', '(', '0', ')', ';', 'if', '(', 'first', ')', '{', 'if', '(', '!', 'line', '.', 'startsWith', '(', '""OK -""', ')', ')', '{', 'error', '=', 'line', ';', 'msgPriority', '=', 'Project', '.', 'MSG_ERR', ';', '}', 'first', '=', 'false', ';', '}', 'handleOutput', '(', 'line', ',', 'msgPriority', ')', ';', '}', '}', 'else', '{', 'buff', '.', 'append', '(', '(', 'char', ')', 'ch', ')', ';', '}', '}', 'if', '(', 'buff', '.', 'length', '(', ')', '>', '0', ')', '{', 'handleOutput', '(', 'buff', '.', 'toString', '(', ')', ',', 'msgPriority', ')', ';', '}', 'if', '(', 'error', '!=', 'null', '&&', 'isFailOnError', '(', ')', ')', '{', 'throw', 'new', 'BuildException', '(', 'error', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'isFailOnError', '(', ')', ')', '{', 'throw', 'new', 'BuildException', '(', 'e', ')', ';', '}', 'else', '{', 'handleErrorOutput', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', 'finally', '{', 'closeRedirector', '(', ')', ';', 'if', '(', 'reader', '!=', 'null', ')', '{', 'try', '{', 'reader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'reader', '=', 'null', ';', '}', 'if', '(', 'istream', '!=', 'null', ')', '{', 'try', '{', 'istream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'hconn', '.', 'setDoInput', '(', ')', ';', '}', '}']",601,18,10,583,98.64636209813877
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_3.txt,0.9964,0.0087,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",399.973615,"class T { public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(Word2VecCompress.class.getName(), ""Creates a compressed representation of quantized word2vec vectors"", new Parameter[] { new UnflaggedOption(""input"", JSAP.STRING_PARSER, true, ""Input file""), new UnflaggedOption(""output"", JSAP.STRING_PARSER, false, ""Compressed version""), new Switch(""check"", JSAP.NO_SHORTFLAG, ""check"", ""Check correctness of output"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; String input_filename = jsapResult.getString(""input""); String output_filename = jsapResult.getString(""output"", null); int numWords, vectorSize; float quantizationFactor; List<String> indexToWord; int[] entries; long[] columnAbsSum; ProgressLogger pl = new ProgressLogger(logger); try (final BufferedReader lines = new BufferedReader(new FileReader(input_filename))) { String[] header = lines.readLine().split(""	""); numWords = Integer.parseInt(header[0]); vectorSize = Integer.parseInt(header[1]); quantizationFactor = Float.parseFloat(header[2]); pl.expectedUpdates = numWords; pl.start(""Reading the dictionary""); indexToWord = new ArrayList<>(); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); indexToWord.add(lines.readLine().trim()); } pl.done(); entries = new int[numWords * vectorSize]; columnAbsSum = new long[vectorSize]; pl.expectedUpdates = numWords; pl.start(""Reading the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); String[] lineEntries = lines.readLine().split("" ""); for (int col = 0; col < vectorSize; ++col) { int entry = Integer.parseInt(lineEntries[col]); entries[i * vectorSize + col] = entry; columnAbsSum[col] += Fast.int2nat(entry) + 1; } } pl.done(); } int[] golombModuli = new int[vectorSize]; for (int col = 0; col < vectorSize; ++col) { int m = 0; if (columnAbsSum[col] > numWords) { double f = ((double) numWords) / columnAbsSum[col]; m = (int) Math.ceil(Math.log(2.0 - f) / -Math.log(1.0 - f)); } golombModuli[col] = m; } ShiftAddXorSignedStringMap dictionaryHash = new ShiftAddXorSignedStringMap(indexToWord.iterator(), new MinimalPerfectHashFunction.Builder<CharSequence>().keys(indexToWord).transform(TransformationStrategies.utf16()).build()); int[] permutation = new int[numWords]; for (int i = 0; i < numWords; ++i) { int newPos = dictionaryHash.get(indexToWord.get(i)).intValue(); permutation[newPos] = i; } FastByteArrayOutputStream oa = new FastByteArrayOutputStream(); OutputBitStream obs = new OutputBitStream(oa, 0); final LongArrayList endpoints = new LongArrayList(); pl.expectedUpdates = numWords; pl.start(""Compressing the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); endpoints.add(obs.writtenBits()); int rowStart = permutation[i] * vectorSize; for (int col = 0; col < vectorSize; ++col) { int entry = entries[rowStart + col]; obs.writeGolomb(Fast.int2nat(entry), golombModuli[col]); } } pl.done(); obs.close(); while (oa.length() % 4 != 0) { oa.write(0); } oa.trim(); double bps = 8.0 * oa.array.length / entries.length; logger.info(""Overall vector bit streams: {} bytes, {} bps"", oa.array.length, bps); System.out.println(bps); EliasFanoMonotoneLongBigList efEndpoints = new EliasFanoMonotoneLongBigList(endpoints); Word2VecCompress word2vec = new Word2VecCompress(numWords, vectorSize, quantizationFactor, oa.array, efEndpoints, dictionaryHash, golombModuli); if (output_filename != null) { BinIO.storeObject(word2vec, output_filename); } if (jsapResult.getBoolean(""check"")) { pl.expectedUpdates = numWords; pl.start(""Checking the output""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); int[] vec = word2vec.getInt(indexToWord.get(i)); for (int col = 0; col < vectorSize; ++col) { int expected = entries[i * vectorSize + col]; int got = vec[col]; if (expected != got) { logger.error(""Row {}, Column {}: Expected {}, got {}"", i, col, expected, got); System.exit(1); } } } pl.done(); } } }",class T { void main(String args) { oa.write( ); } },3923,51,24,3872,99.30751474737112,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'Word2VecCompress', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a compressed representation of quantized word2vec vectors""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'UnflaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'true', ',', '""Input file""', ')', ',', 'new', 'UnflaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'false', ',', '""Compressed version""', ')', ',', 'new', 'Switch', '(', '""check""', ',', 'JSAP', '.', 'NO_SHORTFLAG', ',', '""check""', ',', '""Check correctness of output""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'String', 'input_filename', '=', 'jsapResult', '.', 'getString', '(', '""input""', ')', ';', 'String', 'output_filename', '=', 'jsapResult', '.', 'getString', '(', '""output""', ',', 'null', ')', ';', 'int', 'numWords', ',', 'vectorSize', ';', 'float', 'quantizationFactor', ';', 'List', '<', 'String', '>', 'indexToWord', ';', 'int', '[', ']', 'entries', ';', 'long', '[', ']', 'columnAbsSum', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'logger', ')', ';', 'try', '(', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'input_filename', ')', ')', ')', '{', 'String', '[', ']', 'header', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '""\t""', ')', ';', 'numWords', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '0', ']', ')', ';', 'vectorSize', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '1', ']', ')', ';', 'quantizationFactor', '=', 'Float', '.', 'parseFloat', '(', 'header', '[', '2', ']', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the dictionary""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'indexToWord', '.', 'add', '(', 'lines', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ')', ';', '}', 'pl', '.', 'done', '(', ')', ';', 'entries', '=', 'new', 'int', '[', 'numWords', '*', 'vectorSize', ']', ';', 'columnAbsSum', '=', 'new', 'long', '[', 'vectorSize', ']', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'String', '[', ']', 'lineEntries', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '"" ""', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'Integer', '.', 'parseInt', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', '=', 'entry', ';', 'columnAbsSum', '[', 'col', ']', '+=', 'Fast', '.', 'int2nat', '(', 'entry', ')', '+', '1', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', 'int', '[', ']', 'golombModuli', '=', 'new', 'int', '[', 'vectorSize', ']', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'm', '=', '0', ';', 'if', '(', 'columnAbsSum', '[', 'col', ']', '>', 'numWords', ')', '{', 'double', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', 'Math', '.', 'ceil', '(', 'Math', '.', 'log', '(', '2.0', '-', 'f', ')', '/', '-', 'Math', '.', 'log', '(', '1.0', '-', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', '=', 'm', ';', '}', 'ShiftAddXorSignedStringMap', 'dictionaryHash', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'indexToWord', '.', 'iterator', '(', ')', ',', 'new', 'MinimalPerfectHashFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'indexToWord', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'int', '[', ']', 'permutation', '=', 'new', 'int', '[', 'numWords', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'int', 'newPos', '=', 'dictionaryHash', '.', 'get', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', '.', 'intValue', '(', ')', ';', 'permutation', '[', 'newPos', ']', '=', 'i', ';', '}', 'FastByteArrayOutputStream', 'oa', '=', 'new', 'FastByteArrayOutputStream', '(', ')', ';', 'OutputBitStream', 'obs', '=', 'new', 'OutputBitStream', '(', 'oa', ',', '0', ')', ';', 'final', 'LongArrayList', 'endpoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Compressing the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'endpoints', '.', 'add', '(', 'obs', '.', 'writtenBits', '(', ')', ')', ';', 'int', 'rowStart', '=', 'permutation', '[', 'i', ']', '*', 'vectorSize', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'entries', '[', 'rowStart', '+', 'col', ']', ';', 'obs', '.', 'writeGolomb', '(', 'Fast', '.', 'int2nat', '(', 'entry', ')', ',', 'golombModuli', '[', 'col', ']', ')', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', 'obs', '.', 'close', '(', ')', ';', 'while', '(', 'oa', '.', 'length', '(', ')', '%', '4', '!=', '0', ')', '{', 'oa', '.', 'write', '(', '0', ')', ';', '}', 'oa', '.', 'trim', '(', ')', ';', 'double', 'bps', '=', '8.0', '*', 'oa', '.', 'array', '.', 'length', '/', 'entries', '.', 'length', ';', 'logger', '.', 'info', '(', '""Overall vector bit streams: {} bytes, {} bps""', ',', 'oa', '.', 'array', '.', 'length', ',', 'bps', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'bps', ')', ';', 'EliasFanoMonotoneLongBigList', 'efEndpoints', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'endpoints', ')', ';', 'Word2VecCompress', 'word2vec', '=', 'new', 'Word2VecCompress', '(', 'numWords', ',', 'vectorSize', ',', 'quantizationFactor', ',', 'oa', '.', 'array', ',', 'efEndpoints', ',', 'dictionaryHash', ',', 'golombModuli', ')', ';', 'if', '(', 'output_filename', '!=', 'null', ')', '{', 'BinIO', '.', 'storeObject', '(', 'word2vec', ',', 'output_filename', ')', ';', '}', 'if', '(', 'jsapResult', '.', 'getBoolean', '(', '""check""', ')', ')', '{', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Checking the output""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'int', '[', ']', 'vec', '=', 'word2vec', '.', 'getInt', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'expected', '=', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', ';', 'int', 'got', '=', 'vec', '[', 'col', ']', ';', 'if', '(', 'expected', '!=', 'got', ')', '{', 'logger', '.', 'error', '(', '""Row {}, Column {}: Expected {}, got {}""', ',', 'i', ',', 'col', ',', 'expected', ',', 'got', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'oa', '.', 'write', '(', ')', ';', '}', '}']",999,18,10,981,99.19110212335691
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_2.txt,0.9942,0.0066,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",760.042599,"class T { @SuppressWarnings(""null"") public static void main(String[] args) { if (catalinaHome == null) { log.error(""Must set '"" + Globals.CATALINA_HOME_PROP + ""' system property""); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (""-ant"".equals(args[index])) ant = true; else if (""-common"".equals(args[index])) common = true; else if (""-server"".equals(args[index])) server = true; else if (""-shared"".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(""ant.home"", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, ""classes"")); packed.add(new File(catalinaHome, ""lib"")); if (common) { unpacked.add(new File(catalinaHome, ""common"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""common"" + File.separator + ""lib"")); } if (server) { unpacked.add(new File(catalinaHome, ""server"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""server"" + File.separator + ""lib"")); } if (shared) { unpacked.add(new File(catalinaHome, ""shared"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""shared"" + File.separator + ""lib"")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Class loader creation threw exception"", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(""Loading application class "" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception creating instance of "" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(""Identifying main() method""); String methodName = ""main""; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception locating main() method"", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(""Calling main() method""); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(""Exception calling main() method"", t); System.exit(1); } } }",class T { void main(String args) { if (catalinaHome == null) { } } },2797,68,24,2729,98.4132708258204,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""null""', ')', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'catalinaHome', '==', 'null', ')', '{', 'log', '.', 'error', '(', '""Must set \'""', '+', 'Globals', '.', 'CATALINA_HOME_PROP', '+', '""\' system property""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'int', 'index', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'index', '==', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '""-ant""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'ant', '=', 'true', ';', 'else', 'if', '(', '""-common""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'common', '=', 'true', ';', 'else', 'if', '(', '""-server""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'server', '=', 'true', ';', 'else', 'if', '(', '""-shared""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'shared', '=', 'true', ';', 'else', 'break', ';', 'index', '++', ';', '}', 'if', '(', 'index', '>', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'System', '.', 'setProperty', '(', '""ant.home""', ',', 'catalinaHome', ')', ';', 'ClassLoader', 'classLoader', '=', 'null', ';', 'try', '{', 'ArrayList', '<', 'File', '>', 'packed', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""lib""', ')', ')', ';', 'if', '(', 'common', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'server', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'classLoader', '=', 'ClassLoaderFactory', '.', 'createClassLoader', '(', 'unpacked', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'packed', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Class loader creation threw exception""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Thread', '.', 'currentThread', '(', ')', '.', 'setContextClassLoader', '(', 'classLoader', ')', ';', 'Class', '<', '?', '>', 'clazz', '=', 'null', ';', 'String', 'className', '=', 'args', '[', 'index', '++', ']', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Loading application class ""', '+', 'className', ')', ';', 'clazz', '=', 'classLoader', '.', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception creating instance of ""', '+', 'className', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Method', 'method', '=', 'null', ';', 'String', '[', ']', 'params', '=', 'new', 'String', '[', 'args', '.', 'length', '-', 'index', ']', ';', 'System', '.', 'arraycopy', '(', 'args', ',', 'index', ',', 'params', ',', '0', ',', 'params', '.', 'length', ')', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Identifying main() method""', ')', ';', 'String', 'methodName', '=', '""main""', ';', 'Class', '<', '?', '>', '[', ']', 'paramTypes', '=', 'new', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'params', '.', 'getClass', '(', ')', ';', 'method', '=', 'clazz', '.', 'getMethod', '(', 'methodName', ',', 'paramTypes', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception locating main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Calling main() method""', ')', ';', 'Object', '[', ']', 'paramValues', '=', 'new', 'Object', '[', '1', ']', ';', 'paramValues', '[', '0', ']', '=', 'params', ';', 'method', '.', 'invoke', '(', 'null', ',', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '=', 'ExceptionUtils', '.', 'unwrapInvocationTargetException', '(', 't', ')', ';', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception calling main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'if', '(', 'catalinaHome', '==', 'null', ')', '{', '}', '}', '}']",740,20,10,720,98.63013698630137
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_7.txt,0.9919,0.0158,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",792.591191,"class T { @Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(""Retrying reconnect ... ["").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(""Unknown command: "").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(""Network error. Server died?"").$(); LOG.debug().$(""Network error details: "").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(""Unhandled exception in client"").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(""Fatal exception when closing client"").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(""Terminated"").$(); } } }",class T { @Override void run() { notifyCallback( ); } },3127,55,23,3072,98.96907216494846,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'running', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_RUNNING', ')', ';', 'int', 'event', '=', 'JournalClientEvents', '.', 'EVT_NONE', ';', 'boolean', 'connected', '=', 'false', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', '!', 'connected', ')', '{', 'int', 'retryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getRetryCount', '(', ')', ';', 'int', 'loginRetryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getLoginRetryCount', '(', ')', ';', 'do', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'openChannel', '(', ')', ';', 'counter', '.', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', 'retryCount', '--', '>', '0', ')', '{', 'continue', ';', '}', 'else', '{', 'break', ';', '}', '}', 'sendProtocolVersion', '(', ')', ';', 'checkAuthAndSendCredential', '(', ')', ';', 'resubscribe', '(', ')', ';', 'sendReady', '(', ')', ';', 'connected', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_CONNECTED', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_ERROR', ')', ';', 'loginRetryCount', '--', ';', '}', 'catch', '(', 'AuthenticationConfigException', '|', 'AuthenticationProviderException', 'e', ')', '{', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_CONFIG_ERROR', ')', ';', 'return', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'info', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', '}', 'if', '(', '!', 'connected', '&&', 'retryCount', '--', '>', '0', '&&', 'loginRetryCount', '>', '0', ')', '{', 'LockSupport', '.', 'parkNanos', '(', 'TimeUnit', '.', 'MILLISECONDS', '.', 'toNanos', '(', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getSleepBetweenRetriesMillis', '(', ')', ')', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Retrying reconnect ... [""', ')', '.', '$', '(', 'retryCount', '+', '1', ')', '.', '$', '(', ""']'"", ')', '.', '$', '(', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'while', '(', 'true', ')', ';', 'if', '(', '!', 'connected', '&&', '(', 'retryCount', '==', '0', '||', 'loginRetryCount', '==', '0', ')', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_SERVER_ERROR', ';', '}', '}', 'try', '{', 'if', '(', 'connected', '&&', 'channel', '.', 'isOpen', '(', ')', '&&', 'isRunning', '(', ')', ')', '{', 'commandConsumer', '.', 'read', '(', 'channel', ')', ';', 'byte', 'cmd', '=', 'commandConsumer', '.', 'getCommand', '(', ')', ';', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', '.', 'JOURNAL_DELTA_CMD', ':', 'statsChannel', '.', 'setDelegate', '(', 'channel', ')', ';', 'int', 'index', '=', 'intResponseConsumer', '.', 'getValue', '(', 'statsChannel', ')', ';', 'deltaConsumers', '.', 'getQuick', '(', 'index', ')', '.', 'read', '(', 'statsChannel', ')', ';', 'statusSentList', '.', 'set', '(', 'index', ',', '0', ')', ';', 'statsChannel', '.', 'logStats', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_READY_CMD', ':', 'sendState', '(', ')', ';', 'sendReady', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_HEARTBEAT', ':', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', 'sendReady', '(', ')', ';', '}', 'else', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', 'break', ';', 'case', 'Command', '.', 'SERVER_SHUTDOWN', ':', 'connected', '=', 'false', ';', 'break', ';', 'default', ':', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Unknown command: ""', ')', '.', '$', '(', 'cmd', ')', '.', '$', '(', ')', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'event', '==', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_INCOMPATIBLE_JOURNAL', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Network error. Server died?""', ')', '.', '$', '(', ')', ';', 'LOG', '.', 'debug', '(', ')', '.', '$', '(', '""Network error details: ""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_SERVER_DIED', ')', ';', 'connected', '=', 'false', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Unhandled exception in client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_EXCEPTION', ';', '}', 'if', '(', 'event', '!=', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'if', '(', 'channel', '!=', 'null', '&&', 'channel', '.', 'isOpen', '(', ')', ')', '{', 'sendDisconnect', '(', ')', ';', '}', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'event', ')', ';', 'break', ';', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Fatal exception when closing client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', '}', 'finally', '{', 'running', '=', 'false', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_TERMINATED', ')', ';', 'haltLatch', '.', 'countDown', '(', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Terminated""', ')', '.', '$', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', 'notifyCallback', '(', ')', ';', '}', '}']",740,16,10,724,99.17808219178085
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_9.txt,0.9986,0.0023,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",294.254033,"class T { public void run() { visualUpdate(TestHandler.ACTION_SHOW, null); boolean result; visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing getPath""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ getPath ]
""); try { List<String> paths = RootShell.getPath(); for (String path : paths) { visualUpdate(TestHandler.ACTION_DISPLAY, path + "" k

""); } } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing A ton of commands""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Ton of Commands ]
""); for (int i = 0; i < 100; i++) { RootShell.exists(""/system/xbin/busybox""); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing Find Binary""); result = RootShell.isRootAvailable(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Root ]
""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k

""); result = RootShell.isBusyboxAvailable(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Busybox ]
""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k

""); visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing file exists""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking Exists() ]
""); visualUpdate(TestHandler.ACTION_DISPLAY, RootShell.exists(""/system/sbin/["") + "" k

""); visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing Is Access Given""); result = RootShell.isAccessGiven(); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Checking for Access to Root ]
""); visualUpdate(TestHandler.ACTION_DISPLAY, result + "" k

""); Shell shell; visualUpdate(TestHandler.ACTION_PDISPLAY, ""Testing output capture""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ busybox ash --help ]
""); try { shell = RootShell.getShell(true); Command cmd = new Command(0, ""busybox ash --help"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""
""); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Switching RootContext - SYSTEM_APP""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Switching Root Context - SYSTEM_APP ]
""); try { shell = RootShell.getShell(true, Shell.ShellContext.SYSTEM_APP); Command cmd = new Command(0, ""id"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""
""); super.commandOutput(id, line); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } visualUpdate(TestHandler.ACTION_PDISPLAY, ""Switching RootContext - UNTRUSTED""); visualUpdate(TestHandler.ACTION_DISPLAY, ""[ Switching Root Context - UNTRUSTED ]
""); try { shell = RootShell.getShell(true, Shell.ShellContext.UNTRUSTED_APP); Command cmd = new Command(0, ""id"") { @Override public void commandOutput(int id, String line) { visualUpdate(TestHandler.ACTION_DISPLAY, line + ""
""); super.commandOutput(id, line); } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } try { shell = RootShell.getShell(true); Command cmd = new Command(42, false, ""echo done"") { boolean _catch = false; @Override public void commandOutput(int id, String line) { if (_catch) { RootShell.log(""CAUGHT!!!""); } super.commandOutput(id, line); } @Override public void commandTerminated(int id, String reason) { synchronized (com.stericson.RootShellTests.SanityCheckRootShell.this) { _catch = true; visualUpdate(TestHandler.ACTION_PDISPLAY, ""All tests complete.""); visualUpdate(TestHandler.ACTION_HIDE, null); try { RootShell.closeAllShells(); } catch (IOException e) { e.printStackTrace(); } } } @Override public void commandCompleted(int id, int exitCode) { synchronized (com.stericson.RootShellTests.SanityCheckRootShell.this) { _catch = true; visualUpdate(TestHandler.ACTION_PDISPLAY, ""All tests complete.""); visualUpdate(TestHandler.ACTION_HIDE, null); try { RootShell.closeAllShells(); } catch (IOException e) { e.printStackTrace(); } } } }; shell.add(cmd); } catch (Exception e) { e.printStackTrace(); } } }","class T { void run() { RootShell.exists(""/system/xbin/busybox""); } }",3884,68,23,3816,98.83449883449885,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_SHOW', ',', 'null', ')', ';', 'boolean', 'result', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing getPath""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ getPath ]\n""', ')', ';', 'try', '{', 'List', '<', 'String', '>', 'paths', '=', 'RootShell', '.', 'getPath', '(', ')', ';', 'for', '(', 'String', 'path', ':', 'paths', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'path', '+', '"" k\n\n""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing A ton of commands""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Ton of Commands ]\n""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '100', ';', 'i', '++', ')', '{', 'RootShell', '.', 'exists', '(', '""/system/xbin/busybox""', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing Find Binary""', ')', ';', 'result', '=', 'RootShell', '.', 'isRootAvailable', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Root ]\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\n\n""', ')', ';', 'result', '=', 'RootShell', '.', 'isBusyboxAvailable', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Busybox ]\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\n\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing file exists""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking Exists() ]\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'RootShell', '.', 'exists', '(', '""/system/sbin/[""', ')', '+', '"" k\n\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing Is Access Given""', ')', ';', 'result', '=', 'RootShell', '.', 'isAccessGiven', '(', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Checking for Access to Root ]\n""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'result', '+', '"" k\n\n""', ')', ';', 'Shell', 'shell', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Testing output capture""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ busybox ash --help ]\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""busybox ash --help""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\n""', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Switching RootContext - SYSTEM_APP""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Switching Root Context - SYSTEM_APP ]\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ',', 'Shell', '.', 'ShellContext', '.', 'SYSTEM_APP', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""id""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\n""', ')', ';', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""Switching RootContext - UNTRUSTED""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', '""[ Switching Root Context - UNTRUSTED ]\n""', ')', ';', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ',', 'Shell', '.', 'ShellContext', '.', 'UNTRUSTED_APP', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '0', ',', '""id""', ')', '{', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_DISPLAY', ',', 'line', '+', '""\n""', ')', ';', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'try', '{', 'shell', '=', 'RootShell', '.', 'getShell', '(', 'true', ')', ';', 'Command', 'cmd', '=', 'new', 'Command', '(', '42', ',', 'false', ',', '""echo done""', ')', '{', 'boolean', '_catch', '=', 'false', ';', '@', 'Override', 'public', 'void', 'commandOutput', '(', 'int', 'id', ',', 'String', 'line', ')', '{', 'if', '(', '_catch', ')', '{', 'RootShell', '.', 'log', '(', '""CAUGHT!!!""', ')', ';', '}', 'super', '.', 'commandOutput', '(', 'id', ',', 'line', ')', ';', '}', '@', 'Override', 'public', 'void', 'commandTerminated', '(', 'int', 'id', ',', 'String', 'reason', ')', '{', 'synchronized', '(', 'com', '.', 'stericson', '.', 'RootShellTests', '.', 'SanityCheckRootShell', '.', 'this', ')', '{', '_catch', '=', 'true', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""All tests complete.""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_HIDE', ',', 'null', ')', ';', 'try', '{', 'RootShell', '.', 'closeAllShells', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '@', 'Override', 'public', 'void', 'commandCompleted', '(', 'int', 'id', ',', 'int', 'exitCode', ')', '{', 'synchronized', '(', 'com', '.', 'stericson', '.', 'RootShellTests', '.', 'SanityCheckRootShell', '.', 'this', ')', '{', '_catch', '=', 'true', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_PDISPLAY', ',', '""All tests complete.""', ')', ';', 'visualUpdate', '(', 'TestHandler', '.', 'ACTION_HIDE', ',', 'null', ')', ';', 'try', '{', 'RootShell', '.', 'closeAllShells', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', ';', 'shell', '.', 'add', '(', 'cmd', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'RootShell', '.', 'exists', '(', '""/system/xbin/busybox""', ')', ';', '}', '}']",795,17,10,778,99.10828025477709
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,hashCode_1.txt,0.9997,0.0003,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",882.694758,"class T { @SuppressWarnings(""SimplifiableIfStatement"") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; } }",class T { int hashCode() { int result = user != null ? user.hashCode() : 0; } },4859,79,28,4780,98.94431794659492,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""SimplifiableIfStatement""', ')', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'user', '!=', 'null', '?', 'user', '.', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '31', '*', 'result', '+', '(', 'password', '!=', 'null', '?', 'password', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverSslCert', '!=', 'null', '?', 'serverSslCert', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStore', '!=', 'null', '?', 'trustStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStorePassword', '!=', 'null', '?', 'trustStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStore', '!=', 'null', '?', 'keyStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStorePassword', '!=', 'null', '?', 'keyStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyPassword', '!=', 'null', '?', 'keyPassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslProtocolSuites', '!=', 'null', '?', 'enabledSslProtocolSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pinGlobalTxToPhysicalConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketFactory', '!=', 'null', '?', 'socketFactory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'connectTimeout', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pipe', '!=', 'null', '?', 'pipe', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocket', '!=', 'null', '?', 'localSocket', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sharedMemory', '!=', 'null', '?', 'sharedMemory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpNoDelay', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpKeepAlive', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpRcvBuf', '!=', 'null', '?', 'tcpRcvBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpSndBuf', '!=', 'null', '?', 'tcpSndBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpAbortiveClose', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocketAddress', '!=', 'null', '?', 'localSocketAddress', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketTimeout', '!=', 'null', '?', 'socketTimeout', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMultiQueries', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'rewriteBatchedStatements', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'interactiveClient', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'passwordCharacterEncoding', '!=', 'null', '?', 'passwordCharacterEncoding', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useSsl', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslCipherSuites', '!=', 'null', '?', 'enabledSslCipherSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sessionVariables', '!=', 'null', '?', 'sessionVariables', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tinyInt1isBit', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'yearIsDateType', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'createDatabaseIfNotExist', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverTimezone', '!=', 'null', '?', 'serverTimezone', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'nullCatalogMeansCurrent', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'dumpQueriesOnException', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useOldAliasMetadataBehavior', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowLocalInfile', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cachePrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSqlLimit', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useLegacyDatetimeCode', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'maximizeMysqlCompatibility', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useServerPrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cacheCallableStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'callableStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'connectionAttributes', '!=', 'null', '?', 'connectionAttributes', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBatchMultiSend', '!=', 'null', '?', 'useBatchMultiSend', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'useBatchMultiSendNumber', ';', 'result', '=', '31', '*', 'result', '+', '(', 'usePipelineAuth', '!=', 'null', '?', 'usePipelineAuth', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enablePacketDebug', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBulkStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'disableSslHostnameVerification', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'log', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'profileSql', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxQuerySizeToLog', ';', 'result', '=', '31', '*', 'result', '+', '(', 'slowQueryThresholdNanos', '!=', 'null', '?', 'slowQueryThresholdNanos', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'assureReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autoReconnect', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'failOnReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMasterDownConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'retriesAllDown', ';', 'result', '=', '31', '*', 'result', '+', 'validConnectionTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'loadBalanceBlacklistTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'failoverLoopRetries', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'registerJmxPool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useResetConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'staticGlobal', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'poolName', '!=', 'null', '?', 'poolName', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxPoolSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'minPoolSize', '!=', 'null', '?', 'minPoolSize', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxIdleTime', ';', 'result', '=', '31', '*', 'result', '+', 'poolValidMinDelay', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autocommit', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'user', '!=', 'null', '?', 'user', '.', 'hashCode', '(', ')', ':', '0', ';', '}', '}']",1206,25,10,1181,98.7458193979933
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_8.txt,0.9733,0.0511,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",492.208976,"class T { public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print(""Enter your email address and press enter : ""); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print(""Please enter a valid email address and press enter : ""); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println(""Unable to get the OAuth token. Please check the config.properties file.""); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser(""tom"", ""tom@mobx.com"", true); if (!status) { System.out.println(""Unable to create the admin user. Please check the config.properties file.""); System.exit(0); } status = UserOperations.changePassword(""tom"", ""tomemm""); if (!status) { System.out.println(""Unable to change the password of the admin user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createUser(""kim"", email, false); if (!status) { System.out.println(""Unable to create the emm user Kim. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.changePassword(""kim"", ""kimemm""); if (!status) { System.out.println(""Unable to change the password of the emm user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { ""kim"" }); if (!status) { System.out.println(""Unable to create the emm user role. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""android-passcode-policy1"", Constants.DeviceType.ANDROID); if (!status) { System.out.println(""Unable to create the android passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""windows-passcode-policy1"", Constants.DeviceType.WINDOWS); if (!status) { System.out.println(""Unable to create the windows passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""ios-passcode-policy1"", Constants.DeviceType.IOS); if (!status) { System.out.println(""Unable to create the ios passcode policy. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, ""catalog.apk"", ""application/vnd.android.package-archive""); if (application == null) { System.out.println(""Unable to upload the sample android application. Terminating the EMM QSG now.""); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println(""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""Catalog"", application, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, ""PNDemo.ipa"", ""application/octet-stream""); iOSApplication.setVersion(""1.0.0""); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println(""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""WSO2Con"", iOSApplication, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } } }",class T { void main(String args) { System.out.println( ); } },3627,61,24,3566,98.97307799056344,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'boolean', 'status', '=', 'false', ';', 'Scanner', 'scanner', '=', 'new', 'Scanner', '(', 'System', '.', 'in', ')', ';', 'System', '.', 'out', '.', 'print', '(', '""Enter your email address and press enter : ""', ')', ';', 'String', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', 'if', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', '{', 'do', '{', 'System', '.', 'out', '.', 'print', '(', '""Please enter a valid email address and press enter : ""', ')', ';', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', '}', 'while', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', ';', '}', 'String', 'token', '=', 'QSGUtils', '.', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to get the OAuth token. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'HTTPInvoker', '.', 'oAuthToken', '=', 'token', ';', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""tom""', ',', '""tom@mobx.com""', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the admin user. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""tom""', ',', '""tomemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the admin user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""kim""', ',', 'email', ',', 'false', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user Kim. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""kim""', ',', '""kimemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the emm user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createRole', '(', 'Constants', '.', 'EMM_USER_ROLE', ',', 'new', 'String', '[', ']', '{', '""kim""', '}', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user role. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""android-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the android passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""windows-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'WINDOWS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the windows passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""ios-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'IOS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the ios passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'application', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', '""catalog.apk""', ',', '""application/vnd.android.package-archive""', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'application', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', 'application', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""Catalog""', ',', 'application', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'iOSApplication', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', '""PNDemo.ipa""', ',', '""application/octet-stream""', ')', ';', 'iOSApplication', '.', 'setVersion', '(', '""1.0.0""', ')', ';', 'iOSApplication', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', 'iOSApplication', ')', ';', 'if', '(', 'iOSApplication', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""WSO2Con""', ',', 'iOSApplication', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",645,20,10,625,98.4251968503937
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,execute_9.txt,0.7511,0.4206,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",618.391085,"class T { @Override public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException { JSONObject result = null; if (sEnableLogging) { Log.i(TAG, ""********************* execute action="" + action); } if (action.equals(""setCallbackOnGenericMotionEvent"")) { sCallbackOnGenericMotionEvent = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnGenericMotionEvent.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyUp"")) { sCallbackOnKeyUp = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyUp.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyDown"")) { sCallbackOnKeyDown = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyDown.sendPluginResult(pluginResult); return true; } else if (action.equals(""initOuyaPlugin"")) { sCallbackInitOuyaPlugin = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""initOuyaPlugin failed to read argument!""); sCallbackInitOuyaPlugin.error(result); return true; } } else { result = createError(0, ""initOuyaPlugin arg1 is null!""); sCallbackInitOuyaPlugin.error(result); return true; } initOuyaPlugin(jsonArray); return true; } else if (action.equals(""requestGamerInfo"")) { sCallbackRequestGamerInfo = callbackContext; requestGamerInfo(); return true; } else if (action.equals(""requestProducts"")) { sCallbackRequestProducts = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""requestProducts failed to read argument!""); sCallbackRequestProducts.error(result); return true; } } else { result = createError(0, ""requestProducts arg1 is null!""); sCallbackRequestProducts.error(result); return true; } requestProducts(jsonArray); return true; } else if (action.equals(""requestPurchase"")) { sCallbackRequestPurchase = callbackContext; String identifier = null; if (args.length() > 0) { try { Log.i(TAG, ""requestPurchase identifier="" + args.getString(0)); identifier = args.getString(0); } catch (Exception e) { result = createError(0, ""requestPurchase failed to read argument!""); sCallbackRequestPurchase.error(result); return true; } } else { result = createError(0, ""requestPurchase arg1 is null!""); sCallbackRequestPurchase.error(result); return true; } requestPurchase(identifier); return true; } else if (action.equals(""requestReceipts"")) { sCallbackRequestReceipts = callbackContext; requestReceipts(); return true; } else if (action.equals(""setSafeArea"")) { float amount = 0f; if (args.length() > 0) { try { Log.i(TAG, ""setSafeArea identifier="" + args.getString(0)); amount = (float) args.getDouble(0); } catch (Exception e) { result = createError(0, ""setSafeArea failed to read argument!""); callbackContext.error(result); return true; } } else { result = createError(0, ""setSafeArea arg1 is null!""); callbackContext.error(result); return true; } setSafeArea(callbackContext, amount); return true; } else if (action.equals(""getDeviceHardware"")) { getDeviceHardware(callbackContext); return true; } else if (action.equals(""shutdown"")) { shutdown(callbackContext); return true; } return false; } }","class T { boolean execute(String action , CallbackContext callbackContext) { JSONObject result ; } }",3555,100,27,3455,97.93083900226758,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'execute', '(', 'String', 'action', ',', 'JSONArray', 'args', ',', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'JSONObject', 'result', '=', 'null', ';', 'if', '(', 'sEnableLogging', ')', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""********************* execute action=""', '+', 'action', ')', ';', '}', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnGenericMotionEvent""', ')', ')', '{', 'sCallbackOnGenericMotionEvent', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnGenericMotionEvent', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyUp""', ')', ')', '{', 'sCallbackOnKeyUp', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyUp', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyDown""', ')', ')', '{', 'sCallbackOnKeyDown', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyDown', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""initOuyaPlugin""', ')', ')', '{', 'sCallbackInitOuyaPlugin', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin failed to read argument!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin arg1 is null!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'initOuyaPlugin', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestGamerInfo""', ')', ')', '{', 'sCallbackRequestGamerInfo', '=', 'callbackContext', ';', 'requestGamerInfo', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestProducts""', ')', ')', '{', 'sCallbackRequestProducts', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts failed to read argument!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts arg1 is null!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestProducts', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestPurchase""', ')', ')', '{', 'sCallbackRequestPurchase', '=', 'callbackContext', ';', 'String', 'identifier', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""requestPurchase identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'identifier', '=', 'args', '.', 'getString', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase failed to read argument!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase arg1 is null!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestPurchase', '(', 'identifier', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestReceipts""', ')', ')', '{', 'sCallbackRequestReceipts', '=', 'callbackContext', ';', 'requestReceipts', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setSafeArea""', ')', ')', '{', 'float', 'amount', '=', '0f', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""setSafeArea identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', '.', 'getDouble', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea failed to read argument!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea arg1 is null!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'setSafeArea', '(', 'callbackContext', ',', 'amount', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""getDeviceHardware""', ')', ')', '{', 'getDeviceHardware', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""shutdown""', ')', ')', '{', 'shutdown', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'execute', '(', 'String', 'action', ',', 'CallbackContext', 'callbackContext', ')', '{', 'JSONObject', 'result', ';', '}', '}']",730,18,10,712,98.88888888888889
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,execute_12.txt,0.9253,0.1659,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",475.013494,"class T { @Override public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException { JSONObject result = null; if (sEnableLogging) { Log.i(TAG, ""********************* execute action="" + action); } if (action.equals(""setCallbackOnGenericMotionEvent"")) { sCallbackOnGenericMotionEvent = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnGenericMotionEvent.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyUp"")) { sCallbackOnKeyUp = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyUp.sendPluginResult(pluginResult); return true; } else if (action.equals(""setCallbackOnKeyDown"")) { sCallbackOnKeyDown = callbackContext; PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, """"); pluginResult.setKeepCallback(true); sCallbackOnKeyDown.sendPluginResult(pluginResult); return true; } else if (action.equals(""initOuyaPlugin"")) { sCallbackInitOuyaPlugin = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""initOuyaPlugin failed to read argument!""); sCallbackInitOuyaPlugin.error(result); return true; } } else { result = createError(0, ""initOuyaPlugin arg1 is null!""); sCallbackInitOuyaPlugin.error(result); return true; } initOuyaPlugin(jsonArray); return true; } else if (action.equals(""requestGamerInfo"")) { sCallbackRequestGamerInfo = callbackContext; requestGamerInfo(); return true; } else if (action.equals(""requestProducts"")) { sCallbackRequestProducts = callbackContext; JSONArray jsonArray = null; if (args.length() > 0) { try { jsonArray = new JSONArray(args.get(0).toString()); } catch (Exception e) { result = createError(0, ""requestProducts failed to read argument!""); sCallbackRequestProducts.error(result); return true; } } else { result = createError(0, ""requestProducts arg1 is null!""); sCallbackRequestProducts.error(result); return true; } requestProducts(jsonArray); return true; } else if (action.equals(""requestPurchase"")) { sCallbackRequestPurchase = callbackContext; String identifier = null; if (args.length() > 0) { try { Log.i(TAG, ""requestPurchase identifier="" + args.getString(0)); identifier = args.getString(0); } catch (Exception e) { result = createError(0, ""requestPurchase failed to read argument!""); sCallbackRequestPurchase.error(result); return true; } } else { result = createError(0, ""requestPurchase arg1 is null!""); sCallbackRequestPurchase.error(result); return true; } requestPurchase(identifier); return true; } else if (action.equals(""requestReceipts"")) { sCallbackRequestReceipts = callbackContext; requestReceipts(); return true; } else if (action.equals(""setSafeArea"")) { float amount = 0f; if (args.length() > 0) { try { Log.i(TAG, ""setSafeArea identifier="" + args.getString(0)); amount = (float) args.getDouble(0); } catch (Exception e) { result = createError(0, ""setSafeArea failed to read argument!""); callbackContext.error(result); return true; } } else { result = createError(0, ""setSafeArea arg1 is null!""); callbackContext.error(result); return true; } setSafeArea(callbackContext, amount); return true; } else if (action.equals(""getDeviceHardware"")) { getDeviceHardware(callbackContext); return true; } else if (action.equals(""shutdown"")) { shutdown(callbackContext); return true; } return false; } }","class T { boolean execute(String action , CallbackContext callbackContext) { Log.i( ); } }",3555,90,27,3465,98.21428571428572,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'execute', '(', 'String', 'action', ',', 'JSONArray', 'args', ',', 'CallbackContext', 'callbackContext', ')', 'throws', 'JSONException', '{', 'JSONObject', 'result', '=', 'null', ';', 'if', '(', 'sEnableLogging', ')', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""********************* execute action=""', '+', 'action', ')', ';', '}', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnGenericMotionEvent""', ')', ')', '{', 'sCallbackOnGenericMotionEvent', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnGenericMotionEvent', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyUp""', ')', ')', '{', 'sCallbackOnKeyUp', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyUp', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setCallbackOnKeyDown""', ')', ')', '{', 'sCallbackOnKeyDown', '=', 'callbackContext', ';', 'PluginResult', 'pluginResult', '=', 'new', 'PluginResult', '(', 'PluginResult', '.', 'Status', '.', 'OK', ',', '""""', ')', ';', 'pluginResult', '.', 'setKeepCallback', '(', 'true', ')', ';', 'sCallbackOnKeyDown', '.', 'sendPluginResult', '(', 'pluginResult', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""initOuyaPlugin""', ')', ')', '{', 'sCallbackInitOuyaPlugin', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin failed to read argument!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""initOuyaPlugin arg1 is null!""', ')', ';', 'sCallbackInitOuyaPlugin', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'initOuyaPlugin', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestGamerInfo""', ')', ')', '{', 'sCallbackRequestGamerInfo', '=', 'callbackContext', ';', 'requestGamerInfo', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestProducts""', ')', ')', '{', 'sCallbackRequestProducts', '=', 'callbackContext', ';', 'JSONArray', 'jsonArray', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'jsonArray', '=', 'new', 'JSONArray', '(', 'args', '.', 'get', '(', '0', ')', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts failed to read argument!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestProducts arg1 is null!""', ')', ';', 'sCallbackRequestProducts', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestProducts', '(', 'jsonArray', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestPurchase""', ')', ')', '{', 'sCallbackRequestPurchase', '=', 'callbackContext', ';', 'String', 'identifier', '=', 'null', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""requestPurchase identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'identifier', '=', 'args', '.', 'getString', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase failed to read argument!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""requestPurchase arg1 is null!""', ')', ';', 'sCallbackRequestPurchase', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'requestPurchase', '(', 'identifier', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""requestReceipts""', ')', ')', '{', 'sCallbackRequestReceipts', '=', 'callbackContext', ';', 'requestReceipts', '(', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""setSafeArea""', ')', ')', '{', 'float', 'amount', '=', '0f', ';', 'if', '(', 'args', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'Log', '.', 'i', '(', 'TAG', ',', '""setSafeArea identifier=""', '+', 'args', '.', 'getString', '(', '0', ')', ')', ';', 'amount', '=', '(', 'float', ')', 'args', '.', 'getDouble', '(', '0', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea failed to read argument!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', '}', 'else', '{', 'result', '=', 'createError', '(', '0', ',', '""setSafeArea arg1 is null!""', ')', ';', 'callbackContext', '.', 'error', '(', 'result', ')', ';', 'return', 'true', ';', '}', 'setSafeArea', '(', 'callbackContext', ',', 'amount', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""getDeviceHardware""', ')', ')', '{', 'getDeviceHardware', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'else', 'if', '(', 'action', '.', 'equals', '(', '""shutdown""', ')', ')', '{', 'shutdown', '(', 'callbackContext', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'execute', '(', 'String', 'action', ',', 'CallbackContext', 'callbackContext', ')', '{', 'Log', '.', 'i', '(', ')', ';', '}', '}']",730,21,10,709,98.47222222222224
code2vec,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_8.txt,0.9917,0.0115,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",691.752961,"class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Hardware.context = this; Action.context = this; mActivity = this; getWindowManager().getDefaultDisplay().getMetrics(Hardware.metrics); resourceManager = new ResourceManager(this); String debugFlag = getIntent().getStringExtra(EXTRA_CONTENT_URL5); if (debugFlag != null) { if (debugFlag.equals(""0"")) { debugLog = false; } } String root = getIntent().getStringExtra(EXTRA_CONTENT_URL4); if (root != null) { File n = new File(root); if (n.exists()) { externalStorage = n; } else { externalStorage = new File(Environment.getExternalStorageDirectory(), root); } } else { externalStorage = new File(Environment.getExternalStorageDirectory(), ""qpython""); } Log.d(TAG, ""externalStorage:"" + externalStorage); mScript = null; String act = getIntent().getStringExtra(EXTRA_CONTENT_URL1); boolean fullscreen = false; if (act != null && act.equals(""execute"")) { mPath = new File(getIntent().getStringExtra(EXTRA_CONTENT_URL2)); File f = new File(mPath, ""main.py""); if (f.exists()) { if (FileHelper.getFileContents(f.toString()).contains(""#qpy:fullscreen"")) { fullscreen = true; } } Project p = Project.scanDirectory(mPath); if (p != null) { if (p.landscape) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); } else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } if (p.fullscreen) { fullscreen = true; } } } else { String fn = getIntent().getStringExtra(EXTRA_CONTENT_URL2); if (fn == null) { isMain = true; fn = ""/sdcard/qpython/launcher.py""; } mScript = new File(fn); if (!mScript.exists()) { String file1 = FileHelper.LoadDataFromAssets(this, ""main.py""); FileHelper.writeToFile(fn, file1); } mPath = mScript.getParentFile(); if (FileHelper.getFileContents(mScript.toString()).contains(""#qpy:fullscreen"")) { fullscreen = true; } } if (fullscreen) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); } try { FileWriter f = new FileWriter(new File(mPath, "".launch"")); f.write(""started""); f.close(); } catch (IOException e) { } updateNotification(mPath.toString()); requestWindowFeature(Window.FEATURE_NO_TITLE); String full = getIntent().getStringExtra(EXTRA_CONTENT_URL3); File logFile = new File(mPath, "".run.log""); if (logFile.exists()) { logFile.delete(); } String s = """"; if (mScript != null) { s = mScript.getName(); } else { File f = new File(mPath, ""main.py""); if (f.exists()) { s = ""main.py""; } else { f = new File(mPath, ""main.pyo""); if (f.exists()) { s = ""main.pyo""; } } } Log.d(TAG, ""[RUN param:"" + externalStorage.getAbsolutePath().toString() + ""-"" + mPath.getAbsolutePath().toString() + ""-"" + s + ""]""); mView = new SDLSurfaceView(this, mPath.getAbsolutePath().toString(), s, externalStorage.getAbsolutePath().toString()); IntentFilter filter = new IntentFilter("".PythonActivity""); registerReceiver(mReceiver, filter); startPyScreen(); } }",class T { void onCreate( ) { super.onCreate(savedInstanceState); } },2951,68,28,2883,98.6315429353404,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'Hardware', '.', 'context', '=', 'this', ';', 'Action', '.', 'context', '=', 'this', ';', 'mActivity', '=', 'this', ';', 'getWindowManager', '(', ')', '.', 'getDefaultDisplay', '(', ')', '.', 'getMetrics', '(', 'Hardware', '.', 'metrics', ')', ';', 'resourceManager', '=', 'new', 'ResourceManager', '(', 'this', ')', ';', 'String', 'debugFlag', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL5', ')', ';', 'if', '(', 'debugFlag', '!=', 'null', ')', '{', 'if', '(', 'debugFlag', '.', 'equals', '(', '""0""', ')', ')', '{', 'debugLog', '=', 'false', ';', '}', '}', 'String', 'root', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL4', ')', ';', 'if', '(', 'root', '!=', 'null', ')', '{', 'File', 'n', '=', 'new', 'File', '(', 'root', ')', ';', 'if', '(', 'n', '.', 'exists', '(', ')', ')', '{', 'externalStorage', '=', 'n', ';', '}', 'else', '{', 'externalStorage', '=', 'new', 'File', '(', 'Environment', '.', 'getExternalStorageDirectory', '(', ')', ',', 'root', ')', ';', '}', '}', 'else', '{', 'externalStorage', '=', 'new', 'File', '(', 'Environment', '.', 'getExternalStorageDirectory', '(', ')', ',', '""qpython""', ')', ';', '}', 'Log', '.', 'd', '(', 'TAG', ',', '""externalStorage:""', '+', 'externalStorage', ')', ';', 'mScript', '=', 'null', ';', 'String', 'act', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL1', ')', ';', 'boolean', 'fullscreen', '=', 'false', ';', 'if', '(', 'act', '!=', 'null', '&&', 'act', '.', 'equals', '(', '""execute""', ')', ')', '{', 'mPath', '=', 'new', 'File', '(', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL2', ')', ')', ';', 'File', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.py""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'if', '(', 'FileHelper', '.', 'getFileContents', '(', 'f', '.', 'toString', '(', ')', ')', '.', 'contains', '(', '""#qpy:fullscreen""', ')', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', 'Project', 'p', '=', 'Project', '.', 'scanDirectory', '(', 'mPath', ')', ';', 'if', '(', 'p', '!=', 'null', ')', '{', 'if', '(', 'p', '.', 'landscape', ')', '{', 'setRequestedOrientation', '(', 'ActivityInfo', '.', 'SCREEN_ORIENTATION_LANDSCAPE', ')', ';', '}', 'else', '{', 'setRequestedOrientation', '(', 'ActivityInfo', '.', 'SCREEN_ORIENTATION_PORTRAIT', ')', ';', '}', 'if', '(', 'p', '.', 'fullscreen', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', '}', 'else', '{', 'String', 'fn', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL2', ')', ';', 'if', '(', 'fn', '==', 'null', ')', '{', 'isMain', '=', 'true', ';', 'fn', '=', '""/sdcard/qpython/launcher.py""', ';', '}', 'mScript', '=', 'new', 'File', '(', 'fn', ')', ';', 'if', '(', '!', 'mScript', '.', 'exists', '(', ')', ')', '{', 'String', 'file1', '=', 'FileHelper', '.', 'LoadDataFromAssets', '(', 'this', ',', '""main.py""', ')', ';', 'FileHelper', '.', 'writeToFile', '(', 'fn', ',', 'file1', ')', ';', '}', 'mPath', '=', 'mScript', '.', 'getParentFile', '(', ')', ';', 'if', '(', 'FileHelper', '.', 'getFileContents', '(', 'mScript', '.', 'toString', '(', ')', ')', '.', 'contains', '(', '""#qpy:fullscreen""', ')', ')', '{', 'fullscreen', '=', 'true', ';', '}', '}', 'if', '(', 'fullscreen', ')', '{', 'getWindow', '(', ')', '.', 'setFlags', '(', 'WindowManager', '.', 'LayoutParams', '.', 'FLAG_FULLSCREEN', ',', 'WindowManager', '.', 'LayoutParams', '.', 'FLAG_FULLSCREEN', ')', ';', '}', 'try', '{', 'FileWriter', 'f', '=', 'new', 'FileWriter', '(', 'new', 'File', '(', 'mPath', ',', '"".launch""', ')', ')', ';', 'f', '.', 'write', '(', '""started""', ')', ';', 'f', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'updateNotification', '(', 'mPath', '.', 'toString', '(', ')', ')', ';', 'requestWindowFeature', '(', 'Window', '.', 'FEATURE_NO_TITLE', ')', ';', 'String', 'full', '=', 'getIntent', '(', ')', '.', 'getStringExtra', '(', 'EXTRA_CONTENT_URL3', ')', ';', 'File', 'logFile', '=', 'new', 'File', '(', 'mPath', ',', '"".run.log""', ')', ';', 'if', '(', 'logFile', '.', 'exists', '(', ')', ')', '{', 'logFile', '.', 'delete', '(', ')', ';', '}', 'String', 's', '=', '""""', ';', 'if', '(', 'mScript', '!=', 'null', ')', '{', 's', '=', 'mScript', '.', 'getName', '(', ')', ';', '}', 'else', '{', 'File', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.py""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 's', '=', '""main.py""', ';', '}', 'else', '{', 'f', '=', 'new', 'File', '(', 'mPath', ',', '""main.pyo""', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 's', '=', '""main.pyo""', ';', '}', '}', '}', 'Log', '.', 'd', '(', 'TAG', ',', '""[RUN param:""', '+', 'externalStorage', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', '+', '""-""', '+', 'mPath', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', '+', '""-""', '+', 's', '+', '""]""', ')', ';', 'mView', '=', 'new', 'SDLSurfaceView', '(', 'this', ',', 'mPath', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', ',', 's', ',', 'externalStorage', '.', 'getAbsolutePath', '(', ')', '.', 'toString', '(', ')', ')', ';', 'IntentFilter', 'filter', '=', 'new', 'IntentFilter', '(', '"".PythonActivity""', ')', ';', 'registerReceiver', '(', 'mReceiver', ',', 'filter', ')', ';', 'startPyScreen', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', '}', '}']",719,17,10,702,99.01269393511988
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 142, 'n_valid': 17, 'n_correct': 9}",26.406987,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },void onCreate(Bundle savedInstanceState){onCreate();setContentView(R.layout.onboarding);},134,89,14,45,37.5,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']",27,21,6,6,28.57142857142857
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 240, 'n_valid': 26, 'n_correct': 21}",41.446807,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");StringBuilder(""TimingFilter"");(sb.toString);}",211,76,14,135,68.52791878172589,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', 'StringBuilder', '(', '""TimingFilter""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,25,6,27,58.69565217391305
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 199, 'n_valid': 22, 'n_correct': 22}",38.57806,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(null)return""""+"""";toString();}",135,50,14,85,70.24793388429752,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', 'return', '""""', '+', '""""', ';', 'toString', '(', ')', ';', '}']",29,19,6,10,43.47826086956522
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 206, 'n_valid': 17, 'n_correct': 16}",28.858023,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(Object other){if(other instanceof Stock){(((Stock)).symbol);}},146,77,12,69,51.49253731343284,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', '}']",39,26,6,13,39.39393939393939
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 206, 'n_valid': 17, 'n_correct': 16}",29.181852,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(Object other){if(other instanceof Stock){(((Stock)).symbol);}},146,77,12,69,51.49253731343284,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', '}']",39,26,6,13,39.39393939393939
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 131, 'n_valid': 13, 'n_correct': 10}",20.488472,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },void onCreate(Bundle savedInstanceState){super.onCreate();setContentView();},144,76,14,68,52.30769230769232,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 264, 'n_valid': 29, 'n_correct': 29}",44.451084,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","String toString(){("""").append("""");(filterClass).append();}",242,58,14,184,80.7017543859649,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', '(', '""""', ')', '.', 'append', '(', '""""', ')', ';', '(', 'filterClass', ')', '.', 'append', '(', ')', ';', '}']",66,23,6,43,71.66666666666667
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_2.txt,0.9969,0.0038,"{'n_total': 327, 'n_valid': 34, 'n_correct': 34}",50.858798,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",boolean equals(Object o){if(o){}if(getClass()){}other=(TldResourcePath)equals();},309,81,12,228,76.76767676767676,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'other', '=', '(', 'TldResourcePath', ')', 'equals', '(', ')', ';', '}']",83,31,6,52,67.53246753246754
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 183, 'n_valid': 21, 'n_correct': 18}",32.906262,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(Object obj){if(obj){equals(((CharEntry)).value);}},141,65,12,76,58.91472868217055,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'CharEntry', ')', ')', '.', 'value', ')', ';', '}', '}']",37,25,6,12,38.70967741935484
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 109, 'n_valid': 14, 'n_correct': 10}",22.503698,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },void init()throws ServletException{super.init;incrementAndGet();},99,65,10,34,38.20224719101123,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', ';', 'incrementAndGet', '(', ')', ';', '}']",23,16,6,7,41.17647058823529
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_2.txt,0.9345,0.0834,"{'n_total': 491, 'n_valid': 47, 'n_correct': 45}",79.858636,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","@Override String toString(){StringWriter=(sw)("""");count();for(;;){((i)toString());}toString();}",270,95,14,175,68.359375,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['@', 'Override', 'String', 'toString', '(', ')', '{', 'StringWriter', '=', '(', 'sw', ')', '(', '""""', ')', ';', 'count', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",77,41,6,36,50.70422535211267
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 122, 'n_valid': 15, 'n_correct': 11}",23.883889,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },void onCreate(){onCreate(savedInstanceState);InitViewPager();},172,62,14,110,69.62025316455697,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', 'savedInstanceState', ')', ';', 'InitViewPager', '(', ')', ';', '}']",39,15,6,24,72.72727272727273
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 142, 'n_valid': 17, 'n_correct': 15}",25.990336,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","void onCreate(){(""onCreate"");}",215,30,14,185,92.03980099502488,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', '(', '""onCreate""', ')', ';', '}']",52,10,6,42,91.30434782608695
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 229, 'n_valid': 32, 'n_correct': 27}",48.97605,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 183, 'n_valid': 24, 'n_correct': 21}",39.856507,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(Object obj){if(obj){this;}},136,42,12,94,75.80645161290323,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', ')', '{', 'this', ';', '}', '}']",35,16,6,19,65.51724137931035
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 231, 'n_valid': 24, 'n_correct': 21}",39.538577,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },boolean equals(Object o){if(this==o)if((Column))(column.name);},186,63,12,123,70.6896551724138,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'if', '(', '(', 'Column', ')', ')', '(', 'column', '.', 'name', ')', ';', '}']",50,26,6,24,54.54545454545454
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_10.txt,0.999,0.0011,"{'n_total': 206, 'n_valid': 19, 'n_correct': 18}",30.017089,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws Exception{{System("""","""");}setUp();}",181,54,11,127,74.70588235294117,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_10.txt,0.995,0.0058,"{'n_total': 270, 'n_valid': 43, 'n_correct': 33}",67.609539,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },boolean equals(Object other){if(other instanceof Mark){}},247,57,12,190,80.85106382978722,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', '}', '}']",71,16,6,55,84.61538461538461
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 146, 'n_valid': 20, 'n_correct': 15}",31.718273,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","String toString(){StringBuilder("""");(sb);}",132,42,14,90,76.27118644067797,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'StringBuilder', '(', '""""', ')', ';', '(', 'sb', ')', ';', '}']",34,15,6,19,67.85714285714286
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 195, 'n_valid': 36, 'n_correct': 22}",55.398979,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },boolean onCreate(){getContext();mOpenHelper=VideoDbHelper();true;},175,66,14,109,67.70186335403726,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['boolean', 'onCreate', '(', ')', '{', 'getContext', '(', ')', ';', 'mOpenHelper', '=', 'VideoDbHelper', '(', ')', ';', 'true', ';', '}']",35,18,6,17,58.620689655172406
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 378, 'n_valid': 30, 'n_correct': 30}",48.906453,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",boolean equals(Object obj){if((obj instanceof URL))(false);if(sameFile)((getRef()));},190,85,12,105,58.98876404494382,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '(', 'obj', 'instanceof', 'URL', ')', ')', '(', 'false', ')', ';', 'if', '(', 'sameFile', ')', '(', '(', 'getRef', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",46.884467,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 165, 'n_valid': 17, 'n_correct': 17}",27.915249,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",void execute()throws BuildException{execute();createLink();(sb);},165,65,13,100,65.78947368421053,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', ')', ';', 'createLink', '(', ')', ';', '(', 'sb', ')', ';', '}']",44,20,6,24,63.1578947368421
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 126, 'n_valid': 13, 'n_correct': 9}",20.998899,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },void setUp()throws Exception{supergetContext().getContentResolver();},114,69,11,45,43.68932038834952,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'supergetContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 278, 'n_valid': 22, 'n_correct': 22}",33.735216,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","void main(String[]args)throws Exception{((""""));(("""".getBytes()));}",179,66,10,113,66.86390532544378,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', '(', '""""', ')', ')', ';', '(', '(', '""""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']",50,28,6,22,50.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 209, 'n_valid': 18, 'n_correct': 18}",30.609317,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },void main(String[]args){try{(getSystemLookAndFeelClassName());}catch(Exception e){}GUI();},154,90,10,64,44.44444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', '(', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'GUI', '(', ')', ';', '}']",38,30,6,8,25.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 204, 'n_valid': 25, 'n_correct': 16}",39.228801,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(value==null){NoSuchElementException("" "");}}",109,54,9,55,55.00000000000001,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'NoSuchElementException', '(', '"" ""', ')', ';', '}', '}']",25,19,6,6,31.57894736842105
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 142, 'n_valid': 18, 'n_correct': 13}",29.146168,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },void setUp(){(Session);processor=(session);},107,44,11,63,65.625,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['void', 'setUp', '(', ')', '{', '(', 'Session', ')', ';', 'processor', '=', '(', 'session', ')', ';', '}']",26,16,6,10,50.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 263, 'n_valid': 25, 'n_correct': 19}",42.334309,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@Override void run(){try{TestClient();Request();}catch(Exception x){}},127,70,9,57,48.30508474576271,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', '(', ')', ';', 'Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",33,26,6,7,25.925925925925924
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 210, 'n_valid': 23, 'n_correct': 23}",36.961777,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","Object get(Map<Object>key,Object defaultv){if(null){}}",166,54,9,112,71.3375796178344,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['Object', 'get', '(', 'Map', '<', 'Object', '>', 'key', ',', 'Object', 'defaultv', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",46,20,6,26,65.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 238, 'n_valid': 23, 'n_correct': 23}",36.826285,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","void main(String[]args)throws IOException{(_);("""");}",251,52,10,199,82.57261410788381,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', '(', '_', ')', ';', '(', '""""', ')', ';', '}']",53,20,6,33,70.2127659574468
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 149, 'n_valid': 17, 'n_correct': 17}",26.549604,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },void main(String[]args){sender();},132,34,10,98,80.32786885245902,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'sender', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 166, 'n_valid': 15, 'n_correct': 13}",24.30422,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }","void setUp(){setUp();solo=Solo(getInstrumentation(),getActivity);}",122,66,11,56,50.45045045045045,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'setUp', '(', ')', ';', 'solo', '=', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', ')', ';', '}']",31,21,6,10,40.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_5.txt,0.4803,0.8791,"{'n_total': 526, 'n_valid': 89, 'n_correct': 42}",131.757344,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","void execute(Tuple tuple){("""");metadata=(Metadata)("""");collector(com());collector.ack();}",305,89,13,216,73.97260273972603,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['void', 'execute', '(', 'Tuple', 'tuple', ')', '{', '(', '""""', ')', ';', 'metadata', '=', '(', 'Metadata', ')', '(', '""""', ')', ';', 'collector', '(', 'com', '(', ')', ')', ';', 'collector', '.', 'ack', '(', ')', ';', '}']",70,34,6,36,56.25
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 236, 'n_valid': 20, 'n_correct': 20}",33.686391,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 228, 'n_valid': 19, 'n_correct': 19}",31.04819,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","void run(){try{draw();}catch(Throwable t){(""""+getMessage);}}",149,60,9,89,63.57142857142857,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', '+', 'getMessage', ')', ';', '}', '}']",36,26,6,10,33.33333333333333
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 135, 'n_valid': 19, 'n_correct': 15}",30.516372,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override int hashCode(){result=result();},174,42,14,132,82.5,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'result', '(', ')', ';', '}']",45,14,6,31,79.48717948717949
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.397516,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }","void execute(){super.execute();((""""));}",123,39,13,84,76.36363636363637,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 151, 'n_valid': 14, 'n_correct': 14}",23.487352,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","void setUp()throws Exception{("""");setUp();}",149,43,11,106,76.81159420289855,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_1.txt,0.9866,0.0164,"{'n_total': 419, 'n_valid': 44, 'n_correct': 44}",68.212652,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","void main(String[]args){(""""+getServerInfo());(""""+getServerBuilt());(""""+getServerNumber());(""""+(""""));}",579,101,10,478,84.00702987697716,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', '+', 'getServerInfo', '(', ')', ')', ';', '(', '""""', '+', 'getServerBuilt', '(', ')', ')', ';', '(', '""""', '+', 'getServerNumber', '(', ')', ')', ';', '(', '""""', '+', '(', '""""', ')', ')', ';', '}']",131,42,6,89,71.2
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 304, 'n_valid': 30, 'n_correct': 29}",47.862966,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(long timeout,TimeUnit unit)throws InterruptedException{if(sync(0,unit)){(""""+timeout);}}",248,93,9,155,64.85355648535564,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', '{', 'if', '(', 'sync', '(', '0', ',', 'unit', ')', ')', '{', '(', '""""', '+', 'timeout', ')', ';', '}', '}']",51,30,6,21,46.66666666666666
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 354, 'n_valid': 40, 'n_correct': 40}",63.199681,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){((null)?0:hashCode());((null)?0:hashCode());},262,60,14,202,81.45161290322581,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",75,30,6,45,65.21739130434783
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 350, 'n_valid': 43, 'n_correct': 39}",68.318679,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 236, 'n_valid': 20, 'n_correct': 20}",34.122566,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 155, 'n_valid': 17, 'n_correct': 13}",25.747715,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }","void execute()throws BuildException{execute("""".toString());}",140,60,13,80,62.99212598425197,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', '""""', '.', 'toString', '(', ')', ')', ';', '}']",29,17,6,12,52.17391304347826
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 196, 'n_valid': 22, 'n_correct': 18}",35.395724,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },void setUp()throws Exception{setUp();tomcat=(JreMemoryLeakPreventionListener());},182,81,11,101,59.06432748538012,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'setUp', '(', ')', ';', 'tomcat', '=', '(', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']",38,20,6,18,56.25
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 178, 'n_valid': 25, 'n_correct': 15}",37.792031,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },void init(ProcessingEnvironment env){helper=getFiler();elementUtils=getElementUtils();},193,87,10,106,57.92349726775956,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'helper', '=', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'getElementUtils', '(', ')', ';', '}']",49,20,6,29,67.44186046511628
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 139, 'n_valid': 16, 'n_correct': 12}",24.582615,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },void main(String[]args){recreate=CreateTestTable().testPopulateData();},147,71,10,76,55.47445255474452,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'recreate', '=', 'CreateTestTable', '(', ')', '.', 'testPopulateData', '(', ')', ';', '}']",32,20,6,12,46.15384615384615
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 171, 'n_valid': 15, 'n_correct': 15}",24.574907,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","void main(String[]args){("""");(args);}",136,37,10,99,78.57142857142857,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', 'args', ')', ';', '}']",30,18,6,12,50.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 229, 'n_valid': 21, 'n_correct': 21}",32.298924,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","void main(String[]args)throws Exception{(PostgresConfig(Version,"""")).info("""");}",273,79,10,194,73.76425855513308,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', 'PostgresConfig', '(', 'Version', ',', '""""', ')', ')', '.', 'info', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 138, 'n_valid': 17, 'n_correct': 13}",26.764985,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","void execute()throws BuildException{super.execute("""");}",98,55,13,43,50.588235294117645,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', '""""', ')', ';', '}']",22,15,6,7,43.75
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 206, 'n_valid': 20, 'n_correct': 19}",34.725782,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },@Override void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}},162,93,9,69,45.09803921568628,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', 'countUpOrAwait', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",44,26,6,18,47.368421052631575
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 235, 'n_valid': 31, 'n_correct': 28}",50.106583,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },int hashCode(){result=((null)?0:hashCode());},239,45,14,194,86.22222222222223,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",66,20,6,46,76.66666666666667
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 141, 'n_valid': 18, 'n_correct': 12}",27.582595,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }","void run(){postDelayed(this,delaytime);updateViewLayout(wmParams);}",150,67,9,83,58.86524822695035,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['void', 'run', '(', ')', '{', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'updateViewLayout', '(', 'wmParams', ')', ';', '}']",33,18,6,15,55.55555555555556
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 259, 'n_valid': 32, 'n_correct': 29}",50.251982,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },int hashCode(){((name)?0:hashCode);},154,36,14,118,84.28571428571429,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'name', ')', '?', '0', ':', 'hashCode', ')', ';', '}']",45,16,6,29,74.35897435897436
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 240, 'n_valid': 26, 'n_correct': 21}",41.445733,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");StringBuilder(""TimingFilter"");(sb.toString);}",211,76,14,135,68.52791878172589,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', 'StringBuilder', '(', '""TimingFilter""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,25,6,27,58.69565217391305
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",47.525344,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 134, 'n_valid': 24, 'n_correct': 16}",37.216787,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){result=xresult+y;},92,33,14,59,75.64102564102564,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'xresult', '+', 'y', ';', '}']",25,12,6,13,68.42105263157895
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",65.166338,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },int hashCode(){((key)hashCode());((null)?0:hashCode());},220,56,14,164,79.6116504854369,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'key', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 253, 'n_valid': 26, 'n_correct': 24}",43.189896,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@Before void setUp()throws Exception{addChannelListener();(new ManagedChannel[]{});(Channel);},317,94,11,223,72.87581699346404,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'Before', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'addChannelListener', '(', ')', ';', '(', 'new', 'ManagedChannel', '[', ']', '{', '}', ')', ';', '(', 'Channel', ')', ';', '}']",72,27,6,45,68.18181818181817
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 152, 'n_valid': 18, 'n_correct': 15}",29.156057,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },void init(ServletConfig config)throws ServletException{},107,56,10,51,52.57731958762887,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', '}']",24,10,6,14,77.77777777777779
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 251, 'n_valid': 31, 'n_correct': 26}",46.432223,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },void init()throws ServletException{((_)).Boolean(getServletConfig.getInitParameter());},344,87,10,257,76.94610778443113,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', '(', '(', '_', ')', ')', '.', 'Boolean', '(', 'getServletConfig', '.', 'getInitParameter', '(', ')', ')', ';', '}']",71,23,6,48,73.84615384615385
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 349, 'n_valid': 39, 'n_correct': 29}",62.997585,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","void setUp()throws Exception{if(SUPPORTED){System("""","""");}super.setUp();Tomcat();(tomcat);configureClientSsl();}",320,112,11,208,67.31391585760518,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'SUPPORTED', ')', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', '(', ')', ';', '(', 'tomcat', ')', ';', 'configureClientSsl', '(', ')', ';', '}']",61,39,6,22,40.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 134, 'n_valid': 24, 'n_correct': 16}",37.33672,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){result=xresult+y;},92,33,14,59,75.64102564102564,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'xresult', '+', 'y', ';', '}']",25,12,6,13,68.42105263157895
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 350, 'n_valid': 43, 'n_correct': 39}",69.263017,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.801198,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","void execute(){super.execute();((""""));}",122,39,13,83,76.14678899082568,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.869525,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","void execute(){super.execute();((""""));}",126,39,13,87,76.99115044247787,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 135, 'n_valid': 19, 'n_correct': 15}",30.08875,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override int hashCode(){result=result();},168,42,14,126,81.81818181818183,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'result', '(', ')', ';', '}']",45,14,6,31,79.48717948717949
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 166, 'n_valid': 19, 'n_correct': 18}",32.662211,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },CBuffer get(CharSequence key){return(entry)?null:value;},114,56,9,58,55.23809523809524,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'return', '(', 'entry', ')', '?', 'null', ':', 'value', ';', '}']",30,17,6,13,54.16666666666666
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 415, 'n_valid': 40, 'n_correct': 40}",65.041314,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","void main(String args){try{langTools("""",langTools);(null);}catch(Exception e){(Level);}}",295,88,10,207,72.63157894736842,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', 'langTools', '(', '""""', ',', 'langTools', ')', ';', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'Level', ')', ';', '}', '}']",78,33,6,45,62.5
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 136, 'n_valid': 12, 'n_correct': 12}",20.253713,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",void main(String[]args)throws Exception{run();},124,47,10,77,67.54385964912281,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'run', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.86948,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","void execute(){super.execute();((""""));}",126,39,13,87,76.99115044247787,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",64.463866,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },int hashCode(){((matches)hashCode());((null)?0:hashCode());},236,60,14,176,79.27927927927928,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'matches', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 21, 'n_correct': 20}",35.121981,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@Override int hashCode(){(completed?1:0);},213,42,14,171,85.92964824120602,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', '(', 'completed', '?', '1', ':', '0', ')', ';', '}']",59,16,6,43,81.13207547169812
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_9.txt,0.9987,0.0017,"{'n_total': 359, 'n_valid': 34, 'n_correct': 34}",52.945917,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(Object o){if(o){}if(getClass()){}that=(Key)(id);},268,64,12,204,79.6875,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'that', '=', '(', 'Key', ')', '(', 'id', ')', ';', '}']",85,31,6,54,68.35443037974683
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 208, 'n_valid': 25, 'n_correct': 20}",39.478741,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },boolean equals(){if(obj){equals(((NamingEntry)obj).name);}{}},152,61,12,91,65.0,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', '{', '}', '}']",40,26,6,14,41.17647058823529
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 284, 'n_valid': 24, 'n_correct': 20}",39.106173,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },void onCreate(Bundle savedInstanceState){super.onCreate(VideoCursorMapper());(getString());if(savedInstanceState==null){prepareEntranceTransition();}},319,150,14,169,55.40983606557377,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'VideoCursorMapper', '(', ')', ')', ';', '(', 'getString', '(', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', '}']",61,35,6,26,47.27272727272727
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 198, 'n_valid': 24, 'n_correct': 21}",37.448399,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },void onCreate(){onCreate();if(mNotifManager){(Context);}},171,57,14,114,72.61146496815286,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', ')', '{', '(', 'Context', ')', ';', '}', '}']",35,20,6,15,51.72413793103448
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 131, 'n_valid': 13, 'n_correct': 10}",20.801535,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },void onCreate(Bundle savedInstanceState){super.onCreate();setContentView();},140,76,14,64,50.79365079365079,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 201, 'n_valid': 20, 'n_correct': 20}",32.637396,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },String toString(){for(Node n:children){(toString());}toString();},165,65,14,100,66.22516556291392,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', '(', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",44,25,6,19,50.0
code2seq,METHOD_NAME,dd_token,freq,dd_token_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 229, 'n_valid': 32, 'n_correct': 27}",49.510983,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,deleteContainerIfEmpty_1.txt,0.4758,1.6436,"{'n_total': 151, 'n_valid': 15, 'n_correct': 11}",24.098379,private void deleteContainerIfEmpty(String container) { if (deleteEmptyContainers) { getBlobStore().deleteContainerIfEmpty(container); } },void deleteContainerIfEmpty(String container){if(deleteEmptyContainers){getBlobStore.deleteContainerIfEmpty();}},138,112,28,26,23.63636363636364,"['private', 'void', 'deleteContainerIfEmpty', '(', 'String', 'container', ')', '{', 'if', '(', 'deleteEmptyContainers', ')', '{', 'getBlobStore', '(', ')', '.', 'deleteContainerIfEmpty', '(', 'container', ')', ';', '}', '}']","['void', 'deleteContainerIfEmpty', '(', 'String', 'container', ')', '{', 'if', '(', 'deleteEmptyContainers', ')', '{', 'getBlobStore', '.', 'deleteContainerIfEmpty', '(', ')', ';', '}', '}']",24,20,6,4,22.22222222222222
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,deleteObsoleteFiles_1.txt,0.1754,3.9735,"{'n_total': 309, 'n_valid': 58, 'n_correct': 32}",84.350375,"void deleteObsoleteFiles() throws IOException { final long rrdDiskUsage = CounterStorage.deleteObsoleteCounterFiles(getApplication()); final long serGzDiskUsage = JRobin.deleteObsoleteJRobinFiles(getApplication()); diskUsage = rrdDiskUsage + serGzDiskUsage; LOG.debug(""Obsolete files deleted. JavaMelody disk usage: "" + diskUsage / 1024 + "" KB""); }","void deleteObsoleteFiles(){long rrdDiskUsage=CounterStorage.deleteObsoleteCounterFiles(getApplication);(""""+"""");}",348,112,25,236,73.06501547987617,"['void', 'deleteObsoleteFiles', '(', ')', 'throws', 'IOException', '{', 'final', 'long', 'rrdDiskUsage', '=', 'CounterStorage', '.', 'deleteObsoleteCounterFiles', '(', 'getApplication', '(', ')', ')', ';', 'final', 'long', 'serGzDiskUsage', '=', 'JRobin', '.', 'deleteObsoleteJRobinFiles', '(', 'getApplication', '(', ')', ')', ';', 'diskUsage', '=', 'rrdDiskUsage', '+', 'serGzDiskUsage', ';', 'LOG', '.', 'debug', '(', '""Obsolete files deleted. JavaMelody disk usage: ""', '+', 'diskUsage', '/', '1024', '+', '"" KB""', ')', ';', '}']","['void', 'deleteObsoleteFiles', '(', ')', '{', 'long', 'rrdDiskUsage', '=', 'CounterStorage', '.', 'deleteObsoleteCounterFiles', '(', 'getApplication', ')', ';', '(', '""""', '+', '""""', ')', ';', '}']",53,22,6,31,65.95744680851064
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getOnAddedCnt_1.txt,0.4794,1.8054,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",13.902066,public int getOnAddedCnt() { return onAddedCnt; },int getOnAddedCnt(){return onAddedCnt;},49,39,19,10,33.33333333333333,"['public', 'int', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}']","['int', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}']",10,9,6,1,25.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,newInitializerBuilder_1.txt,0.348,4.8937,"{'n_total': 96, 'n_valid': 12, 'n_correct': 7}",21.188325,public static InitializerBuilder newInitializerBuilder(Context context) { return new InitializerBuilder(context); },InitializerBuilder newInitializerBuilder(Context context){new InitializerBuilder(context);},115,91,27,24,27.27272727272727,"['public', 'static', 'InitializerBuilder', 'newInitializerBuilder', '(', 'Context', 'context', ')', '{', 'return', 'new', 'InitializerBuilder', '(', 'context', ')', ';', '}']","['InitializerBuilder', 'newInitializerBuilder', '(', 'Context', 'context', ')', '{', 'new', 'InitializerBuilder', '(', 'context', ')', ';', '}']",17,14,6,3,27.27272727272727
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setIgnoreKey_1.txt,0.4474,1.9016,"{'n_total': 194, 'n_valid': 29, 'n_correct': 14}",46.358407,"public Builder setIgnoreKey(boolean ignoreKey, Set<String> ignoreKeyTopics) { this.ignoreKey = ignoreKey; this.ignoreKeyTopics = ignoreKeyTopics; return this; }","Builder setIgnoreKey(boolean ignoreKey,Set ignoreKeyTopics){this.ignoreKey;this.ignoreKeyTopics=ignoreKeyTopics;}",160,113,18,47,33.098591549295776,"['public', 'Builder', 'setIgnoreKey', '(', 'boolean', 'ignoreKey', ',', 'Set', '<', 'String', '>', 'ignoreKeyTopics', ')', '{', 'this', '.', 'ignoreKey', '=', 'ignoreKey', ';', 'this', '.', 'ignoreKeyTopics', '=', 'ignoreKeyTopics', ';', 'return', 'this', ';', '}']","['Builder', 'setIgnoreKey', '(', 'boolean', 'ignoreKey', ',', 'Set', 'ignoreKeyTopics', ')', '{', 'this', '.', 'ignoreKey', ';', 'this', '.', 'ignoreKeyTopics', '=', 'ignoreKeyTopics', ';', '}']",30,21,6,9,37.5
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getComputedStyles_1.txt,0.4892,1.164,"{'n_total': 158, 'n_valid': 17, 'n_correct': 12}",26.909815,"@Override public void getComputedStyles(E element, ComputedStyleAccumulator accumulator) { mSuper.getComputedStyles(element, accumulator); onGetComputedStyles(element, accumulator); }",void getComputedStyles(E accumulator){mSuper.getComputedStyles();onGetComputedStyles();},183,88,23,95,59.375,"['@', 'Override', 'public', 'void', 'getComputedStyles', '(', 'E', 'element', ',', 'ComputedStyleAccumulator', 'accumulator', ')', '{', 'mSuper', '.', 'getComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', 'onGetComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', '}']","['void', 'getComputedStyles', '(', 'E', 'accumulator', ')', '{', 'mSuper', '.', 'getComputedStyles', '(', ')', ';', 'onGetComputedStyles', '(', ')', ';', '}']",30,18,6,12,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,odexOnly_1.txt,0.4431,0.9001,"{'n_total': 108, 'n_valid': 16, 'n_correct': 11}",25.382456,public final boolean odexOnly() { return (flags & ODEX_ONLY) != 0; },boolean odexOnly(){return(flags&ODEX_ONLY)!=0;},68,47,14,21,38.88888888888889,"['public', 'final', 'boolean', 'odexOnly', '(', ')', '{', 'return', '(', 'flags', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}']","['boolean', 'odexOnly', '(', ')', '{', 'return', '(', 'flags', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}']",17,15,6,2,18.181818181818183
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addVerb_1.txt,0.3558,1.4713,"{'n_total': 109, 'n_valid': 12, 'n_correct': 7}",17.968043,"public void addVerb(Verb v) { verbs.put(v.getHashKey(), v); }","void addVerb(Verb v){verbs.put(v.getHashKey(),v);}",61,50,13,11,22.916666666666664,"['public', 'void', 'addVerb', '(', 'Verb', 'v', ')', '{', 'verbs', '.', 'put', '(', 'v', '.', 'getHashKey', '(', ')', ',', 'v', ')', ';', '}']","['void', 'addVerb', '(', 'Verb', 'v', ')', '{', 'verbs', '.', 'put', '(', 'v', '.', 'getHashKey', '(', ')', ',', 'v', ')', ';', '}']",22,21,6,1,6.25
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,convertJoinType_1.txt,0.4424,1.5976,"{'n_total': 395, 'n_valid': 59, 'n_correct': 32}",90.691183,"public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.core.JoinType.JOIN; case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + "" unknown""); } }","querydsl convertJoinType(JoinType joinType){switch(joinType){case INNER:LEFTJOIN;return com.core;IllegalStateException(toString()+"""");}}",340,136,21,204,63.94984326018809,"['public', 'static', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', 'convertJoinType', '(', 'JoinType', 'joinType', ')', '{', 'switch', '(', 'joinType', ')', '{', 'case', 'INNER', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'JOIN', ';', 'case', 'LEFT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'LEFTJOIN', ';', 'case', 'RIGHT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'RIGHTJOIN', ';', 'default', ':', 'throw', 'new', 'IllegalStateException', '(', 'joinType', '.', 'toString', '(', ')', '+', '"" unknown""', ')', ';', '}', '}']","['querydsl', 'convertJoinType', '(', 'JoinType', 'joinType', ')', '{', 'switch', '(', 'joinType', ')', '{', 'case', 'INNER', ':', 'LEFTJOIN', ';', 'return', 'com', '.', 'core', ';', 'IllegalStateException', '(', 'toString', '(', ')', '+', '""""', ')', ';', '}', '}']",79,33,6,46,63.013698630136986
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getRepl_1.txt,0.4767,1.8164,"{'n_total': 217, 'n_valid': 28, 'n_correct': 20}",46.711656,@Nonnull private synchronized RuntimeRepl getRepl(RuntimeReplFactory replFactory) { if (mRepl == null) { mRepl = replFactory.newInstance(); } return mRepl; },RuntimeRepl getRepl(RuntimeReplFactory replFactory){if(null){mReplreplFactory();}},157,82,13,75,52.083333333333336,"['@', 'Nonnull', 'private', 'synchronized', 'RuntimeRepl', 'getRepl', '(', 'RuntimeReplFactory', 'replFactory', ')', '{', 'if', '(', 'mRepl', '==', 'null', ')', '{', 'mRepl', '=', 'replFactory', '.', 'newInstance', '(', ')', ';', '}', 'return', 'mRepl', ';', '}']","['RuntimeRepl', 'getRepl', '(', 'RuntimeReplFactory', 'replFactory', ')', '{', 'if', '(', 'null', ')', '{', 'mReplreplFactory', '(', ')', ';', '}', '}']",31,18,6,13,52.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,onBiomeDecorate_1.txt,0.3974,3.3578,"{'n_total': 296, 'n_valid': 40, 'n_correct': 19}",60.755902,"@SubscribeEvent public void onBiomeDecorate(DecorateBiomeEvent.Decorate event) { if (BOPBiomes.excludedDecoratedWorldTypes.contains(event.getWorld().getWorldType())) return; if (event.getType() != Decorate.EventType.CUSTOM) { runGeneratorStage(event.getWorld(), event.getRand(), event.getPos(), GeneratorStage.mapDecorateType(event.getType())); } }","@SubscribeEvent void onBiomeDecorate(DecorateBiomeEvent.Decorate event){if(BOPBiomes.excludedDecoratedWorldTypes!=EventType){runGeneratorStage(event.getWorld(),mapDecorateType(getType()));}}",348,190,21,158,48.318042813455655,"['@', 'SubscribeEvent', 'public', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvent', '.', 'Decorate', 'event', ')', '{', 'if', '(', 'BOPBiomes', '.', 'excludedDecoratedWorldTypes', '.', 'contains', '(', 'event', '.', 'getWorld', '(', ')', '.', 'getWorldType', '(', ')', ')', ')', 'return', ';', 'if', '(', 'event', '.', 'getType', '(', ')', '!=', 'Decorate', '.', 'EventType', '.', 'CUSTOM', ')', '{', 'runGeneratorStage', '(', 'event', '.', 'getWorld', '(', ')', ',', 'event', '.', 'getRand', '(', ')', ',', 'event', '.', 'getPos', '(', ')', ',', 'GeneratorStage', '.', 'mapDecorateType', '(', 'event', '.', 'getType', '(', ')', ')', ')', ';', '}', '}']","['@', 'SubscribeEvent', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvent', '.', 'Decorate', 'event', ')', '{', 'if', '(', 'BOPBiomes', '.', 'excludedDecoratedWorldTypes', '!=', 'EventType', ')', '{', 'runGeneratorStage', '(', 'event', '.', 'getWorld', '(', ')', ',', 'mapDecorateType', '(', 'getType', '(', ')', ')', ')', ';', '}', '}']",82,38,6,44,57.89473684210527
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,withRecyclerView_1.txt,0.2744,2.4624,"{'n_total': 98, 'n_valid': 15, 'n_correct': 8}",24.291845,public static RecyclerViewMatcher withRecyclerView(final int recyclerViewId) { return new RecyclerViewMatcher(recyclerViewId); },RecyclerViewMatcher withRecyclerView(int recyclerViewId){return RecyclerViewMatcher(recyclerViewId);},128,101,22,27,25.471698113207548,"['public', 'static', 'RecyclerViewMatcher', 'withRecyclerView', '(', 'final', 'int', 'recyclerViewId', ')', '{', 'return', 'new', 'RecyclerViewMatcher', '(', 'recyclerViewId', ')', ';', '}']","['RecyclerViewMatcher', 'withRecyclerView', '(', 'int', 'recyclerViewId', ')', '{', 'return', 'RecyclerViewMatcher', '(', 'recyclerViewId', ')', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isAwait_1.txt,0.4773,0.7911,"{'n_total': 53, 'n_valid': 8, 'n_correct': 6}",12.436188,public boolean isAwait() { return await; },boolean isAwait(){await;},42,25,13,17,58.620689655172406,"['public', 'boolean', 'isAwait', '(', ')', '{', 'return', 'await', ';', '}']","['boolean', 'isAwait', '(', ')', '{', 'await', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addResourceRef_1.txt,0.4411,1.3444,"{'n_total': 314, 'n_valid': 28, 'n_correct': 22}",43.214683,"public void addResourceRef(ContextResource resourceRef) { if (resourceRefs.containsKey(resourceRef.getName())) { throw new IllegalArgumentException(sm.getString(""webXml.duplicateResourceRef"", resourceRef.getName())); } resourceRefs.put(resourceRef.getName(), resourceRef); }","void addResourceRef(ContextResource resourceRef){if((getName())){(("""".getName()));}resourceRefs.put();}",274,103,20,171,67.32283464566929,"['public', 'void', 'addResourceRef', '(', 'ContextResource', 'resourceRef', ')', '{', 'if', '(', 'resourceRefs', '.', 'containsKey', '(', 'resourceRef', '.', 'getName', '(', ')', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'sm', '.', 'getString', '(', '""webXml.duplicateResourceRef""', ',', 'resourceRef', '.', 'getName', '(', ')', ')', ')', ';', '}', 'resourceRefs', '.', 'put', '(', 'resourceRef', '.', 'getName', '(', ')', ',', 'resourceRef', ')', ';', '}']","['void', 'addResourceRef', '(', 'ContextResource', 'resourceRef', ')', '{', 'if', '(', '(', 'getName', '(', ')', ')', ')', '{', '(', '(', '""""', '.', 'getName', '(', ')', ')', ')', ';', '}', 'resourceRefs', '.', 'put', '(', ')', ';', '}']",55,34,6,21,42.85714285714285
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,trimLine_1.txt,0.2354,3.0523,"{'n_total': 357, 'n_valid': 53, 'n_correct': 29}",79.369211,"protected String[] trimLine(String[] line) { String trim = """"; for (int i = 0; i < line.length; i++) { trim = line[i].trim(); line[i] = trim; } return line; }",String[]trimLine(String[]line){String trim;for(;;){line[i]=trim;}return line;},158,78,14,80,55.55555555555556,"['protected', 'String', '[', ']', 'trimLine', '(', 'String', '[', ']', 'line', ')', '{', 'String', 'trim', '=', '""""', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'line', '.', 'length', ';', 'i', '++', ')', '{', 'trim', '=', 'line', '[', 'i', ']', '.', 'trim', '(', ')', ';', 'line', '[', 'i', ']', '=', 'trim', ';', '}', 'return', 'line', ';', '}']","['String', '[', ']', 'trimLine', '(', 'String', '[', ']', 'line', ')', '{', 'String', 'trim', ';', 'for', '(', ';', ';', ')', '{', 'line', '[', 'i', ']', '=', 'trim', ';', '}', 'return', 'line', ';', '}']",57,32,6,25,49.01960784313725
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setWebapp_1.txt,0.4438,0.9273,"{'n_total': 121, 'n_valid': 17, 'n_correct': 11}",28.807778,public LindenConfig setWebapp(String webapp) { this.webapp = webapp; return this; },LindenConfig setWebapp(String webapp){webapp=this;},83,51,15,32,47.05882352941176,"['public', 'LindenConfig', 'setWebapp', '(', 'String', 'webapp', ')', '{', 'this', '.', 'webapp', '=', 'webapp', ';', 'return', 'this', ';', '}']","['LindenConfig', 'setWebapp', '(', 'String', 'webapp', ')', '{', 'webapp', '=', 'this', ';', '}']",18,12,6,6,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addResultMap_1.txt,0.271,2.974,"{'n_total': 116, 'n_valid': 14, 'n_correct': 10}",22.193216,"public void addResultMap(ResultMap rm) { resultMaps.put(rm.getId(), rm); checkLocallyForDiscriminatedNestedResultMaps(rm); checkGloballyForDiscriminatedNestedResultMaps(rm); }",void addResultMap(ResultMap rm){resultMaps.put();},175,50,18,125,79.61783439490446,"['public', 'void', 'addResultMap', '(', 'ResultMap', 'rm', ')', '{', 'resultMaps', '.', 'put', '(', 'rm', '.', 'getId', '(', ')', ',', 'rm', ')', ';', 'checkLocallyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', 'checkGloballyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', '}']","['void', 'addResultMap', '(', 'ResultMap', 'rm', ')', '{', 'resultMaps', '.', 'put', '(', ')', ';', '}']",32,14,6,18,69.23076923076923
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getSendEmail_1.txt,0.4551,0.8835,"{'n_total': 132, 'n_valid': 18, 'n_correct': 12}",28.937585,public boolean getSendEmail() { if (!getPublishedSite()) sendEmail = false; return sendEmail; },boolean getSendEmail(){if(getPublishedSite())sendEmailfalse;return sendEmail;},95,78,18,17,22.07792207792208,"['public', 'boolean', 'getSendEmail', '(', ')', '{', 'if', '(', '!', 'getPublishedSite', '(', ')', ')', 'sendEmail', '=', 'false', ';', 'return', 'sendEmail', ';', '}']","['boolean', 'getSendEmail', '(', ')', '{', 'if', '(', 'getPublishedSite', '(', ')', ')', 'sendEmailfalse', ';', 'return', 'sendEmail', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getEnumInt_1.txt,0.4064,2.3936,"{'n_total': 188, 'n_valid': 20, 'n_correct': 10}",30.471795,"public <E extends Enum<E>> E getEnumInt(int index, Class<E> enumClass) { return toEnum(enumClass, getInt(index)); }","<E extends Enum>E getEnumInt(int index,Class enumClass){return toEnum(enumClass,getInt(index));}",115,96,16,19,19.19191919191919,"['public', '<', 'E', 'extends', 'Enum', '<', 'E', '>', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 'Class', '<', 'E', '>', 'enumClass', ')', '{', 'return', 'toEnum', '(', 'enumClass', ',', 'getInt', '(', 'index', ')', ')', ';', '}']","['<', 'E', 'extends', 'Enum', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 'Class', 'enumClass', ')', '{', 'return', 'toEnum', '(', 'enumClass', ',', 'getInt', '(', 'index', ')', ')', ';', '}']",34,27,6,7,25.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,poolClosed_1.txt,0.4595,0.8022,"{'n_total': 96, 'n_valid': 10, 'n_correct': 7}",15.714902,@Override public void poolClosed(ConnectionPool pool) { cacheSizeMap.remove(pool); super.poolClosed(pool); },void poolClosed(ConnectionPool pool){super.poolClosed(pool);},108,61,16,47,51.08695652173913,"['@', 'Override', 'public', 'void', 'poolClosed', '(', 'ConnectionPool', 'pool', ')', '{', 'cacheSizeMap', '.', 'remove', '(', 'pool', ')', ';', 'super', '.', 'poolClosed', '(', 'pool', ')', ';', '}']","['void', 'poolClosed', '(', 'ConnectionPool', 'pool', ')', '{', 'super', '.', 'poolClosed', '(', 'pool', ')', ';', '}']",25,15,6,10,52.63157894736842
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,checkScope_1.txt,0.4849,2.1041,"{'n_total': 608, 'n_valid': 76, 'n_correct': 38}",112.992719,"public static void checkScope(String scope, Node n, ErrorDispatcher err) throws JasperException { if (scope != null && !scope.equals(""page"") && !scope.equals(""request"") && !scope.equals(""session"") && !scope.equals(""application"")) { err.jspError(n, ""jsp.error.invalid.scope"", scope); } }","void checkScope(String scope,Node n,ErrorDispatcher err)throws JasperException{if(scope("""")&("""")&scope.equals("""")){err(n,"""",scope);}}",286,133,16,153,56.66666666666666,"['public', 'static', 'void', 'checkScope', '(', 'String', 'scope', ',', 'Node', 'n', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'if', '(', 'scope', '!=', 'null', '&&', '!', 'scope', '.', 'equals', '(', '""page""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""request""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""session""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""application""', ')', ')', '{', 'err', '.', 'jspError', '(', 'n', ',', '""jsp.error.invalid.scope""', ',', 'scope', ')', ';', '}', '}']","['void', 'checkScope', '(', 'String', 'scope', ',', 'Node', 'n', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'if', '(', 'scope', '(', '""""', ')', '&', '(', '""""', ')', '&', 'scope', '.', 'equals', '(', '""""', ')', ')', '{', 'err', '(', 'n', ',', '""""', ',', 'scope', ')', ';', '}', '}']",69,45,6,24,38.095238095238095
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,unlockDrawer_1.txt,0.191,2.6604,"{'n_total': 191, 'n_valid': 33, 'n_correct': 15}",49.341631,private void unlockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED); } },void unlockDrawer(){if(mDrawer=null){(DrawerLayout.LOCK_UNLOCKED);}},116,68,18,48,48.97959183673469,"['private', 'void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_UNLOCKED', ')', ';', '}', '}']","['void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '=', 'null', ')', '{', '(', 'DrawerLayout', '.', 'LOCK_UNLOCKED', ')', ';', '}', '}']",24,20,6,4,22.22222222222222
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addStatusHandlers_1.txt,0.406,1.6007,"{'n_total': 404, 'n_valid': 39, 'n_correct': 37}",62.600219,"public void addStatusHandlers(Collection<StatusChecker> statusHandlers) { for (StatusChecker statusChecker : statusHandlers) { String name = statusChecker.getClass().getSimpleName(); if (name.endsWith(StatusChecker.class.getSimpleName())) { name = name.substring(0, name.length() - StatusChecker.class.getSimpleName().length()); } this.statusHandlers.put(name, statusChecker); } }","void addStatusHandlers(Collection<StatusChecker>statusHandlers){for(StatusChecker statusChecker:statusHandlers){if((StatusChecker)){name(0,length());}put();}}",380,158,23,222,62.18487394957983,"['public', 'void', 'addStatusHandlers', '(', 'Collection', '<', 'StatusChecker', '>', 'statusHandlers', ')', '{', 'for', '(', 'StatusChecker', 'statusChecker', ':', 'statusHandlers', ')', '{', 'String', 'name', '=', 'statusChecker', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ';', 'if', '(', 'name', '.', 'endsWith', '(', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', ')', ')', '{', 'name', '=', 'name', '.', 'substring', '(', '0', ',', 'name', '.', 'length', '(', ')', '-', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'this', '.', 'statusHandlers', '.', 'put', '(', 'name', ',', 'statusChecker', ')', ';', '}', '}']","['void', 'addStatusHandlers', '(', 'Collection', '<', 'StatusChecker', '>', 'statusHandlers', ')', '{', 'for', '(', 'StatusChecker', 'statusChecker', ':', 'statusHandlers', ')', '{', 'if', '(', '(', 'StatusChecker', ')', ')', '{', 'name', '(', '0', ',', 'length', '(', ')', ')', ';', '}', 'put', '(', ')', ';', '}', '}']",89,41,6,48,57.831325301204814
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,canInitializeReference_1.txt,0.4107,1.1457,"{'n_total': 131, 'n_valid': 27, 'n_correct': 10}",40.679474,public final boolean canInitializeReference() { return (flags & CAN_INITIALIZE_REFERENCE) != 0; },boolean canInitializeReference(){return(flags&CAN_INITIALIZE_REFERENCE)!=0;},97,76,28,21,30.434782608695656,"['public', 'final', 'boolean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'flags', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}']","['boolean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'flags', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}']",17,15,6,2,18.181818181818183
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,checkVerificationError_1.txt,0.3413,1.8975,"{'n_total': 205, 'n_valid': 30, 'n_correct': 21}",44.863108,"public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(""Invalid verification error value: %d. Must be between 1 and 9, inclusive"", verificationError)); } return verificationError; }",int checkVerificationError(int verificationError){if(isValidVerificationError(verificationError)){throw(String);}},311,114,28,197,69.6113074204947,"['public', 'static', 'int', 'checkVerificationError', '(', 'int', 'verificationError', ')', '{', 'if', '(', '!', 'VerificationError', '.', 'isValidVerificationError', '(', 'verificationError', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""Invalid verification error value: %d. Must be between 1 and 9, inclusive""', ',', 'verificationError', ')', ')', ';', '}', 'return', 'verificationError', ';', '}']","['int', 'checkVerificationError', '(', 'int', 'verificationError', ')', '{', 'if', '(', 'isValidVerificationError', '(', 'verificationError', ')', ')', '{', 'throw', '(', 'String', ')', ';', '}', '}']",39,22,6,17,51.51515151515152
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,withHostConfig_1.txt,0.4648,1.0495,"{'n_total': 108, 'n_valid': 18, 'n_correct': 10}",28.759114,public ContainerBuilder withHostConfig(HostConfig hostConfig) { this.hostConfig = hostConfig; return this; },ContainerBuilder withHostConfig(){this.hostConfig=hostConfig;return this;},108,74,20,34,38.63636363636363,"['public', 'ContainerBuilder', 'withHostConfig', '(', 'HostConfig', 'hostConfig', ')', '{', 'this', '.', 'hostConfig', '=', 'hostConfig', ';', 'return', 'this', ';', '}']","['ContainerBuilder', 'withHostConfig', '(', ')', '{', 'this', '.', 'hostConfig', '=', 'hostConfig', ';', 'return', 'this', ';', '}']",18,15,6,3,25.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setMaxInFlightRequests_1.txt,0.4991,13.3322,"{'n_total': 107, 'n_valid': 15, 'n_correct': 9}",24.671662,public Builder setMaxInFlightRequests(int maxInFlightRequests) { this.maxInFlightRequests = maxInFlightRequests; return this; },Builder setMaxInFlightRequests(int maxInFlightRequests){this.maxInFlightRequests=this;},127,87,28,40,40.4040404040404,"['public', 'Builder', 'setMaxInFlightRequests', '(', 'int', 'maxInFlightRequests', ')', '{', 'this', '.', 'maxInFlightRequests', '=', 'maxInFlightRequests', ';', 'return', 'this', ';', '}']","['Builder', 'setMaxInFlightRequests', '(', 'int', 'maxInFlightRequests', ')', '{', 'this', '.', 'maxInFlightRequests', '=', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createSocketAddress_1.txt,0.4708,2.5216,"{'n_total': 112, 'n_valid': 17, 'n_correct': 9}",28.50342,@Override protected SocketAddress createSocketAddress(int port) { return new VmPipeAddress(port); },@Override SocketAddress createSocketAddress(int port){newVmPipeAddress();},99,74,25,25,33.78378378378378,"['@', 'Override', 'protected', 'SocketAddress', 'createSocketAddress', '(', 'int', 'port', ')', '{', 'return', 'new', 'VmPipeAddress', '(', 'port', ')', ';', '}']","['@', 'Override', 'SocketAddress', 'createSocketAddress', '(', 'int', 'port', ')', '{', 'newVmPipeAddress', '(', ')', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addSecurityProvider_1.txt,0.2816,1.8009,"{'n_total': 66, 'n_valid': 6, 'n_correct': 5}",9.636151,@Override public void addSecurityProvider(SecurityProvider securityProvider) { numSecurityProviders++; },void addSecurityProvider(SecurityProvider securityProvider){numSecurityProviders++;},104,84,25,20,25.31645569620253,"['@', 'Override', 'public', 'void', 'addSecurityProvider', '(', 'SecurityProvider', 'securityProvider', ')', '{', 'numSecurityProviders', '++', ';', '}']","['void', 'addSecurityProvider', '(', 'SecurityProvider', 'securityProvider', ')', '{', 'numSecurityProviders', '++', ';', '}']",14,11,6,3,37.5
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getActiveConsumerCount_1.txt,0.3367,2.3035,"{'n_total': 257, 'n_valid': 45, 'n_correct': 19}",61.627994,"protected org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(""activeConsumerCount"").ofType(AtomicInteger.class).in(jobConsumerExecutor); }","org<AtomicInteger>getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor){return Reflection.field(""activeConsumerCount"").ofType().in();}",223,144,28,79,40.51282051282051,"['protected', 'org', '.', 'fest', '.', 'reflect', '.', 'field', '.', 'Invoker', '<', 'AtomicInteger', '>', 'getActiveConsumerCount', '(', 'JobConsumerExecutor', 'jobConsumerExecutor', ')', '{', 'return', 'Reflection', '.', 'field', '(', '""activeConsumerCount""', ')', '.', 'ofType', '(', 'AtomicInteger', '.', 'class', ')', '.', 'in', '(', 'jobConsumerExecutor', ')', ';', '}']","['org', '<', 'AtomicInteger', '>', 'getActiveConsumerCount', '(', 'JobConsumerExecutor', 'jobConsumerExecutor', ')', '{', 'return', 'Reflection', '.', 'field', '(', '""activeConsumerCount""', ')', '.', 'ofType', '(', ')', '.', 'in', '(', ')', ';', '}']",40,27,6,13,38.23529411764706
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getRegisteredFunctions_1.txt,0.4872,1.8226,"{'n_total': 324, 'n_valid': 26, 'n_correct': 25}",41.239943,public List<String> getRegisteredFunctions(String prefix) { List<String> rv = new Vector<String>(); for (String function : m_registeredFunctions) { if (function.startsWith(prefix)) { rv.add(function); } } return rv; },List<String>getRegisteredFunctions(String prefix){new Vector<>();for(String function:registeredFunctions){if(function){}}},217,122,28,95,50.264550264550266,"['public', 'List', '<', 'String', '>', 'getRegisteredFunctions', '(', 'String', 'prefix', ')', '{', 'List', '<', 'String', '>', 'rv', '=', 'new', 'Vector', '<', 'String', '>', '(', ')', ';', 'for', '(', 'String', 'function', ':', 'm_registeredFunctions', ')', '{', 'if', '(', 'function', '.', 'startsWith', '(', 'prefix', ')', ')', '{', 'rv', '.', 'add', '(', 'function', ')', ';', '}', '}', 'return', 'rv', ';', '}']","['List', '<', 'String', '>', 'getRegisteredFunctions', '(', 'String', 'prefix', ')', '{', 'new', 'Vector', '<', '>', '(', ')', ';', 'for', '(', 'String', 'function', ':', 'registeredFunctions', ')', '{', 'if', '(', 'function', ')', '{', '}', '}', '}']",56,33,6,23,46.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setAttributesAsText_1.txt,0.397,4.2725,"{'n_total': 470, 'n_valid': 51, 'n_correct': 40}",81.95138,"@ChromeDevtoolsMethod public void setAttributesAsText(JsonRpcPeer peer, JSONObject params) { final SetAttributesAsTextRequest request = mObjectMapper.convertValue(params, SetAttributesAsTextRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { Object element = mDocument.getElementForNodeId(request.nodeId); if (element != null) { mDocument.setAttributesAsText(element, request.text); } } }); }","void setAttributesAsText(JsonRpcPeer peer,JSONObject params){convertValue(params,SetAttributesAsTextRequestclass);(new Runnable(){run(){element=mDocument(request);if(null){setAttributesAsText();}}});}",425,200,25,225,56.25,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'setAttributesAsText', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetAttributesAsTextRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetAttributesAsTextRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Object', 'element', '=', 'mDocument', '.', 'getElementForNodeId', '(', 'request', '.', 'nodeId', ')', ';', 'if', '(', 'element', '!=', 'null', ')', '{', 'mDocument', '.', 'setAttributesAsText', '(', 'element', ',', 'request', '.', 'text', ')', ';', '}', '}', '}', ')', ';', '}']","['void', 'setAttributesAsText', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'convertValue', '(', 'params', ',', 'SetAttributesAsTextRequestclass', ')', ';', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'element', '=', 'mDocument', '(', 'request', ')', ';', 'if', '(', 'null', ')', '{', 'setAttributesAsText', '(', ')', ';', '}', '}', '}', ')', ';', '}']",81,49,6,32,42.66666666666667
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,appendLink_1.txt,0.4143,1.1743,"{'n_total': 124, 'n_valid': 11, 'n_correct': 9}",17.720671,"public void appendLink(StringBuffer buffer, String name, String view) { buffer.append(""link:"" + view); }","void appendLink(StringBuffer buffer){buffer.append(""link""+view);}",104,65,16,39,44.31818181818182,"['public', 'void', 'appendLink', '(', 'StringBuffer', 'buffer', ',', 'String', 'name', ',', 'String', 'view', ')', '{', 'buffer', '.', 'append', '(', '""link:""', '+', 'view', ')', ';', '}']","['void', 'appendLink', '(', 'StringBuffer', 'buffer', ')', '{', 'buffer', '.', 'append', '(', '""link""', '+', 'view', ')', ';', '}']",24,17,6,7,38.88888888888889
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setIgnoreSchema_1.txt,0.4317,1.2877,"{'n_total': 177, 'n_valid': 33, 'n_correct': 15}",50.815073,"public Builder setIgnoreSchema(boolean ignoreSchema, Set<String> ignoreSchemaTopics) { this.ignoreSchema = ignoreSchema; this.ignoreSchemaTopics = ignoreSchemaTopics; return this; }","Builder setIgnoreSchema(boolean ignoreSchema,Set ignoreSchemaTopics){ignoreSchema;ignoreSchemaTopics=ignoreSchemaTopics;}",181,121,21,60,37.5,"['public', 'Builder', 'setIgnoreSchema', '(', 'boolean', 'ignoreSchema', ',', 'Set', '<', 'String', '>', 'ignoreSchemaTopics', ')', '{', 'this', '.', 'ignoreSchema', '=', 'ignoreSchema', ';', 'this', '.', 'ignoreSchemaTopics', '=', 'ignoreSchemaTopics', ';', 'return', 'this', ';', '}']","['Builder', 'setIgnoreSchema', '(', 'boolean', 'ignoreSchema', ',', 'Set', 'ignoreSchemaTopics', ')', '{', 'ignoreSchema', ';', 'ignoreSchemaTopics', '=', 'ignoreSchemaTopics', ';', '}']",30,17,6,13,54.16666666666666
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,withLogPath_1.txt,0.4118,0.9614,"{'n_total': 118, 'n_valid': 19, 'n_correct': 10}",30.57214,public ContainerBuilder withLogPath(String logPath) { this.logPath = logPath; return this; },ContainerBuilder withLogPath(String logPath){this.logPathlogPath;return this;},92,78,17,14,18.666666666666668,"['public', 'ContainerBuilder', 'withLogPath', '(', 'String', 'logPath', ')', '{', 'this', '.', 'logPath', '=', 'logPath', ';', 'return', 'this', ';', '}']","['ContainerBuilder', 'withLogPath', '(', 'String', 'logPath', ')', '{', 'this', '.', 'logPathlogPath', ';', 'return', 'this', ';', '}']",18,15,6,3,25.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createUploadDir_1.txt,0.4403,2.1904,"{'n_total': 319, 'n_valid': 39, 'n_correct': 24}",58.366628,"public static void createUploadDir(Server server, String uploadDir) throws DockerJSONException { File uploadFolder = new File(uploadDir + ""/uploadDir_"" + server.getContainerID()); if (!uploadFolder.exists()) { uploadFolder.mkdir(); } }","void createUploadDir(String uploadDir){(uploadDir+"""".getContainerID());if(uploadFolder.exists){uploadFolder.mkdir();}}",235,118,21,117,54.67289719626168,"['public', 'static', 'void', 'createUploadDir', '(', 'Server', 'server', ',', 'String', 'uploadDir', ')', 'throws', 'DockerJSONException', '{', 'File', 'uploadFolder', '=', 'new', 'File', '(', 'uploadDir', '+', '""/uploadDir_""', '+', 'server', '.', 'getContainerID', '(', ')', ')', ';', 'if', '(', '!', 'uploadFolder', '.', 'exists', '(', ')', ')', '{', 'uploadFolder', '.', 'mkdir', '(', ')', ';', '}', '}']","['void', 'createUploadDir', '(', 'String', 'uploadDir', ')', '{', '(', 'uploadDir', '+', '""""', '.', 'getContainerID', '(', ')', ')', ';', 'if', '(', 'uploadFolder', '.', 'exists', ')', '{', 'uploadFolder', '.', 'mkdir', '(', ')', ';', '}', '}']",49,32,6,17,39.53488372093023
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,toConnectException_1.txt,0.2481,1.8404,"{'n_total': 227, 'n_valid': 22, 'n_correct': 17}",39.326539,private static ConnectException toConnectException(Throwable t) { if (t instanceof ConnectException) { return (ConnectException) t; } else { return new ConnectException(t); } },ConnectException toConnectException(Throwable t){if(t instanceof ConnectException){return(ConnectException)t;}{(t);}},176,117,24,59,38.81578947368421,"['private', 'static', 'ConnectException', 'toConnectException', '(', 'Throwable', 't', ')', '{', 'if', '(', 't', 'instanceof', 'ConnectException', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', 'else', '{', 'return', 'new', 'ConnectException', '(', 't', ')', ';', '}', '}']","['ConnectException', 'toConnectException', '(', 'Throwable', 't', ')', '{', 'if', '(', 't', 'instanceof', 'ConnectException', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', '{', '(', 't', ')', ';', '}', '}']",34,28,6,6,21.428571428571427
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addVerifier_1.txt,0.4103,4.2949,"{'n_total': 109, 'n_valid': 12, 'n_correct': 7}",18.026336,"public void addVerifier(PurchaseVerifier verifier) { verifiers.put(verifier.storeName(), verifier); }","void addVerifier(PurchaseVerifier verifier){verifiers.put(verifier.storeName(),verifier);}",101,90,17,11,13.095238095238097,"['public', 'void', 'addVerifier', '(', 'PurchaseVerifier', 'verifier', ')', '{', 'verifiers', '.', 'put', '(', 'verifier', '.', 'storeName', '(', ')', ',', 'verifier', ')', ';', '}']","['void', 'addVerifier', '(', 'PurchaseVerifier', 'verifier', ')', '{', 'verifiers', '.', 'put', '(', 'verifier', '.', 'storeName', '(', ')', ',', 'verifier', ')', ';', '}']",22,21,6,1,6.25
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setOpeningTime_1.txt,0.4529,0.8308,"{'n_total': 107, 'n_valid': 15, 'n_correct': 9}",24.758476,protected Period setOpeningTime(String openingTime) { this.openingTime = openingTime; return this; },Period setOpeningTime(String openingTime){this.openingTime=this;},100,65,20,35,43.75,"['protected', 'Period', 'setOpeningTime', '(', 'String', 'openingTime', ')', '{', 'this', '.', 'openingTime', '=', 'openingTime', ';', 'return', 'this', ';', '}']","['Period', 'setOpeningTime', '(', 'String', 'openingTime', ')', '{', 'this', '.', 'openingTime', '=', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,hasIncludeAction_1.txt,0.4815,0.795,"{'n_total': 53, 'n_valid': 8, 'n_correct': 6}",12.448608,public boolean hasIncludeAction() { return hasIncludeAction; },boolean hasIncludeAction(){hasIncludeAction;},62,45,22,17,42.5,"['public', 'boolean', 'hasIncludeAction', '(', ')', '{', 'return', 'hasIncludeAction', ';', '}']","['boolean', 'hasIncludeAction', '(', ')', '{', 'hasIncludeAction', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,withNetworkDisabled_1.txt,0.3359,1.337,"{'n_total': 104, 'n_valid': 17, 'n_correct': 9}",26.83888,public ConfigBuilder withNetworkDisabled(Boolean networkDisabled) { this.networkDisabled = networkDisabled; return this; },ConfigBuilder withNetworkDisabled(Boolean networkDisabled){this.networkDisabled=networkDisabled;return this;},122,109,25,13,13.402061855670103,"['public', 'ConfigBuilder', 'withNetworkDisabled', '(', 'Boolean', 'networkDisabled', ')', '{', 'this', '.', 'networkDisabled', '=', 'networkDisabled', ';', 'return', 'this', ';', '}']","['ConfigBuilder', 'withNetworkDisabled', '(', 'Boolean', 'networkDisabled', ')', '{', 'this', '.', 'networkDisabled', '=', 'networkDisabled', ';', 'return', 'this', ';', '}']",18,17,6,1,8.333333333333332
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getInstanceFieldsOffset_1.txt,0.4904,1.6183,"{'n_total': 269, 'n_valid': 43, 'n_correct': 25}",65.608419,"private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexReader(dexFile, staticFieldsOffset); DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; }","int getInstanceFieldsOffset(){if(instanceFieldsOffset){}reader=new DexBackedField.skipFields(reader,staticFieldCount);instanceFieldsOffset;}",292,140,29,152,57.79467680608364,"['private', 'int', 'getInstanceFieldsOffset', '(', ')', '{', 'if', '(', 'instanceFieldsOffset', '>', '0', ')', '{', 'return', 'instanceFieldsOffset', ';', '}', 'DexReader', 'reader', '=', 'new', 'DexReader', '(', 'dexFile', ',', 'staticFieldsOffset', ')', ';', 'DexBackedField', '.', 'skipFields', '(', 'reader', ',', 'staticFieldCount', ')', ';', 'instanceFieldsOffset', '=', 'reader', '.', 'getOffset', '(', ')', ';', 'return', 'instanceFieldsOffset', ';', '}']","['int', 'getInstanceFieldsOffset', '(', ')', '{', 'if', '(', 'instanceFieldsOffset', ')', '{', '}', 'reader', '=', 'new', 'DexBackedField', '.', 'skipFields', '(', 'reader', ',', 'staticFieldCount', ')', ';', 'instanceFieldsOffset', ';', '}']",49,26,6,23,53.48837209302325
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getFinalScore_1.txt,0.4739,1.601,"{'n_total': 152, 'n_valid': 13, 'n_correct': 9}",21.461231,"public String getFinalScore() { return Validator.check(finalScore, ""0"").replace(',', '.'); }","String getFinalScore(){Validator.check(finalScore,"""").replace(',');}",92,68,19,24,32.87671232876712,"['public', 'String', 'getFinalScore', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'finalScore', ',', '""0""', ')', '.', 'replace', '(', ""','"", ',', ""'.'"", ')', ';', '}']","['String', 'getFinalScore', '(', ')', '{', 'Validator', '.', 'check', '(', 'finalScore', ',', '""""', ')', '.', 'replace', '(', ""','"", ')', ';', '}']",24,20,6,4,22.22222222222222
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setCallbackClass_1.txt,0.4291,0.9069,"{'n_total': 107, 'n_valid': 15, 'n_correct': 9}",24.716314,public HttpClassCallbackDTO setCallbackClass(String callbackClass) { this.callbackClass = callbackClass; return this; },HttpClassCallbackDTO setCallbackClass(String callbackClass){this.callbackClass=this;},119,85,22,34,35.051546391752574,"['public', 'HttpClassCallbackDTO', 'setCallbackClass', '(', 'String', 'callbackClass', ')', '{', 'this', '.', 'callbackClass', '=', 'callbackClass', ';', 'return', 'this', ';', '}']","['HttpClassCallbackDTO', 'setCallbackClass', '(', 'String', 'callbackClass', ')', '{', 'this', '.', 'callbackClass', '=', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setItemIdentity_1.txt,0.378,1.7538,"{'n_total': 107, 'n_valid': 12, 'n_correct': 8}",19.408041,"public void setItemIdentity(int itemOffset, String identity) { itemIdentities.put(itemOffset, identity); }","void setItemIdentity(int itemOffset,String identity){itemIdentities.put();}",106,75,21,31,36.47058823529412,"['public', 'void', 'setItemIdentity', '(', 'int', 'itemOffset', ',', 'String', 'identity', ')', '{', 'itemIdentities', '.', 'put', '(', 'itemOffset', ',', 'identity', ')', ';', '}']","['void', 'setItemIdentity', '(', 'int', 'itemOffset', ',', 'String', 'identity', ')', '{', 'itemIdentities', '.', 'put', '(', ')', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isMiss_1.txt,0.4905,0.7415,"{'n_total': 53, 'n_valid': 8, 'n_correct': 6}",12.515235,public boolean isMiss() { return miss; },boolean isMiss(){miss;},40,23,12,17,60.71428571428571,"['public', 'boolean', 'isMiss', '(', ')', '{', 'return', 'miss', ';', '}']","['boolean', 'isMiss', '(', ')', '{', 'miss', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,deleteAllTasks_1.txt,0.4445,1.3767,"{'n_total': 137, 'n_valid': 15, 'n_correct': 12}",22.578559,protected void deleteAllTasks() { storage.write((NoResult.Quiet) storeProvider -> storeProvider.getUnsafeTaskStore().deleteAllTasks()); },void deleteAllTasks(){write((NoResult)getUnsafeTaskStore().deleteAllTasks);},137,76,20,61,52.13675213675214,"['protected', 'void', 'deleteAllTasks', '(', ')', '{', 'storage', '.', 'write', '(', '(', 'NoResult', '.', 'Quiet', ')', 'storeProvider', '->', 'storeProvider', '.', 'getUnsafeTaskStore', '(', ')', '.', 'deleteAllTasks', '(', ')', ')', ';', '}']","['void', 'deleteAllTasks', '(', ')', '{', 'write', '(', '(', 'NoResult', ')', 'getUnsafeTaskStore', '(', ')', '.', 'deleteAllTasks', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createJobManager_1.txt,0.4678,1.1321,"{'n_total': 178, 'n_valid': 28, 'n_correct': 19}",43.941013,"protected JobManager createJobManager(Configuration.Builder configurationBuilder) { return new JobManager(Robolectric.application, configurationBuilder.id(UUID.randomUUID().toString()).build()); }",JobManager createJobManager(Configuration configurationBuilder){newJobManager();},196,81,22,115,66.0919540229885,"['protected', 'JobManager', 'createJobManager', '(', 'Configuration', '.', 'Builder', 'configurationBuilder', ')', '{', 'return', 'new', 'JobManager', '(', 'Robolectric', '.', 'application', ',', 'configurationBuilder', '.', 'id', '(', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ')', '.', 'build', '(', ')', ')', ';', '}']","['JobManager', 'createJobManager', '(', 'Configuration', 'configurationBuilder', ')', '{', 'newJobManager', '(', ')', ';', '}']",39,12,6,27,81.81818181818183
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isSendEmail_1.txt,0.46,1.6664,"{'n_total': 373, 'n_valid': 61, 'n_correct': 31}",92.696626,public boolean isSendEmail() { boolean sendEmail; if (isEmailCopyAlways() || (isEmailCopyOptional() && getBooleanEmailOut())) { sendEmail = true; } else { sendEmail = false; } return sendEmail; },boolean isSendEmail(){if(isEmailCopyAlways()|(isEmailCopyOptional()&&getBooleanEmailOut)){}else{sendEmail;}sendEmail;},195,118,17,77,43.25842696629213,"['public', 'boolean', 'isSendEmail', '(', ')', '{', 'boolean', 'sendEmail', ';', 'if', '(', 'isEmailCopyAlways', '(', ')', '||', '(', 'isEmailCopyOptional', '(', ')', '&&', 'getBooleanEmailOut', '(', ')', ')', ')', '{', 'sendEmail', '=', 'true', ';', '}', 'else', '{', 'sendEmail', '=', 'false', ';', '}', 'return', 'sendEmail', ';', '}']","['boolean', 'isSendEmail', '(', ')', '{', 'if', '(', 'isEmailCopyAlways', '(', ')', '|', '(', 'isEmailCopyOptional', '(', ')', '&&', 'getBooleanEmailOut', ')', ')', '{', '}', 'else', '{', 'sendEmail', ';', '}', 'sendEmail', ';', '}']",42,29,6,13,36.11111111111111
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,hasWater_1.txt,0.3927,1.3264,"{'n_total': 384, 'n_valid': 38, 'n_correct': 32}",60.274859,"private boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }","boolean hasWater(World world,BlockPos pos){for(MutableBlockPos mutableblockpos:getAllInBoxMutable((4),add())){if(WATER){}}return false;}",279,136,14,143,53.9622641509434,"['private', 'boolean', 'hasWater', '(', 'World', 'world', ',', 'BlockPos', 'pos', ')', '{', 'for', '(', 'BlockPos', '.', 'MutableBlockPos', 'mutableblockpos', ':', 'BlockPos', '.', 'getAllInBoxMutable', '(', 'pos', '.', 'add', '(', '-', '4', ',', '0', ',', '-', '4', ')', ',', 'pos', '.', 'add', '(', '4', ',', '1', ',', '4', ')', ')', ')', '{', 'if', '(', 'world', '.', 'getBlockState', '(', 'mutableblockpos', ')', '.', 'getMaterial', '(', ')', '==', 'Material', '.', 'WATER', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'hasWater', '(', 'World', 'world', ',', 'BlockPos', 'pos', ')', '{', 'for', '(', 'MutableBlockPos', 'mutableblockpos', ':', 'getAllInBoxMutable', '(', '(', '4', ')', ',', 'add', '(', ')', ')', ')', '{', 'if', '(', 'WATER', ')', '{', '}', '}', 'return', 'false', ';', '}']",75,38,6,37,53.62318840579711
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,lockDrawer_1.txt,0.3333,2.4948,"{'n_total': 187, 'n_valid': 33, 'n_correct': 17}",49.142635,private void lockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); } },void lockDrawer(){if(mDrawer){mDrawer(DrawerLayout.LOCK_LOCKED);}},119,66,16,53,51.45631067961165,"['private', 'void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_LOCKED_CLOSED', ')', ';', '}', '}']","['void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', ')', '{', 'mDrawer', '(', 'DrawerLayout', '.', 'LOCK_LOCKED', ')', ';', '}', '}']",24,19,6,5,27.77777777777778
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,initializeFilters_1.txt,0.3516,1.9742,"{'n_total': 156, 'n_valid': 15, 'n_correct': 11}",23.797876,protected static synchronized void initializeFilters(AbstractExtensionFileFilterFileChooser chooser) { if (!chooser.getFiltersInitialized()) chooser.doInitializeFilters(); },void initializeFilters(AbstractExtensionFileFilterFileChooser chooser){if(getFiltersInitialized())doInitializeFilters();},173,121,23,52,34.66666666666667,"['protected', 'static', 'synchronized', 'void', 'initializeFilters', '(', 'AbstractExtensionFileFilterFileChooser', 'chooser', ')', '{', 'if', '(', '!', 'chooser', '.', 'getFiltersInitialized', '(', ')', ')', 'chooser', '.', 'doInitializeFilters', '(', ')', ';', '}']","['void', 'initializeFilters', '(', 'AbstractExtensionFileFilterFileChooser', 'chooser', ')', '{', 'if', '(', 'getFiltersInitialized', '(', ')', ')', 'doInitializeFilters', '(', ')', ';', '}']",26,18,6,8,40.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getPropagate_1.txt,0.3744,1.0233,"{'n_total': 89, 'n_valid': 13, 'n_correct': 7}",19.139802,"@JsonProperty(""propagate"") public Boolean getPropagate() { return propagate; }","@JsonProperty("""")Boolean getPropagate(){return propagate;}",78,58,18,20,33.33333333333333,"['@', 'JsonProperty', '(', '""propagate""', ')', 'public', 'Boolean', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}']","['@', 'JsonProperty', '(', '""""', ')', 'Boolean', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}']",15,14,6,1,11.11111111111111
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setAlwaysUseSession_1.txt,0.4382,3.0313,"{'n_total': 134, 'n_valid': 12, 'n_correct': 12}",18.966,private void setAlwaysUseSession() { ((AuthenticatorBase) basicContext.getAuthenticator()).setAlwaysUseSession(true); ((AuthenticatorBase) nonloginContext.getAuthenticator()).setAlwaysUseSession(true); },void setAlwaysUseSession(){(getAuthenticator());(getAuthenticator).setAlwaysUseSession;},203,88,25,115,64.60674157303372,"['private', 'void', 'setAlwaysUseSession', '(', ')', '{', '(', '(', 'AuthenticatorBase', ')', 'basicContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '(', '(', 'AuthenticatorBase', ')', 'nonloginContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '}']","['void', 'setAlwaysUseSession', '(', ')', '{', '(', 'getAuthenticator', '(', ')', ')', ';', '(', 'getAuthenticator', ')', '.', 'setAlwaysUseSession', ';', '}']",39,18,6,21,63.63636363636363
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,fireMessageSent_1.txt,0.4562,2.3226,"{'n_total': 171, 'n_valid': 19, 'n_correct': 13}",30.201454,"private void fireMessageSent(T session, WriteRequest req) { session.setCurrentWriteRequest(null); IoFilterChain filterChain = session.getFilterChain(); filterChain.fireMessageSent(req); }","void fireMessageSent(T session,WriteRequest req){getFilterChain();filterChain.fireMessageSent(req);}",187,100,21,87,52.40963855421686,"['private', 'void', 'fireMessageSent', '(', 'T', 'session', ',', 'WriteRequest', 'req', ')', '{', 'session', '.', 'setCurrentWriteRequest', '(', 'null', ')', ';', 'IoFilterChain', 'filterChain', '=', 'session', '.', 'getFilterChain', '(', ')', ';', 'filterChain', '.', 'fireMessageSent', '(', 'req', ')', ';', '}']","['void', 'fireMessageSent', '(', 'T', 'session', ',', 'WriteRequest', 'req', ')', '{', 'getFilterChain', '(', ')', ';', 'filterChain', '.', 'fireMessageSent', '(', 'req', ')', ';', '}']",35,22,6,13,44.82758620689656
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isDedicated_1.txt,0.386,1.5912,"{'n_total': 162, 'n_valid': 26, 'n_correct': 13}",38.870261,public static boolean isDedicated(Offer offer) { return FluentIterable.from(offer.getAttributesList()).transform(ATTRIBUTE_NAME).anyMatch(Predicates.equalTo(ConfigurationManager.DEDICATED_ATTRIBUTE)); },boolean isDedicated(Offer offer){return FluentIterable.from((DEDICATED));},202,74,17,128,69.1891891891892,"['public', 'static', 'boolean', 'isDedicated', '(', 'Offer', 'offer', ')', '{', 'return', 'FluentIterable', '.', 'from', '(', 'offer', '.', 'getAttributesList', '(', ')', ')', '.', 'transform', '(', 'ATTRIBUTE_NAME', ')', '.', 'anyMatch', '(', 'Predicates', '.', 'equalTo', '(', 'ConfigurationManager', '.', 'DEDICATED_ATTRIBUTE', ')', ')', ';', '}']","['boolean', 'isDedicated', '(', 'Offer', 'offer', ')', '{', 'return', 'FluentIterable', '.', 'from', '(', '(', 'DEDICATED', ')', ')', ';', '}']",39,18,6,21,63.63636363636363
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getShowStats_1.txt,0.4868,0.7752,"{'n_total': 67, 'n_valid': 10, 'n_correct': 5}",15.500606,public boolean getShowStats() { return this.showStats; },boolean getShowStats(){return this.showStats;},56,46,18,10,26.31578947368421,"['public', 'boolean', 'getShowStats', '(', ')', '{', 'return', 'this', '.', 'showStats', ';', '}']","['boolean', 'getShowStats', '(', ')', '{', 'return', 'this', '.', 'showStats', ';', '}']",12,11,6,1,16.666666666666664
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setLoginResult_1.txt,0.471,1.0801,"{'n_total': 283, 'n_valid': 28, 'n_correct': 24}",44.891592,"public final void setLoginResult(LoginResult loginResult) { if (!this.loginResult.compareAndSet(null, loginResult)) { throw new UnsupportedOperationException(""A Login Result already exists in this callback and cannot be set again.""); } }","void setLoginResult(LoginResult loginResult){if(compareAndSet()){(""."");}}",237,73,20,164,75.57603686635944,"['public', 'final', 'void', 'setLoginResult', '(', 'LoginResult', 'loginResult', ')', '{', 'if', '(', '!', 'this', '.', 'loginResult', '.', 'compareAndSet', '(', 'null', ',', 'loginResult', ')', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '""A Login Result already exists in this callback and cannot be set again.""', ')', ';', '}', '}']","['void', 'setLoginResult', '(', 'LoginResult', 'loginResult', ')', '{', 'if', '(', 'compareAndSet', '(', ')', ')', '{', '(', '"".""', ')', ';', '}', '}']",33,20,6,13,48.14814814814815
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setClosingTime_1.txt,0.4556,0.8631,"{'n_total': 107, 'n_valid': 15, 'n_correct': 9}",24.694245,protected Period setClosingTime(String closingTime) { this.closingTime = closingTime; return this; },Period setClosingTime(String closingTime){this.closingTime=this;},100,65,20,35,43.75,"['protected', 'Period', 'setClosingTime', '(', 'String', 'closingTime', ')', '{', 'this', '.', 'closingTime', '=', 'closingTime', ';', 'return', 'this', ';', '}']","['Period', 'setClosingTime', '(', 'String', 'closingTime', ')', '{', 'this', '.', 'closingTime', '=', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getExclusionRule_1.txt,0.4556,0.8926,"{'n_total': 71, 'n_valid': 9, 'n_correct': 6}",14.892404,public RecurrenceRule getExclusionRule() { return this.exclusionRule; },RecurrenceRule getExclusionRule(){this.exclusionRule;},71,54,22,17,34.69387755102041,"['public', 'RecurrenceRule', 'getExclusionRule', '(', ')', '{', 'return', 'this', '.', 'exclusionRule', ';', '}']","['RecurrenceRule', 'getExclusionRule', '(', ')', '{', 'this', '.', 'exclusionRule', ';', '}']",12,10,6,2,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getLocalPosition_1.txt,0.472,1.5389,"{'n_total': 104, 'n_valid': 11, 'n_correct': 11}",18.480942,@Override public Vector3 getLocalPosition(Vector3 out) { return out.set(localPosition); },Vector getLocalPosition(Vector out){(localPosition);},89,53,22,36,53.73134328358209,"['@', 'Override', 'public', 'Vector3', 'getLocalPosition', '(', 'Vector3', 'out', ')', '{', 'return', 'out', '.', 'set', '(', 'localPosition', ')', ';', '}']","['Vector', 'getLocalPosition', '(', 'Vector', 'out', ')', '{', '(', 'localPosition', ')', ';', '}']",19,12,6,7,53.84615384615385
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,withFsUrl_1.txt,0.4768,0.9482,"{'n_total': 104, 'n_valid': 18, 'n_correct': 11}",28.804636,public GzipHdfsBolt withFsUrl(String fsUrl) { this.fsUrl = fsUrl; return this; },GzipHdfsBolt withFsUrl(){this.fsUrl=fsUrl;this;},80,48,15,32,49.23076923076923,"['public', 'GzipHdfsBolt', 'withFsUrl', '(', 'String', 'fsUrl', ')', '{', 'this', '.', 'fsUrl', '=', 'fsUrl', ';', 'return', 'this', ';', '}']","['GzipHdfsBolt', 'withFsUrl', '(', ')', '{', 'this', '.', 'fsUrl', '=', 'fsUrl', ';', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,squaredError_1.txt,0.4459,2.1769,"{'n_total': 435, 'n_valid': 51, 'n_correct': 38}",85.435323,"public static double squaredError(double[] vector1, double[] vector2) { double squaredError = 0; for (int i = 0; i < vector1.length; i++) { squaredError += (vector1[i] - vector2[i]) * (vector1[i] - vector2[i]); } return squaredError; }",double squaredError(double[]vector){double squaredError=0;for(i=0;i;i++){squaredError=(vector[i])*(vector[i]-vector[i]);}return squaredError;},235,142,18,93,42.85714285714285,"['public', 'static', 'double', 'squaredError', '(', 'double', '[', ']', 'vector1', ',', 'double', '[', ']', 'vector2', ')', '{', 'double', 'squaredError', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vector1', '.', 'length', ';', 'i', '++', ')', '{', 'squaredError', '+=', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', '*', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', ';', '}', 'return', 'squaredError', ';', '}']","['double', 'squaredError', '(', 'double', '[', ']', 'vector', ')', '{', 'double', 'squaredError', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', ';', 'i', '++', ')', '{', 'squaredError', '=', '(', 'vector', '[', 'i', ']', ')', '*', '(', 'vector', '[', 'i', ']', '-', 'vector', '[', 'i', ']', ')', ';', '}', 'return', 'squaredError', ';', '}']",69,52,6,17,26.984126984126984
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getWriteRequestQueue_1.txt,0.4636,1.9228,"{'n_total': 178, 'n_valid': 20, 'n_correct': 8}",29.802494,"@SuppressWarnings(""unchecked"") private Queue<WriteRequest> getWriteRequestQueue(IoSession session) { return (Queue<WriteRequest>) session.getAttribute(WRITE_REQUEST_QUEUE); }","@SuppressWarnings(""unchecked"")Queue<WriteRequest>getWriteRequestQueue(IoSession session){return(Queue<WriteRequest>)session.getAttribute(WRITE_REQUEST_QUEUE);}",174,159,26,15,10.135135135135137,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'private', 'Queue', '<', 'WriteRequest', '>', 'getWriteRequestQueue', '(', 'IoSession', 'session', ')', '{', 'return', '(', 'Queue', '<', 'WriteRequest', '>', ')', 'session', '.', 'getAttribute', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}']","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'Queue', '<', 'WriteRequest', '>', 'getWriteRequestQueue', '(', 'IoSession', 'session', ')', '{', 'return', '(', 'Queue', '<', 'WriteRequest', '>', ')', 'session', '.', 'getAttribute', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}']",31,30,6,1,4.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addCacheControl_1.txt,0.2095,3.7714,"{'n_total': 446, 'n_valid': 62, 'n_correct': 44}",92.903942,"private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path -> patterns.stream().filter(patternCacheControl -> PatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }","void addCacheControl(File requestPath){CacheControlHandler cacheControlHandler=urlCacheControlMap((PatternMatcherUtils()).findFirst((patternCacheControl)).orElse());if(null){addCacheControlHeader(session,cacheControlHandler);}}",548,227,21,321,60.91081593927894,"['private', 'void', 'addCacheControl', '(', 'HttpAcceptSession', 'session', ',', 'File', 'requestFile', ',', 'String', 'requestPath', ')', '{', 'CacheControlHandler', 'cacheControlHandler', '=', 'urlCacheControlMap', '.', 'computeIfAbsent', '(', 'requestPath', ',', 'path', '->', 'patterns', '.', 'stream', '(', ')', '.', 'filter', '(', 'patternCacheControl', '->', 'PatternMatcherUtils', '.', 'caseInsensitiveMatch', '(', 'requestPath', ',', 'patternCacheControl', '.', 'getPattern', '(', ')', ')', ')', '.', 'findFirst', '(', ')', '.', 'map', '(', 'patternCacheControl', '->', 'new', 'CacheControlHandler', '(', 'requestFile', ',', 'patternCacheControl', ')', ')', '.', 'orElse', '(', 'null', ')', ')', ';', 'if', '(', 'cacheControlHandler', '!=', 'null', ')', '{', 'addCacheControlHeader', '(', 'session', ',', 'requestFile', ',', 'cacheControlHandler', ')', ';', '}', '}']","['void', 'addCacheControl', '(', 'File', 'requestPath', ')', '{', 'CacheControlHandler', 'cacheControlHandler', '=', 'urlCacheControlMap', '(', '(', 'PatternMatcherUtils', '(', ')', ')', '.', 'findFirst', '(', '(', 'patternCacheControl', ')', ')', '.', 'orElse', '(', ')', ')', ';', 'if', '(', 'null', ')', '{', 'addCacheControlHeader', '(', 'session', ',', 'cacheControlHandler', ')', ';', '}', '}']",90,44,6,46,54.761904761904766
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,htmlContent_1.txt,0.4836,3.8923,"{'n_total': 160, 'n_valid': 22, 'n_correct': 12}",34.222841,"protected String htmlContent(Event event) { return Web.encodeUrlsAsHtml(Web.escapeHtml(plainTextContent(event), true)); }","String htmlContent(Event event){encodeUrlsAsHtml(WebescapeHtml(plainTextContent(),true));}",121,90,17,31,29.807692307692307,"['protected', 'String', 'htmlContent', '(', 'Event', 'event', ')', '{', 'return', 'Web', '.', 'encodeUrlsAsHtml', '(', 'Web', '.', 'escapeHtml', '(', 'plainTextContent', '(', 'event', ')', ',', 'true', ')', ')', ';', '}']","['String', 'htmlContent', '(', 'Event', 'event', ')', '{', 'encodeUrlsAsHtml', '(', 'WebescapeHtml', '(', 'plainTextContent', '(', ')', ',', 'true', ')', ')', ';', '}']",27,20,6,7,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getUseSendfile_1.txt,0.4474,0.918,"{'n_total': 101, 'n_valid': 13, 'n_correct': 8}",20.19587,public boolean getUseSendfile() { return ((NioEndpoint) endpoint).getUseSendfile(); },boolean getUseSendfile(){return((NioEndpoint)).getUseSendfile();},85,65,20,20,30.76923076923077,"['public', 'boolean', 'getUseSendfile', '(', ')', '{', 'return', '(', '(', 'NioEndpoint', ')', 'endpoint', ')', '.', 'getUseSendfile', '(', ')', ';', '}']","['boolean', 'getUseSendfile', '(', ')', '{', 'return', '(', '(', 'NioEndpoint', ')', ')', '.', 'getUseSendfile', '(', ')', ';', '}']",19,17,6,2,15.384615384615383
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,saveTasks_1.txt,0.3414,1.596,"{'n_total': 192, 'n_valid': 18, 'n_correct': 16}",29.075931,@Override public void saveTasks(final Set<IScheduledTask> newTasks) { requireNonNull(newTasks); write(Op.saveTasks(new SaveTasks(IScheduledTask.toBuildersSet(newTasks)))); taskStore.saveTasks(newTasks); },void saveTasks(Set newTasks){(saveTasks(SaveTasks((newTasks))));(newTasks);},204,76,15,128,67.72486772486772,"['@', 'Override', 'public', 'void', 'saveTasks', '(', 'final', 'Set', '<', 'IScheduledTask', '>', 'newTasks', ')', '{', 'requireNonNull', '(', 'newTasks', ')', ';', 'write', '(', 'Op', '.', 'saveTasks', '(', 'new', 'SaveTasks', '(', 'IScheduledTask', '.', 'toBuildersSet', '(', 'newTasks', ')', ')', ')', ')', ';', 'taskStore', '.', 'saveTasks', '(', 'newTasks', ')', ';', '}']","['void', 'saveTasks', '(', 'Set', 'newTasks', ')', '{', '(', 'saveTasks', '(', 'SaveTasks', '(', '(', 'newTasks', ')', ')', ')', ')', ';', '(', 'newTasks', ')', ';', '}']",46,24,6,22,55.00000000000001
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setMarginMirroring_1.txt,0.4722,1.5002,"{'n_total': 67, 'n_valid': 6, 'n_correct': 6}",10.285851,public boolean setMarginMirroring(boolean marginMirroring) { return true; },boolean setMarginMirroring(boolean marginMirroring){},75,53,24,22,43.13725490196079,"['public', 'boolean', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', 'return', 'true', ';', '}']","['boolean', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', '}']",12,8,6,4,66.66666666666666
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,handleIllegalArgumentException_1.txt,0.4779,1.3571,"{'n_total': 154, 'n_valid': 13, 'n_correct': 11}",20.882381,"@ExceptionHandler() void handleIllegalArgumentException(IllegalArgumentException e, HttpServletResponse response) throws IOException { response.sendError(HttpStatus.BAD_REQUEST.value(), e.getMessage()); }","@ExceptionHandler()void handleIllegalArgumentException(IllegalArgumentException e,HttpServletResponse response)throws IOException{sendError();}",204,143,36,61,36.30952380952381,"['@', 'ExceptionHandler', '(', ')', 'void', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', '{', 'response', '.', 'sendError', '(', 'HttpStatus', '.', 'BAD_REQUEST', '.', 'value', '(', ')', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}']","['@', 'ExceptionHandler', '(', ')', 'void', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', '{', 'sendError', '(', ')', ';', '}']",36,21,6,15,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,listBackups_1.txt,0.3527,1.3455,"{'n_total': 193, 'n_valid': 34, 'n_correct': 16}",54.407716,@Override public Response listBackups() { return ok(Result.listBackupsResult(new ListBackupsResult().setBackups(recovery.listBackups()))); },@Override Response listBackups(){(((recovery.listBackups())));},140,63,17,77,62.60162601626016,"['@', 'Override', 'public', 'Response', 'listBackups', '(', ')', '{', 'return', 'ok', '(', 'Result', '.', 'listBackupsResult', '(', 'new', 'ListBackupsResult', '(', ')', '.', 'setBackups', '(', 'recovery', '.', 'listBackups', '(', ')', ')', ')', ')', ';', '}']","['@', 'Override', 'Response', 'listBackups', '(', ')', '{', '(', '(', '(', 'recovery', '.', 'listBackups', '(', ')', ')', ')', ')', ';', '}']",32,20,6,12,46.15384615384615
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addPathParameter_1.txt,0.4633,1.3055,"{'n_total': 133, 'n_valid': 16, 'n_correct': 10}",25.353921,"protected void addPathParameter(String name, String value) { pathParameters.put(name, value); }","void addPathParameter(String name,String value){pathParameters.put(name);}",95,74,22,21,28.767123287671232,"['protected', 'void', 'addPathParameter', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'pathParameters', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}']","['void', 'addPathParameter', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'pathParameters', '.', 'put', '(', 'name', ')', ';', '}']",21,18,6,3,20.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addHttpCookie_1.txt,0.4748,1.6152,"{'n_total': 97, 'n_valid': 11, 'n_correct': 9}",16.697981,@Override public void addHttpCookie(Suppressible<String> httpCookie) { httpCookies.add(httpCookie); },void addHttpCookie(Suppressible<String>httpCookie){httpCookies.add();},101,70,19,31,37.80487804878049,"['@', 'Override', 'public', 'void', 'addHttpCookie', '(', 'Suppressible', '<', 'String', '>', 'httpCookie', ')', '{', 'httpCookies', '.', 'add', '(', 'httpCookie', ')', ';', '}']","['void', 'addHttpCookie', '(', 'Suppressible', '<', 'String', '>', 'httpCookie', ')', '{', 'httpCookies', '.', 'add', '(', ')', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,exportInt_1.txt,0.3434,2.5947,"{'n_total': 361, 'n_valid': 50, 'n_correct': 27}",76.699897,"public static AtomicInteger exportInt(final String name) { final AtomicInteger intVar = new AtomicInteger(0); export(new SampledStat<Integer>(name, 0) { @Override public Integer doSample() { return intVar.get(); } }); return intVar; }",AtomicInteger exportInt(String name){export(new SampledStat<Integer>(name){Integer(){intVar.get();}});},234,103,15,131,59.81735159817352,"['public', 'static', 'AtomicInteger', 'exportInt', '(', 'final', 'String', 'name', ')', '{', 'final', 'AtomicInteger', 'intVar', '=', 'new', 'AtomicInteger', '(', '0', ')', ';', 'export', '(', 'new', 'SampledStat', '<', 'Integer', '>', '(', 'name', ',', '0', ')', '{', '@', 'Override', 'public', 'Integer', 'doSample', '(', ')', '{', 'return', 'intVar', '.', 'get', '(', ')', ';', '}', '}', ')', ';', 'return', 'intVar', ';', '}']","['AtomicInteger', 'exportInt', '(', 'String', 'name', ')', '{', 'export', '(', 'new', 'SampledStat', '<', 'Integer', '>', '(', 'name', ')', '{', 'Integer', '(', ')', '{', 'intVar', '.', 'get', '(', ')', ';', '}', '}', ')', ';', '}']",56,33,6,23,46.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,getFilterChainBuilder_1.txt,0.4668,1.4382,"{'n_total': 66, 'n_valid': 11, 'n_correct': 6}",18.507711,@Override public final IoFilterChainBuilder getFilterChainBuilder() { return filterChainBuilder; },IoFilterChainBuilder getFilterChainBuilder(){return filterChainBuilder;},98,72,27,26,36.61971830985916,"['@', 'Override', 'public', 'final', 'IoFilterChainBuilder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}']","['IoFilterChainBuilder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}']",13,9,6,4,57.14285714285714
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,videoUrl_1.txt,0.4674,0.8358,"{'n_total': 92, 'n_valid': 18, 'n_correct': 9}",27.530451,public VideoBuilder videoUrl(String videoUrl) { this.videoUrl = videoUrl; return this; },VideoBuilder videoUrl(){this.videoUrl;return this;},88,51,14,37,50.0,"['public', 'VideoBuilder', 'videoUrl', '(', 'String', 'videoUrl', ')', '{', 'this', '.', 'videoUrl', '=', 'videoUrl', ';', 'return', 'this', ';', '}']","['VideoBuilder', 'videoUrl', '(', ')', '{', 'this', '.', 'videoUrl', ';', 'return', 'this', ';', '}']",18,13,6,5,41.66666666666667
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isAutoShrink_1.txt,0.4982,1.0305,"{'n_total': 82, 'n_valid': 10, 'n_correct': 8}",18.253194,@Override public final boolean isAutoShrink() { return autoShrink && recapacityAllowed; },boolean isAutoShrink(){return autoShrink&recapacityAllowed;},89,60,18,29,40.845070422535215,"['@', 'Override', 'public', 'final', 'boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&&', 'recapacityAllowed', ';', '}']","['boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&', 'recapacityAllowed', ';', '}']",15,11,6,4,44.44444444444444
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createMirrorSelector_1.txt,0.3698,2.8052,"{'n_total': 450, 'n_valid': 52, 'n_correct': 28}",81.012258,"private MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }",MirrorSelector createMirrorSelector(Settings settings){DefaultMirrorSelector=new DefaultMirrorSelector();for(Mirror mirror:getMirrors()){selector.add(mirrorgetMirrorOf().getMirrorOfLayouts());}returnselector;},318,209,26,109,37.32876712328767,"['private', 'MirrorSelector', 'createMirrorSelector', '(', 'Settings', 'settings', ')', '{', 'DefaultMirrorSelector', 'selector', '=', 'new', 'DefaultMirrorSelector', '(', ')', ';', 'for', '(', 'Mirror', 'mirror', ':', 'settings', '.', 'getMirrors', '(', ')', ')', '{', 'selector', '.', 'add', '(', 'mirror', '.', 'getId', '(', ')', ',', 'mirror', '.', 'getUrl', '(', ')', ',', 'mirror', '.', 'getLayout', '(', ')', ',', 'false', ',', 'mirror', '.', 'getMirrorOf', '(', ')', ',', 'mirror', '.', 'getMirrorOfLayouts', '(', ')', ')', ';', '}', 'return', 'selector', ';', '}']","['MirrorSelector', 'createMirrorSelector', '(', 'Settings', 'settings', ')', '{', 'DefaultMirrorSelector', '=', 'new', 'DefaultMirrorSelector', '(', ')', ';', 'for', '(', 'Mirror', 'mirror', ':', 'getMirrors', '(', ')', ')', '{', 'selector', '.', 'add', '(', 'mirrorgetMirrorOf', '(', ')', '.', 'getMirrorOfLayouts', '(', ')', ')', ';', '}', 'returnselector', ';', '}']",70,41,6,29,45.3125
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isUseGeneratedKeys_1.txt,0.4829,0.7915,"{'n_total': 53, 'n_valid': 9, 'n_correct': 5}",13.770599,public boolean isUseGeneratedKeys() { return useGeneratedKeys; },boolean isUseGeneratedKeys(){return useGeneratedKeys;},64,54,24,10,25.0,"['public', 'boolean', 'isUseGeneratedKeys', '(', ')', '{', 'return', 'useGeneratedKeys', ';', '}']","['boolean', 'isUseGeneratedKeys', '(', ')', '{', 'return', 'useGeneratedKeys', ';', '}']",10,9,6,1,25.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,assertCounter_1.txt,0.257,3.957,"{'n_total': 263, 'n_valid': 42, 'n_correct': 27}",63.082605,"private static void assertCounter(String method) { final Counter counter = JpaWrapper.getJpaCounter(); assertEquals(""getRequestsCount"", 1, counter.getRequestsCount()); assertEquals(""requestName"", method, counter.getRequests().get(0).getName()); counter.clear(); }","void assertCounter(String method){counter();assertEquals("""",counter);}",263,70,19,193,79.09836065573771,"['private', 'static', 'void', 'assertCounter', '(', 'String', 'method', ')', '{', 'final', 'Counter', 'counter', '=', 'JpaWrapper', '.', 'getJpaCounter', '(', ')', ';', 'assertEquals', '(', '""getRequestsCount""', ',', '1', ',', 'counter', '.', 'getRequestsCount', '(', ')', ')', ';', 'assertEquals', '(', '""requestName""', ',', 'method', ',', 'counter', '.', 'getRequests', '(', ')', '.', 'get', '(', '0', ')', '.', 'getName', '(', ')', ')', ';', 'counter', '.', 'clear', '(', ')', ';', '}']","['void', 'assertCounter', '(', 'String', 'method', ')', '{', 'counter', '(', ')', ';', 'assertEquals', '(', '""""', ',', 'counter', ')', ';', '}']",61,19,6,42,76.36363636363637
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,updateFrameTitle_1.txt,0.4817,2.6162,"{'n_total': 280, 'n_valid': 29, 'n_correct': 24}",46.749226,public void updateFrameTitle() { if (getParentFrame() != null) { getParentFrame().setTitle(getFrameTitle()); } if (getParentInternalFrame() != null) { getParentInternalFrame().setTitle(getFrameTitle()); } },void updateFrameTitle(){if(null){getParentFrame.setTitle(getFrameTitle);}if(getParentInternalFrame()!=null){(getFrameTitle);}},206,126,22,80,43.47826086956522,"['public', 'void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'getParentFrame', '(', ')', '!=', 'null', ')', '{', 'getParentFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', 'if', '(', 'getParentInternalFrame', '(', ')', '!=', 'null', ')', '{', 'getParentInternalFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', '}']","['void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'null', ')', '{', 'getParentFrame', '.', 'setTitle', '(', 'getFrameTitle', ')', ';', '}', 'if', '(', 'getParentInternalFrame', '(', ')', '!=', 'null', ')', '{', '(', 'getFrameTitle', ')', ';', '}', '}']",49,33,6,16,37.2093023255814
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,isAttributes_1.txt,0.4903,0.8227,"{'n_total': 53, 'n_valid': 8, 'n_correct': 6}",12.491012,public boolean isAttributes() { return attributes; },boolean isAttributes(){attributes;},52,35,18,17,50.0,"['public', 'boolean', 'isAttributes', '(', ')', '{', 'return', 'attributes', ';', '}']","['boolean', 'isAttributes', '(', ')', '{', 'attributes', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,initHeaders_1.txt,0.4717,1.7975,"{'n_total': 112, 'n_valid': 14, 'n_correct': 12}",22.641875,private void initHeaders() { headers = new TreeMap<>(HttpHeaderNameComparator.INSTANCE); },void initHeaders(){headers=TreeMap();},90,38,17,52,71.23287671232876,"['private', 'void', 'initHeaders', '(', ')', '{', 'headers', '=', 'new', 'TreeMap', '<', '>', '(', 'HttpHeaderNameComparator', '.', 'INSTANCE', ')', ';', '}']","['void', 'initHeaders', '(', ')', '{', 'headers', '=', 'TreeMap', '(', ')', ';', '}']",19,12,6,7,53.84615384615385
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,canAddItem_1.txt,0.3625,1.0518,"{'n_total': 71, 'n_valid': 12, 'n_correct': 6}",18.028125,public boolean canAddItem() { return m_canAddItem; },boolean canAddItem(){m_canAddItem;},52,35,16,17,47.22222222222222,"['public', 'boolean', 'canAddItem', '(', ')', '{', 'return', 'm_canAddItem', ';', '}']","['boolean', 'canAddItem', '(', ')', '{', 'm_canAddItem', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createTagList_1.txt,0.3323,7.405,"{'n_total': 115, 'n_valid': 16, 'n_correct': 10}",25.372625,public TagList createTagList(List<TagColumn> columns) { return new TagListImpl(columns); },TagList createTagList(List<TagColumn>columns){new TagListImpl();},90,65,19,25,35.2112676056338,"['public', 'TagList', 'createTagList', '(', 'List', '<', 'TagColumn', '>', 'columns', ')', '{', 'return', 'new', 'TagListImpl', '(', 'columns', ')', ';', '}']","['TagList', 'createTagList', '(', 'List', '<', 'TagColumn', '>', 'columns', ')', '{', 'new', 'TagListImpl', '(', ')', ';', '}']",19,16,6,3,23.07692307692308
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,findChildIndex_1.txt,0.4618,1.811,"{'n_total': 386, 'n_valid': 50, 'n_correct': 36}",79.867106,"public static int findChildIndex(ViewGroup parent, View child) { int count = parent.getChildCount(); for (int i = 0; i < count; ++i) { if (parent.getChildAt(i) == child) { return i; } } return -1; }",int findChildIndex(ViewGroup child){count=parent();for(0;i<count;){if(child){i;}}return-1;},198,91,20,107,60.1123595505618,"['public', 'static', 'int', 'findChildIndex', '(', 'ViewGroup', 'parent', ',', 'View', 'child', ')', '{', 'int', 'count', '=', 'parent', '.', 'getChildCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'if', '(', 'parent', '.', 'getChildAt', '(', 'i', ')', '==', 'child', ')', '{', 'return', 'i', ';', '}', '}', 'return', '-', '1', ';', '}']","['int', 'findChildIndex', '(', 'ViewGroup', 'child', ')', '{', 'count', '=', 'parent', '(', ')', ';', 'for', '(', '0', ';', 'i', '<', 'count', ';', ')', '{', 'if', '(', 'child', ')', '{', 'i', ';', '}', '}', 'return', '-', '1', ';', '}']",58,37,6,21,40.38461538461539
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setFilterChainBuilder_1.txt,0.4601,1.6634,"{'n_total': 214, 'n_valid': 25, 'n_correct': 20}",40.183426,@Override public final void setFilterChainBuilder(IoFilterChainBuilder builder) { if (builder == null) { builder = new DefaultIoFilterChainBuilder(); } filterChainBuilder = builder; },void setFilterChainBuilder(IoFilterChainBuilder builder){if(null){}filterChainBuilder=builder;},183,95,27,88,56.41025641025641,"['@', 'Override', 'public', 'final', 'void', 'setFilterChainBuilder', '(', 'IoFilterChainBuilder', 'builder', ')', '{', 'if', '(', 'builder', '==', 'null', ')', '{', 'builder', '=', 'new', 'DefaultIoFilterChainBuilder', '(', ')', ';', '}', 'filterChainBuilder', '=', 'builder', ';', '}']","['void', 'setFilterChainBuilder', '(', 'IoFilterChainBuilder', 'builder', ')', '{', 'if', '(', 'null', ')', '{', '}', 'filterChainBuilder', '=', 'builder', ';', '}']",31,18,6,13,52.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setExtendedData_1.txt,0.494,0.8437,"{'n_total': 235, 'n_valid': 20, 'n_correct': 18}",34.7112,"public void setExtendedData(String name, String value) { if (mExtendedData == null) mExtendedData = new HashMap<String, String>(); mExtendedData.put(name, value); }","void setExtendedData(String name,String value){if(null)mExtendedData=new HashMap<>();mExtendedData.put();}",164,106,21,58,40.55944055944056,"['public', 'void', 'setExtendedData', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'if', '(', 'mExtendedData', '==', 'null', ')', 'mExtendedData', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'mExtendedData', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}']","['void', 'setExtendedData', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'if', '(', 'null', ')', 'mExtendedData', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'mExtendedData', '.', 'put', '(', ')', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,configurator_1.txt,0.4495,1.9112,"{'n_total': 255, 'n_valid': 32, 'n_correct': 25}",53.59123,public Builder configurator(Configurator serverEndpointConfigurator) { if (serverEndpointConfigurator == null) { this.configurator = Configurator.fetchContainerDefaultConfigurator(); } else { this.configurator = serverEndpointConfigurator; } return this; },Builder configurator(Configurator serverEndpointConfigurator){if(serverEndpointConfigurator){configurator();}{this.configurator=serverEndpointConfigurator;}return this;},256,169,18,87,36.55462184873949,"['public', 'Builder', 'configurator', '(', 'Configurator', 'serverEndpointConfigurator', ')', '{', 'if', '(', 'serverEndpointConfigurator', '==', 'null', ')', '{', 'this', '.', 'configurator', '=', 'Configurator', '.', 'fetchContainerDefaultConfigurator', '(', ')', ';', '}', 'else', '{', 'this', '.', 'configurator', '=', 'serverEndpointConfigurator', ';', '}', 'return', 'this', ';', '}']","['Builder', 'configurator', '(', 'Configurator', 'serverEndpointConfigurator', ')', '{', 'if', '(', 'serverEndpointConfigurator', ')', '{', 'configurator', '(', ')', ';', '}', '{', 'this', '.', 'configurator', '=', 'serverEndpointConfigurator', ';', '}', 'return', 'this', ';', '}']",39,29,6,10,30.303030303030305
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addEjbRef_1.txt,0.4161,1.3334,"{'n_total': 103, 'n_valid': 10, 'n_correct': 10}",15.960133,"public void addEjbRef(ContextEjb ejbRef) { ejbRefs.put(ejbRef.getName(), ejbRef); }","void addEjbRef(){put(getName(),ejbRef);}",83,40,15,43,63.23529411764706,"['public', 'void', 'addEjbRef', '(', 'ContextEjb', 'ejbRef', ')', '{', 'ejbRefs', '.', 'put', '(', 'ejbRef', '.', 'getName', '(', ')', ',', 'ejbRef', ')', ';', '}']","['void', 'addEjbRef', '(', ')', '{', 'put', '(', 'getName', '(', ')', ',', 'ejbRef', ')', ';', '}']",22,15,6,7,43.75
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,nextFunction_1.txt,0.4779,1.1064,"{'n_total': 223, 'n_valid': 21, 'n_correct': 21}",35.634656,public Function nextFunction() throws AuthorizationException { try { return (Function) functionIter.next(); } catch (Exception e) { throw new AuthorizationException(e.getMessage()); } },Function nextFunction()throws AuthorizationException{try{next();}catch(Exception e){(e);}},185,90,18,95,56.88622754491018,"['public', 'Function', 'nextFunction', '(', ')', 'throws', 'AuthorizationException', '{', 'try', '{', 'return', '(', 'Function', ')', 'functionIter', '.', 'next', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'AuthorizationException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['Function', 'nextFunction', '(', ')', 'throws', 'AuthorizationException', '{', 'try', '{', 'next', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",40,26,6,14,41.17647058823529
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setInspectModeEnabled_1.txt,0.3394,2.7664,"{'n_total': 280, 'n_valid': 40, 'n_correct': 20}",60.495809,"@ChromeDevtoolsMethod public void setInspectModeEnabled(JsonRpcPeer peer, JSONObject params) { final SetInspectModeEnabledRequest request = mObjectMapper.convertValue(params, SetInspectModeEnabledRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { mDocument.setInspectModeEnabled(request.enabled); } }); }",void setInspectModeEnabled(JsonRpcPeer params){SetInspectModeEnabledRequest request=mObjectMapper(new Runnable(){run(){setInspectModeEnabled(request);}});},338,155,27,183,58.842443729903536,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'setInspectModeEnabled', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetInspectModeEnabledRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetInspectModeEnabledRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'mDocument', '.', 'setInspectModeEnabled', '(', 'request', '.', 'enabled', ')', ';', '}', '}', ')', ';', '}']","['void', 'setInspectModeEnabled', '(', 'JsonRpcPeer', 'params', ')', '{', 'SetInspectModeEnabledRequest', 'request', '=', 'mObjectMapper', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'setInspectModeEnabled', '(', 'request', ')', ';', '}', '}', ')', ';', '}']",59,31,6,28,52.83018867924528
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,createTaskId_1.txt,0.3034,1.8655,"{'n_total': 130, 'n_valid': 13, 'n_correct': 8}",20.731456,private static TaskID createTaskId(String taskId) { return TaskID.newBuilder().setValue(taskId).build(); },TaskID createTaskId(String taskId){TaskID.newBuilder().build();},106,64,18,42,47.72727272727273,"['private', 'static', 'TaskID', 'createTaskId', '(', 'String', 'taskId', ')', '{', 'return', 'TaskID', '.', 'newBuilder', '(', ')', '.', 'setValue', '(', 'taskId', ')', '.', 'build', '(', ')', ';', '}']","['TaskID', 'createTaskId', '(', 'String', 'taskId', ')', '{', 'TaskID', '.', 'newBuilder', '(', ')', '.', 'build', '(', ')', ';', '}']",26,18,6,8,40.0
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,setMaxBufferedRecords_1.txt,0.4769,0.8254,"{'n_total': 100, 'n_valid': 17, 'n_correct': 10}",25.922294,public Builder setMaxBufferedRecords(int maxBufferedRecords) { this.maxBufferedRecords = maxBufferedRecords; return this; },Builder setMaxBufferedRecords(int maxBufferedRecords){this.maxBufferedRecords=maxBufferedRecords;},123,98,27,25,26.041666666666668,"['public', 'Builder', 'setMaxBufferedRecords', '(', 'int', 'maxBufferedRecords', ')', '{', 'this', '.', 'maxBufferedRecords', '=', 'maxBufferedRecords', ';', 'return', 'this', ';', '}']","['Builder', 'setMaxBufferedRecords', '(', 'int', 'maxBufferedRecords', ')', '{', 'this', '.', 'maxBufferedRecords', '=', 'maxBufferedRecords', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,addSessionTrackingMode_1.txt,0.4526,1.0878,"{'n_total': 89, 'n_valid': 10, 'n_correct': 9}",14.911874,public void addSessionTrackingMode(String sessionTrackingMode) { sessionTrackingModes.add(SessionTrackingMode.valueOf(sessionTrackingMode)); },void addSessionTrackingMode(){add((sessionTrackingMode));},142,58,28,84,73.68421052631578,"['public', 'void', 'addSessionTrackingMode', '(', 'String', 'sessionTrackingMode', ')', '{', 'sessionTrackingModes', '.', 'add', '(', 'SessionTrackingMode', '.', 'valueOf', '(', 'sessionTrackingMode', ')', ')', ';', '}']","['void', 'addSessionTrackingMode', '(', ')', '{', 'add', '(', '(', 'sessionTrackingMode', ')', ')', ';', '}']",21,13,6,8,53.333333333333336
code2seq,METHOD_NAME,dd_token,rare,dd_token_rare_methods,invalidRequest_1.txt,0.3425,1.4721,"{'n_total': 135, 'n_valid': 23, 'n_correct': 11}",34.721448,"static Response invalidRequest(String message) { return addMessage(empty(), INVALID_REQUEST, message); }","Response invalidRequest(String message){addMessage(INVALID_REQUEST,message);}",104,77,20,27,32.142857142857146,"['static', 'Response', 'invalidRequest', '(', 'String', 'message', ')', '{', 'return', 'addMessage', '(', 'empty', '(', ')', ',', 'INVALID_REQUEST', ',', 'message', ')', ';', '}']","['Response', 'invalidRequest', '(', 'String', 'message', ')', '{', 'addMessage', '(', 'INVALID_REQUEST', ',', 'message', ')', ';', '}']",21,15,6,6,40.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 142, 'n_valid': 17, 'n_correct': 9}",26.406987,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },void onCreate(Bundle savedInstanceState){onCreate();setContentView(R.layout.onboarding);},134,89,14,45,37.5,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'onCreate', '(', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']",27,21,6,6,28.57142857142857
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 240, 'n_valid': 26, 'n_correct': 21}",41.446807,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");StringBuilder(""TimingFilter"");(sb.toString);}",211,76,14,135,68.52791878172589,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', 'StringBuilder', '(', '""TimingFilter""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,25,6,27,58.69565217391305
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 199, 'n_valid': 22, 'n_correct': 22}",38.57806,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","String toString(){if(null)return""""+"""";toString();}",135,50,14,85,70.24793388429752,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', 'return', '""""', '+', '""""', ';', 'toString', '(', ')', ';', '}']",29,19,6,10,43.47826086956522
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 206, 'n_valid': 17, 'n_correct': 16}",28.858023,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(Object other){if(other instanceof Stock){(((Stock)).symbol);}},146,77,12,69,51.49253731343284,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', '}']",39,26,6,13,39.39393939393939
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 206, 'n_valid': 17, 'n_correct': 16}",29.181852,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },boolean equals(Object other){if(other instanceof Stock){(((Stock)).symbol);}},146,77,12,69,51.49253731343284,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', '(', '(', '(', 'Stock', ')', ')', '.', 'symbol', ')', ';', '}', '}']",39,26,6,13,39.39393939393939
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 131, 'n_valid': 13, 'n_correct': 10}",20.488472,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },void onCreate(Bundle savedInstanceState){super.onCreate();setContentView();},144,76,14,68,52.30769230769232,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 264, 'n_valid': 29, 'n_correct': 29}",44.451084,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","String toString(){("""").append("""");(filterClass).append();}",242,58,14,184,80.7017543859649,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', '(', '""""', ')', '.', 'append', '(', '""""', ')', ';', '(', 'filterClass', ')', '.', 'append', '(', ')', ';', '}']",66,23,6,43,71.66666666666667
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_2.txt,0.9969,0.0038,"{'n_total': 327, 'n_valid': 34, 'n_correct': 34}",50.858798,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",boolean equals(Object o){if(o){}if(getClass()){}other=(TldResourcePath)equals();},309,81,12,228,76.76767676767676,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'other', '=', '(', 'TldResourcePath', ')', 'equals', '(', ')', ';', '}']",83,31,6,52,67.53246753246754
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 183, 'n_valid': 21, 'n_correct': 18}",32.906262,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(Object obj){if(obj){equals(((CharEntry)).value);}},141,65,12,76,58.91472868217055,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'CharEntry', ')', ')', '.', 'value', ')', ';', '}', '}']",37,25,6,12,38.70967741935484
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 109, 'n_valid': 14, 'n_correct': 10}",22.503698,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },void init()throws ServletException{super.init;incrementAndGet();},99,65,10,34,38.20224719101123,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', ';', 'incrementAndGet', '(', ')', ';', '}']",23,16,6,7,41.17647058823529
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_2.txt,0.9345,0.0834,"{'n_total': 491, 'n_valid': 47, 'n_correct': 45}",79.858636,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","@Override String toString(){StringWriter=(sw)("""");count();for(;;){((i)toString());}toString();}",270,95,14,175,68.359375,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['@', 'Override', 'String', 'toString', '(', ')', '{', 'StringWriter', '=', '(', 'sw', ')', '(', '""""', ')', ';', 'count', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",77,41,6,36,50.70422535211267
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 122, 'n_valid': 15, 'n_correct': 11}",23.883889,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },void onCreate(){onCreate(savedInstanceState);InitViewPager();},172,62,14,110,69.62025316455697,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', 'savedInstanceState', ')', ';', 'InitViewPager', '(', ')', ';', '}']",39,15,6,24,72.72727272727273
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 142, 'n_valid': 17, 'n_correct': 15}",25.990336,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","void onCreate(){(""onCreate"");}",215,30,14,185,92.03980099502488,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['void', 'onCreate', '(', ')', '{', '(', '""onCreate""', ')', ';', '}']",52,10,6,42,91.30434782608695
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 229, 'n_valid': 32, 'n_correct': 27}",48.97605,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 183, 'n_valid': 24, 'n_correct': 21}",39.856507,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },boolean equals(Object obj){if(obj){this;}},136,42,12,94,75.80645161290323,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', ')', '{', 'this', ';', '}', '}']",35,16,6,19,65.51724137931035
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 231, 'n_valid': 24, 'n_correct': 21}",39.538577,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },boolean equals(Object o){if(this==o)if((Column))(column.name);},186,63,12,123,70.6896551724138,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'if', '(', '(', 'Column', ')', ')', '(', 'column', '.', 'name', ')', ';', '}']",50,26,6,24,54.54545454545454
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_10.txt,0.999,0.0011,"{'n_total': 206, 'n_valid': 19, 'n_correct': 18}",30.017089,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws Exception{{System("""","""");}setUp();}",181,54,11,127,74.70588235294117,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'setUp', '(', ')', ';', '}']",35,21,6,14,48.27586206896552
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_10.txt,0.995,0.0058,"{'n_total': 270, 'n_valid': 43, 'n_correct': 33}",67.609539,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },boolean equals(Object other){if(other instanceof Mark){}},247,57,12,190,80.85106382978722,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', '}', '}']",71,16,6,55,84.61538461538461
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 146, 'n_valid': 20, 'n_correct': 15}",31.718273,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }","String toString(){StringBuilder("""");(sb);}",132,42,14,90,76.27118644067797,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'StringBuilder', '(', '""""', ')', ';', '(', 'sb', ')', ';', '}']",34,15,6,19,67.85714285714286
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 195, 'n_valid': 36, 'n_correct': 22}",55.398979,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },boolean onCreate(){getContext();mOpenHelper=VideoDbHelper();true;},175,66,14,109,67.70186335403726,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['boolean', 'onCreate', '(', ')', '{', 'getContext', '(', ')', ';', 'mOpenHelper', '=', 'VideoDbHelper', '(', ')', ';', 'true', ';', '}']",35,18,6,17,58.620689655172406
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 378, 'n_valid': 30, 'n_correct': 30}",48.906453,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",boolean equals(Object obj){if((obj instanceof URL))(false);if(sameFile)((getRef()));},190,85,12,105,58.98876404494382,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '(', 'obj', 'instanceof', 'URL', ')', ')', '(', 'false', ')', ';', 'if', '(', 'sameFile', ')', '(', '(', 'getRef', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",46.884467,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 165, 'n_valid': 17, 'n_correct': 17}",27.915249,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",void execute()throws BuildException{execute();createLink();(sb);},165,65,13,100,65.78947368421053,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', ')', ';', 'createLink', '(', ')', ';', '(', 'sb', ')', ';', '}']",44,20,6,24,63.1578947368421
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 126, 'n_valid': 13, 'n_correct': 9}",20.998899,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },void setUp()throws Exception{supergetContext().getContentResolver();},114,69,11,45,43.68932038834952,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'supergetContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']",27,16,6,11,52.38095238095239
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 278, 'n_valid': 22, 'n_correct': 22}",33.735216,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","void main(String[]args)throws Exception{((""""));(("""".getBytes()));}",179,66,10,113,66.86390532544378,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', '(', '""""', ')', ')', ';', '(', '(', '""""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']",50,28,6,22,50.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 209, 'n_valid': 18, 'n_correct': 18}",30.609317,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },void main(String[]args){try{(getSystemLookAndFeelClassName());}catch(Exception e){}GUI();},154,90,10,64,44.44444444444444,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', '(', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'GUI', '(', ')', ';', '}']",38,30,6,8,25.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 204, 'n_valid': 25, 'n_correct': 16}",39.228801,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(value==null){NoSuchElementException("" "");}}",109,54,9,55,55.00000000000001,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'NoSuchElementException', '(', '"" ""', ')', ';', '}', '}']",25,19,6,6,31.57894736842105
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 142, 'n_valid': 18, 'n_correct': 13}",29.146168,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },void setUp(){(Session);processor=(session);},107,44,11,63,65.625,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['void', 'setUp', '(', ')', '{', '(', 'Session', ')', ';', 'processor', '=', '(', 'session', ')', ';', '}']",26,16,6,10,50.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 263, 'n_valid': 25, 'n_correct': 19}",42.334309,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@Override void run(){try{TestClient();Request();}catch(Exception x){}},127,70,9,57,48.30508474576271,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', '(', ')', ';', 'Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",33,26,6,7,25.925925925925924
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 210, 'n_valid': 23, 'n_correct': 23}",36.961777,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","Object get(Map<Object>key,Object defaultv){if(null){}}",166,54,9,112,71.3375796178344,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['Object', 'get', '(', 'Map', '<', 'Object', '>', 'key', ',', 'Object', 'defaultv', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",46,20,6,26,65.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 238, 'n_valid': 23, 'n_correct': 23}",36.826285,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","void main(String[]args)throws IOException{(_);("""");}",251,52,10,199,82.57261410788381,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', '(', '_', ')', ';', '(', '""""', ')', ';', '}']",53,20,6,33,70.2127659574468
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 149, 'n_valid': 17, 'n_correct': 17}",26.549604,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },void main(String[]args){sender();},132,34,10,98,80.32786885245902,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'sender', '(', ')', ';', '}']",34,14,6,20,71.42857142857143
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 166, 'n_valid': 15, 'n_correct': 13}",24.30422,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }","void setUp(){setUp();solo=Solo(getInstrumentation(),getActivity);}",122,66,11,56,50.45045045045045,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', '{', 'setUp', '(', ')', ';', 'solo', '=', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', ')', ';', '}']",31,21,6,10,40.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_5.txt,0.4803,0.8791,"{'n_total': 526, 'n_valid': 89, 'n_correct': 42}",131.757344,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","void execute(Tuple tuple){("""");metadata=(Metadata)("""");collector(com());collector.ack();}",305,89,13,216,73.97260273972603,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['void', 'execute', '(', 'Tuple', 'tuple', ')', '{', '(', '""""', ')', ';', 'metadata', '=', '(', 'Metadata', ')', '(', '""""', ')', ';', 'collector', '(', 'com', '(', ')', ')', ';', 'collector', '.', 'ack', '(', ')', ';', '}']",70,34,6,36,56.25
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 236, 'n_valid': 20, 'n_correct': 20}",33.686391,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 228, 'n_valid': 19, 'n_correct': 19}",31.04819,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","void run(){try{draw();}catch(Throwable t){(""""+getMessage);}}",149,60,9,89,63.57142857142857,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', '+', 'getMessage', ')', ';', '}', '}']",36,26,6,10,33.33333333333333
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 135, 'n_valid': 19, 'n_correct': 15}",30.516372,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override int hashCode(){result=result();},174,42,14,132,82.5,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'result', '(', ')', ';', '}']",45,14,6,31,79.48717948717949
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.397516,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }","void execute(){super.execute();((""""));}",123,39,13,84,76.36363636363637,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 151, 'n_valid': 14, 'n_correct': 14}",23.487352,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","void setUp()throws Exception{("""");setUp();}",149,43,11,106,76.81159420289855,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'setUp', '(', ')', ';', '}']",26,16,6,10,50.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_1.txt,0.9866,0.0164,"{'n_total': 419, 'n_valid': 44, 'n_correct': 44}",68.212652,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","void main(String[]args){(""""+getServerInfo());(""""+getServerBuilt());(""""+getServerNumber());(""""+(""""));}",579,101,10,478,84.00702987697716,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', '+', 'getServerInfo', '(', ')', ')', ';', '(', '""""', '+', 'getServerBuilt', '(', ')', ')', ';', '(', '""""', '+', 'getServerNumber', '(', ')', ')', ';', '(', '""""', '+', '(', '""""', ')', ')', ';', '}']",131,42,6,89,71.2
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 304, 'n_valid': 30, 'n_correct': 29}",47.862966,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(long timeout,TimeUnit unit)throws InterruptedException{if(sync(0,unit)){(""""+timeout);}}",248,93,9,155,64.85355648535564,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', '{', 'if', '(', 'sync', '(', '0', ',', 'unit', ')', ')', '{', '(', '""""', '+', 'timeout', ')', ';', '}', '}']",51,30,6,21,46.66666666666666
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 354, 'n_valid': 40, 'n_correct': 40}",63.199681,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){((null)?0:hashCode());((null)?0:hashCode());},262,60,14,202,81.45161290322581,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",75,30,6,45,65.21739130434783
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 350, 'n_valid': 43, 'n_correct': 39}",68.318679,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 236, 'n_valid': 20, 'n_correct': 20}",34.122566,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{(delay);}catch(Exception x){printStackTrace();}(0);},121,67,9,54,48.21428571428572,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', '0', ')', ';', '}']",39,28,6,11,33.33333333333333
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 155, 'n_valid': 17, 'n_correct': 13}",25.747715,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }","void execute()throws BuildException{execute("""".toString());}",140,60,13,80,62.99212598425197,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'execute', '(', '""""', '.', 'toString', '(', ')', ')', ';', '}']",29,17,6,12,52.17391304347826
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 196, 'n_valid': 22, 'n_correct': 18}",35.395724,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },void setUp()throws Exception{setUp();tomcat=(JreMemoryLeakPreventionListener());},182,81,11,101,59.06432748538012,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'setUp', '(', ')', ';', 'tomcat', '=', '(', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']",38,20,6,18,56.25
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 178, 'n_valid': 25, 'n_correct': 15}",37.792031,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },void init(ProcessingEnvironment env){helper=getFiler();elementUtils=getElementUtils();},193,87,10,106,57.92349726775956,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'helper', '=', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'getElementUtils', '(', ')', ';', '}']",49,20,6,29,67.44186046511628
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 139, 'n_valid': 16, 'n_correct': 12}",24.582615,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },void main(String[]args){recreate=CreateTestTable().testPopulateData();},147,71,10,76,55.47445255474452,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'recreate', '=', 'CreateTestTable', '(', ')', '.', 'testPopulateData', '(', ')', ';', '}']",32,20,6,12,46.15384615384615
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 171, 'n_valid': 15, 'n_correct': 15}",24.574907,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","void main(String[]args){("""");(args);}",136,37,10,99,78.57142857142857,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', 'args', ')', ';', '}']",30,18,6,12,50.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 229, 'n_valid': 21, 'n_correct': 21}",32.298924,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","void main(String[]args)throws Exception{(PostgresConfig(Version,"""")).info("""");}",273,79,10,194,73.76425855513308,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', '(', 'PostgresConfig', '(', 'Version', ',', '""""', ')', ')', '.', 'info', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 138, 'n_valid': 17, 'n_correct': 13}",26.764985,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","void execute()throws BuildException{super.execute("""");}",98,55,13,43,50.588235294117645,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', '""""', ')', ';', '}']",22,15,6,7,43.75
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 206, 'n_valid': 20, 'n_correct': 19}",34.725782,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },@Override void run(){try{countUpOrAwait();}catch(InterruptedException x){printStackTrace();}},162,93,9,69,45.09803921568628,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'try', '{', 'countUpOrAwait', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",44,26,6,18,47.368421052631575
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 235, 'n_valid': 31, 'n_correct': 28}",50.106583,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },int hashCode(){result=((null)?0:hashCode());},239,45,14,194,86.22222222222223,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",66,20,6,46,76.66666666666667
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 141, 'n_valid': 18, 'n_correct': 12}",27.582595,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }","void run(){postDelayed(this,delaytime);updateViewLayout(wmParams);}",150,67,9,83,58.86524822695035,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['void', 'run', '(', ')', '{', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'updateViewLayout', '(', 'wmParams', ')', ';', '}']",33,18,6,15,55.55555555555556
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 259, 'n_valid': 32, 'n_correct': 29}",50.251982,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },int hashCode(){((name)?0:hashCode);},154,36,14,118,84.28571428571429,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'name', ')', '?', '0', ':', 'hashCode', ')', ';', '}']",45,16,6,29,74.35897435897436
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 240, 'n_valid': 26, 'n_correct': 21}",41.445733,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","String toString(){if(null)("""");StringBuilder(""TimingFilter"");(sb.toString);}",211,76,14,135,68.52791878172589,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', 'StringBuilder', '(', '""TimingFilter""', ')', ';', '(', 'sb', '.', 'toString', ')', ';', '}']",52,25,6,27,58.69565217391305
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 332, 'n_valid': 29, 'n_correct': 29}",47.525344,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },void run(){while(timer){try{(0);}catch(InterruptedException e){}repaint();}},164,76,9,88,56.774193548387096,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', 'while', '(', 'timer', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 134, 'n_valid': 24, 'n_correct': 16}",37.216787,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){result=xresult+y;},92,33,14,59,75.64102564102564,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'xresult', '+', 'y', ';', '}']",25,12,6,13,68.42105263157895
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",65.166338,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },int hashCode(){((key)hashCode());((null)?0:hashCode());},220,56,14,164,79.6116504854369,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'key', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 253, 'n_valid': 26, 'n_correct': 24}",43.189896,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@Before void setUp()throws Exception{addChannelListener();(new ManagedChannel[]{});(Channel);},317,94,11,223,72.87581699346404,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'Before', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'addChannelListener', '(', ')', ';', '(', 'new', 'ManagedChannel', '[', ']', '{', '}', ')', ';', '(', 'Channel', ')', ';', '}']",72,27,6,45,68.18181818181817
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 152, 'n_valid': 18, 'n_correct': 15}",29.156057,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },void init(ServletConfig config)throws ServletException{},107,56,10,51,52.57731958762887,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', '}']",24,10,6,14,77.77777777777779
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 251, 'n_valid': 31, 'n_correct': 26}",46.432223,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },void init()throws ServletException{((_)).Boolean(getServletConfig.getInitParameter());},344,87,10,257,76.94610778443113,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', '(', '(', '_', ')', ')', '.', 'Boolean', '(', 'getServletConfig', '.', 'getInitParameter', '(', ')', ')', ';', '}']",71,23,6,48,73.84615384615385
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 349, 'n_valid': 39, 'n_correct': 29}",62.997585,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","void setUp()throws Exception{if(SUPPORTED){System("""","""");}super.setUp();Tomcat();(tomcat);configureClientSsl();}",320,112,11,208,67.31391585760518,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'SUPPORTED', ')', '{', 'System', '(', '""""', ',', '""""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', '(', ')', ';', '(', 'tomcat', ')', ';', 'configureClientSsl', '(', ')', ';', '}']",61,39,6,22,40.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 134, 'n_valid': 24, 'n_correct': 16}",37.33672,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },int hashCode(){result=xresult+y;},92,33,14,59,75.64102564102564,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'xresult', '+', 'y', ';', '}']",25,12,6,13,68.42105263157895
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 350, 'n_valid': 43, 'n_correct': 39}",69.263017,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },@Override void run(){for(;;i++){if(null){}}},171,44,9,127,78.39506172839506,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['@', 'Override', 'void', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '}']",62,23,6,39,69.64285714285714
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.801198,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","void execute(){super.execute();((""""));}",122,39,13,83,76.14678899082568,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.869525,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","void execute(){super.execute();((""""));}",126,39,13,87,76.99115044247787,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 135, 'n_valid': 19, 'n_correct': 15}",30.08875,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override int hashCode(){result=result();},168,42,14,126,81.81818181818183,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'result', '(', ')', ';', '}']",45,14,6,31,79.48717948717949
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 166, 'n_valid': 19, 'n_correct': 18}",32.662211,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },CBuffer get(CharSequence key){return(entry)?null:value;},114,56,9,58,55.23809523809524,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'return', '(', 'entry', ')', '?', 'null', ':', 'value', ';', '}']",30,17,6,13,54.16666666666666
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 415, 'n_valid': 40, 'n_correct': 40}",65.041314,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","void main(String args){try{langTools("""",langTools);(null);}catch(Exception e){(Level);}}",295,88,10,207,72.63157894736842,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['void', 'main', '(', 'String', 'args', ')', '{', 'try', '{', 'langTools', '(', '""""', ',', 'langTools', ')', ';', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'Level', ')', ';', '}', '}']",78,33,6,45,62.5
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 136, 'n_valid': 12, 'n_correct': 12}",20.253713,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",void main(String[]args)throws Exception{run();},124,47,10,77,67.54385964912281,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'run', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 137, 'n_valid': 15, 'n_correct': 11}",22.86948,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","void execute(){super.execute();((""""));}",126,39,13,87,76.99115044247787,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",29,18,6,11,47.82608695652174
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 365, 'n_valid': 40, 'n_correct': 40}",64.463866,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },int hashCode(){((matches)hashCode());((null)?0:hashCode());},236,60,14,176,79.27927927927928,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', '(', '(', 'matches', ')', 'hashCode', '(', ')', ')', ';', '(', '(', 'null', ')', '?', '0', ':', 'hashCode', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 172, 'n_valid': 21, 'n_correct': 20}",35.121981,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@Override int hashCode(){(completed?1:0);},213,42,14,171,85.92964824120602,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'int', 'hashCode', '(', ')', '{', '(', 'completed', '?', '1', ':', '0', ')', ';', '}']",59,16,6,43,81.13207547169812
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_9.txt,0.9987,0.0017,"{'n_total': 359, 'n_valid': 34, 'n_correct': 34}",52.945917,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(Object o){if(o){}if(getClass()){}that=(Key)(id);},268,64,12,204,79.6875,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'if', '(', 'getClass', '(', ')', ')', '{', '}', 'that', '=', '(', 'Key', ')', '(', 'id', ')', ';', '}']",85,31,6,54,68.35443037974683
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 208, 'n_valid': 25, 'n_correct': 20}",39.478741,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },boolean equals(){if(obj){equals(((NamingEntry)obj).name);}{}},152,61,12,91,65.0,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'obj', ')', '{', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', '{', '}', '}']",40,26,6,14,41.17647058823529
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 284, 'n_valid': 24, 'n_correct': 20}",39.106173,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },void onCreate(Bundle savedInstanceState){super.onCreate(VideoCursorMapper());(getString());if(savedInstanceState==null){prepareEntranceTransition();}},319,150,14,169,55.40983606557377,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'VideoCursorMapper', '(', ')', ')', ';', '(', 'getString', '(', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', '}']",61,35,6,26,47.27272727272727
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 198, 'n_valid': 24, 'n_correct': 21}",37.448399,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },void onCreate(){onCreate();if(mNotifManager){(Context);}},171,57,14,114,72.61146496815286,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['void', 'onCreate', '(', ')', '{', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', ')', '{', '(', 'Context', ')', ';', '}', '}']",35,20,6,15,51.72413793103448
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 131, 'n_valid': 13, 'n_correct': 10}",20.801535,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },void onCreate(Bundle savedInstanceState){super.onCreate();setContentView();},140,76,14,64,50.79365079365079,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'setContentView', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 201, 'n_valid': 20, 'n_correct': 20}",32.637396,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },String toString(){for(Node n:children){(toString());}toString();},165,65,14,100,66.22516556291392,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', '(', 'toString', '(', ')', ')', ';', '}', 'toString', '(', ')', ';', '}']",44,25,6,19,50.0
code2seq,METHOD_NAME,dd_token,small,dd_token_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 229, 'n_valid': 32, 'n_correct': 27}",49.510983,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",String toString(){if(buff){}if(0){}toString;},150,45,14,105,77.20588235294117,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'buff', ')', '{', '}', 'if', '(', '0', ')', '{', '}', 'toString', ';', '}']",42,20,6,22,61.11111111111112
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_1.txt,0.9983,0.0022,"{'n_total': 1467, 'n_valid': 141, 'n_correct': 137}",232.545372,@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; },boolean equals(Object obj){(this==obj);if(null){(null);}if((other))if(null){}if((filename))(isLink);if(null){(null);}if((other))if(mimeType){(null);}if((other))if(null){(status);}((other));},2094,190,12,1904,91.4505283381364,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', 'return', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', 'return', 'false', ';', 'GradingAttachmentData', 'other', '=', '(', 'GradingAttachmentData', ')', 'obj', ';', 'if', '(', 'attachmentId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentId', '.', 'equals', '(', 'other', '.', 'attachmentId', ')', ')', 'return', 'false', ';', 'if', '(', 'attachmentType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentType', '.', 'equals', '(', 'other', '.', 'attachmentType', ')', ')', 'return', 'false', ';', 'if', '(', 'createdBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdBy', '.', 'equals', '(', 'other', '.', 'createdBy', ')', ')', 'return', 'false', ';', 'if', '(', 'createdDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdDate', '.', 'equals', '(', 'other', '.', 'createdDate', ')', ')', 'return', 'false', ';', 'if', '(', 'description', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'description', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'description', '.', 'equals', '(', 'other', '.', 'description', ')', ')', 'return', 'false', ';', 'if', '(', 'fileSize', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'fileSize', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'fileSize', '.', 'equals', '(', 'other', '.', 'fileSize', ')', ')', 'return', 'false', ';', 'if', '(', 'filename', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'filename', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'filename', '.', 'equals', '(', 'other', '.', 'filename', ')', ')', 'return', 'false', ';', 'if', '(', 'isLink', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'isLink', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'isLink', '.', 'equals', '(', 'other', '.', 'isLink', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedBy', '.', 'equals', '(', 'other', '.', 'lastModifiedBy', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedDate', '.', 'equals', '(', 'other', '.', 'lastModifiedDate', ')', ')', 'return', 'false', ';', 'if', '(', 'location', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'location', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'location', '.', 'equals', '(', 'other', '.', 'location', ')', ')', 'return', 'false', ';', 'if', '(', 'mimeType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'mimeType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'mimeType', '.', 'equals', '(', 'other', '.', 'mimeType', ')', ')', 'return', 'false', ';', 'if', '(', 'resourceId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'resourceId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceId', '.', 'equals', '(', 'other', '.', 'resourceId', ')', ')', 'return', 'false', ';', 'if', '(', 'status', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'status', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'status', '.', 'equals', '(', 'other', '.', 'status', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', '(', 'this', '==', 'obj', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'null', ')', '{', '}', 'if', '(', '(', 'filename', ')', ')', '(', 'isLink', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'mimeType', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'null', ')', '{', '(', 'status', ')', ';', '}', '(', '(', 'other', ')', ')', ';', '}']",545,94,6,451,83.6734693877551
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_3.txt,0.9935,0.0105,"{'n_total': 1110, 'n_valid': 122, 'n_correct': 120}",193.888344,public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (!(obj instanceof NTRUSigningKeyGenerationParameters)) { return false; } NTRUSigningKeyGenerationParameters other = (NTRUSigningKeyGenerationParameters) obj; if (B != other.B) { return false; } if (N != other.N) { return false; } if (basisType != other.basisType) { return false; } if (Double.doubleToLongBits(beta) != Double.doubleToLongBits(other.beta)) { return false; } if (Double.doubleToLongBits(betaSq) != Double.doubleToLongBits(other.betaSq)) { return false; } if (bitsF != other.bitsF) { return false; } if (d != other.d) { return false; } if (d1 != other.d1) { return false; } if (d2 != other.d2) { return false; } if (d3 != other.d3) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (keyGenAlg != other.keyGenAlg) { return false; } if (Double.doubleToLongBits(keyNormBound) != Double.doubleToLongBits(other.keyNormBound)) { return false; } if (Double.doubleToLongBits(keyNormBoundSq) != Double.doubleToLongBits(other.keyNormBoundSq)) { return false; } if (Double.doubleToLongBits(normBound) != Double.doubleToLongBits(other.normBound)) { return false; } if (Double.doubleToLongBits(normBoundSq) != Double.doubleToLongBits(other.normBoundSq)) { return false; } if (polyType != other.polyType) { return false; } if (primeCheck != other.primeCheck) { return false; } if (q != other.q) { return false; } if (signFailTolerance != other.signFailTolerance) { return false; } if (sparse != other.sparse) { return false; } return true; },boolean equals(Object obj){if(this==NTRUSigningKeyGenerationParameters)if(B){}if(basisType!=other){}if(1)if(d){}if(3){}if(hashAlg){if(other){}}if(getAlgorithmName()){}if(doubleToLongBits()){}if((keyNormBoundSq)){}if(sparse){}},1687,226,12,1461,87.22388059701493,"['public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', '(', 'obj', 'instanceof', 'NTRUSigningKeyGenerationParameters', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUSigningKeyGenerationParameters', 'other', '=', '(', 'NTRUSigningKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'B', '!=', 'other', '.', 'B', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'basisType', '!=', 'other', '.', 'basisType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'beta', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'beta', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'betaSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'betaSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bitsF', '!=', 'other', '.', 'bitsF', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd', '!=', 'other', '.', 'd', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd1', '!=', 'other', '.', 'd1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd2', '!=', 'other', '.', 'd2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd3', '!=', 'other', '.', 'd3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'keyGenAlg', '!=', 'other', '.', 'keyGenAlg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'primeCheck', '!=', 'other', '.', 'primeCheck', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'signFailTolerance', '!=', 'other', '.', 'signFailTolerance', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'NTRUSigningKeyGenerationParameters', ')', 'if', '(', 'B', ')', '{', '}', 'if', '(', 'basisType', '!=', 'other', ')', '{', '}', 'if', '(', '1', ')', 'if', '(', 'd', ')', '{', '}', 'if', '(', '3', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'other', ')', '{', '}', '}', 'if', '(', 'getAlgorithmName', '(', ')', ')', '{', '}', 'if', '(', 'doubleToLongBits', '(', ')', ')', '{', '}', 'if', '(', '(', 'keyNormBoundSq', ')', ')', '{', '}', 'if', '(', 'sparse', ')', '{', '}', '}']",423,86,6,337,80.81534772182253
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_1.txt,0.9922,0.0132,"{'n_total': 3692, 'n_valid': 299, 'n_correct': 291}",494.289089,"@Override protected void onCreate(Bundle savedInstanceState) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy); super.onCreate(savedInstanceState); setContentView(R.layout.main); map = (MapView) findViewById(R.id.map); map.setBuiltInZoomControls(true); map.setMultiTouchControls(true); GeoPoint startPoint = new GeoPoint(48.13, -1.63); IMapController mapController = map.getController(); mapController.setZoom(10.0); mapController.setCenter(startPoint); Marker startMarker = new Marker(map); startMarker.setPosition(startPoint); startMarker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_BOTTOM); startMarker.setTitle(""Start point""); startMarker.setDraggable(true); startMarker.setOnMarkerDragListener(new OnMarkerDragListenerDrawer()); map.getOverlays().add(startMarker); RoadManager roadManager = new OSRMRoadManager(this); ArrayList<GeoPoint> waypoints = new ArrayList<GeoPoint>(); waypoints.add(startPoint); GeoPoint endPoint = new GeoPoint(48.4, -1.9); waypoints.add(endPoint); Road road = roadManager.getRoad(waypoints); if (road.mStatus != Road.STATUS_OK) Toast.makeText(this, ""Error when loading the road - status="" + road.mStatus, Toast.LENGTH_SHORT).show(); Polyline roadOverlay = RoadManager.buildRoadOverlay(road); map.getOverlays().add(roadOverlay); FolderOverlay roadMarkers = new FolderOverlay(); map.getOverlays().add(roadMarkers); Drawable nodeIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_node, null); for (int i = 0; i < road.mNodes.size(); i++) { RoadNode node = road.mNodes.get(i); Marker nodeMarker = new Marker(map); nodeMarker.setPosition(node.mLocation); nodeMarker.setIcon(nodeIcon); nodeMarker.setTitle(""Step "" + i); nodeMarker.setSnippet(node.mInstructions); nodeMarker.setSubDescription(Road.getLengthDurationText(this, node.mLength, node.mDuration)); Drawable iconContinue = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_continue, null); nodeMarker.setImage(iconContinue); roadMarkers.add(nodeMarker); } NominatimPOIProvider poiProvider = new NominatimPOIProvider(""OsmNavigator/1.0""); ArrayList<POI> pois = poiProvider.getPOICloseTo(startPoint, ""cinema"", 50, 0.1); RadiusMarkerClusterer poiMarkers = new RadiusMarkerClusterer(this); Drawable clusterIconD = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_cluster, null); Bitmap clusterIcon = ((BitmapDrawable) clusterIconD).getBitmap(); poiMarkers.setIcon(clusterIcon); poiMarkers.getTextPaint().setTextSize(12 * getResources().getDisplayMetrics().density); poiMarkers.mAnchorV = Marker.ANCHOR_BOTTOM; poiMarkers.mTextAnchorU = 0.70f; poiMarkers.mTextAnchorV = 0.27f; map.getOverlays().add(poiMarkers); Drawable poiIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_default, null); if (pois != null) { for (POI poi : pois) { Marker poiMarker = new Marker(map); poiMarker.setTitle(poi.mType); poiMarker.setSnippet(poi.mDescription); poiMarker.setPosition(poi.mLocation); poiMarker.setIcon(poiIcon); if (poi.mThumbnail != null) { poiMarker.setImage(new BitmapDrawable(getResources(), poi.mThumbnail)); } poiMarker.setInfoWindow(new CustomInfoWindow(map)); poiMarker.setRelatedObject(poi); poiMarkers.add(poiMarker); } } mKmlDocument = new KmlDocument(); OverpassAPIProvider overpassProvider = new OverpassAPIProvider(); BoundingBox oBB = new BoundingBox(startPoint.getLatitude() + 0.25, startPoint.getLongitude() + 0.25, startPoint.getLatitude() - 0.25, startPoint.getLongitude() - 0.25); String oUrl = overpassProvider.urlForTagSearchKml(""highway=speed_camera"", oBB, 500, 30); boolean ok = overpassProvider.addInKmlFolder(mKmlDocument.mKmlRoot, oUrl); if (ok) { Drawable defaultMarker = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_kml_point, null); Bitmap defaultBitmap = ((BitmapDrawable) defaultMarker).getBitmap(); Style defaultStyle = new Style(defaultBitmap, 0x901010AA, 3.0f, 0x20AA1010); KmlFeature.Styler styler = new MyKmlStyler(defaultStyle); FolderOverlay kmlOverlay = (FolderOverlay) mKmlDocument.mKmlRoot.buildOverlay(map, defaultStyle, styler, mKmlDocument); map.getOverlays().add(kmlOverlay); BoundingBox bb = mKmlDocument.mKmlRoot.getBoundingBox(); if (bb != null) { setInitialViewOn(bb); } } else Toast.makeText(this, ""Error when loading KML"", Toast.LENGTH_SHORT).show(); if (mKmlDocument.mKmlRoot != null) { KmlFolder root = mKmlDocument.mKmlRoot; root.addOverlay(roadOverlay, mKmlDocument); root.addOverlay(roadMarkers, mKmlDocument); mKmlDocument.saveAsKML(mKmlDocument.getDefaultPathForAndroid(""my_route.kml"")); mKmlDocument.saveAsGeoJSON(mKmlDocument.getDefaultPathForAndroid(""my_route.json"")); } MapEventsOverlay mapEventsOverlay = new MapEventsOverlay(this); map.getOverlays().add(0, mapEventsOverlay); }","void onCreate(Bundle savedInstanceState){policy=(MapView)(R)(true);(0).getDrawable(getResources().drawable);for(;;i++){road();(node).setSubDescription((this));(_).setImage();(nodeMarker);}NominatimPOIProvider(getResources(),R);((BitmapDrawable));add();(null);{for(POI poi:pois){(poi);(mDescription);if(null){((mThumbnail));}}}(getLatitude().getLatitude());("""");(oUrl);if(ok){getDrawable(getResources(),R);((BitmapDrawable)).Style();styler();if(null){}}("""").show();if(null){((""""));}getOverlays();}",4778,496,14,4282,89.88245172124265,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'StrictMode', '.', 'ThreadPolicy', 'policy', '=', 'new', 'StrictMode', '.', 'ThreadPolicy', '.', 'Builder', '(', ')', '.', 'permitAll', '(', ')', '.', 'build', '(', ')', ';', 'StrictMode', '.', 'setThreadPolicy', '(', 'policy', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'map', '=', '(', 'MapView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'map', ')', ';', 'map', '.', 'setBuiltInZoomControls', '(', 'true', ')', ';', 'map', '.', 'setMultiTouchControls', '(', 'true', ')', ';', 'GeoPoint', 'startPoint', '=', 'new', 'GeoPoint', '(', '48.13', ',', '-', '1.63', ')', ';', 'IMapController', 'mapController', '=', 'map', '.', 'getController', '(', ')', ';', 'mapController', '.', 'setZoom', '(', '10.0', ')', ';', 'mapController', '.', 'setCenter', '(', 'startPoint', ')', ';', 'Marker', 'startMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'startMarker', '.', 'setPosition', '(', 'startPoint', ')', ';', 'startMarker', '.', 'setAnchor', '(', 'Marker', '.', 'ANCHOR_CENTER', ',', 'Marker', '.', 'ANCHOR_BOTTOM', ')', ';', 'startMarker', '.', 'setTitle', '(', '""Start point""', ')', ';', 'startMarker', '.', 'setDraggable', '(', 'true', ')', ';', 'startMarker', '.', 'setOnMarkerDragListener', '(', 'new', 'OnMarkerDragListenerDrawer', '(', ')', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'startMarker', ')', ';', 'RoadManager', 'roadManager', '=', 'new', 'OSRMRoadManager', '(', 'this', ')', ';', 'ArrayList', '<', 'GeoPoint', '>', 'waypoints', '=', 'new', 'ArrayList', '<', 'GeoPoint', '>', '(', ')', ';', 'waypoints', '.', 'add', '(', 'startPoint', ')', ';', 'GeoPoint', 'endPoint', '=', 'new', 'GeoPoint', '(', '48.4', ',', '-', '1.9', ')', ';', 'waypoints', '.', 'add', '(', 'endPoint', ')', ';', 'Road', 'road', '=', 'roadManager', '.', 'getRoad', '(', 'waypoints', ')', ';', 'if', '(', 'road', '.', 'mStatus', '!=', 'Road', '.', 'STATUS_OK', ')', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading the road - status=""', '+', 'road', '.', 'mStatus', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'Polyline', 'roadOverlay', '=', 'RoadManager', '.', 'buildRoadOverlay', '(', 'road', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadOverlay', ')', ';', 'FolderOverlay', 'roadMarkers', '=', 'new', 'FolderOverlay', '(', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadMarkers', ')', ';', 'Drawable', 'nodeIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_node', ',', 'null', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'road', '.', 'mNodes', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'RoadNode', 'node', '=', 'road', '.', 'mNodes', '.', 'get', '(', 'i', ')', ';', 'Marker', 'nodeMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'nodeMarker', '.', 'setPosition', '(', 'node', '.', 'mLocation', ')', ';', 'nodeMarker', '.', 'setIcon', '(', 'nodeIcon', ')', ';', 'nodeMarker', '.', 'setTitle', '(', '""Step ""', '+', 'i', ')', ';', 'nodeMarker', '.', 'setSnippet', '(', 'node', '.', 'mInstructions', ')', ';', 'nodeMarker', '.', 'setSubDescription', '(', 'Road', '.', 'getLengthDurationText', '(', 'this', ',', 'node', '.', 'mLength', ',', 'node', '.', 'mDuration', ')', ')', ';', 'Drawable', 'iconContinue', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'ic_continue', ',', 'null', ')', ';', 'nodeMarker', '.', 'setImage', '(', 'iconContinue', ')', ';', 'roadMarkers', '.', 'add', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', 'poiProvider', '=', 'new', 'NominatimPOIProvider', '(', '""OsmNavigator/1.0""', ')', ';', 'ArrayList', '<', 'POI', '>', 'pois', '=', 'poiProvider', '.', 'getPOICloseTo', '(', 'startPoint', ',', '""cinema""', ',', '50', ',', '0.1', ')', ';', 'RadiusMarkerClusterer', 'poiMarkers', '=', 'new', 'RadiusMarkerClusterer', '(', 'this', ')', ';', 'Drawable', 'clusterIconD', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_cluster', ',', 'null', ')', ';', 'Bitmap', 'clusterIcon', '=', '(', '(', 'BitmapDrawable', ')', 'clusterIconD', ')', '.', 'getBitmap', '(', ')', ';', 'poiMarkers', '.', 'setIcon', '(', 'clusterIcon', ')', ';', 'poiMarkers', '.', 'getTextPaint', '(', ')', '.', 'setTextSize', '(', '12', '*', 'getResources', '(', ')', '.', 'getDisplayMetrics', '(', ')', '.', 'density', ')', ';', 'poiMarkers', '.', 'mAnchorV', '=', 'Marker', '.', 'ANCHOR_BOTTOM', ';', 'poiMarkers', '.', 'mTextAnchorU', '=', '0.70f', ';', 'poiMarkers', '.', 'mTextAnchorV', '=', '0.27f', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'poiMarkers', ')', ';', 'Drawable', 'poiIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_default', ',', 'null', ')', ';', 'if', '(', 'pois', '!=', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', 'Marker', 'poiMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'poiMarker', '.', 'setTitle', '(', 'poi', '.', 'mType', ')', ';', 'poiMarker', '.', 'setSnippet', '(', 'poi', '.', 'mDescription', ')', ';', 'poiMarker', '.', 'setPosition', '(', 'poi', '.', 'mLocation', ')', ';', 'poiMarker', '.', 'setIcon', '(', 'poiIcon', ')', ';', 'if', '(', 'poi', '.', 'mThumbnail', '!=', 'null', ')', '{', 'poiMarker', '.', 'setImage', '(', 'new', 'BitmapDrawable', '(', 'getResources', '(', ')', ',', 'poi', '.', 'mThumbnail', ')', ')', ';', '}', 'poiMarker', '.', 'setInfoWindow', '(', 'new', 'CustomInfoWindow', '(', 'map', ')', ')', ';', 'poiMarker', '.', 'setRelatedObject', '(', 'poi', ')', ';', 'poiMarkers', '.', 'add', '(', 'poiMarker', ')', ';', '}', '}', 'mKmlDocument', '=', 'new', 'KmlDocument', '(', ')', ';', 'OverpassAPIProvider', 'overpassProvider', '=', 'new', 'OverpassAPIProvider', '(', ')', ';', 'BoundingBox', 'oBB', '=', 'new', 'BoundingBox', '(', 'startPoint', '.', 'getLatitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLatitude', '(', ')', '-', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '-', '0.25', ')', ';', 'String', 'oUrl', '=', 'overpassProvider', '.', 'urlForTagSearchKml', '(', '""highway=speed_camera""', ',', 'oBB', ',', '500', ',', '30', ')', ';', 'boolean', 'ok', '=', 'overpassProvider', '.', 'addInKmlFolder', '(', 'mKmlDocument', '.', 'mKmlRoot', ',', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'Drawable', 'defaultMarker', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_kml_point', ',', 'null', ')', ';', 'Bitmap', 'defaultBitmap', '=', '(', '(', 'BitmapDrawable', ')', 'defaultMarker', ')', '.', 'getBitmap', '(', ')', ';', 'Style', 'defaultStyle', '=', 'new', 'Style', '(', 'defaultBitmap', ',', '0x901010AA', ',', '3.0f', ',', '0x20AA1010', ')', ';', 'KmlFeature', '.', 'Styler', 'styler', '=', 'new', 'MyKmlStyler', '(', 'defaultStyle', ')', ';', 'FolderOverlay', 'kmlOverlay', '=', '(', 'FolderOverlay', ')', 'mKmlDocument', '.', 'mKmlRoot', '.', 'buildOverlay', '(', 'map', ',', 'defaultStyle', ',', 'styler', ',', 'mKmlDocument', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'kmlOverlay', ')', ';', 'BoundingBox', 'bb', '=', 'mKmlDocument', '.', 'mKmlRoot', '.', 'getBoundingBox', '(', ')', ';', 'if', '(', 'bb', '!=', 'null', ')', '{', 'setInitialViewOn', '(', 'bb', ')', ';', '}', '}', 'else', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading KML""', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'if', '(', 'mKmlDocument', '.', 'mKmlRoot', '!=', 'null', ')', '{', 'KmlFolder', 'root', '=', 'mKmlDocument', '.', 'mKmlRoot', ';', 'root', '.', 'addOverlay', '(', 'roadOverlay', ',', 'mKmlDocument', ')', ';', 'root', '.', 'addOverlay', '(', 'roadMarkers', ',', 'mKmlDocument', ')', ';', 'mKmlDocument', '.', 'saveAsKML', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.kml""', ')', ')', ';', 'mKmlDocument', '.', 'saveAsGeoJSON', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.json""', ')', ')', ';', '}', 'MapEventsOverlay', 'mapEventsOverlay', '=', 'new', 'MapEventsOverlay', '(', 'this', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', '0', ',', 'mapEventsOverlay', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'policy', '=', '(', 'MapView', ')', '(', 'R', ')', '(', 'true', ')', ';', '(', '0', ')', '.', 'getDrawable', '(', 'getResources', '(', ')', '.', 'drawable', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'road', '(', ')', ';', '(', 'node', ')', '.', 'setSubDescription', '(', '(', 'this', ')', ')', ';', '(', '_', ')', '.', 'setImage', '(', ')', ';', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', '(', 'getResources', '(', ')', ',', 'R', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', ';', 'add', '(', ')', ';', '(', 'null', ')', ';', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', '(', 'poi', ')', ';', '(', 'mDescription', ')', ';', 'if', '(', 'null', ')', '{', '(', '(', 'mThumbnail', ')', ')', ';', '}', '}', '}', '(', 'getLatitude', '(', ')', '.', 'getLatitude', '(', ')', ')', ';', '(', '""""', ')', ';', '(', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', '.', 'Style', '(', ')', ';', 'styler', '(', ')', ';', 'if', '(', 'null', ')', '{', '}', '}', '(', '""""', ')', '.', 'show', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', '(', '""""', ')', ')', ';', '}', 'getOverlays', '(', ')', ';', '}']",1031,200,6,831,81.07317073170732
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_2.txt,0.8056,0.2724,"{'n_total': 6781, 'n_valid': 1543, 'n_correct': 180}",2274.869909,@Override public boolean equals(Object obj) { boolean equalled = true; if (obj == null) { return false; } if (!getClass().equals(obj.getClass())) { return false; } Entitlement object = (Entitlement) obj; if (name == null) { if (object.getName() != null) { return false; } } else { if ((object.getName()) == null) { return false; } else if (!name.equals(object.getName())) { return false; } } if (applicationName == null) { if (object.getApplicationName() != null) { return false; } } else { if ((object.getApplicationName()) == null) { return false; } else if (!applicationName.equals(object.getApplicationName())) { return false; } } if (resourceNames == null) { if (object.getResourceNames() != null) { return false; } } else { if ((object.getResourceNames()) == null) { return false; } else if (!resourceNames.equals(object.getResourceNames())) { return false; } } if (actionValues == null) { if ((object.getActionValues() != null) && !object.getActionValues().isEmpty()) { return false; } } else { if ((object.getActionValues()) == null) { return false; } else if (!actionValues.equals(object.getActionValues())) { return false; } } if (advices == null) { if ((object.getAdvices() != null) && !object.getAdvices().isEmpty()) { return false; } } else { if ((object.getAdvices()) == null) { return false; } else if (!advices.equals(object.getAdvices())) { return false; } } if (attributes == null) { if ((object.getAttributes() != null) && !object.getAttributes().isEmpty()) { return false; } } else { if ((object.getAttributes()) == null) { return false; } else if (!attributes.equals(object.getAttributes())) { return false; } } return equalled; },boolean equals(Object obj){ equalled =true; if(obj){}if(getClass().equals()){}object= (Entitlement)obj; if (name = null){if(getName()!= null){}}{ if ((object()) == null){ }if(equals(object.getName())){}{}}if(resourceNames){if(null){;}}{if((getResourceNames) )  if ((object)){}} if(actionValues== null){ if((null)&getActionValues) {  } } { if ((object) ){}if (!actionValuesequals(object)) {} } if(advices= null){ if ((null)&getAdvices.isEmpty()) { }}{if ((object) ==null){} if (!advices.equals(object())){} } if (null) {if((null)) {}if (equals(object())) {}} },1651,559,12,1092,66.62599145820623,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'boolean', 'equalled', '=', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'getClass', '(', ')', '.', 'equals', '(', 'obj', '.', 'getClass', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'Entitlement', 'object', '=', '(', 'Entitlement', ')', 'obj', ';', 'if', '(', 'name', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getName', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getName', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'name', '.', 'equals', '(', 'object', '.', 'getName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'applicationName', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getApplicationName', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getApplicationName', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'applicationName', '.', 'equals', '(', 'object', '.', 'getApplicationName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'resourceNames', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getResourceNames', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getResourceNames', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceNames', '.', 'equals', '(', 'object', '.', 'getResourceNames', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'actionValues', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getActionValues', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getActionValues', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getActionValues', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'actionValues', '.', 'equals', '(', 'object', '.', 'getActionValues', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'advices', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getAdvices', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getAdvices', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getAdvices', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'advices', '.', 'equals', '(', 'object', '.', 'getAdvices', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'attributes', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getAttributes', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getAttributes', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getAttributes', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attributes', '.', 'equals', '(', 'object', '.', 'getAttributes', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'return', 'equalled', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'equalled', '=', 'true', ';', 'if', '(', 'obj', ')', '{', '}', 'if', '(', 'getClass', '(', ')', '.', 'equals', '(', ')', ')', '{', '}', 'object', '=', '(', 'Entitlement', ')', 'obj', ';', 'if', '(', 'name', '=', 'null', ')', '{', 'if', '(', 'getName', '(', ')', '!=', 'null', ')', '{', '}', '}', '{', 'if', '(', '(', 'object', '(', ')', ')', '==', 'null', ')', '{', '}', 'if', '(', 'equals', '(', 'object', '.', 'getName', '(', ')', ')', ')', '{', '}', '{', '}', '}', 'if', '(', 'resourceNames', ')', '{', 'if', '(', 'null', ')', '{', ';', '}', '}', '{', 'if', '(', '(', 'getResourceNames', ')', ')', 'if', '(', '(', 'object', ')', ')', '{', '}', '}', 'if', '(', 'actionValues', '==', 'null', ')', '{', 'if', '(', '(', 'null', ')', '&', 'getActionValues', ')', '{', '}', '}', '{', 'if', '(', '(', 'object', ')', ')', '{', '}', 'if', '(', '!', 'actionValuesequals', '(', 'object', ')', ')', '{', '}', '}', 'if', '(', 'advices', '=', 'null', ')', '{', 'if', '(', '(', 'null', ')', '&', 'getAdvices', '.', 'isEmpty', '(', ')', ')', '{', '}', '}', '{', 'if', '(', '(', 'object', ')', '==', 'null', ')', '{', '}', 'if', '(', '!', 'advices', '.', 'equals', '(', 'object', '(', ')', ')', ')', '{', '}', '}', 'if', '(', 'null', ')', '{', 'if', '(', '(', 'null', ')', ')', '{', '}', 'if', '(', 'equals', '(', 'object', '(', ')', ')', ')', '{', '}', '}', '}']",476,224,6,252,53.61702127659574
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,onCreate_5.txt,0.9996,0.0009,"{'n_total': 11701, 'n_valid': 1145, 'n_correct': 373}",1948.4494,"@Override protected void onCreate(Bundle savedInstanceState) { if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(""theme"", false)) { setTheme(R.style.DayTheme); } super.onCreate(savedInstanceState); addPreferencesFromResource(R.xml.preference); findPreference(""super_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object o) { MainActivity.writePreferences(o.toString(), SUPER_MODE_NAME); return true; } }); findPreference(""only_once"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ONLY_ONCE_NAME); return true; } }); findPreference(""standard_mode"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), STANDARD_MODE_NAME); return true; } }); findPreference(""import"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { final AppCompatEditText editText = new AppCompatEditText(PreferencesActivity.this); editText.setHint(R.string.import_rules); new AlertDialog.Builder(PreferencesActivity.this).setTitle(R.string.conf_import_rules_name).setView(editText).setPositiveButton(R.string.OK, new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialogInterface, int i) { MainActivity.appendPreferences(""\n"" + editText.getText().toString(), Constant.LIST_NAME); } }).setNegativeButton(R.string.cancel, null).show(); return false; } }); findPreference(""online_rules"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { setResult(RESULT_OK); finish(); return false; } }); findPreference(""about"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { clickTime++; if (clickTime >= 5 * 59) { clickTime = 0; try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id="" + getPackageName()))); } catch (Throwable ignored) { } Toast.makeText(PreferencesActivity.this, R.string.give_me_five_stars, Toast.LENGTH_LONG).show(); } preference.setSummary(String.format(Locale.CHINA, getString(R.string.conf_joke), clickTime / 59, clickTime % 59)); return false; } }); findPreference(""version"").setSummary(getVersionName(this)); findPreference(""pay"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { Toast.makeText(PreferencesActivity.this, R.string.no_donate, Toast.LENGTH_SHORT).show(); return false; } }); findPreference(""source"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new AlertDialog.Builder(PreferencesActivity.this).setTitle(""Open Source"").setMessage(""Nothing"").setPositiveButton(getString(R.string.OK), null).show(); return false; } }); findPreference(""qq"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https://jq.qq.com/?_wv=1027&k=4EepPOs""))); } catch (Throwable ignored) { } return false; } }); findPreference(""guide"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { try { setResult(RESULT_GUIDE); finish(); } catch (ActivityNotFoundException a) { a.printStackTrace(); Toast.makeText(PreferencesActivity.this, getString(R.string.unsupport_of_package), Toast.LENGTH_SHORT).show(); } return false; } }); findPreference(""log"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { new Thread(new Runnable() { @Override public void run() { final String bug = String.format(Locale.CHINA, ""Logcat:\n\n%s\n\n"" + ""=================\n\n"" + ""XposedLog:\n\n%s\n\n"" + ""=================\n\n"" + ""Phone:\n\n%s\n\n"", getLogcatInfo(), getXposedLogInfo(), getPhoneInfo()); runOnUiThread(new Runnable() { @Override public void run() { shareText(bug); } }); } }).start(); return false; } }); findPreference(""theme"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() { @Override public boolean onPreferenceClick(Preference preference) { finish(); Intent restart = new Intent(PreferencesActivity.this, MainActivity.class); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK); } else { restart.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } startActivity(restart); return false; } }); findPreference(""enable_log"").setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() { @Override public boolean onPreferenceChange(Preference preference, Object newValue) { MainActivity.writePreferences(newValue.toString(), ENABLE_LOG_NAME); return true; } }); }","void onCreate(Bundle savedInstanceState){if(PreferenceManager().getBoolean(""theme"",false)){(R);}(R);("""").setOnPreferenceChangeListener(new Preference(){onPreferenceChange(Preference preference,Object o){MainActivity(o(),NAME);}});("""").setOnPreferenceChangeListener(new OnPreferenceChangeListener(){onPreferenceChange(Preference preference,Object newValue){(toString());}});(new OnPreferenceClickListener(){onPreferenceClick(){editText=(PreferencesActivity)(new DialogInterface(){onClick(DialogInterface dialogInterface,int i) {MainActivity();}}).setNegativeButton().show();}});("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){onPreferenceClick(Preference preference){;} });(""about"").setOnPreferenceClickListener(new OnPreferenceClickListener() { onPreferenceClick(Preference preference){ clickTime++;if(5){try{ (newIntent(parse(""="")));}catch(Throwable ignored){ }makeText().show();}(format());  } });("""").setOnPreferenceClickListener(new OnPreferenceClickListener(){ onPreferenceClick(){(SHORT);}onPreferenceClick(Preference preference){ AlertDialog(); }});(""qq"").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){onPreferenceClick(){try {(Intent(("""")));} catch (Throwable ignored){}}});(""guide"").setOnPreferenceClickListener(new OnPreferenceClickListener(){boolean onPreferenceClick(Preference preference){try{}catch (ActivityNotFoundException a){printStackTrace(getString(),_SHORT).show();}}});(""log"").setOnPreferenceClickListener(new Preference(){{(new Runnable() {run(){format(""n"", getXposedLogInfo());runOnUiThread(new Runnable() { run() {}}); }});}});(new Preference() {onPreferenceClick(Preference preference) {(PreferencesActivity);if(HONEYCOMB){(Intent);}}onPreferenceChange(Preference preference){(NAME);}});}",5348,1758,14,3590,67.30408698912636,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'this', ')', '.', 'getBoolean', '(', '""theme""', ',', 'false', ')', ')', '{', 'setTheme', '(', 'R', '.', 'style', '.', 'DayTheme', ')', ';', '}', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'addPreferencesFromResource', '(', 'R', '.', 'xml', '.', 'preference', ')', ';', 'findPreference', '(', '""super_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'o', '.', 'toString', '(', ')', ',', 'SUPER_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""only_once""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ONLY_ONCE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""standard_mode""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'STANDARD_MODE_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', 'findPreference', '(', '""import""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'final', 'AppCompatEditText', 'editText', '=', 'new', 'AppCompatEditText', '(', 'PreferencesActivity', '.', 'this', ')', ';', 'editText', '.', 'setHint', '(', 'R', '.', 'string', '.', 'import_rules', ')', ';', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', 'R', '.', 'string', '.', 'conf_import_rules_name', ')', '.', 'setView', '(', 'editText', ')', '.', 'setPositiveButton', '(', 'R', '.', 'string', '.', 'OK', ',', 'new', 'DialogInterface', '.', 'OnClickListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', 'MainActivity', '.', 'appendPreferences', '(', '""\\n""', '+', 'editText', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ',', 'Constant', '.', 'LIST_NAME', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', 'R', '.', 'string', '.', 'cancel', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""online_rules""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'setResult', '(', 'RESULT_OK', ')', ';', 'finish', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""about""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', 'clickTime', '>=', '5', '*', '59', ')', '{', 'clickTime', '=', '0', ';', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""market://details?id=""', '+', 'getPackageName', '(', ')', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'give_me_five_stars', ',', 'Toast', '.', 'LENGTH_LONG', ')', '.', 'show', '(', ')', ';', '}', 'preference', '.', 'setSummary', '(', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', 'getString', '(', 'R', '.', 'string', '.', 'conf_joke', ')', ',', 'clickTime', '/', '59', ',', 'clickTime', '%', '59', ')', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""version""', ')', '.', 'setSummary', '(', 'getVersionName', '(', 'this', ')', ')', ';', 'findPreference', '(', '""pay""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'R', '.', 'string', '.', 'no_donate', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""source""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'AlertDialog', '.', 'Builder', '(', 'PreferencesActivity', '.', 'this', ')', '.', 'setTitle', '(', '""Open Source""', ')', '.', 'setMessage', '(', '""Nothing""', ')', '.', 'setPositiveButton', '(', 'getString', '(', 'R', '.', 'string', '.', 'OK', ')', ',', 'null', ')', '.', 'show', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""qq""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'startActivity', '(', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ',', 'Uri', '.', 'parse', '(', '""https://jq.qq.com/?_wv=1027&k=4EepPOs""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""guide""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', 'setResult', '(', 'RESULT_GUIDE', ')', ';', 'finish', '(', ')', ';', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', 'a', '.', 'printStackTrace', '(', ')', ';', 'Toast', '.', 'makeText', '(', 'PreferencesActivity', '.', 'this', ',', 'getString', '(', 'R', '.', 'string', '.', 'unsupport_of_package', ')', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', '}', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""log""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'new', 'Thread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'final', 'String', 'bug', '=', 'String', '.', 'format', '(', 'Locale', '.', 'CHINA', ',', '""Logcat:\\n\\n%s\\n\\n""', '+', '""=================\\n\\n""', '+', '""XposedLog:\\n\\n%s\\n\\n""', '+', '""=================\\n\\n""', '+', '""Phone:\\n\\n%s\\n\\n""', ',', 'getLogcatInfo', '(', ')', ',', 'getXposedLogInfo', '(', ')', ',', 'getPhoneInfo', '(', ')', ')', ';', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'shareText', '(', 'bug', ')', ';', '}', '}', ')', ';', '}', '}', ')', '.', 'start', '(', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""theme""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'finish', '(', ')', ';', 'Intent', 'restart', '=', 'new', 'Intent', '(', 'PreferencesActivity', '.', 'this', ',', 'MainActivity', '.', 'class', ')', ';', 'if', '(', 'Build', '.', 'VERSION', '.', 'SDK_INT', '>=', 'Build', '.', 'VERSION_CODES', '.', 'HONEYCOMB', ')', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', '|', 'Intent', '.', 'FLAG_ACTIVITY_CLEAR_TASK', ')', ';', '}', 'else', '{', 'restart', '.', 'setFlags', '(', 'Intent', '.', 'FLAG_ACTIVITY_NEW_TASK', ')', ';', '}', 'startActivity', '(', 'restart', ')', ';', 'return', 'false', ';', '}', '}', ')', ';', 'findPreference', '(', '""enable_log""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '.', 'OnPreferenceChangeListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', 'MainActivity', '.', 'writePreferences', '(', 'newValue', '.', 'toString', '(', ')', ',', 'ENABLE_LOG_NAME', ')', ';', 'return', 'true', ';', '}', '}', ')', ';', '}']","['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'if', '(', 'PreferenceManager', '(', ')', '.', 'getBoolean', '(', '""theme""', ',', 'false', ')', ')', '{', '(', 'R', ')', ';', '}', '(', 'R', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'o', ')', '{', 'MainActivity', '(', 'o', '(', ')', ',', 'NAME', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceChangeListener', '(', 'new', 'OnPreferenceChangeListener', '(', ')', '{', 'onPreferenceChange', '(', 'Preference', 'preference', ',', 'Object', 'newValue', ')', '{', '(', 'toString', '(', ')', ')', ';', '}', '}', ')', ';', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'editText', '=', '(', 'PreferencesActivity', ')', '(', 'new', 'DialogInterface', '(', ')', '{', 'onClick', '(', 'DialogInterface', 'dialogInterface', ',', 'int', 'i', ')', '{', 'MainActivity', '(', ')', ';', '}', '}', ')', '.', 'setNegativeButton', '(', ')', '.', 'show', '(', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', ';', '}', '}', ')', ';', '(', '""about""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'clickTime', '++', ';', 'if', '(', '5', ')', '{', 'try', '{', '(', 'newIntent', '(', 'parse', '(', '""=""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', 'makeText', '(', ')', '.', 'show', '(', ')', ';', '}', '(', 'format', '(', ')', ')', ';', '}', '}', ')', ';', '(', '""""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', '(', 'SHORT', ')', ';', '}', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'AlertDialog', '(', ')', ';', '}', '}', ')', ';', '(', '""qq""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '.', 'OnPreferenceClickListener', '(', ')', '{', 'onPreferenceClick', '(', ')', '{', 'try', '{', '(', 'Intent', '(', '(', '""""', ')', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'ignored', ')', '{', '}', '}', '}', ')', ';', '(', '""guide""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'OnPreferenceClickListener', '(', ')', '{', 'boolean', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', 'try', '{', '}', 'catch', '(', 'ActivityNotFoundException', 'a', ')', '{', 'printStackTrace', '(', 'getString', '(', ')', ',', '_SHORT', ')', '.', 'show', '(', ')', ';', '}', '}', '}', ')', ';', '(', '""log""', ')', '.', 'setOnPreferenceClickListener', '(', 'new', 'Preference', '(', ')', '{', '{', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'format', '(', '""n""', ',', 'getXposedLogInfo', '(', ')', ')', ';', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', '}', '}', ')', ';', '}', '}', ')', ';', '}', '}', ')', ';', '(', 'new', 'Preference', '(', ')', '{', 'onPreferenceClick', '(', 'Preference', 'preference', ')', '{', '(', 'PreferencesActivity', ')', ';', 'if', '(', 'HONEYCOMB', ')', '{', '(', 'Intent', ')', ';', '}', '}', 'onPreferenceChange', '(', 'Preference', 'preference', ')', '{', '(', 'NAME', ')', ';', '}', '}', ')', ';', '}']",1049,444,6,605,58.00575263662512
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,equals_4.txt,0.9973,0.0054,"{'n_total': 1414, 'n_valid': 149, 'n_correct': 147}",243.048399,"public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }",boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}},1595,173,12,1422,89.82943777637398,"['public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUEncryptionKeyGenerationParameters', 'other', '=', '(', 'NTRUEncryptionKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenBits', '!=', 'other', '.', 'bufferLenBits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenTrits', '!=', 'other', '.', 'bufferLenTrits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'c', '!=', 'other', '.', 'c', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'db', '!=', 'other', '.', 'db', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df', '!=', 'other', '.', 'df', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df1', '!=', 'other', '.', 'df1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df2', '!=', 'other', '.', 'df2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df3', '!=', 'other', '.', 'df3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dg', '!=', 'other', '.', 'dg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dm0', '!=', 'other', '.', 'dm0', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr', '!=', 'other', '.', 'dr', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr1', '!=', 'other', '.', 'dr1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr2', '!=', 'other', '.', 'dr2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr3', '!=', 'other', '.', 'dr3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'fastFp', '!=', 'other', '.', 'fastFp', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashSeed', '!=', 'other', '.', 'hashSeed', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'llen', '!=', 'other', '.', 'llen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'maxMsgLenBytes', '!=', 'other', '.', 'maxMsgLenBytes', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsMask', '!=', 'other', '.', 'minCallsMask', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsR', '!=', 'other', '.', 'minCallsR', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'Arrays', '.', 'equals', '(', 'oid', ',', 'other', '.', 'oid', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'pkLen', '!=', 'other', '.', 'pkLen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', '}', '{', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '(', ')', ')', 'if', '(', 'N', ')', '{', '}', '{', '}', 'if', '(', 'c', ')', '{', '}', 'if', '(', 'db', ')', '{', '}', 'if', '(', 'dr', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '{', '}', 'if', '(', 'hashSeed', ')', '{', '}', 'if', '(', 'pkLen', ')', '{', '}', '{', '}', 'if', '(', 'q', '=', 'other', ')', 'if', '(', 'sparse', ')', '{', '}', '}']",450,94,6,356,80.18018018018019
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,init_2.txt,0.7994,0.3291,"{'n_total': 7647, 'n_valid': 678, 'n_correct': 463}",1169.59459,"public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(""serverUrl"", null); chsDomain = serverConfigurationService.getString(""content.chs.serverName"", null); chsUrl = serverConfigurationService.getString(""content.chs.serverUrl"", null); useContentHostingDomain = serverConfigurationService.getBoolean(""content.separateDomains"", false); contentPaths = serverConfigurationService.getStrings(""content.chs.urlprefixes""); if (contentPaths == null) { contentPaths = new String[] { ""/access/"", ""/web/"" }; } loginPaths = serverConfigurationService.getStrings(""content.login.urlprefixes""); if (loginPaths == null) { loginPaths = new String[] { ""/access/login"", ""/sakai-login-tool"", ""/access/require"", ""/access/accept"" }; } contentExceptions = serverConfigurationService.getStrings(""content.chsexception.urlprefixes""); if (contentExceptions == null) { contentExceptions = new String[] { ""/access/calendar/"", ""/access/citation/export_ris_sel/"", ""/access/citation/export_ris_all/"" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (""container"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (""sakai"".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (""context"".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (""tool"".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(""invalid "" + CONFIG_SESSION + "" setting ("" + s + ""): not one of container, sakai, context, tool""); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = ""basic"".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(""overridding "" + CONFIG_MAX_PER_FILE + "" setting: must be 'true' with "" + CONFIG_CONTINUE + "" ='true'""); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(""sakai.cluster.terracotta""); TERRACOTTA_CLUSTER = ""true"".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!""none"".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(""Unable to compile "" + SAKAI_SESSION_PARAM_ALLOW + ""="" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, ""lax""); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }","void init()throws ServletException{appUrl("""",null);chsDomain("""",null);chsUrl("""",null);useContentHostingDomain();("""");if(contentPaths){contentPaths=new String[]{};}("""");if(null){loginPaths=new String[]{""""};}if(null){contentExceptions=new String[]{"""",""""};}if((CONFIG)){if("""".equalsIgnoreCase){}if("""".equalsIgnoreCase()){}if((s)){}{("""");}}if((USER)){((USER));}if((AUTH)){"""".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true;}("""");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if("""".equals()){try{(allowBypassSession);}catch(Exception e){(""""+allowBypassSession);}}(null);getBoolean();}",5716,1012,10,4704,82.43953732912723,"['public', 'void', 'init', '(', 'FilterConfig', 'filterConfig', ')', 'throws', 'ServletException', '{', 'appUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""serverUrl""', ',', 'null', ')', ';', 'chsDomain', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverName""', ',', 'null', ')', ';', 'chsUrl', '=', 'serverConfigurationService', '.', 'getString', '(', '""content.chs.serverUrl""', ',', 'null', ')', ';', 'useContentHostingDomain', '=', 'serverConfigurationService', '.', 'getBoolean', '(', '""content.separateDomains""', ',', 'false', ')', ';', 'contentPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chs.urlprefixes""', ')', ';', 'if', '(', 'contentPaths', '==', 'null', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '""/access/""', ',', '""/web/""', '}', ';', '}', 'loginPaths', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.login.urlprefixes""', ')', ';', 'if', '(', 'loginPaths', '==', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""/access/login""', ',', '""/sakai-login-tool""', ',', '""/access/require""', ',', '""/access/accept""', '}', ';', '}', 'contentExceptions', '=', 'serverConfigurationService', '.', 'getStrings', '(', '""content.chsexception.urlprefixes""', ')', ';', 'if', '(', 'contentExceptions', '==', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""/access/calendar/""', ',', '""/access/citation/export_ris_sel/""', ',', '""/access/citation/export_ris_all/""', '}', ';', '}', 'm_servletContext', '=', 'filterConfig', '.', 'getServletContext', '(', ')', ';', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', '!=', 'null', ')', '{', 'String', 's', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION', ')', ';', 'if', '(', '""container""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTAINER_SESSION', ';', '}', 'else', 'if', '(', '""sakai""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'SAKAI_SESSION', ';', '}', 'else', 'if', '(', '""context""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'CONTEXT_SESSION', ';', '}', 'else', 'if', '(', '""tool""', '.', 'equalsIgnoreCase', '(', 's', ')', ')', '{', 'm_sakaiHttpSession', '=', 'TOOL_SESSION', ';', '}', 'else', '{', 'log', '.', 'warn', '(', '""invalid ""', '+', 'CONFIG_SESSION', '+', '"" setting (""', '+', 's', '+', '""): not one of container, sakai, context, tool""', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', '!=', 'null', ')', '{', 'm_sakaiRemoteUser', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_REMOTE_USER', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', '!=', 'null', ')', '{', 'm_checkPrincipal', '=', '""basic""', '.', 'equals', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_SESSION_AUTH', ')', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', '!=', 'null', ')', '{', 'm_toolPlacement', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_TOOL_PLACEMENT', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', '!=', 'null', ')', '{', 'm_contextId', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTEXT', ')', ';', '}', 'else', '{', 'm_contextId', '=', 'm_servletContext', '.', 'getServletContextName', '(', ')', ';', 'if', '(', 'm_contextId', '==', 'null', ')', '{', 'm_contextId', '=', 'toString', '(', ')', ';', '}', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', '!=', 'null', ')', '{', 'm_characterEncoding', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', '!=', 'null', ')', '{', 'm_characterEncodingEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CHARACTER_ENCODING_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', '!=', 'null', ')', '{', 'm_uploadEnabled', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_ENABLED', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', 'm_uploadCeiling', '=', 'm_uploadMaxSize', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '!=', 'null', ')', '{', 'm_uploadMaxSize', '=', 'Long', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_MAX', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '!=', 'null', ')', '{', 'm_uploadCeiling', '=', 'Long', '.', 'valueOf', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_CEILING', ')', '.', 'trim', '(', ')', ')', '.', 'longValue', '(', ')', '*', '1024L', '*', '1024L', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'System', '.', 'getProperty', '(', 'SYSTEM_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', '!=', 'null', ')', '{', 'm_uploadTempDir', '=', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_DIR', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', '!=', 'null', ')', '{', 'm_uploadThreshold', '=', 'Integer', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_UPLOAD_THRESHOLD', ')', ')', '.', 'intValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', '!=', 'null', ')', '{', 'm_uploadContinue', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_CONTINUE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', '!=', 'null', ')', '{', 'm_uploadMaxPerFile', '=', 'Boolean', '.', 'valueOf', '(', 'filterConfig', '.', 'getInitParameter', '(', 'CONFIG_MAX_PER_FILE', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'm_uploadContinue', '&&', '!', 'm_uploadMaxPerFile', ')', '{', 'log', '.', 'warn', '(', '""overridding ""', '+', 'CONFIG_MAX_PER_FILE', '+', '"" setting: must be \'true\' with ""', '+', 'CONFIG_CONTINUE', '+', '"" =\'true\'""', ')', ';', 'm_uploadMaxPerFile', '=', 'true', ';', '}', 'String', 'clusterTerracotta', '=', 'System', '.', 'getProperty', '(', '""sakai.cluster.terracotta""', ')', ';', 'TERRACOTTA_CLUSTER', '=', '""true""', '.', 'equals', '(', 'clusterTerracotta', ')', ';', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', '!=', 'null', ')', '{', 'cookieName', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_NAME', ')', ';', '}', 'if', '(', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', '!=', 'null', ')', '{', 'cookieDomain', '=', 'System', '.', 'getProperty', '(', 'SAKAI_COOKIE_DOMAIN', ')', ';', '}', 'm_sessionParamAllow', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_SESSION_PARAM_ALLOW', ',', 'false', ')', ';', 'String', 'allowBypassSession', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS', ',', 'SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT', ')', ';', 'if', '(', '!', '""none""', '.', 'equals', '(', 'allowBypassSession', ')', ')', '{', 'try', '{', 'm_sessionParamRegex', '=', 'Pattern', '.', 'compile', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', '""Unable to compile ""', '+', 'SAKAI_SESSION_PARAM_ALLOW', '+', '""=""', '+', 'allowBypassSession', ')', ';', 'm_sessionParamRegex', '=', 'null', ';', '}', '}', 'm_cookieHttpOnly', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_COOKIE_HTTP_ONLY', ',', 'true', ')', ';', 'm_cookieSameSite', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_COOKIE_SAME_SITE', ',', '""lax""', ')', ';', 'm_UACompatible', '=', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_UA_COMPATIBLE', ',', 'null', ')', ';', 'isLTIProviderAllowed', '=', '(', 'serverConfigurationService', '.', 'getString', '(', 'SAKAI_BLTI_PROVIDER_TOOLS', ',', 'null', ')', '!=', 'null', ')', ';', 'm_redirectRandomNode', '=', 'serverConfigurationService', '.', 'getBoolean', '(', 'SAKAI_CLUSTER_REDIRECT_RANDOM', ',', 'true', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'ServletException', '{', 'appUrl', '(', '""""', ',', 'null', ')', ';', 'chsDomain', '(', '""""', ',', 'null', ')', ';', 'chsUrl', '(', '""""', ',', 'null', ')', ';', 'useContentHostingDomain', '(', ')', ';', '(', '""""', ')', ';', 'if', '(', 'contentPaths', ')', '{', 'contentPaths', '=', 'new', 'String', '[', ']', '{', '}', ';', '}', '(', '""""', ')', ';', 'if', '(', 'null', ')', '{', 'loginPaths', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'if', '(', 'null', ')', '{', 'contentExceptions', '=', 'new', 'String', '[', ']', '{', '""""', ',', '""""', '}', ';', '}', 'if', '(', '(', 'CONFIG', ')', ')', '{', 'if', '(', '""""', '.', 'equalsIgnoreCase', ')', '{', '}', 'if', '(', '""""', '.', 'equalsIgnoreCase', '(', ')', ')', '{', '}', 'if', '(', '(', 's', ')', ')', '{', '}', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '(', 'USER', ')', ')', '{', '(', '(', 'USER', ')', ')', ';', '}', 'if', '(', '(', 'AUTH', ')', ')', '{', '""""', '.', 'equals', '(', '(', 'AUTH', ')', ')', ';', '}', 'if', '(', '(', 'PLACEMENT', ')', ')', '{', '(', 'getInitParameter', ')', '.', 'getInitParameter', '(', ')', ';', '}', 'if', '(', '(', 'ENABLED', ')', '!', 'null', ')', '{', '(', 'filterConfig', '(', ')', ')', ';', '}', 'if', '(', '(', 'CONFIG', ')', '!', 'null', ')', '{', '}', 'if', '(', '(', 'SYSTEM', ')', '!=', 'null', ')', '{', '(', 'System', ')', '.', 'L', ';', '}', 'if', '(', 'getProperty', '=', 'null', ')', '{', 'getProperty', '(', ')', ';', '}', 'if', '(', 'filterConfig', ')', '{', '(', 'CONFIG', ')', ';', '}', 'if', '(', 'getInitParameter', '(', 'THRESHOLD', ')', '!=', 'null', ')', '{', '(', 'filterConfig', '(', ')', ')', ';', '}', 'if', '(', 'filterConfig', ')', '{', '(', 'getInitParameter', '(', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'filterConfig', ')', '{', 'uploadMaxPerFile', '(', 'getInitParameter', '(', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', 'if', '(', 'uploadMaxPerFile', ')', '{', 'uploadMaxPerFile', '=', 'true', ';', '}', '(', '""""', ')', ';', '(', 'clusterTerracotta', ')', ';', 'if', '(', '(', 'NAME', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', 'if', '(', '(', 'DOMAIN', ')', ')', '{', '(', 'SAKAI', ')', ';', '}', '(', 'SAKAI', ')', ';', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'try', '{', '(', 'allowBypassSession', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', '+', 'allowBypassSession', ')', ';', '}', '}', '(', 'null', ')', ';', 'getBoolean', '(', ')', ';', '}']",959,375,6,584,61.28016789087093
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_6.txt,0.9563,0.0656,"{'n_total': 1780, 'n_valid': 184, 'n_correct': 184}",298.99215,"static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(""keystorefile"", ""mykeystore""); properties.setProperty(""keystoretype"", ""JKS""); properties.setProperty(""keystorepass"", ""22222222""); properties.setProperty(""privatekeyalias"", ""test""); properties.setProperty(""publickeyalias"", ""test""); properties.setProperty(""privatekeypass"", ""22222222""); properties.setProperty(""encryptionkeystrength"", ""56""); properties.setProperty(""encryptionalgorithm"", ""DES""); SecureAttrs.init(""testsym"", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(""testasym"", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(""TEST 1 START test encoded str ===========""); SecureAttrs secureattrs = SecureAttrs.getInstance(""testsym""); String s = ""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""; Map map = secureattrs.verifyEncodedString(s, ""secret""); if (map == null) System.out.println("" FAILED""); else System.out.println("" PASSED"" + map); System.out.println(""TEST 1 END ================""); System.out.println(""TEST 2 START : encode followed by decode ===""); HashMap hashmap = new HashMap(); hashmap.put(""branch"", ""bb""); hashmap.put(""mail"", ""mm""); hashmap.put(""sun.userid"", ""uu""); hashmap.put(""sun.spappurl"", ""apapp""); System.out.println("" TEST 2a START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); String s1 = ""secret""; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 2a PASSED "" + map1); else System.out.println("" 2a FAILED "" + map1); System.out.println("" TEST 2b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 2b PASSED "" + map1); else System.out.println("" 2b FAILED "" + map1); System.out.println(""TEST 2 END ====================""); System.out.println(""TEST 3 START : decode with incorrect secret""); System.out.println("" TEST 3a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); map1 = secureattrs.verifyEncodedString(s2, ""junk""); if (map1 != null) System.out.println("" 3a FAILED "" + map1); else System.out.println("" 3a PASSED "" + map1); System.out.println("" TEST 3b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); map1 = secureattrs.verifyEncodedString(s3, ""junk""); if (map1 != null) System.out.println("" 3b FAILED "" + map1); else System.out.println("" 3b PASSED "" + map1); System.out.println(""TEST 3 END ====================""); System.out.println(""TEST 4 START : decode with correct secret""); System.out.println("" TEST 4a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); s1 = ""secret""; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println("" TEST 4b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println(""TEST 4 END ====================""); System.out.println("" TEST 5a START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println("" 5a PASSED "" + map1); else System.out.println("" 5a FAILED "" + map1); System.out.println("" TEST 5b START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); s1 = ""secret""; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println("" 5b PASSED "" + map1); else System.out.println("" 5b FAILED "" + map1); System.out.println(""TEST 5 END ====================""); } catch (Exception exception) { exception.printStackTrace(); System.out.println(""TEST Exc : "" + exception); } }","void main(String[]args){try{setProperty("""","""");"""".verifyEncodedString();println();("""");("""");if(map)(""""+1);("""");("""");("""");(""""+3);(1);(1);(1);("""");getEncodedString();verifyEncodedString();if(null)("""");("""");}catch(Exception exception){(""""+exception);}}",4351,249,10,4102,94.49435613913845,"['static', 'public', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'SecureAttrs', '.', 'dbg', '=', 'true', ';', 'Properties', 'properties', '=', 'new', 'Properties', '(', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorefile""', ',', '""mykeystore""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystoretype""', ',', '""JKS""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorepass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""publickeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeypass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionkeystrength""', ',', '""56""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionalgorithm""', ',', '""DES""', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testsym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_SYM', ',', 'properties', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testasym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_ASYM', ',', 'properties', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 START test encoded str ===========""', ')', ';', 'SecureAttrs', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's', '=', '""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""', ';', 'Map', 'map', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's', ',', '""secret""', ')', ';', 'if', '(', 'map', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" FAILED""', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" PASSED""', '+', 'map', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 END ================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 START : encode followed by decode ===""', ')', ';', 'HashMap', 'hashmap', '=', 'new', 'HashMap', '(', ')', ';', 'hashmap', '.', 'put', '(', '""branch""', ',', '""bb""', ')', ';', 'hashmap', '.', 'put', '(', '""mail""', ',', '""mm""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.userid""', ',', '""uu""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.spappurl""', ',', '""apapp""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's1', '=', '""secret""', ';', 'String', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's2', ')', ';', 'Map', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'String', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 START : decode with incorrect secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3a FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3a PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3b FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3b PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 START : decode with correct secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5a START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5b START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's2', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 5 END ====================""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'exception', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST Exc : ""', '+', 'exception', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'setProperty', '(', '""""', ',', '""""', ')', ';', '""""', '.', 'verifyEncodedString', '(', ')', ';', 'println', '(', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'if', '(', 'map', ')', '(', '""""', '+', '1', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '3', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '""""', ')', ';', 'getEncodedString', '(', ')', ';', 'verifyEncodedString', '(', ')', ';', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', '(', '""""', '+', 'exception', ')', ';', '}', '}']",906,115,6,791,87.8888888888889
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_14.txt,0.9941,0.0075,"{'n_total': 4891, 'n_valid': 359, 'n_correct': 357}",629.941456,"public static void main(String[] argv) { int start = 1; int end = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-s"")) { src = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dest = argv[++optind]; } else if (argv[optind].equals(""-x"")) { expunge = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""); System.out.println(""\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""); System.out.println(""\t The -x option => EXPUNGE deleted messages""); System.out.println(""\t msgnum1 => start of message-range; msgnum2 => end of message-range""); System.exit(1); } else { break; } } if (optind < argv.length) start = Integer.parseInt(argv[optind++]); if (optind < argv.length) end = Integer.parseInt(argv[optind++]); try { Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getFolder(src); if (folder == null || !folder.exists()) { System.out.println(""Invalid folder: "" + src); System.exit(1); } folder.open(Folder.READ_WRITE); int count = folder.getMessageCount(); if (count == 0) { System.out.println(folder.getName() + "" is empty""); folder.close(false); store.close(); return; } Folder dfolder = store.getFolder(dest); if (!dfolder.exists()) dfolder.create(Folder.HOLDS_MESSAGES); if (end == -1) end = count; Message[] msgs = folder.getMessages(start, end); System.out.println(""Moving "" + msgs.length + "" messages""); if (msgs.length != 0) { folder.copyMessages(msgs, dfolder); folder.setFlags(msgs, new Flags(Flags.Flag.DELETED), true); for (int i = 0; i < msgs.length; i++) { if (!msgs[i].isSet(Flags.Flag.DELETED)) System.out.println(""Message # "" + msgs[i] + "" not deleted""); } } folder.close(expunge); store.close(); } catch (MessagingException mex) { Exception ex = mex; do { System.out.println(ex.getMessage()); if (ex instanceof MessagingException) ex = ((MessagingException) ex).getNextException(); else ex = null; } while (ex != null); } }","void main(String[]argv){for(;;optind++){if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){argv[optind];}if(("""")){}if(("""")){}if(argv[optind].startsWith("""")){("""");("""").exit();}}if(optind)(argv[optind++]);if(length)(argv[optind++]);try{(null);if(null){if(host)connect();}(src);if(exists()){(""""+src);(1);}open();getMessageCount();if(0){}(""""+"""");if(0){((Flags));for(;;i++){if(msgs[i].isSet())(""""+msgs[i]+"""");}}close();}catch(MessagingException mex){{if(ex)((MessagingException)).getNextException;}(ex);}}",2782,596,10,2186,78.86002886002886,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'start', '=', '1', ';', 'int', 'end', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'src', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dest', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-x""', ')', ')', '{', 'expunge', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t The -x option => EXPUNGE deleted messages""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t msgnum1 => start of message-range; msgnum2 => end of message-range""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'start', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'end', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getFolder', '(', 'src', ')', ';', 'if', '(', 'folder', '==', 'null', '||', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder: ""', '+', 'src', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'count', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'count', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'folder', '.', 'getName', '(', ')', '+', '"" is empty""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'return', ';', '}', 'Folder', 'dfolder', '=', 'store', '.', 'getFolder', '(', 'dest', ')', ';', 'if', '(', '!', 'dfolder', '.', 'exists', '(', ')', ')', 'dfolder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'if', '(', 'end', '==', '-', '1', ')', 'end', '=', 'count', ';', 'Message', '[', ']', 'msgs', '=', 'folder', '.', 'getMessages', '(', 'start', ',', 'end', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Moving ""', '+', 'msgs', '.', 'length', '+', '"" messages""', ')', ';', 'if', '(', 'msgs', '.', 'length', '!=', '0', ')', '{', 'folder', '.', 'copyMessages', '(', 'msgs', ',', 'dfolder', ')', ';', 'folder', '.', 'setFlags', '(', 'msgs', ',', 'new', 'Flags', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ',', 'true', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'msgs', '[', 'i', ']', '.', 'isSet', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ')', 'System', '.', 'out', '.', 'println', '(', '""Message # ""', '+', 'msgs', '[', 'i', ']', '+', '"" not deleted""', ')', ';', '}', '}', 'folder', '.', 'close', '(', 'expunge', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'Exception', 'ex', '=', 'mex', ';', 'do', '{', 'System', '.', 'out', '.', 'println', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'if', '(', 'ex', 'instanceof', 'MessagingException', ')', 'ex', '=', '(', '(', 'MessagingException', ')', 'ex', ')', '.', 'getNextException', '(', ')', ';', 'else', 'ex', '=', 'null', ';', '}', 'while', '(', 'ex', '!=', 'null', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '}', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'length', ')', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', '(', 'null', ')', ';', 'if', '(', 'null', ')', '{', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', '(', 'src', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', '(', '""""', '+', 'src', ')', ';', '(', '1', ')', ';', '}', 'open', '(', ')', ';', 'getMessageCount', '(', ')', ';', 'if', '(', '0', ')', '{', '}', '(', '""""', '+', '""""', ')', ';', 'if', '(', '0', ')', '{', '(', '(', 'Flags', ')', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'msgs', '[', 'i', ']', '.', 'isSet', '(', ')', ')', '(', '""""', '+', 'msgs', '[', 'i', ']', '+', '""""', ')', ';', '}', '}', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '{', 'if', '(', 'ex', ')', '(', '(', 'MessagingException', ')', ')', '.', 'getNextException', ';', '}', '(', 'ex', ')', ';', '}', '}']",795,311,6,484,61.34347275031685
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_15.txt,0.983,0.0198,"{'n_total': 6326, 'n_valid': 440, 'n_correct': 300}",759.631103,"public static void main(String[] argv) { int nummsg = 256; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-p"")) { port = Integer.parseInt(argv[++optind]); } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""); System.out.println(""\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""); System.exit(1); } else { break; } } try { if (optind < argv.length) nummsg = Integer.parseInt(argv[optind]); Properties props = System.getProperties(); session = Session.getInstance(props, null); session.setDebug(debug); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, port, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } if (mbox == null) mbox = ""messagecachetest""; folder = folder.getFolder(mbox); if (folder == null) { System.out.println(""Invalid folder""); System.exit(1); } Message[] msgs = createMessages(nummsg); if (folder.exists()) folder.delete(false); folder.create(Folder.HOLDS_MESSAGES); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""fill folder""); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test message number""); testMessageNumber(folder); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge forward""); testExpungeForward(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge reverse""); testExpungeReverse(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge random""); testExpungeRandom(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge other""); testExpungeOther(folder); folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); System.exit(1); } System.exit(0); }","void main(String[]argv){for(optind;;){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){password[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){mbox[optind];}if(("""")){argv[optind];}if(argv[optind].equals("""")){(argv[optind]);}if(argv[optind].equals("""")){ optind++;}if(argv[optind].startsWith("""")){("" "");exit();}{}}try{if (optind)(debug); if(url= null) {(urln);if(protocol)(null);}if(folder ==null) { (1);} getFolder();{("""");(1); }("""");(WRITE);if(verbose)(Folder).close();(WRITE); close(); }catch(Exception ex) {("""" + ex).exit(1);} }",3144,687,10,2457,78.39821314613911,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'nummsg', '=', '256', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-p""', ')', ')', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', '++', 'optind', ']', ')', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'nummsg', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'port', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'mbox', '==', 'null', ')', 'mbox', '=', '""messagecachetest""', ';', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', 'createMessages', '(', 'nummsg', ')', ';', 'if', '(', 'folder', '.', 'exists', '(', ')', ')', 'folder', '.', 'delete', '(', 'false', ')', ';', 'folder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""fill folder""', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test message number""', ')', ';', 'testMessageNumber', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge forward""', ')', ';', 'testExpungeForward', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge reverse""', ')', ';', 'testExpungeReverse', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge random""', ')', ';', 'testExpungeRandom', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge other""', ')', ';', 'testExpungeOther', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', 'optind', ';', ';', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'password', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'mbox', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '(', 'argv', '[', 'optind', ']', ')', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '"" ""', ')', ';', 'exit', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'optind', ')', '(', 'debug', ')', ';', 'if', '(', 'url', '=', 'null', ')', '{', '(', 'urln', ')', ';', 'if', '(', 'protocol', ')', '(', 'null', ')', ';', '}', 'if', '(', 'folder', '==', 'null', ')', '{', '(', '1', ')', ';', '}', 'getFolder', '(', ')', ';', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', '(', '""""', ')', ';', '(', 'WRITE', ')', ';', 'if', '(', 'verbose', ')', '(', 'Folder', ')', '.', 'close', '(', ')', ';', '(', 'WRITE', ')', ';', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'ex', ')', '.', 'exit', '(', '1', ')', ';', '}', '}']",886,319,6,567,64.43181818181817
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_7.txt,0.9959,0.005,"{'n_total': 2289, 'n_valid': 214, 'n_correct': 211}",345.643484,"public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + "":class=HtmlAdaptorServer,protocol=html,port="" + htmlPort); println(""Adding HTML adaptor to MBean server with name \n "" + htmlObjName); println(""NOTE: HTML adaptor is bound on TCP port "" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + "":class=SnmpAdaptorServer,protocol=snmp,port="" + snmpPort); println(""Adding SNMP adaptor to MBean server with name \n "" + snmpObjName); println(""NOTE: SNMP Adaptor is bound on UDP port "" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(""NOTE: Sending a coldStart SNMP trap"" + "" to each destination defined in the ACL file...""); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(""Done.""); try { JMXServiceURL url = new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://localhost:9999/server""); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(""Error starting RMI : execute rmiregistry 9999; ex="" + ex); } sunMibObjName = new ObjectName(""snmp:class=SUN_OPENSSO_SERVER_MIB""); println(""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name"" + ""\n "" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_CTS_MIB""); println(""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name"" + ""\n "" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""); println(""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name"" + ""\n "" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""); println(""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name"" + ""\n "" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(""trapGenerator"" + "":class=LinkTrapGenerator,ifIndex="" + ifIndex); println(""Adding LinkTrapGenerator to MBean server with name"" + ""\n "" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(""\n>> Press <Enter> if you want to start sending traps.""); println("" -or-""); println("">> Press <Ctrl-C> if you want to stop this agent.""); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } }","void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(""""+snmpPort);("""").setTrapPort((snmpPort));snmpV(0,null);("""");try{("""");(url);}catch(Exception ex){("""");}}catch(Exception e){printStackTrace();}}",3991,362,10,3629,91.15800050238634,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'final', 'MBeanServer', 'server', ';', 'final', 'ObjectName', 'htmlObjName', ';', 'final', 'ObjectName', 'snmpObjName', ';', 'final', 'ObjectName', 'sunMibObjName', ';', 'final', 'ObjectName', 'forgerockCtsMibObjName', ';', 'final', 'ObjectName', 'forgerockPolicyMibObjName', ';', 'final', 'ObjectName', 'forgerockSessionMibObjName', ';', 'final', 'ObjectName', 'trapGeneratorObjName', ';', 'int', 'htmlPort', '=', '8082', ';', 'int', 'snmpPort', '=', '11161', ';', 'if', '(', '(', 'args', '.', 'length', '!=', '0', ')', '&&', '(', 'args', '.', 'length', '!=', '1', ')', ')', '{', 'usage', '(', ')', ';', 'java', '.', 'lang', '.', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', 'if', '(', 'args', '.', 'length', '==', '1', ')', '{', 'try', '{', 'nbTraps', '=', '(', 'new', 'Integer', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', '<', '0', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'NumberFormatException', 'e', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'try', '{', 'List', '<', 'MBeanServer', '>', 'servers', '=', 'MBeanServerFactory', '.', 'findMBeanServer', '(', 'null', ')', ';', 'if', '(', '(', 'servers', '!=', 'null', ')', '&&', '!', 'servers', '.', 'isEmpty', '(', ')', ')', '{', 'server', '=', 'servers', '.', 'get', '(', '0', ')', ';', '}', 'else', '{', 'server', '=', 'MBeanServerFactory', '.', 'createMBeanServer', '(', ')', ';', '}', 'String', 'domain', '=', 'server', '.', 'getDefaultDomain', '(', ')', ';', 'htmlObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=HtmlAdaptorServer,protocol=html,port=""', '+', 'htmlPort', ')', ';', 'println', '(', '""Adding HTML adaptor to MBean server with name \\n ""', '+', 'htmlObjName', ')', ';', 'println', '(', '""NOTE: HTML adaptor is bound on TCP port ""', '+', 'htmlPort', ')', ';', 'HtmlAdaptorServer', 'htmlAdaptor', '=', 'new', 'HtmlAdaptorServer', '(', 'htmlPort', ')', ';', 'server', '.', 'registerMBean', '(', 'htmlAdaptor', ',', 'htmlObjName', ')', ';', 'htmlAdaptor', '.', 'start', '(', ')', ';', 'snmpPort', '=', '11161', ';', 'snmpObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=SnmpAdaptorServer,protocol=snmp,port=""', '+', 'snmpPort', ')', ';', 'println', '(', '""Adding SNMP adaptor to MBean server with name \\n ""', '+', 'snmpObjName', ')', ';', 'println', '(', '""NOTE: SNMP Adaptor is bound on UDP port ""', '+', 'snmpPort', ')', ';', 'snmpAdaptor', '=', 'new', 'SnmpAdaptorServer', '(', 'snmpPort', ')', ';', 'server', '.', 'registerMBean', '(', 'snmpAdaptor', ',', 'snmpObjName', ')', ';', 'snmpAdaptor', '.', 'start', '(', ')', ';', 'print', '(', '""NOTE: Sending a coldStart SNMP trap""', '+', '"" to each destination defined in the ACL file...""', ')', ';', 'snmpAdaptor', '.', 'setTrapPort', '(', 'new', 'Integer', '(', 'snmpPort', '+', '1', ')', ')', ';', 'snmpAdaptor', '.', 'snmpV1Trap', '(', '0', ',', '0', ',', 'null', ')', ';', 'println', '(', '""Done.""', ')', ';', 'try', '{', 'JMXServiceURL', 'url', '=', 'new', 'JMXServiceURL', '(', '""service:jmx:rmi:///jndi/rmi://localhost:9999/server""', ')', ';', 'JMXConnectorServer', 'cs', '=', 'JMXConnectorServerFactory', '.', 'newJMXConnectorServer', '(', 'url', ',', 'null', ',', 'server', ')', ';', 'cs', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'println', '(', '""Error starting RMI : execute rmiregistry 9999; ex=""', '+', 'ex', ')', ';', '}', 'sunMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=SUN_OPENSSO_SERVER_MIB""', ')', ';', 'println', '(', '""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'sunMibObjName', ')', ';', 'SUN_OPENSSO_SERVER_MIB', 'mib2', '=', 'new', 'SUN_OPENSSO_SERVER_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib2', ',', 'sunMibObjName', ')', ';', 'forgerockCtsMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_CTS_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockCtsMibObjName', ')', ';', 'forgerockPolicyMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockPolicyMibObjName', ')', ';', 'forgerockSessionMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name""', '+', '""\\n ""', '+', 'forgerockSessionMibObjName', ')', ';', 'FORGEROCK_OPENAM_CTS_MIB', 'mib3', '=', 'new', 'FORGEROCK_OPENAM_CTS_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib3', ',', 'forgerockCtsMibObjName', ')', ';', 'FORGEROCK_OPENAM_POLICY_MIB', 'mib4', '=', 'new', 'FORGEROCK_OPENAM_POLICY_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib4', ',', 'forgerockPolicyMibObjName', ')', ';', 'FORGEROCK_OPENAM_SESSION_MIB', 'mib5', '=', 'new', 'FORGEROCK_OPENAM_SESSION_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib5', ',', 'forgerockSessionMibObjName', ')', ';', 'mib2', '.', 'setSnmpAdaptor', '(', 'snmpAdaptor', ')', ';', 'int', 'ifIndex', '=', '1', ';', 'trapGeneratorObjName', '=', 'new', 'ObjectName', '(', '""trapGenerator""', '+', '"":class=LinkTrapGenerator,ifIndex=""', '+', 'ifIndex', ')', ';', 'println', '(', '""Adding LinkTrapGenerator to MBean server with name""', '+', '""\\n ""', '+', 'trapGeneratorObjName', ')', ';', 'LinkTrapGenerator', 'trapGenerator', '=', 'new', 'LinkTrapGenerator', '(', 'nbTraps', ')', ';', 'server', '.', 'registerMBean', '(', 'trapGenerator', ',', 'trapGeneratorObjName', ')', ';', 'println', '(', '""\\n>> Press <Enter> if you want to start sending traps.""', ')', ';', 'println', '(', '"" -or-""', ')', ';', 'println', '(', '"">> Press <Ctrl-C> if you want to stop this agent.""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'trapGenerator', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'length', ')', '(', 'length', ')', ')', '{', 'System', '(', ')', ';', '}', 'if', '(', '1', ')', '{', 'try', '{', '(', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', ')', '{', '}', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '1', ')', ';', '}', '}', 'try', '{', 'MBeanServerFactory', '(', ')', ';', 'if', '(', '(', 'servers', ')', ')', '{', '(', '0', ')', ';', '}', '{', 'createMBeanServer', '(', ')', ';', '}', 'ObjectName', '(', ')', ';', '(', '""""', '+', 'snmpPort', ')', ';', '(', '""""', ')', '.', 'setTrapPort', '(', '(', 'snmpPort', ')', ')', ';', 'snmpV', '(', '0', ',', 'null', ')', ';', '(', '""""', ')', ';', 'try', '{', '(', '""""', ')', ';', '(', 'url', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",637,154,6,483,76.54516640253566
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_2.txt,0.7407,0.4718,"{'n_total': 3808, 'n_valid': 300, 'n_correct': 291}",508.946673,"public void run() { int sloops = 0; if (debug) { log.info(""Start NIO thread, daemon="" + daemon); } while (running) { try { loops.incrementAndGet(); processPending(); long now = System.currentTimeMillis(); if (nextWakeup < now) { updateSleepTimeAndProcessTimeouts(now); } int selected = selector.select(sleepTime); lastWakeup = System.currentTimeMillis(); long slept = lastWakeup - now; if (debugWakeup && selected == 0) { if (sleepTime < maxSleep - 1000) { log.info(""Wakeup "" + selected + "" "" + slept + "" "" + sleepTime); } } if (slept < 10 && selected == 0) { if (sloops > 50) { sloops = 0; log.severe(""Looping !""); resetSelector(); } sloops++; } if (selected != 0) { sloops = 0; int callbackCnt = 0; Set<SelectionKey> sel = selector.selectedKeys(); Iterator<SelectionKey> i = sel.iterator(); while (i.hasNext()) { callbackCnt++; long beforeCallback = System.currentTimeMillis(); SelectionKey sk = i.next(); i.remove(); boolean valid = sk.isValid(); int readyOps = (valid) ? sk.readyOps() : 0; NioChannel ch = (NioChannel) sk.attachment(); if (debugWakeup) { log.info(""Wakeup selCnt="" + selected + "" slept="" + (lastWakeup - now) + "" ready: "" + readyOps + "" v="" + sk.isValid() + "" ch="" + ch); } if (ch == null) { log.severe(""Missing channel""); sk.cancel(); continue; } if (ch.selKey != sk) { log.severe(""Invalid state, selKey doesn't match ""); ch.selKey = sk; } if (ch.channel != sk.channel()) { ch.channel = sk.channel(); log.severe(""Invalid state, channel doesn't match ""); } if (!sk.isValid()) { if (debug) { log.info(""!isValid, closed socket "" + ch); } ch.close(); continue; } try { int ready = sk.readyOps(); if (sk.isValid() && sk.isAcceptable()) { handleAccept(ch, sk); } if (sk.isValid() && sk.isConnectable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_CONNECT); SocketChannel sc = (SocketChannel) sk.channel(); handleConnect(ch, sc); } if (sk.isValid() && sk.isWritable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_WRITE); ch.writeInterest = false; handleDataWriteable(ch); } if (sk.isValid() && sk.isReadable()) { handleReadable(ch); } long callbackTime = System.currentTimeMillis() - beforeCallback; if (callbackTime > 250) { log.warning(""Callback too long ! ops="" + ready + "" time="" + callbackTime + "" ch="" + ch + "" "" + callbackCnt); } if (callbackTime > maxCallbackTime) { maxCallbackTime = callbackTime; } callbackCount.incrementAndGet(); this.callbackTotalTime.addAndGet(callbackTime); } catch (Throwable t) { log.log(Level.SEVERE, ""SelectorThread: Channel error, closing"", t); ch.lastException = t; ch.close(); } } sel.clear(); } } catch (Throwable e) { log.log(Level.SEVERE, ""SelectorThread: Error in select"", e); } } log.info(""SelectorThread done""); }","void run(){if(debug){(""""+daemon);}while(running){try{currentTimeMillis();if(nextWakeup){(now);while(hasNext()){isValid();readyOps=(valid)?sk:0;if(debugWakeup){(""""+""""+(now)""""+""""+ch);}if(null){("""");}if(channel()){("""");}if(sk){if(debug){(""""+ch);}}try{ready();if(sk()){(ch);}if(sk()){sk();}if(sk){(ch);}if(0){(""""+""""+callbackCnt);}{}}catch(Throwable t){("""");lastException();}}}}catch(Throwable e){log("""",e);}}("""");}",2690,410,9,2280,85.04289444237226,"['public', 'void', 'run', '(', ')', '{', 'int', 'sloops', '=', '0', ';', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""Start NIO thread, daemon=""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'loops', '.', 'incrementAndGet', '(', ')', ';', 'processPending', '(', ')', ';', 'long', 'now', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', '<', 'now', ')', '{', 'updateSleepTimeAndProcessTimeouts', '(', 'now', ')', ';', '}', 'int', 'selected', '=', 'selector', '.', 'select', '(', 'sleepTime', ')', ';', 'lastWakeup', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'slept', '=', 'lastWakeup', '-', 'now', ';', 'if', '(', 'debugWakeup', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sleepTime', '<', 'maxSleep', '-', '1000', ')', '{', 'log', '.', 'info', '(', '""Wakeup ""', '+', 'selected', '+', '"" ""', '+', 'slept', '+', '"" ""', '+', 'sleepTime', ')', ';', '}', '}', 'if', '(', 'slept', '<', '10', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sloops', '>', '50', ')', '{', 'sloops', '=', '0', ';', 'log', '.', 'severe', '(', '""Looping !""', ')', ';', 'resetSelector', '(', ')', ';', '}', 'sloops', '++', ';', '}', 'if', '(', 'selected', '!=', '0', ')', '{', 'sloops', '=', '0', ';', 'int', 'callbackCnt', '=', '0', ';', 'Set', '<', 'SelectionKey', '>', 'sel', '=', 'selector', '.', 'selectedKeys', '(', ')', ';', 'Iterator', '<', 'SelectionKey', '>', 'i', '=', 'sel', '.', 'iterator', '(', ')', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'callbackCnt', '++', ';', 'long', 'beforeCallback', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'SelectionKey', 'sk', '=', 'i', '.', 'next', '(', ')', ';', 'i', '.', 'remove', '(', ')', ';', 'boolean', 'valid', '=', 'sk', '.', 'isValid', '(', ')', ';', 'int', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', '.', 'readyOps', '(', ')', ':', '0', ';', 'NioChannel', 'ch', '=', '(', 'NioChannel', ')', 'sk', '.', 'attachment', '(', ')', ';', 'if', '(', 'debugWakeup', ')', '{', 'log', '.', 'info', '(', '""Wakeup selCnt=""', '+', 'selected', '+', '"" slept=""', '+', '(', 'lastWakeup', '-', 'now', ')', '+', '"" ready: ""', '+', 'readyOps', '+', '"" v=""', '+', 'sk', '.', 'isValid', '(', ')', '+', '"" ch=""', '+', 'ch', ')', ';', '}', 'if', '(', 'ch', '==', 'null', ')', '{', 'log', '.', 'severe', '(', '""Missing channel""', ')', ';', 'sk', '.', 'cancel', '(', ')', ';', 'continue', ';', '}', 'if', '(', 'ch', '.', 'selKey', '!=', 'sk', ')', '{', 'log', '.', 'severe', '(', '""Invalid state, selKey doesn\'t match ""', ')', ';', 'ch', '.', 'selKey', '=', 'sk', ';', '}', 'if', '(', 'ch', '.', 'channel', '!=', 'sk', '.', 'channel', '(', ')', ')', '{', 'ch', '.', 'channel', '=', 'sk', '.', 'channel', '(', ')', ';', 'log', '.', 'severe', '(', '""Invalid state, channel doesn\'t match ""', ')', ';', '}', 'if', '(', '!', 'sk', '.', 'isValid', '(', ')', ')', '{', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""!isValid, closed socket ""', '+', 'ch', ')', ';', '}', 'ch', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'try', '{', 'int', 'ready', '=', 'sk', '.', 'readyOps', '(', ')', ';', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isAcceptable', '(', ')', ')', '{', 'handleAccept', '(', 'ch', ',', 'sk', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isConnectable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_CONNECT', ')', ';', 'SocketChannel', 'sc', '=', '(', 'SocketChannel', ')', 'sk', '.', 'channel', '(', ')', ';', 'handleConnect', '(', 'ch', ',', 'sc', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isWritable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_WRITE', ')', ';', 'ch', '.', 'writeInterest', '=', 'false', ';', 'handleDataWriteable', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isReadable', '(', ')', ')', '{', 'handleReadable', '(', 'ch', ')', ';', '}', 'long', 'callbackTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'beforeCallback', ';', 'if', '(', 'callbackTime', '>', '250', ')', '{', 'log', '.', 'warning', '(', '""Callback too long ! ops=""', '+', 'ready', '+', '"" time=""', '+', 'callbackTime', '+', '"" ch=""', '+', 'ch', '+', '"" ""', '+', 'callbackCnt', ')', ';', '}', 'if', '(', 'callbackTime', '>', 'maxCallbackTime', ')', '{', 'maxCallbackTime', '=', 'callbackTime', ';', '}', 'callbackCount', '.', 'incrementAndGet', '(', ')', ';', 'this', '.', 'callbackTotalTime', '.', 'addAndGet', '(', 'callbackTime', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Channel error, closing""', ',', 't', ')', ';', 'ch', '.', 'lastException', '=', 't', ';', 'ch', '.', 'close', '(', ')', ';', '}', '}', 'sel', '.', 'clear', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Error in select""', ',', 'e', ')', ';', '}', '}', 'log', '.', 'info', '(', '""SelectorThread done""', ')', ';', '}']","['void', 'run', '(', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', ')', '{', '(', 'now', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'isValid', '(', ')', ';', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', ':', '0', ';', 'if', '(', 'debugWakeup', ')', '{', '(', '""""', '+', '""""', '+', '(', 'now', ')', '""""', '+', '""""', '+', 'ch', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'channel', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'sk', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'ch', ')', ';', '}', '}', 'try', '{', 'ready', '(', ')', ';', 'if', '(', 'sk', '(', ')', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '(', ')', ')', '{', 'sk', '(', ')', ';', '}', 'if', '(', 'sk', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', '0', ')', '{', '(', '""""', '+', '""""', '+', 'callbackCnt', ')', ';', '}', '{', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'lastException', '(', ')', ';', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '(', '""""', ',', 'e', ')', ';', '}', '}', '(', '""""', ')', ';', '}']",714,214,6,500,70.62146892655367
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_5.txt,0.9759,0.0282,"{'n_total': 4244, 'n_valid': 311, 'n_correct': 311}",546.410009,"public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split("":""); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? ""changeit"" : args[1]; passphrase = p.toCharArray(); } else { System.out.println(""Usage: java InstallCert <host>[:port] [passphrase]""); return; } File file = new File(""jssecacerts""); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty(""java.home"") + SEP + ""lib"" + SEP + ""security""); file = new File(dir, ""jssecacerts""); if (file.isFile() == false) { file = new File(dir, ""cacerts""); } } System.out.println(""Loading KeyStore "" + file + ""...""); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(""TLS""); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(""Opening connection to "" + host + "":"" + port + ""...""); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(""Starting SSL handshake...""); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(""No errors, certificate is already trusted""); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(""Could not obtain server certificate chain""); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(""Server sent "" + chain.length + "" certificate(s):""); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(""SHA1""); MessageDigest md5 = MessageDigest.getInstance(""MD5""); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println("" "" + (i + 1) + "" Subject "" + cert.getSubjectDN()); System.out.println("" Issuer "" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println("" sha1 "" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println("" md5 "" + toHexString(md5.digest())); System.out.println(); } System.out.println(""Enter certificate to add to trusted keystore or 'q' to quit: [1]""); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(""KeyStore not changed""); return; } X509Certificate cert = chain[k]; String alias = host + ""-"" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(""jssecacerts""); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(""Added certificate to keystore 'jssecacerts' using alias '"" + alias + ""'""); }","void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?"""":args[1];(("""")+"""");File(dir,"""");if(file()){File(dir,"""");}}(""""+"""");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});("""").setSoTimeout();try{("""");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)""""+cert).println(""""+toHexString());(cert).println(""""+toHexString());}("""");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){("""");}(""""+"""");}",3273,481,10,2792,85.5654305853509,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'host', ';', 'int', 'port', ';', 'char', '[', ']', 'passphrase', ';', 'if', '(', '(', 'args', '.', 'length', '==', '1', ')', '||', '(', 'args', '.', 'length', '==', '2', ')', ')', '{', 'String', '[', ']', 'c', '=', 'args', '[', '0', ']', '.', 'split', '(', '"":""', ')', ';', 'host', '=', 'c', '[', '0', ']', ';', 'port', '=', '(', 'c', '.', 'length', '==', '1', ')', '?', '443', ':', 'Integer', '.', 'parseInt', '(', 'c', '[', '1', ']', ')', ';', 'String', 'p', '=', '(', 'args', '.', 'length', '==', '1', ')', '?', '""changeit""', ':', 'args', '[', '1', ']', ';', 'passphrase', '=', 'p', '.', 'toCharArray', '(', ')', ';', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: java InstallCert <host>[:port] [passphrase]""', ')', ';', 'return', ';', '}', 'File', 'file', '=', 'new', 'File', '(', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'char', 'SEP', '=', 'File', '.', 'separatorChar', ';', 'File', 'dir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '""java.home""', ')', '+', 'SEP', '+', '""lib""', '+', 'SEP', '+', '""security""', ')', ';', 'file', '=', 'new', 'File', '(', 'dir', ',', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'file', '=', 'new', 'File', '(', 'dir', ',', '""cacerts""', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '""Loading KeyStore ""', '+', 'file', '+', '""...""', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'KeyStore', 'ks', '=', 'KeyStore', '.', 'getInstance', '(', 'KeyStore', '.', 'getDefaultType', '(', ')', ')', ';', 'ks', '.', 'load', '(', 'in', ',', 'passphrase', ')', ';', 'in', '.', 'close', '(', ')', ';', 'SSLContext', 'context', '=', 'SSLContext', '.', 'getInstance', '(', '""TLS""', ')', ';', 'TrustManagerFactory', 'tmf', '=', 'TrustManagerFactory', '.', 'getInstance', '(', 'TrustManagerFactory', '.', 'getDefaultAlgorithm', '(', ')', ')', ';', 'tmf', '.', 'init', '(', 'ks', ')', ';', 'X509TrustManager', 'defaultTrustManager', '=', '(', 'X509TrustManager', ')', 'tmf', '.', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'SavingTrustManager', 'tm', '=', 'new', 'SavingTrustManager', '(', 'defaultTrustManager', ')', ';', 'context', '.', 'init', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', 'tm', '}', ',', 'null', ')', ';', 'SSLSocketFactory', 'factory', '=', 'context', '.', 'getSocketFactory', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Opening connection to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '""...""', ')', ';', 'SSLSocket', 'socket', '=', '(', 'SSLSocket', ')', 'factory', '.', 'createSocket', '(', 'host', ',', 'port', ')', ';', 'socket', '.', 'setSoTimeout', '(', '10000', ')', ';', 'try', '{', 'System', '.', 'out', '.', 'println', '(', '""Starting SSL handshake...""', ')', ';', 'socket', '.', 'startHandshake', '(', ')', ';', 'socket', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""No errors, certificate is already trusted""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'out', ')', ';', '}', 'X509Certificate', '[', ']', 'chain', '=', 'tm', '.', 'chain', ';', 'if', '(', 'chain', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Could not obtain server certificate chain""', ')', ';', 'return', ';', '}', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'System', '.', 'in', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server sent ""', '+', 'chain', '.', 'length', '+', '"" certificate(s):""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', '""SHA1""', ')', ';', 'MessageDigest', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '""MD5""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chain', '.', 'length', ';', 'i', '++', ')', '{', 'X509Certificate', 'cert', '=', 'chain', '[', 'i', ']', ';', 'System', '.', 'out', '.', 'println', '(', '"" ""', '+', '(', 'i', '+', '1', ')', '+', '"" Subject ""', '+', 'cert', '.', 'getSubjectDN', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" Issuer ""', '+', 'cert', '.', 'getIssuerDN', '(', ')', ')', ';', 'sha1', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" sha1 ""', '+', 'toHexString', '(', 'sha1', '.', 'digest', '(', ')', ')', ')', ';', 'md5', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" md5 ""', '+', 'toHexString', '(', 'md5', '.', 'digest', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Enter certificate to add to trusted keystore or \'q\' to quit: [1]""', ')', ';', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ';', 'int', 'k', ';', 'try', '{', 'k', '=', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', '?', '0', ':', 'Integer', '.', 'parseInt', '(', 'line', ')', '-', '1', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""KeyStore not changed""', ')', ';', 'return', ';', '}', 'X509Certificate', 'cert', '=', 'chain', '[', 'k', ']', ';', 'String', 'alias', '=', 'host', '+', '""-""', '+', '(', 'k', '+', '1', ')', ';', 'ks', '.', 'setCertificateEntry', '(', 'alias', ',', 'cert', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', '""jssecacerts""', ')', ';', 'ks', '.', 'store', '(', 'out', ',', 'passphrase', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'cert', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Added certificate to keystore \'jssecacerts\' using alias \'""', '+', 'alias', '+', '""\'""', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '(', '2', ')', ')', '{', 'String', '=', 'args', '[', '0', ']', '.', 'split', '(', ')', '?', '3', ':', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'length', ')', '?', '""""', ':', 'args', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'File', '(', 'dir', ',', '""""', ')', ';', 'if', '(', 'file', '(', ')', ')', '{', 'File', '(', 'dir', ',', '""""', ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '(', 'ks', ')', ';', 'X', '=', '(', 'X', ')', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'tm', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', '}', ')', ';', '(', '""""', ')', '.', 'setSoTimeout', '(', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'println', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '(', '(', 'System', ')', ')', '.', 'getInstance', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', '""""', '+', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '(', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', 'length', '(', ')', '==', '0', ')', '?', '0', ':', '(', 'line', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}']",832,237,6,595,72.03389830508475
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_16.txt,0.9956,0.0054,"{'n_total': 3485, 'n_valid': 261, 'n_correct': 261}",440.902916,"public static void main(String[] args) throws IOException { if (args.length == 0) { System.err.println(""Pass in the directory containing both the chunker data and the pos data.""); System.exit(1); } File directory = new File(args[0]); File chunkerTrainDir = new File(directory, ""chunker""); File posTrainDir = new File(directory, ""pos""); File outputTrainDir = new File(directory, ""revised""); if (chunkerTrainDir.exists() == false) { System.err.println(""There is not directory named \"""" + chunkerTrainDir.toString() + ""\"".""); System.exit(1); } if (posTrainDir.exists() == false) { System.err.println(""There is no directory named \"""" + posTrainDir.toString() + ""\"".""); System.exit(1); } if (outputTrainDir.exists() == true) { System.out.println(""Output directory already exists \"""" + outputTrainDir.toString() + ""\"", destroying""); final File[] files = outputTrainDir.listFiles(); for (File f : files) f.delete(); outputTrainDir.delete(); } outputTrainDir.mkdir(); System.out.println(""Created "" + outputTrainDir.toString()); String resultspath = outputTrainDir.toString() + File.separator; File[] chunkerfiles = chunkerTrainDir.listFiles(); File[] posFiles = posTrainDir.listFiles(); for (int i = 0; i < chunkerfiles.length; i++) { File chunkfile = chunkerfiles[i]; File posfile = posFiles[i]; if (!chunkfile.getName().equals(posfile.getName())) { System.err.println(""Files names were not equal!""); System.exit(1); } try (BufferedReader chunkreader = new BufferedReader(new FileReader(chunkfile))) { try (BufferedReader posreader = new BufferedReader(new FileReader(posfile))) { String pl = null; while (true) { String cl = chunkreader.readLine(); if (cl == null) break; pl = posreader.readLine(); ChunkTree ct = new ChunkTree(cl); String ctsent = ct.sentence(); if (!chunkedSentences.containsKey(ctsent)) { chunkedSentences.put(ctsent, ct); } if (pl != null) { ChunkTree pt = new ChunkTree(pl); if (pl != null) posSentences.add(pt); } } } } int line = 0; int diff = 0; StringBuffer result = new StringBuffer(); for (ChunkTree postree : posSentences) { ChunkTree chunktree = chunkedSentences.get(postree.sentence()); if (chunktree == null) { System.err.println(""Hell fire.""); } else { String before = chunktree.sentence(); String beforet = chunktree.toString(); chunktree.merge(postree); if (!chunktree.sentence().equals(before)) { throw new RuntimeException(""Sentences differed : \n"" + before + ""\n"" + chunktree.sentence()); } if (!beforet.equals(chunktree.toString())) { System.out.println(); System.out.println(beforet); System.out.println(chunktree); System.out.println(postree); diff++; } result.append(chunktree.toString()); result.append('\n'); } line++; } System.out.println(""Of "" + line + "", "" + diff + "" changed.""); Files.write(Paths.get(resultspath + chunkfile.getName()), result.toString().getBytes(), StandardOpenOption.CREATE); } }","void main(String[]args)throws IOException{if(length){("""");(1);}File(directory,"""");if(false){(""""+toString()+"""");(1);}if(false){(""""+toString()+"""");(1);try(BufferedReader chunkreader=((chunkfile))){try(BufferedReader posreader=((posfile))){while(true){cl();if(null)(cl);if((ctsent)){put();}if(pl){(pt);}}}}for(ChunkTree postree:posSentences){(postree());if(chunktree){("""");if(chunktree){(""""+chunktree);}if((chunktree)){}(toString());('n');}line++;}(""""+"""");}}",2840,455,10,2385,84.2756183745583,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Pass in the directory containing both the chunker data and the pos data.""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'File', 'directory', '=', 'new', 'File', '(', 'args', '[', '0', ']', ')', ';', 'File', 'chunkerTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""chunker""', ')', ';', 'File', 'posTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""pos""', ')', ';', 'File', 'outputTrainDir', '=', 'new', 'File', '(', 'directory', ',', '""revised""', ')', ';', 'if', '(', 'chunkerTrainDir', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""There is not directory named \\""""', '+', 'chunkerTrainDir', '.', 'toString', '(', ')', '+', '""\\"".""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'posTrainDir', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""There is no directory named \\""""', '+', 'posTrainDir', '.', 'toString', '(', ')', '+', '""\\"".""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'outputTrainDir', '.', 'exists', '(', ')', '==', 'true', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Output directory already exists \\""""', '+', 'outputTrainDir', '.', 'toString', '(', ')', '+', '""\\"", destroying""', ')', ';', 'final', 'File', '[', ']', 'files', '=', 'outputTrainDir', '.', 'listFiles', '(', ')', ';', 'for', '(', 'File', 'f', ':', 'files', ')', 'f', '.', 'delete', '(', ')', ';', 'outputTrainDir', '.', 'delete', '(', ')', ';', '}', 'outputTrainDir', '.', 'mkdir', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Created ""', '+', 'outputTrainDir', '.', 'toString', '(', ')', ')', ';', 'String', 'resultspath', '=', 'outputTrainDir', '.', 'toString', '(', ')', '+', 'File', '.', 'separator', ';', 'File', '[', ']', 'chunkerfiles', '=', 'chunkerTrainDir', '.', 'listFiles', '(', ')', ';', 'File', '[', ']', 'posFiles', '=', 'posTrainDir', '.', 'listFiles', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chunkerfiles', '.', 'length', ';', 'i', '++', ')', '{', 'File', 'chunkfile', '=', 'chunkerfiles', '[', 'i', ']', ';', 'File', 'posfile', '=', 'posFiles', '[', 'i', ']', ';', 'if', '(', '!', 'chunkfile', '.', 'getName', '(', ')', '.', 'equals', '(', 'posfile', '.', 'getName', '(', ')', ')', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Files names were not equal!""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '(', 'BufferedReader', 'chunkreader', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'chunkfile', ')', ')', ')', '{', 'try', '(', 'BufferedReader', 'posreader', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'posfile', ')', ')', ')', '{', 'String', 'pl', '=', 'null', ';', 'while', '(', 'true', ')', '{', 'String', 'cl', '=', 'chunkreader', '.', 'readLine', '(', ')', ';', 'if', '(', 'cl', '==', 'null', ')', 'break', ';', 'pl', '=', 'posreader', '.', 'readLine', '(', ')', ';', 'ChunkTree', 'ct', '=', 'new', 'ChunkTree', '(', 'cl', ')', ';', 'String', 'ctsent', '=', 'ct', '.', 'sentence', '(', ')', ';', 'if', '(', '!', 'chunkedSentences', '.', 'containsKey', '(', 'ctsent', ')', ')', '{', 'chunkedSentences', '.', 'put', '(', 'ctsent', ',', 'ct', ')', ';', '}', 'if', '(', 'pl', '!=', 'null', ')', '{', 'ChunkTree', 'pt', '=', 'new', 'ChunkTree', '(', 'pl', ')', ';', 'if', '(', 'pl', '!=', 'null', ')', 'posSentences', '.', 'add', '(', 'pt', ')', ';', '}', '}', '}', '}', 'int', 'line', '=', '0', ';', 'int', 'diff', '=', '0', ';', 'StringBuffer', 'result', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'ChunkTree', 'postree', ':', 'posSentences', ')', '{', 'ChunkTree', 'chunktree', '=', 'chunkedSentences', '.', 'get', '(', 'postree', '.', 'sentence', '(', ')', ')', ';', 'if', '(', 'chunktree', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Hell fire.""', ')', ';', '}', 'else', '{', 'String', 'before', '=', 'chunktree', '.', 'sentence', '(', ')', ';', 'String', 'beforet', '=', 'chunktree', '.', 'toString', '(', ')', ';', 'chunktree', '.', 'merge', '(', 'postree', ')', ';', 'if', '(', '!', 'chunktree', '.', 'sentence', '(', ')', '.', 'equals', '(', 'before', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Sentences differed : \\n""', '+', 'before', '+', '""\\n""', '+', 'chunktree', '.', 'sentence', '(', ')', ')', ';', '}', 'if', '(', '!', 'beforet', '.', 'equals', '(', 'chunktree', '.', 'toString', '(', ')', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'beforet', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'chunktree', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'postree', ')', ';', 'diff', '++', ';', '}', 'result', '.', 'append', '(', 'chunktree', '.', 'toString', '(', ')', ')', ';', 'result', '.', 'append', '(', ""'\\n'"", ')', ';', '}', 'line', '++', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Of ""', '+', 'line', '+', '"", ""', '+', 'diff', '+', '"" changed.""', ')', ';', 'Files', '.', 'write', '(', 'Paths', '.', 'get', '(', 'resultspath', '+', 'chunkfile', '.', 'getName', '(', ')', ')', ',', 'result', '.', 'toString', '(', ')', '.', 'getBytes', '(', ')', ',', 'StandardOpenOption', '.', 'CREATE', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'if', '(', 'length', ')', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', 'File', '(', 'directory', ',', '""""', ')', ';', 'if', '(', 'false', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', '(', '1', ')', ';', '}', 'if', '(', 'false', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', '(', '1', ')', ';', 'try', '(', 'BufferedReader', 'chunkreader', '=', '(', '(', 'chunkfile', ')', ')', ')', '{', 'try', '(', 'BufferedReader', 'posreader', '=', '(', '(', 'posfile', ')', ')', ')', '{', 'while', '(', 'true', ')', '{', 'cl', '(', ')', ';', 'if', '(', 'null', ')', '(', 'cl', ')', ';', 'if', '(', '(', 'ctsent', ')', ')', '{', 'put', '(', ')', ';', '}', 'if', '(', 'pl', ')', '{', '(', 'pt', ')', ';', '}', '}', '}', '}', 'for', '(', 'ChunkTree', 'postree', ':', 'posSentences', ')', '{', '(', 'postree', '(', ')', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', '+', 'chunktree', ')', ';', '}', 'if', '(', '(', 'chunktree', ')', ')', '{', '}', '(', 'toString', '(', ')', ')', ';', '(', ""'n'"", ')', ';', '}', 'line', '++', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}']",725,203,6,522,72.60083449235049
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_4.txt,0.3707,1.5353,"{'n_total': 3206, 'n_valid': 243, 'n_correct': 243}",412.700883,"public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(QuasiSuccinctEntityHash.class.getName(), ""Creates a MPHF from a file with the candidates info"", new Parameter[] { new FlaggedOption(""input"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'i', ""input"", ""Input "" + ""file""), new FlaggedOption(""entity2id"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'e', ""entities"", ""TAB-separated entity names and corresponding ids""), new FlaggedOption(""wikiThreshold"", JSAP.INTEGER_PARSER, ""0"", JSAP.NOT_REQUIRED, 'w', ""wikiThreshold"", ""Minimum number of anchors to store a candidate""), new FlaggedOption(""queryThreshold"", JSAP.INTEGER_PARSER, ""0"", JSAP.NOT_REQUIRED, 'q', ""queryThreshold"", ""Minimum number of clicks to store a candidate""), new FlaggedOption(""output"", JSAP.STRING_PARSER, JSAP.NO_DEFAULT, JSAP.REQUIRED, 'o', ""output"", ""Compressed version"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; final Iterable<StringAndCandidate> stringAndCandidates = FormatReader.stringAndCandidates(jsapResult.getString(""input""), jsapResult.getInt(""queryThreshold""), jsapResult.getInt(""wikiThreshold"")); final BufferedReader linesC = new BufferedReader(new FileReader(jsapResult.getString(""entity2id""))); int maxIndex = 0; String line; while ((line = linesC.readLine()) != null) { String[] parts = line.split(""\t""); int x = Integer.parseInt(parts[1]); if (x > maxIndex) maxIndex = x; } linesC.close(); final BufferedReader lines = new BufferedReader(new FileReader(jsapResult.getString(""entity2id""))); ObjectArrayList<String> entityNames = new ObjectArrayList<>(maxIndex); LOGGER.info(""Storing entity names""); while ((line = lines.readLine()) != null) { String[] parts = line.split(""\t""); try { final int index = Integer.parseInt(parts[1]); if (index >= entityNames.size()) entityNames.size(index + 1); final String oldValue = entityNames.set(index, parts[0]); if (oldValue != null) LOGGER.warn(""Duplicate index "" + index + "" for names \"""" + parts[0] + ""\"" and \"""" + oldValue + ""\""""); } catch (NumberFormatException e) { LOGGER.error(""Wrong line (skipping) --> "" + line); } } LOGGER.info(""done""); lines.close(); for (int i = 0; i < entityNames.size(); i++) if (entityNames.get(i) == null) { entityNames.set(i, """"); } HashMap<Integer, DataOutputStream> valuesArray = new HashMap<Integer, DataOutputStream>(); HashMap<Integer, LongArrayList> pointersArray = new HashMap<Integer, LongArrayList>(); HashMap<Integer, File> tempFiles = new HashMap<Integer, File>(); LongArrayList cutPoints = new LongArrayList(); File tempFile = File.createTempFile(""values"", ""tempfile""); tempFile.deleteOnExit(); int batchNumber = 0; tempFiles.put(batchNumber, tempFile); DataOutputStream values = new DataOutputStream(new FastBufferedOutputStream(new FileOutputStream(tempFile))); cutPoints.add(0); valuesArray.put(batchNumber, values); pointersArray.put(batchNumber, cutPoints); long valuesSize = 0; final IntBigArrayBigList entityValues = new IntBigArrayBigList(); entityValues.size(entityNames.size() * PER_ENTITY_FEATURES); ProgressLogger pl = new ProgressLogger(LOGGER); pl.itemsName = ""aliases""; int numberOfCandidates = 0; for (StringAndCandidate sc : stringAndCandidates) { pl.lightUpdate(); if (numberOfCandidates++ > ALIASESPERBATCH - 1) { numberOfCandidates = 1; batchNumber++; tempFile = File.createTempFile(""values"", ""tempfile""); tempFile.deleteOnExit(); values.close(); values = new DataOutputStream(new FastBufferedOutputStream(new FileOutputStream(tempFile))); cutPoints = new LongArrayList(); cutPoints.add(0); valuesArray.put(batchNumber, values); pointersArray.put(batchNumber, cutPoints); tempFiles.put(batchNumber, tempFile); valuesSize = 0; } CandidatesInfo ci = sc.candidatesInfo; values.writeInt((int) ci.QAF); values.writeInt((int) ci.QAT); values.writeInt((int) ci.QAC); values.writeInt((int) ci.LAF); values.writeInt((int) ci.LAT); valuesSize += PER_CANDIDATE_FEATURES; for (Entity e : ci.entities) { values.writeInt(e.id); values.writeInt((int) e.LAET); values.writeInt((int) e.QAEF); valuesSize += PER_ENTITY_CANDIDATE_FEATURES; entityValues.set(e.id * PER_ENTITY_FEATURES, (int) e.QEF); entityValues.set(e.id * PER_ENTITY_FEATURES + 1, (int) e.LET); entityValues.set(e.id * PER_ENTITY_FEATURES + 2, e.type); } cutPoints.add(valuesSize); } values.close(); pl.done(); Iterable<CharSequence> surfaceForms = new Iterable<CharSequence>() { @Override public Iterator<CharSequence> iterator() { return new AbstractObjectIterator<CharSequence>() { Iterator<StringAndCandidate> i = stringAndCandidates.iterator(); @Override public boolean hasNext() { return i.hasNext(); } @Override public String next() { return i.next().surfaceForm; } }; } }; ShiftAddXorSignedStringMap surfaceForm2Position = new ShiftAddXorSignedStringMap(surfaceForms.iterator(), new MWHCFunction.Builder<CharSequence>().keys(surfaceForms).transform(TransformationStrategies.utf16()).build()); EliasFanoLongBigList[] valuesA = new EliasFanoLongBigList[tempFiles.size()]; EliasFanoMonotoneLongBigList[] cutPointsArray = new EliasFanoMonotoneLongBigList[tempFiles.size()]; for (int i = 0; i < tempFiles.size(); i++) { final File xx = tempFiles.get(i); LongIterable lI = new LongIterable() { public LongIterator iterator() { return LongIterators.wrap(BinIO.asIntIterable(xx).iterator()); } }; long lowerBound = Long.MAX_VALUE; LongIterator iterator = lI.iterator(); while (iterator.hasNext()) lowerBound = Math.min(lowerBound, iterator.nextLong()); cutPointsArray[i] = new EliasFanoMonotoneLongBigList(pointersArray.get(i)); valuesA[i] = new EliasFanoLongBigList(lI.iterator(), lowerBound, true); } LOGGER.info(""#Batches= "" + tempFiles.size()); QuasiSuccinctEntityHash quasiSuccinctEntityHash = new QuasiSuccinctEntityHash(surfaceForm2Position, cutPointsArray, valuesA, new EliasFanoLongBigList(entityValues), new FrontCodedStringList(entityNames, 8, true)); LOGGER.info(""Creating stats""); quasiSuccinctEntityHash.stats = CountAndRecordStats.createStats(quasiSuccinctEntityHash); BinIO.storeObject(quasiSuccinctEntityHash, jsapResult.getString(""output"")); LOGGER.info(""... done""); assert checkMap(jsapResult, stringAndCandidates); }","void main(String[]args)throws Exception{jsap(QuasiSuccinctEntityHash,"""",new Parameter[]{FlaggedOption("""",""""),FlaggedOption("""",'q',"""")});jsapResult((""""),(""""),(""""));((("""")));while((readLine())!=null){(parts[1]);(x);}surfaceForms=new Iterable<>(){<CharSequence>iterator(){new AbstractObjectIterator<>(){Iterator<StringAndCandidate>i();hasNext(){}};}};ShiftAddXorSignedStringMap()[size()];EliasFanoMonotoneLongBigList[size()];for(;;i++){new LongIterable(){{(iterator());}};((i));valuesA[i]=(lI);}("""");(quasiSuccinctEntityHash);(getString());("""");checkMap();}",6167,554,10,5613,91.1645281793081,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'QuasiSuccinctEntityHash', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a MPHF from a file with the candidates info""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'FlaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'i'"", ',', '""input""', ',', '""Input ""', '+', '""file""', ')', ',', 'new', 'FlaggedOption', '(', '""entity2id""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'e'"", ',', '""entities""', ',', '""TAB-separated entity names and corresponding ids""', ')', ',', 'new', 'FlaggedOption', '(', '""wikiThreshold""', ',', 'JSAP', '.', 'INTEGER_PARSER', ',', '""0""', ',', 'JSAP', '.', 'NOT_REQUIRED', ',', ""'w'"", ',', '""wikiThreshold""', ',', '""Minimum number of anchors to store a candidate""', ')', ',', 'new', 'FlaggedOption', '(', '""queryThreshold""', ',', 'JSAP', '.', 'INTEGER_PARSER', ',', '""0""', ',', 'JSAP', '.', 'NOT_REQUIRED', ',', ""'q'"", ',', '""queryThreshold""', ',', '""Minimum number of clicks to store a candidate""', ')', ',', 'new', 'FlaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'JSAP', '.', 'NO_DEFAULT', ',', 'JSAP', '.', 'REQUIRED', ',', ""'o'"", ',', '""output""', ',', '""Compressed version""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'final', 'Iterable', '<', 'StringAndCandidate', '>', 'stringAndCandidates', '=', 'FormatReader', '.', 'stringAndCandidates', '(', 'jsapResult', '.', 'getString', '(', '""input""', ')', ',', 'jsapResult', '.', 'getInt', '(', '""queryThreshold""', ')', ',', 'jsapResult', '.', 'getInt', '(', '""wikiThreshold""', ')', ')', ';', 'final', 'BufferedReader', 'linesC', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'jsapResult', '.', 'getString', '(', '""entity2id""', ')', ')', ')', ';', 'int', 'maxIndex', '=', '0', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'linesC', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'parts', '=', 'line', '.', 'split', '(', '""\\t""', ')', ';', 'int', 'x', '=', 'Integer', '.', 'parseInt', '(', 'parts', '[', '1', ']', ')', ';', 'if', '(', 'x', '>', 'maxIndex', ')', 'maxIndex', '=', 'x', ';', '}', 'linesC', '.', 'close', '(', ')', ';', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'jsapResult', '.', 'getString', '(', '""entity2id""', ')', ')', ')', ';', 'ObjectArrayList', '<', 'String', '>', 'entityNames', '=', 'new', 'ObjectArrayList', '<', '>', '(', 'maxIndex', ')', ';', 'LOGGER', '.', 'info', '(', '""Storing entity names""', ')', ';', 'while', '(', '(', 'line', '=', 'lines', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'parts', '=', 'line', '.', 'split', '(', '""\\t""', ')', ';', 'try', '{', 'final', 'int', 'index', '=', 'Integer', '.', 'parseInt', '(', 'parts', '[', '1', ']', ')', ';', 'if', '(', 'index', '>=', 'entityNames', '.', 'size', '(', ')', ')', 'entityNames', '.', 'size', '(', 'index', '+', '1', ')', ';', 'final', 'String', 'oldValue', '=', 'entityNames', '.', 'set', '(', 'index', ',', 'parts', '[', '0', ']', ')', ';', 'if', '(', 'oldValue', '!=', 'null', ')', 'LOGGER', '.', 'warn', '(', '""Duplicate index ""', '+', 'index', '+', '"" for names \\""""', '+', 'parts', '[', '0', ']', '+', '""\\"" and \\""""', '+', 'oldValue', '+', '""\\""""', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'LOGGER', '.', 'error', '(', '""Wrong line (skipping) --> ""', '+', 'line', ')', ';', '}', '}', 'LOGGER', '.', 'info', '(', '""done""', ')', ';', 'lines', '.', 'close', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'entityNames', '.', 'size', '(', ')', ';', 'i', '++', ')', 'if', '(', 'entityNames', '.', 'get', '(', 'i', ')', '==', 'null', ')', '{', 'entityNames', '.', 'set', '(', 'i', ',', '""""', ')', ';', '}', 'HashMap', '<', 'Integer', ',', 'DataOutputStream', '>', 'valuesArray', '=', 'new', 'HashMap', '<', 'Integer', ',', 'DataOutputStream', '>', '(', ')', ';', 'HashMap', '<', 'Integer', ',', 'LongArrayList', '>', 'pointersArray', '=', 'new', 'HashMap', '<', 'Integer', ',', 'LongArrayList', '>', '(', ')', ';', 'HashMap', '<', 'Integer', ',', 'File', '>', 'tempFiles', '=', 'new', 'HashMap', '<', 'Integer', ',', 'File', '>', '(', ')', ';', 'LongArrayList', 'cutPoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'File', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '""values""', ',', '""tempfile""', ')', ';', 'tempFile', '.', 'deleteOnExit', '(', ')', ';', 'int', 'batchNumber', '=', '0', ';', 'tempFiles', '.', 'put', '(', 'batchNumber', ',', 'tempFile', ')', ';', 'DataOutputStream', 'values', '=', 'new', 'DataOutputStream', '(', 'new', 'FastBufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempFile', ')', ')', ')', ';', 'cutPoints', '.', 'add', '(', '0', ')', ';', 'valuesArray', '.', 'put', '(', 'batchNumber', ',', 'values', ')', ';', 'pointersArray', '.', 'put', '(', 'batchNumber', ',', 'cutPoints', ')', ';', 'long', 'valuesSize', '=', '0', ';', 'final', 'IntBigArrayBigList', 'entityValues', '=', 'new', 'IntBigArrayBigList', '(', ')', ';', 'entityValues', '.', 'size', '(', 'entityNames', '.', 'size', '(', ')', '*', 'PER_ENTITY_FEATURES', ')', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'LOGGER', ')', ';', 'pl', '.', 'itemsName', '=', '""aliases""', ';', 'int', 'numberOfCandidates', '=', '0', ';', 'for', '(', 'StringAndCandidate', 'sc', ':', 'stringAndCandidates', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'if', '(', 'numberOfCandidates', '++', '>', 'ALIASESPERBATCH', '-', '1', ')', '{', 'numberOfCandidates', '=', '1', ';', 'batchNumber', '++', ';', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '""values""', ',', '""tempfile""', ')', ';', 'tempFile', '.', 'deleteOnExit', '(', ')', ';', 'values', '.', 'close', '(', ')', ';', 'values', '=', 'new', 'DataOutputStream', '(', 'new', 'FastBufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempFile', ')', ')', ')', ';', 'cutPoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'cutPoints', '.', 'add', '(', '0', ')', ';', 'valuesArray', '.', 'put', '(', 'batchNumber', ',', 'values', ')', ';', 'pointersArray', '.', 'put', '(', 'batchNumber', ',', 'cutPoints', ')', ';', 'tempFiles', '.', 'put', '(', 'batchNumber', ',', 'tempFile', ')', ';', 'valuesSize', '=', '0', ';', '}', 'CandidatesInfo', 'ci', '=', 'sc', '.', 'candidatesInfo', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAF', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAT', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'QAC', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'LAF', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'ci', '.', 'LAT', ')', ';', 'valuesSize', '+=', 'PER_CANDIDATE_FEATURES', ';', 'for', '(', 'Entity', 'e', ':', 'ci', '.', 'entities', ')', '{', 'values', '.', 'writeInt', '(', 'e', '.', 'id', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'e', '.', 'LAET', ')', ';', 'values', '.', 'writeInt', '(', '(', 'int', ')', 'e', '.', 'QAEF', ')', ';', 'valuesSize', '+=', 'PER_ENTITY_CANDIDATE_FEATURES', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', ',', '(', 'int', ')', 'e', '.', 'QEF', ')', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', '+', '1', ',', '(', 'int', ')', 'e', '.', 'LET', ')', ';', 'entityValues', '.', 'set', '(', 'e', '.', 'id', '*', 'PER_ENTITY_FEATURES', '+', '2', ',', 'e', '.', 'type', ')', ';', '}', 'cutPoints', '.', 'add', '(', 'valuesSize', ')', ';', '}', 'values', '.', 'close', '(', ')', ';', 'pl', '.', 'done', '(', ')', ';', 'Iterable', '<', 'CharSequence', '>', 'surfaceForms', '=', 'new', 'Iterable', '<', 'CharSequence', '>', '(', ')', '{', '@', 'Override', 'public', 'Iterator', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'return', 'new', 'AbstractObjectIterator', '<', 'CharSequence', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '=', 'stringAndCandidates', '.', 'iterator', '(', ')', ';', '@', 'Override', 'public', 'boolean', 'hasNext', '(', ')', '{', 'return', 'i', '.', 'hasNext', '(', ')', ';', '}', '@', 'Override', 'public', 'String', 'next', '(', ')', '{', 'return', 'i', '.', 'next', '(', ')', '.', 'surfaceForm', ';', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', 'surfaceForm2Position', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'surfaceForms', '.', 'iterator', '(', ')', ',', 'new', 'MWHCFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'surfaceForms', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'EliasFanoLongBigList', '[', ']', 'valuesA', '=', 'new', 'EliasFanoLongBigList', '[', 'tempFiles', '.', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', ']', 'cutPointsArray', '=', 'new', 'EliasFanoMonotoneLongBigList', '[', 'tempFiles', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'tempFiles', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'final', 'File', 'xx', '=', 'tempFiles', '.', 'get', '(', 'i', ')', ';', 'LongIterable', 'lI', '=', 'new', 'LongIterable', '(', ')', '{', 'public', 'LongIterator', 'iterator', '(', ')', '{', 'return', 'LongIterators', '.', 'wrap', '(', 'BinIO', '.', 'asIntIterable', '(', 'xx', ')', '.', 'iterator', '(', ')', ')', ';', '}', '}', ';', 'long', 'lowerBound', '=', 'Long', '.', 'MAX_VALUE', ';', 'LongIterator', 'iterator', '=', 'lI', '.', 'iterator', '(', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', 'lowerBound', '=', 'Math', '.', 'min', '(', 'lowerBound', ',', 'iterator', '.', 'nextLong', '(', ')', ')', ';', 'cutPointsArray', '[', 'i', ']', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'pointersArray', '.', 'get', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', 'new', 'EliasFanoLongBigList', '(', 'lI', '.', 'iterator', '(', ')', ',', 'lowerBound', ',', 'true', ')', ';', '}', 'LOGGER', '.', 'info', '(', '""#Batches= ""', '+', 'tempFiles', '.', 'size', '(', ')', ')', ';', 'QuasiSuccinctEntityHash', 'quasiSuccinctEntityHash', '=', 'new', 'QuasiSuccinctEntityHash', '(', 'surfaceForm2Position', ',', 'cutPointsArray', ',', 'valuesA', ',', 'new', 'EliasFanoLongBigList', '(', 'entityValues', ')', ',', 'new', 'FrontCodedStringList', '(', 'entityNames', ',', '8', ',', 'true', ')', ')', ';', 'LOGGER', '.', 'info', '(', '""Creating stats""', ')', ';', 'quasiSuccinctEntityHash', '.', 'stats', '=', 'CountAndRecordStats', '.', 'createStats', '(', 'quasiSuccinctEntityHash', ')', ';', 'BinIO', '.', 'storeObject', '(', 'quasiSuccinctEntityHash', ',', 'jsapResult', '.', 'getString', '(', '""output""', ')', ')', ';', 'LOGGER', '.', 'info', '(', '""... done""', ')', ';', 'assert', 'checkMap', '(', 'jsapResult', ',', 'stringAndCandidates', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'jsap', '(', 'QuasiSuccinctEntityHash', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'FlaggedOption', '(', '""""', ',', '""""', ')', ',', 'FlaggedOption', '(', '""""', ',', ""'q'"", ',', '""""', ')', '}', ')', ';', 'jsapResult', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', '(', 'parts', '[', '1', ']', ')', ';', '(', 'x', ')', ';', '}', 'surfaceForms', '=', 'new', 'Iterable', '<', '>', '(', ')', '{', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'new', 'AbstractObjectIterator', '<', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '(', ')', ';', 'hasNext', '(', ')', '{', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', '(', ')', '[', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', 'size', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'new', 'LongIterable', '(', ')', '{', '{', '(', 'iterator', '(', ')', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', '(', 'lI', ')', ';', '}', '(', '""""', ')', ';', '(', 'quasiSuccinctEntityHash', ')', ';', '(', 'getString', '(', ')', ')', ';', '(', '""""', ')', ';', 'checkMap', '(', ')', ';', '}']",1386,205,6,1181,85.57971014492753
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_1.txt,0.7995,1.0555,"{'n_total': 7296, 'n_valid': 511, 'n_correct': 438}",905.076055,"protected void run() throws IOException { if (!isReady()) { throw new IOException(this.getClass().getName() + "": not ready to run.""); } if (debug >= 1) { log(""runCGI(envp=["" + env + ""], command="" + command + "")""); } if ((command.indexOf(File.separator + ""."" + File.separator) >= 0) || (command.indexOf(File.separator + "".."") >= 0) || (command.indexOf("".."" + File.separator) >= 0)) { throw new IOException(this.getClass().getName() + ""Illegal Character in CGI command "" + ""path ('.' or '..') detected. Not "" + ""running CGI ["" + command + ""].""); } Runtime rt = null; BufferedReader cgiHeaderReader = null; InputStream cgiOutput = null; BufferedReader commandsStdErr = null; Thread errReaderThread = null; BufferedOutputStream commandsStdIn = null; Process proc = null; int bufRead = -1; List<String> cmdAndArgs = new ArrayList<>(); if (cgiExecutable.length() != 0) { cmdAndArgs.add(cgiExecutable); } if (cgiExecutableArgs != null) { cmdAndArgs.addAll(cgiExecutableArgs); } cmdAndArgs.add(command); cmdAndArgs.addAll(params); try { rt = Runtime.getRuntime(); proc = rt.exec(cmdAndArgs.toArray(new String[cmdAndArgs.size()]), hashToStringArray(env), wd); String sContentLength = env.get(""CONTENT_LENGTH""); if (!"""".equals(sContentLength)) { commandsStdIn = new BufferedOutputStream(proc.getOutputStream()); IOTools.flow(stdin, commandsStdIn); commandsStdIn.flush(); commandsStdIn.close(); } boolean isRunning = true; commandsStdErr = new BufferedReader(new InputStreamReader(proc.getErrorStream())); final BufferedReader stdErrRdr = commandsStdErr; errReaderThread = new Thread() { @Override public void run() { sendToLog(stdErrRdr); } }; errReaderThread.start(); InputStream cgiHeaderStream = new HTTPHeaderInputStream(proc.getInputStream()); cgiHeaderReader = new BufferedReader(new InputStreamReader(cgiHeaderStream)); while (isRunning) { try { String line = null; while (((line = cgiHeaderReader.readLine()) != null) && !("""".equals(line))) { if (debug >= 2) { log(""runCGI: addHeader(\"""" + line + ""\"")""); } if (line.startsWith(""HTTP"")) { response.setStatus(getSCFromHttpStatusLine(line)); } else if (line.indexOf("":"") >= 0) { String header = line.substring(0, line.indexOf("":"")).trim(); String value = line.substring(line.indexOf("":"") + 1).trim(); if (header.equalsIgnoreCase(""status"")) { response.setStatus(getSCFromCGIStatusHeader(value)); } else { response.addHeader(header, value); } } else { log(""runCGI: bad header line \"""" + line + ""\""""); } } byte[] bBuf = new byte[2048]; OutputStream out = response.getOutputStream(); cgiOutput = proc.getInputStream(); try { while ((bufRead = cgiOutput.read(bBuf)) != -1) { if (debug >= 4) { log(""runCGI: output "" + bufRead + "" bytes of data""); } out.write(bBuf, 0, bufRead); } } finally { if (bufRead != -1) { while ((bufRead = cgiOutput.read(bBuf)) != -1) { } } } proc.exitValue(); isRunning = false; } catch (IllegalThreadStateException e) { try { Thread.sleep(500); } catch (InterruptedException ignored) { } } } } catch (IOException e) { log(""Caught exception "" + e); throw e; } finally { if (cgiHeaderReader != null) { try { cgiHeaderReader.close(); } catch (IOException ioe) { log(""Exception closing header reader "" + ioe); } } if (cgiOutput != null) { try { cgiOutput.close(); } catch (IOException ioe) { log(""Exception closing output stream "" + ioe); } } if (errReaderThread != null) { try { errReaderThread.join(stderrTimeout); } catch (InterruptedException e) { log(""Interupted waiting for stderr reader thread""); } } if (debug > 4) { log(""Running finally block""); } if (proc != null) { proc.destroy(); proc = null; } } }","{if(isReady){(""""+"""");}if((0)|(indexOf()>0)|(("""".separator)=0)){(getClass().getName()+""""+"""");}if(0){cmdAndArgs();}cmdAndArgs();try{rt((String[cmdAndArgs()]),wd);("""");if("""".equals){(proc());}((proc()));errReaderThread=new Thread(){void run(){}};((cgiHeaderStream));while(isRunning){try{while(((line())!=null)&("""".equals)){if(2){(""""+"""");}if(("""")){(getSCFromHttpStatusLine);}if(("""")>0){line(0,("""")).substring(indexOf()+1);if(("""")){((value));(value);}(""""+"""");}}try{while(((bBuf))){if(debug){("""");}write();}}finally{if(1){while(((bBuf))){}}}exitValue();}catch(IllegalThreadStateException e){try{(0);}catch(InterruptedException ignored){}}}}catch(IOException e){(""""+e);}{if(cgiHeaderReader){try{close();}catch(IOException ioe){(""""+ioe);}}if(null){try{}catch(IOException ioe){}catch(InterruptedException e){("""");}}if(4){("""");}if(null){}}}",3573,830,9,2743,76.96408529741862,"['protected', 'void', 'run', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'isReady', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '"": not ready to run.""', ')', ';', '}', 'if', '(', 'debug', '>=', '1', ')', '{', 'log', '(', '""runCGI(envp=[""', '+', 'env', '+', '""], command=""', '+', 'command', '+', '"")""', ')', ';', '}', 'if', '(', '(', 'command', '.', 'indexOf', '(', 'File', '.', 'separator', '+', '"".""', '+', 'File', '.', 'separator', ')', '>=', '0', ')', '||', '(', 'command', '.', 'indexOf', '(', 'File', '.', 'separator', '+', '""..""', ')', '>=', '0', ')', '||', '(', 'command', '.', 'indexOf', '(', '""..""', '+', 'File', '.', 'separator', ')', '>=', '0', ')', ')', '{', 'throw', 'new', 'IOException', '(', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""Illegal Character in CGI command ""', '+', '""path (\'.\' or \'..\') detected. Not ""', '+', '""running CGI [""', '+', 'command', '+', '""].""', ')', ';', '}', 'Runtime', 'rt', '=', 'null', ';', 'BufferedReader', 'cgiHeaderReader', '=', 'null', ';', 'InputStream', 'cgiOutput', '=', 'null', ';', 'BufferedReader', 'commandsStdErr', '=', 'null', ';', 'Thread', 'errReaderThread', '=', 'null', ';', 'BufferedOutputStream', 'commandsStdIn', '=', 'null', ';', 'Process', 'proc', '=', 'null', ';', 'int', 'bufRead', '=', '-', '1', ';', 'List', '<', 'String', '>', 'cmdAndArgs', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'if', '(', 'cgiExecutable', '.', 'length', '(', ')', '!=', '0', ')', '{', 'cmdAndArgs', '.', 'add', '(', 'cgiExecutable', ')', ';', '}', 'if', '(', 'cgiExecutableArgs', '!=', 'null', ')', '{', 'cmdAndArgs', '.', 'addAll', '(', 'cgiExecutableArgs', ')', ';', '}', 'cmdAndArgs', '.', 'add', '(', 'command', ')', ';', 'cmdAndArgs', '.', 'addAll', '(', 'params', ')', ';', 'try', '{', 'rt', '=', 'Runtime', '.', 'getRuntime', '(', ')', ';', 'proc', '=', 'rt', '.', 'exec', '(', 'cmdAndArgs', '.', 'toArray', '(', 'new', 'String', '[', 'cmdAndArgs', '.', 'size', '(', ')', ']', ')', ',', 'hashToStringArray', '(', 'env', ')', ',', 'wd', ')', ';', 'String', 'sContentLength', '=', 'env', '.', 'get', '(', '""CONTENT_LENGTH""', ')', ';', 'if', '(', '!', '""""', '.', 'equals', '(', 'sContentLength', ')', ')', '{', 'commandsStdIn', '=', 'new', 'BufferedOutputStream', '(', 'proc', '.', 'getOutputStream', '(', ')', ')', ';', 'IOTools', '.', 'flow', '(', 'stdin', ',', 'commandsStdIn', ')', ';', 'commandsStdIn', '.', 'flush', '(', ')', ';', 'commandsStdIn', '.', 'close', '(', ')', ';', '}', 'boolean', 'isRunning', '=', 'true', ';', 'commandsStdErr', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'proc', '.', 'getErrorStream', '(', ')', ')', ')', ';', 'final', 'BufferedReader', 'stdErrRdr', '=', 'commandsStdErr', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'sendToLog', '(', 'stdErrRdr', ')', ';', '}', '}', ';', 'errReaderThread', '.', 'start', '(', ')', ';', 'InputStream', 'cgiHeaderStream', '=', 'new', 'HTTPHeaderInputStream', '(', 'proc', '.', 'getInputStream', '(', ')', ')', ';', 'cgiHeaderReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'String', 'line', '=', 'null', ';', 'while', '(', '(', '(', 'line', '=', 'cgiHeaderReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '&&', '!', '(', '""""', '.', 'equals', '(', 'line', ')', ')', ')', '{', 'if', '(', 'debug', '>=', '2', ')', '{', 'log', '(', '""runCGI: addHeader(\\""""', '+', 'line', '+', '""\\"")""', ')', ';', '}', 'if', '(', 'line', '.', 'startsWith', '(', '""HTTP""', ')', ')', '{', 'response', '.', 'setStatus', '(', 'getSCFromHttpStatusLine', '(', 'line', ')', ')', ';', '}', 'else', 'if', '(', 'line', '.', 'indexOf', '(', '"":""', ')', '>=', '0', ')', '{', 'String', 'header', '=', 'line', '.', 'substring', '(', '0', ',', 'line', '.', 'indexOf', '(', '"":""', ')', ')', '.', 'trim', '(', ')', ';', 'String', 'value', '=', 'line', '.', 'substring', '(', 'line', '.', 'indexOf', '(', '"":""', ')', '+', '1', ')', '.', 'trim', '(', ')', ';', 'if', '(', 'header', '.', 'equalsIgnoreCase', '(', '""status""', ')', ')', '{', 'response', '.', 'setStatus', '(', 'getSCFromCGIStatusHeader', '(', 'value', ')', ')', ';', '}', 'else', '{', 'response', '.', 'addHeader', '(', 'header', ',', 'value', ')', ';', '}', '}', 'else', '{', 'log', '(', '""runCGI: bad header line \\""""', '+', 'line', '+', '""\\""""', ')', ';', '}', '}', 'byte', '[', ']', 'bBuf', '=', 'new', 'byte', '[', '2048', ']', ';', 'OutputStream', 'out', '=', 'response', '.', 'getOutputStream', '(', ')', ';', 'cgiOutput', '=', 'proc', '.', 'getInputStream', '(', ')', ';', 'try', '{', 'while', '(', '(', 'bufRead', '=', 'cgiOutput', '.', 'read', '(', 'bBuf', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'debug', '>=', '4', ')', '{', 'log', '(', '""runCGI: output ""', '+', 'bufRead', '+', '"" bytes of data""', ')', ';', '}', 'out', '.', 'write', '(', 'bBuf', ',', '0', ',', 'bufRead', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'bufRead', '!=', '-', '1', ')', '{', 'while', '(', '(', 'bufRead', '=', 'cgiOutput', '.', 'read', '(', 'bBuf', ')', ')', '!=', '-', '1', ')', '{', '}', '}', '}', 'proc', '.', 'exitValue', '(', ')', ';', 'isRunning', '=', 'false', ';', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '500', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '(', '""Caught exception ""', '+', 'e', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'cgiHeaderReader', '!=', 'null', ')', '{', 'try', '{', 'cgiHeaderReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '(', '""Exception closing header reader ""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'cgiOutput', '!=', 'null', ')', '{', 'try', '{', 'cgiOutput', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '(', '""Exception closing output stream ""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'errReaderThread', '!=', 'null', ')', '{', 'try', '{', 'errReaderThread', '.', 'join', '(', 'stderrTimeout', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'log', '(', '""Interupted waiting for stderr reader thread""', ')', ';', '}', '}', 'if', '(', 'debug', '>', '4', ')', '{', 'log', '(', '""Running finally block""', ')', ';', '}', 'if', '(', 'proc', '!=', 'null', ')', '{', 'proc', '.', 'destroy', '(', ')', ';', 'proc', '=', 'null', ';', '}', '}', '}']","['{', 'if', '(', 'isReady', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '0', ')', '|', '(', 'indexOf', '(', ')', '>', '0', ')', '|', '(', '(', '""""', '.', 'separator', ')', '=', '0', ')', ')', '{', '(', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""""', '+', '""""', ')', ';', '}', 'if', '(', '0', ')', '{', 'cmdAndArgs', '(', ')', ';', '}', 'cmdAndArgs', '(', ')', ';', 'try', '{', 'rt', '(', '(', 'String', '[', 'cmdAndArgs', '(', ')', ']', ')', ',', 'wd', ')', ';', '(', '""""', ')', ';', 'if', '(', '""""', '.', 'equals', ')', '{', '(', 'proc', '(', ')', ')', ';', '}', '(', '(', 'proc', '(', ')', ')', ')', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', 'void', 'run', '(', ')', '{', '}', '}', ';', '(', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'while', '(', '(', '(', 'line', '(', ')', ')', '!=', 'null', ')', '&', '(', '""""', '.', 'equals', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'getSCFromHttpStatusLine', ')', ';', '}', 'if', '(', '(', '""""', ')', '>', '0', ')', '{', 'line', '(', '0', ',', '(', '""""', ')', ')', '.', 'substring', '(', 'indexOf', '(', ')', '+', '1', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', '(', 'value', ')', ')', ';', '(', 'value', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', ')', ';', '}', 'write', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', '}', '}', '}', 'exitValue', '(', ')', ';', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '{', 'if', '(', 'cgiHeaderReader', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', '""""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '}', '}']",877,392,6,485,55.683122847301945
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_5.txt,0.6871,0.7591,"{'n_total': 5154, 'n_valid': 386, 'n_correct': 361}",706.20389,"@Override @SuppressWarnings({ ""SleepWhileInLoop"", ""ResultOfObjectAllocationIgnored"" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop, 0, 1024 * 1024, 8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(""Buffer server started: {}"", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(""Container {} restart."", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(""Stopping on exit condition""); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(""Sleep interrupted"", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(""Wait for {} to terminate interrupted"", thread, e); } if (thread.isAlive()) { LOG.warn(""Container thread {} is still alive"", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(""Exception during StreamingContainerManager teardown"", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(""Exception during BufferServer stop"", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(""Wait for {} to terminate interrupted"", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(""Exception during {} stop"", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(""Event loop {} is still active"", StreamingContainer.eventloop); } } } LOG.info(""Application finished.""); }","@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG("""",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG("""",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){("""");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG("""",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn("""",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG("""",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG("""",ie);}catch(RuntimeException e){warn("""",StreamingContainer);}if(isActive()){LOG("""",eventloop);}}}("""");}",3110,1069,9,2041,65.81747823282812,"['@', 'Override', '@', 'SuppressWarnings', '(', '{', '""SleepWhileInLoop""', ',', '""ResultOfObjectAllocationIgnored""', '}', ')', 'public', 'void', 'run', '(', 'long', 'runMillis', ')', '{', 'Thread', 'eventLoopThread', '=', 'null', ';', 'List', '<', 'Thread', '>', 'containerThreads', '=', 'new', 'LinkedList', '<', '>', '(', ')', ';', 'try', '{', 'if', '(', '!', 'perContainerBufferServer', ')', '{', 'eventLoopThread', '=', 'StreamingContainer', '.', 'eventloop', '.', 'start', '(', ')', ';', 'bufferServer', '=', 'new', 'Server', '(', 'StreamingContainer', '.', 'eventloop', ',', '0', ',', '1024', '*', '1024', ',', '8', ')', ';', 'try', '{', 'bufferServer', '.', 'setSpoolStorage', '(', 'new', 'DiskStorage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'bufferServerAddress', '=', 'InetSocketAddress', '.', 'createUnresolved', '(', 'LOCALHOST', ',', 'bufferServer', '.', 'run', '(', ')', '.', 'getPort', '(', ')', ')', ';', 'LOG', '.', 'info', '(', '""Buffer server started: {}""', ',', 'bufferServerAddress', ')', ';', '}', 'long', 'endMillis', '=', 'System', '.', 'currentTimeMillis', '(', ')', '+', 'runMillis', ';', 'while', '(', '!', 'appDone', ')', '{', 'for', '(', 'String', 'containerIdStr', ':', 'dnmgr', '.', 'containerStopRequests', '.', 'values', '(', ')', ')', '{', 'StreamingContainer', 'c', '=', 'childContainers', '.', 'get', '(', 'containerIdStr', ')', ';', 'if', '(', 'c', '!=', 'null', ')', '{', 'ContainerHeartbeatResponse', 'r', '=', 'new', 'ContainerHeartbeatResponse', '(', ')', ';', 'r', '.', 'shutdown', '=', 'StreamingContainerUmbilicalProtocol', '.', 'ShutdownType', '.', 'ABORT', ';', 'c', '.', 'processHeartbeatResponse', '(', 'r', ')', ';', '}', 'dnmgr', '.', 'containerStopRequests', '.', 'remove', '(', 'containerIdStr', ')', ';', 'LOG', '.', 'info', '(', '""Container {} restart.""', ',', 'containerIdStr', ')', ';', 'dnmgr', '.', 'scheduleContainerRestart', '(', 'containerIdStr', ')', ';', '}', 'while', '(', '!', 'dnmgr', '.', 'containerStartRequests', '.', 'isEmpty', '(', ')', ')', '{', 'ContainerStartRequest', 'cdr', '=', 'dnmgr', '.', 'containerStartRequests', '.', 'poll', '(', ')', ';', 'if', '(', 'cdr', '!=', 'null', ')', '{', 'new', 'LocalStreamingContainerLauncher', '(', 'cdr', ',', 'containerThreads', ')', ';', '}', '}', 'if', '(', 'heartbeatMonitoringEnabled', ')', '{', 'dnmgr', '.', 'monitorHeartbeat', '(', 'false', ')', ';', '}', 'if', '(', 'childContainers', '.', 'isEmpty', '(', ')', '&&', 'dnmgr', '.', 'containerStartRequests', '.', 'isEmpty', '(', ')', ')', '{', 'appDone', '=', 'true', ';', '}', 'if', '(', 'runMillis', '>', '0', '&&', 'System', '.', 'currentTimeMillis', '(', ')', '>', 'endMillis', ')', '{', 'appDone', '=', 'true', ';', '}', 'try', '{', 'if', '(', 'exitCondition', '!=', 'null', '&&', 'exitCondition', '.', 'call', '(', ')', ')', '{', 'LOG', '.', 'info', '(', '""Stopping on exit condition""', ')', ';', 'appDone', '=', 'true', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'break', ';', '}', 'if', '(', 'Thread', '.', 'interrupted', '(', ')', ')', '{', 'break', ';', '}', 'if', '(', '!', 'appDone', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '.', 'debug', '(', '""Sleep interrupted""', ',', 'e', ')', ';', 'break', ';', '}', '}', '}', '}', 'finally', '{', 'for', '(', 'LocalStreamingContainer', 'lsc', ':', 'childContainers', '.', 'values', '(', ')', ')', '{', 'injectShutdown', '.', 'put', '(', 'lsc', '.', 'getContainerId', '(', ')', ',', 'lsc', ')', ';', 'lsc', '.', 'triggerHeartbeat', '(', ')', ';', '}', 'for', '(', 'Thread', 'thread', ':', 'containerThreads', ')', '{', 'try', '{', 'thread', '.', 'join', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '.', 'debug', '(', '""Wait for {} to terminate interrupted""', ',', 'thread', ',', 'e', ')', ';', '}', 'if', '(', 'thread', '.', 'isAlive', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Container thread {} is still alive""', ',', 'thread', '.', 'getName', '(', ')', ')', ';', '}', '}', 'try', '{', 'dnmgr', '.', 'teardown', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during StreamingContainerManager teardown""', ',', 'e', ')', ';', '}', 'if', '(', 'bufferServerAddress', '!=', 'null', ')', '{', 'try', '{', 'bufferServer', '.', 'stop', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during BufferServer stop""', ',', 'e', ')', ';', '}', '}', 'if', '(', 'eventLoopThread', '!=', 'null', ')', '{', 'try', '{', 'StreamingContainer', '.', 'eventloop', '.', 'stop', '(', ')', ';', 'eventLoopThread', '.', 'join', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', 'LOG', '.', 'debug', '(', '""Wait for {} to terminate interrupted""', ',', 'eventLoopThread', '.', 'getName', '(', ')', ',', 'ie', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during {} stop""', ',', 'StreamingContainer', '.', 'eventloop', ',', 'e', ')', ';', '}', 'if', '(', 'StreamingContainer', '.', 'eventloop', '.', 'isActive', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Event loop {} is still active""', ',', 'StreamingContainer', '.', 'eventloop', ')', ';', '}', '}', '}', 'LOG', '.', 'info', '(', '""Application finished.""', ')', ';', '}']","['@', 'SuppressWarnings', '(', '{', '}', ')', 'void', 'run', '(', 'long', 'runMillis', ')', '{', 'List', '<', 'Thread', '>', 'containerThreads', ';', 'try', '{', 'if', '(', 'perContainerBufferServer', ')', '{', '(', '8', ')', ';', 'try', '{', '(', 'DiskStorage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', 'bufferServerAddress', '(', ')', ';', 'LOG', '(', '""""', ',', 'bufferServerAddress', ')', ';', '}', 'endMillis', '=', 'currentTimeMillis', '(', ')', '+', 'runMillis', ';', 'while', '(', 'appDone', ')', '{', 'for', '(', 'String', 'containerIdStr', ':', 'dnmgr', ')', '{', 'c', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', 'r', ')', ';', '}', '(', 'containerIdStr', ')', ';', 'LOG', '(', '""""', ',', 'containerIdStr', ')', ';', '(', 'containerIdStr', ')', ';', '}', 'while', '(', 'isEmpty', '(', ')', ')', '{', 'if', '(', 'null', ')', '{', '(', 'containerThreads', ')', ';', '}', '}', 'if', '(', 'heartbeatMonitoringEnabled', ')', '{', '(', 'false', ')', ';', '}', 'if', '(', 'isEmpty', '(', ')', ')', '{', '}', 'if', '(', 'endMillis', ')', '{', '}', 'try', '{', 'if', '(', 'exitCondition', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '}', 'if', '(', 'Thread', ')', '{', '}', 'if', '(', 'appDone', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '(', '""""', ',', 'e', ')', ';', '}', '}', '}', '}', 'finally', '{', 'for', '(', 'LocalStreamingContainer', 'lsc', ':', 'values', '(', ')', ')', '{', '(', 'lsc', ')', ';', 'triggerHeartbeat', '(', ')', ';', '}', 'for', '(', 'Thread', 'thread', ':', 'containerThreads', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'debug', '(', ')', ';', '}', '}', 'try', '{', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'warn', '(', '""""', ',', 'e', ')', ';', '}', 'if', '(', 'bufferServerAddress', ')', '{', 'try', '{', 'stop', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '(', '""""', ',', 'e', ')', ';', '}', '}', 'if', '(', 'eventLoopThread', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', 'LOG', '(', '""""', ',', 'ie', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'warn', '(', '""""', ',', 'StreamingContainer', ')', ';', '}', 'if', '(', 'isActive', '(', ')', ')', '{', 'LOG', '(', '""""', ',', 'eventloop', ')', ';', '}', '}', '}', '(', '""""', ')', ';', '}']",662,364,6,298,45.426829268292686
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_12.txt,0.968,0.0427,"{'n_total': 3326, 'n_valid': 252, 'n_correct': 234}",418.96741,"public static void main(String[] argv) { String srcURL = null; String dstURL = null; boolean debug = false; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-s"")) { srcURL = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dstURL = argv[++optind]; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { force = true; } else if (argv[optind].equals(""-S"")) { skipSpecial = true; } else if (argv[optind].equals(""-c"")) { clear = true; } else if (argv[optind].equals(""-P"")) { dontPreserveFlags = true; } else if (argv[optind].equals(""-W"")) { warn = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { printUsage(); System.exit(1); } else { break; } } try { if (srcURL == null || dstURL == null) { printUsage(); System.exit(1); } Session session = Session.getInstance(System.getProperties(), null); session.setDebug(debug); URLName srcURLName = new URLName(srcURL); Folder srcFolder; if (srcURLName.getFile() == null) { Store s = session.getStore(srcURLName); s.connect(); srcFolder = s.getDefaultFolder(); } else { srcFolder = session.getFolder(new URLName(srcURL)); if (!srcFolder.exists()) { System.out.println(""source folder does not exist""); srcFolder.getStore().close(); System.exit(1); } } URLName dstURLName = new URLName(dstURL); Folder dstFolder; if (dstURLName.getFile() == null) { Store s = session.getStore(dstURLName); s.connect(); dstFolder = s.getFolder(srcFolder.getName()); } else dstFolder = session.getFolder(dstURLName); if (clear && dstFolder.exists()) { if (!dstFolder.delete(true)) { System.out.println(""couldn't delete "" + dstFolder.getFullName()); return; } } copy(srcFolder, dstFolder); srcFolder.getStore().close(); dstFolder.getStore().close(); } catch (MessagingException mex) { System.out.println(mex.getMessage()); mex.printStackTrace(); } }","void main(String[]argv){for(;;optind++){if(("""")){srcURL[optind][optind];}if(("""")){}if(("""")){}if((""""))if(argv[optind].equals("""")){}if(argv[optind].equals("""")){}if(argv[optind].equals(""""))if(argv[optind].equals("""")){optind++;}if(argv[optind]){(1);}{}}try{if(dstURL=null){(1);}(srcURL);if(null){{("""");exit(1);}}if(dstURLName){}(dstURLName);if(clear()){if((true)){("""");}}copy();}catch(MessagingException mex){(getMessage());printStackTrace();}}",1906,440,10,1466,77.32067510548524,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'String', 'srcURL', '=', 'null', ';', 'String', 'dstURL', '=', 'null', ';', 'boolean', 'debug', '=', 'false', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'srcURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dstURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'force', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-S""', ')', ')', '{', 'skipSpecial', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-c""', ')', ')', '{', 'clear', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'dontPreserveFlags', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-W""', ')', ')', '{', 'warn', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'srcURL', '==', 'null', '||', 'dstURL', '==', 'null', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'System', '.', 'getProperties', '(', ')', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'URLName', 'srcURLName', '=', 'new', 'URLName', '(', 'srcURL', ')', ';', 'Folder', 'srcFolder', ';', 'if', '(', 'srcURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'srcURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'srcFolder', '=', 's', '.', 'getDefaultFolder', '(', ')', ';', '}', 'else', '{', 'srcFolder', '=', 'session', '.', 'getFolder', '(', 'new', 'URLName', '(', 'srcURL', ')', ')', ';', 'if', '(', '!', 'srcFolder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""source folder does not exist""', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'URLName', 'dstURLName', '=', 'new', 'URLName', '(', 'dstURL', ')', ';', 'Folder', 'dstFolder', ';', 'if', '(', 'dstURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'dstURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'dstFolder', '=', 's', '.', 'getFolder', '(', 'srcFolder', '.', 'getName', '(', ')', ')', ';', '}', 'else', 'dstFolder', '=', 'session', '.', 'getFolder', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '&&', 'dstFolder', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'dstFolder', '.', 'delete', '(', 'true', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""couldn\'t delete ""', '+', 'dstFolder', '.', 'getFullName', '(', ')', ')', ';', 'return', ';', '}', '}', 'copy', '(', 'srcFolder', ',', 'dstFolder', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'dstFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mex', '.', 'getMessage', '(', ')', ')', ';', 'mex', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', 'srcURL', '[', 'optind', ']', '[', 'optind', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'if', '(', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', ')', '{', '(', '1', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'dstURL', '=', 'null', ')', '{', '(', '1', ')', ';', '}', '(', 'srcURL', ')', ';', 'if', '(', 'null', ')', '{', '{', '(', '""""', ')', ';', 'exit', '(', '1', ')', ';', '}', '}', 'if', '(', 'dstURLName', ')', '{', '}', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '(', ')', ')', '{', 'if', '(', '(', 'true', ')', ')', '{', '(', '""""', ')', ';', '}', '}', 'copy', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', '(', 'getMessage', '(', ')', ')', ';', 'printStackTrace', '(', ')', ';', '}', '}']",564,216,6,348,62.36559139784946
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_13.txt,0.999,0.0017,"{'n_total': 7649, 'n_valid': 546, 'n_correct': 346}",934.111536,"public static void main(String[] argv) { long uid = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""); System.exit(1); } else { break; } } try { if (optind < argv.length) uid = Long.parseLong(argv[optind]); Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } folder = folder.getFolder(mbox); if (!folder.exists()) { System.out.println(mbox + "" does not exist""); System.exit(1); } if (!(folder instanceof UIDFolder)) { System.out.println(""This Provider or this folder does not support UIDs""); System.exit(1); } UIDFolder ufolder = (UIDFolder) folder; folder.open(Folder.READ_WRITE); int totalMessages = folder.getMessageCount(); if (totalMessages == 0) { System.out.println(""Empty folder""); folder.close(false); store.close(); System.exit(1); } if (verbose) { int newMessages = folder.getNewMessageCount(); System.out.println(""Total messages = "" + totalMessages); System.out.println(""New messages = "" + newMessages); System.out.println(""-------------------------------""); } if (uid == -1) { Message[] msgs = ufolder.getMessagesByUID(1, UIDFolder.LASTUID); FetchProfile fp = new FetchProfile(); fp.add(FetchProfile.Item.ENVELOPE); fp.add(FetchProfile.Item.FLAGS); fp.add(""X-Mailer""); folder.fetch(msgs, fp); for (int i = 0; i < msgs.length; i++) { System.out.println(""--------------------------""); System.out.println(""MESSAGE UID #"" + ufolder.getUID(msgs[i]) + "":""); dumpEnvelope(msgs[i]); } } else { System.out.println(""Getting message UID: "" + uid); Message m = ufolder.getMessageByUID(uid); if (m != null) dumpPart(m); else System.out.println(""This Message does not exist on this folder""); } folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); } System.exit(1); }","void main(String[]argv){for(;;optind++){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){host[optind];}if(argv[optind].equals("""")){user[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){optind++;}if(argv[optind].startsWith("""")){("""").exit();}{}}try{if(optind)(argv[optind]).getInstance();if(url=null){urln();if(protocol) store;if(host)connect();}{("""").exit();}(mbox);if(exists()){println();(1);}(UIDFolder);{("""");}if(verbose){(""""+totalMessages);(FLAGS);("""");(msgs); for(;;){("""");}}{if(null)println();}}catch(Exception ex){(""""+getMessage());}}",2932,708,10,2224,76.11225188227242,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'long', 'uid', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'uid', '=', 'Long', '.', 'parseLong', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mbox', '+', '"" does not exist""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '!', '(', 'folder', 'instanceof', 'UIDFolder', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""This Provider or this folder does not support UIDs""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'UIDFolder', 'ufolder', '=', '(', 'UIDFolder', ')', 'folder', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'totalMessages', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'totalMessages', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Empty folder""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'verbose', ')', '{', 'int', 'newMessages', '=', 'folder', '.', 'getNewMessageCount', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Total messages = ""', '+', 'totalMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""New messages = ""', '+', 'newMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""-------------------------------""', ')', ';', '}', 'if', '(', 'uid', '==', '-', '1', ')', '{', 'Message', '[', ']', 'msgs', '=', 'ufolder', '.', 'getMessagesByUID', '(', '1', ',', 'UIDFolder', '.', 'LASTUID', ')', ';', 'FetchProfile', 'fp', '=', 'new', 'FetchProfile', '(', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'ENVELOPE', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'FLAGS', ')', ';', 'fp', '.', 'add', '(', '""X-Mailer""', ')', ';', 'folder', '.', 'fetch', '(', 'msgs', ',', 'fp', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""--------------------------""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MESSAGE UID #""', '+', 'ufolder', '.', 'getUID', '(', 'msgs', '[', 'i', ']', ')', '+', '"":""', ')', ';', 'dumpEnvelope', '(', 'msgs', '[', 'i', ']', ')', ';', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Getting message UID: ""', '+', 'uid', ')', ';', 'Message', 'm', '=', 'ufolder', '.', 'getMessageByUID', '(', 'uid', ')', ';', 'if', '(', 'm', '!=', 'null', ')', 'dumpPart', '(', 'm', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '""This Message does not exist on this folder""', ')', ';', '}', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '1', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'host', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'user', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', ']', ')', '.', 'getInstance', '(', ')', ';', 'if', '(', 'url', '=', 'null', ')', '{', 'urln', '(', ')', ';', 'if', '(', 'protocol', ')', 'store', ';', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '(', 'mbox', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'println', '(', ')', ';', '(', '1', ')', ';', '}', '(', 'UIDFolder', ')', ';', '{', '(', '""""', ')', ';', '}', 'if', '(', 'verbose', ')', '{', '(', '""""', '+', 'totalMessages', ')', ';', '(', 'FLAGS', ')', ';', '(', '""""', ')', ';', '(', 'msgs', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'if', '(', 'null', ')', 'println', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']",817,332,6,485,59.80271270036991
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_1.txt,0.9223,0.096,"{'n_total': 4360, 'n_valid': 284, 'n_correct': 260}",482.491111,"public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { ""-help"" }; } for (int i = 0; i < args.length; i++) { if (""-threads"".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (""-count"".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(""Sending "" + count + "" messages.""); } else if (""-pause"".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (""-break"".equals(args[i])) { breakOnEx = true; } else if (""-shutdown"".equals(args[i])) { shutdown = true; } else if (""-stats"".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(""Stats every "" + stats + "" message""); } else if (""-sendoptions"".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(""Setting send options to "" + channelOptions); } else if (""-startoptions"".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(""Setting start options to "" + startoptions); } else if (""-size"".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(""Message size will be:"" + (size + 4) + "" bytes""); } else if (""-mode"".equals(args[i])) { if (""receive"".equals(args[++i])) send = false; } else if (""-debug"".equals(args[i])) { debug = true; } else if (""-help"".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(""System test complete, sleeping to let threads finish.""); Thread.sleep(60 * 1000 * 60); }","void main(String[]args)throws Exception{if(0){args=new String[]{""""};}for(;;i++){if(""""){(args[i]);}if(""""){(args[i]);(""""+"""");}if("""".equals()){pause=(args[i])*0;}if(""""){}if("""".equals(args[i])){}if("""".equals(args[i])){(args[i]);(""""+"""");}if("""".equals(args[i])){channelOptions(args[i]);(""""+channelOptions);}if((args[i])){(""""+(4)+"""");}if("""".equals(args[i])){("""".equals(args[i]));}if("""".equals(args[i])){}if("""".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);("""");sleep();}",2435,512,10,1923,79.29896907216495,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'boolean', 'send', '=', 'true', ';', 'boolean', 'debug', '=', 'false', ';', 'long', 'pause', '=', '0', ';', 'int', 'count', '=', '1000000', ';', 'int', 'stats', '=', '10000', ';', 'boolean', 'breakOnEx', '=', 'false', ';', 'int', 'threads', '=', '1', ';', 'boolean', 'shutdown', '=', 'false', ';', 'int', 'startoptions', '=', 'Channel', '.', 'DEFAULT', ';', 'int', 'channelOptions', '=', 'Channel', '.', 'SEND_OPTIONS_DEFAULT', ';', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""-help""', '}', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '""-threads""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'threads', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', '}', 'else', 'if', '(', '""-count""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'count', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Sending ""', '+', 'count', '+', '"" messages.""', ')', ';', '}', 'else', 'if', '(', '""-pause""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'pause', '=', 'Long', '.', 'parseLong', '(', 'args', '[', '++', 'i', ']', ')', '*', '1000', ';', '}', 'else', 'if', '(', '""-break""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'breakOnEx', '=', 'true', ';', '}', 'else', 'if', '(', '""-shutdown""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'shutdown', '=', 'true', ';', '}', 'else', 'if', '(', '""-stats""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'stats', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Stats every ""', '+', 'stats', '+', '"" message""', ')', ';', '}', 'else', 'if', '(', '""-sendoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting send options to ""', '+', 'channelOptions', ')', ';', '}', 'else', 'if', '(', '""-startoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'startoptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting start options to ""', '+', 'startoptions', ')', ';', '}', 'else', 'if', '(', '""-size""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'size', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', '-', '4', ';', 'System', '.', 'out', '.', 'println', '(', '""Message size will be:""', '+', '(', 'size', '+', '4', ')', '+', '"" bytes""', ')', ';', '}', 'else', 'if', '(', '""-mode""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'if', '(', '""receive""', '.', 'equals', '(', 'args', '[', '++', 'i', ']', ')', ')', 'send', '=', 'false', ';', '}', 'else', 'if', '(', '""-debug""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', '""-help""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'ManagedChannel', 'channel', '=', '(', 'ManagedChannel', ')', 'ChannelCreator', '.', 'createChannel', '(', 'args', ')', ';', 'LoadTest', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', 'LoadMessage', 'msg', '=', 'new', 'LoadMessage', '(', ')', ';', 'messageSize', '=', 'LoadMessage', '.', 'getMessageSize', '(', 'msg', ')', ';', 'channel', '.', 'addChannelListener', '(', 'test', ')', ';', 'channel', '.', 'addMembershipListener', '(', 'test', ')', ';', 'channel', '.', 'start', '(', 'startoptions', ')', ';', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'addShutdownHook', '(', 'new', 'Shutdown', '(', 'channel', ')', ')', ';', 'while', '(', 'threads', '>', '1', ')', '{', 'Thread', 't', '=', 'new', 'Thread', '(', 'test', ')', ';', 't', '.', 'setDaemon', '(', 'true', ')', ';', 't', '.', 'start', '(', ')', ';', 'threads', '--', ';', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', '}', 'test', '.', 'run', '(', ')', ';', 'if', '(', 'shutdown', '&&', 'send', ')', 'channel', '.', 'stop', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""System test complete, sleeping to let threads finish.""', ')', ';', 'Thread', '.', 'sleep', '(', '60', '*', '1000', '*', '60', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '}', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'pause', '=', '(', 'args', '[', 'i', ']', ')', '*', '0', ';', '}', 'if', '(', '""""', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', 'channelOptions', ')', ';', '}', 'if', '(', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '+', '(', '4', ')', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '1', ')', ';', '}', '}', '(', 'startoptions', ')', ';', '(', 'Shutdown', '(', ')', ')', ';', 'while', '(', 'threads', ')', '{', 'test', '=', 'LoadTest', '(', ')', ';', '}', '(', 'DEFAULT', ')', ';', '(', '""""', ')', ';', 'sleep', '(', ')', ';', '}']",678,278,6,400,59.523809523809526
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_6.txt,0.7582,0.6221,"{'n_total': 2820, 'n_valid': 247, 'n_correct': 247}",417.678286,"public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(""JSSProxySessionRunnable: Unable to open input stream on "" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(""JSSProxySessionRunnable: "" + ""Unable to connect to "" + host + "":"" + port + "". "", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = ""CONNECT "" + desthost + "":"" + destport + "" HTTP/1.0\n"" + ""User-Agent: "" + sun.net.www.protocol.http.HttpURLConnection.userAgent + ""\r\n\r\n""; debug.message(msg); byte[] b; try { b = msg.getBytes(""ASCII7""); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(""JSSProxySessionRunnable: "" + ""Unexpected EOF from proxy""); closeSockets(); return; } if (i == '\n') { headerDone = true; ++newlinesSeen; } else if (i != '\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to get OutputStream"", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, ""ASCII7""); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(""HTTP/1.0 200"")) { debug.error(""JSSProxySessionRunnable: Unable to tunnel through ""); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to write prebuffer."", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }","void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug("""",e);(remotePort);closeSockets();}{if(debug){message(""""+""""+"""",ex);}}if(toProxySocket){}try{out=""""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("""");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"""");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("""")){("""");}try{}catch(IOException ioe){error("""",ioe);}RWGroupJSSProxy();}",2597,480,9,2117,81.80061823802164,"['public', 'void', 'run', '(', ')', '{', 'Integer', 'remotePort', '=', 'new', 'Integer', '(', 'inconnection', '.', 'getPort', '(', ')', ')', ';', 'byte', '[', ']', 'prebuffer', '=', 'new', 'byte', '[', '1', ']', ';', 'DataInputStream', 'inFrom', ';', 'try', '{', 'inFrom', '=', 'new', 'DataInputStream', '(', 'inconnection', '.', 'getInputStream', '(', ')', ')', ';', 'inFrom', '.', 'readFully', '(', 'prebuffer', ',', '0', ',', '1', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to open input stream on ""', '+', 'inconnection', ',', 'e', ')', ';', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'info', '=', '(', 'String', ')', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'info', ')', ';', 'String', 'host', '=', 'st', '.', 'nextToken', '(', ')', ';', 'int', 'port', ';', 'try', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'st', '.', 'nextToken', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'port', '=', '8080', ';', '}', 'try', '{', 'toProxySocket', '=', 'new', 'Socket', '(', 'host', ',', 'port', ')', ';', 'toProxySocket', '.', 'setTcpNoDelay', '(', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'toProxySocket', '=', 'null', ';', 'if', '(', 'debug', '.', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to connect to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '"". ""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', '==', 'null', ')', '{', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'desthost', '=', 'st', '.', 'nextToken', '(', ')', ';', 'String', 'destport', '=', 'st', '.', 'nextToken', '(', ')', ';', 'OutputStream', 'out', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '200', ']', ';', 'int', 'replyLen', '=', '0', ';', 'int', 'newlinesSeen', '=', '0', ';', 'boolean', 'headerDone', '=', 'false', ';', 'try', '{', 'out', '=', 'toProxySocket', '.', 'getOutputStream', '(', ')', ';', 'String', 'msg', '=', '""CONNECT ""', '+', 'desthost', '+', '"":""', '+', 'destport', '+', '"" HTTP/1.0\\n""', '+', '""User-Agent: ""', '+', 'sun', '.', 'net', '.', 'www', '.', 'protocol', '.', 'http', '.', 'HttpURLConnection', '.', 'userAgent', '+', '""\\r\\n\\r\\n""', ';', 'debug', '.', 'message', '(', 'msg', ')', ';', 'byte', '[', ']', 'b', ';', 'try', '{', 'b', '=', 'msg', '.', 'getBytes', '(', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'b', '=', 'msg', '.', 'getBytes', '(', ')', ';', '}', 'out', '.', 'write', '(', 'b', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'in', '=', 'toProxySocket', '.', 'getInputStream', '(', ')', ';', 'boolean', 'error', '=', 'false', ';', 'while', '(', 'newlinesSeen', '<', '2', ')', '{', 'int', 'i', '=', 'in', '.', 'read', '(', ')', ';', 'if', '(', 'i', '<', '0', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unexpected EOF from proxy""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'if', '(', 'i', '==', ""'\\n'"", ')', '{', 'headerDone', '=', 'true', ';', '++', 'newlinesSeen', ';', '}', 'else', 'if', '(', 'i', '!=', ""'\\r'"", ')', '{', 'newlinesSeen', '=', '0', ';', 'if', '(', '!', 'headerDone', '&&', 'replyLen', '<', 'reply', '.', 'length', ')', '{', 'reply', '[', 'replyLen', '++', ']', '=', '(', 'byte', ')', 'i', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to get OutputStream""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'replyStr', ';', 'try', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ',', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '!', 'replyStr', '.', 'startsWith', '(', '""HTTP/1.0 200""', ')', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to tunnel through ""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'try', '{', 'out', '.', 'write', '(', 'prebuffer', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to write prebuffer.""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'new', 'RWGroupJSSProxy', '(', 'inconnection', ',', 'toProxySocket', ')', ';', '}']","['void', 'run', '(', ')', '{', 'prebuffer', '[', '1', ']', ';', 'try', '{', '(', 'inconnection', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '(', '""""', ',', 'e', ')', ';', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', '}', '{', 'if', '(', 'debug', ')', '{', 'message', '(', '""""', '+', '""""', '+', '""""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', ')', '{', '}', 'try', '{', 'out', '=', '""""', '+', '(', 'msg', ')', ';', 'try', '{', 'getBytes', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', '}', '(', 'b', ')', ';', 'while', '(', 'newlinesSeen', ')', '{', 'i', '(', ')', ';', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'length', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '(', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'error', '(', '""""', ',', 'ioe', ')', ';', '}', 'RWGroupJSSProxy', '(', ')', ';', '}']",615,187,6,428,70.27914614121511
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_3.txt,0.9974,0.0033,"{'n_total': 5302, 'n_valid': 423, 'n_correct': 423}",751.729459,"public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(Word2VecCompress.class.getName(), ""Creates a compressed representation of quantized word2vec vectors"", new Parameter[] { new UnflaggedOption(""input"", JSAP.STRING_PARSER, true, ""Input file""), new UnflaggedOption(""output"", JSAP.STRING_PARSER, false, ""Compressed version""), new Switch(""check"", JSAP.NO_SHORTFLAG, ""check"", ""Check correctness of output"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; String input_filename = jsapResult.getString(""input""); String output_filename = jsapResult.getString(""output"", null); int numWords, vectorSize; float quantizationFactor; List<String> indexToWord; int[] entries; long[] columnAbsSum; ProgressLogger pl = new ProgressLogger(logger); try (final BufferedReader lines = new BufferedReader(new FileReader(input_filename))) { String[] header = lines.readLine().split(""\t""); numWords = Integer.parseInt(header[0]); vectorSize = Integer.parseInt(header[1]); quantizationFactor = Float.parseFloat(header[2]); pl.expectedUpdates = numWords; pl.start(""Reading the dictionary""); indexToWord = new ArrayList<>(); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); indexToWord.add(lines.readLine().trim()); } pl.done(); entries = new int[numWords * vectorSize]; columnAbsSum = new long[vectorSize]; pl.expectedUpdates = numWords; pl.start(""Reading the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); String[] lineEntries = lines.readLine().split("" ""); for (int col = 0; col < vectorSize; ++col) { int entry = Integer.parseInt(lineEntries[col]); entries[i * vectorSize + col] = entry; columnAbsSum[col] += Fast.int2nat(entry) + 1; } } pl.done(); } int[] golombModuli = new int[vectorSize]; for (int col = 0; col < vectorSize; ++col) { int m = 0; if (columnAbsSum[col] > numWords) { double f = ((double) numWords) / columnAbsSum[col]; m = (int) Math.ceil(Math.log(2.0 - f) / -Math.log(1.0 - f)); } golombModuli[col] = m; } ShiftAddXorSignedStringMap dictionaryHash = new ShiftAddXorSignedStringMap(indexToWord.iterator(), new MinimalPerfectHashFunction.Builder<CharSequence>().keys(indexToWord).transform(TransformationStrategies.utf16()).build()); int[] permutation = new int[numWords]; for (int i = 0; i < numWords; ++i) { int newPos = dictionaryHash.get(indexToWord.get(i)).intValue(); permutation[newPos] = i; } FastByteArrayOutputStream oa = new FastByteArrayOutputStream(); OutputBitStream obs = new OutputBitStream(oa, 0); final LongArrayList endpoints = new LongArrayList(); pl.expectedUpdates = numWords; pl.start(""Compressing the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); endpoints.add(obs.writtenBits()); int rowStart = permutation[i] * vectorSize; for (int col = 0; col < vectorSize; ++col) { int entry = entries[rowStart + col]; obs.writeGolomb(Fast.int2nat(entry), golombModuli[col]); } } pl.done(); obs.close(); while (oa.length() % 4 != 0) { oa.write(0); } oa.trim(); double bps = 8.0 * oa.array.length / entries.length; logger.info(""Overall vector bit streams: {} bytes, {} bps"", oa.array.length, bps); System.out.println(bps); EliasFanoMonotoneLongBigList efEndpoints = new EliasFanoMonotoneLongBigList(endpoints); Word2VecCompress word2vec = new Word2VecCompress(numWords, vectorSize, quantizationFactor, oa.array, efEndpoints, dictionaryHash, golombModuli); if (output_filename != null) { BinIO.storeObject(word2vec, output_filename); } if (jsapResult.getBoolean(""check"")) { pl.expectedUpdates = numWords; pl.start(""Checking the output""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); int[] vec = word2vec.getInt(indexToWord.get(i)); for (int col = 0; col < vectorSize; ++col) { int expected = entries[i * vectorSize + col]; int got = vec[col]; if (expected != got) { logger.error(""Row {}, Column {}: Expected {}, got {}"", i, col, expected, got); System.exit(1); } } } pl.done(); } }","void main(String[]args){jsap(Word(),"""",new Parameter[]{UnflaggedOption(""""._,""""),(""""),Switch("""","""")});try(BufferedReader lines=(FileReader())){(header[0]).start("""");indexToWord=new ArrayList<>();for(;;){}pl();("""");for(;;){for(;;){(lineEntries[col]);entries[col]=columnAbsSum[col]=(entry);}}}golombModuli[vectorSize];for(;;){if(numWords){f=((double)numWords)/columnAbsSum[col];m=(int)((2).log());}golombModuli[col];}((utf()));permutation[numWords];for(;;){((i))[newPos]=i;}(0);LongArrayList("""",bps);(numWords);if(_){(filename);}if(("""")){for(;;){((i));for(;;){expected[i];got[col];if(got){error("""",got);(1);}}}done();}}",3912,616,10,3296,84.46950281906715,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'Word2VecCompress', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a compressed representation of quantized word2vec vectors""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'UnflaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'true', ',', '""Input file""', ')', ',', 'new', 'UnflaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'false', ',', '""Compressed version""', ')', ',', 'new', 'Switch', '(', '""check""', ',', 'JSAP', '.', 'NO_SHORTFLAG', ',', '""check""', ',', '""Check correctness of output""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'String', 'input_filename', '=', 'jsapResult', '.', 'getString', '(', '""input""', ')', ';', 'String', 'output_filename', '=', 'jsapResult', '.', 'getString', '(', '""output""', ',', 'null', ')', ';', 'int', 'numWords', ',', 'vectorSize', ';', 'float', 'quantizationFactor', ';', 'List', '<', 'String', '>', 'indexToWord', ';', 'int', '[', ']', 'entries', ';', 'long', '[', ']', 'columnAbsSum', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'logger', ')', ';', 'try', '(', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'input_filename', ')', ')', ')', '{', 'String', '[', ']', 'header', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '""\\t""', ')', ';', 'numWords', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '0', ']', ')', ';', 'vectorSize', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '1', ']', ')', ';', 'quantizationFactor', '=', 'Float', '.', 'parseFloat', '(', 'header', '[', '2', ']', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the dictionary""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'indexToWord', '.', 'add', '(', 'lines', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ')', ';', '}', 'pl', '.', 'done', '(', ')', ';', 'entries', '=', 'new', 'int', '[', 'numWords', '*', 'vectorSize', ']', ';', 'columnAbsSum', '=', 'new', 'long', '[', 'vectorSize', ']', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'String', '[', ']', 'lineEntries', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '"" ""', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'Integer', '.', 'parseInt', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', '=', 'entry', ';', 'columnAbsSum', '[', 'col', ']', '+=', 'Fast', '.', 'int2nat', '(', 'entry', ')', '+', '1', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', 'int', '[', ']', 'golombModuli', '=', 'new', 'int', '[', 'vectorSize', ']', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'm', '=', '0', ';', 'if', '(', 'columnAbsSum', '[', 'col', ']', '>', 'numWords', ')', '{', 'double', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', 'Math', '.', 'ceil', '(', 'Math', '.', 'log', '(', '2.0', '-', 'f', ')', '/', '-', 'Math', '.', 'log', '(', '1.0', '-', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', '=', 'm', ';', '}', 'ShiftAddXorSignedStringMap', 'dictionaryHash', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'indexToWord', '.', 'iterator', '(', ')', ',', 'new', 'MinimalPerfectHashFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'indexToWord', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'int', '[', ']', 'permutation', '=', 'new', 'int', '[', 'numWords', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'int', 'newPos', '=', 'dictionaryHash', '.', 'get', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', '.', 'intValue', '(', ')', ';', 'permutation', '[', 'newPos', ']', '=', 'i', ';', '}', 'FastByteArrayOutputStream', 'oa', '=', 'new', 'FastByteArrayOutputStream', '(', ')', ';', 'OutputBitStream', 'obs', '=', 'new', 'OutputBitStream', '(', 'oa', ',', '0', ')', ';', 'final', 'LongArrayList', 'endpoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Compressing the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'endpoints', '.', 'add', '(', 'obs', '.', 'writtenBits', '(', ')', ')', ';', 'int', 'rowStart', '=', 'permutation', '[', 'i', ']', '*', 'vectorSize', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'entries', '[', 'rowStart', '+', 'col', ']', ';', 'obs', '.', 'writeGolomb', '(', 'Fast', '.', 'int2nat', '(', 'entry', ')', ',', 'golombModuli', '[', 'col', ']', ')', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', 'obs', '.', 'close', '(', ')', ';', 'while', '(', 'oa', '.', 'length', '(', ')', '%', '4', '!=', '0', ')', '{', 'oa', '.', 'write', '(', '0', ')', ';', '}', 'oa', '.', 'trim', '(', ')', ';', 'double', 'bps', '=', '8.0', '*', 'oa', '.', 'array', '.', 'length', '/', 'entries', '.', 'length', ';', 'logger', '.', 'info', '(', '""Overall vector bit streams: {} bytes, {} bps""', ',', 'oa', '.', 'array', '.', 'length', ',', 'bps', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'bps', ')', ';', 'EliasFanoMonotoneLongBigList', 'efEndpoints', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'endpoints', ')', ';', 'Word2VecCompress', 'word2vec', '=', 'new', 'Word2VecCompress', '(', 'numWords', ',', 'vectorSize', ',', 'quantizationFactor', ',', 'oa', '.', 'array', ',', 'efEndpoints', ',', 'dictionaryHash', ',', 'golombModuli', ')', ';', 'if', '(', 'output_filename', '!=', 'null', ')', '{', 'BinIO', '.', 'storeObject', '(', 'word2vec', ',', 'output_filename', ')', ';', '}', 'if', '(', 'jsapResult', '.', 'getBoolean', '(', '""check""', ')', ')', '{', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Checking the output""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'int', '[', ']', 'vec', '=', 'word2vec', '.', 'getInt', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'expected', '=', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', ';', 'int', 'got', '=', 'vec', '[', 'col', ']', ';', 'if', '(', 'expected', '!=', 'got', ')', '{', 'logger', '.', 'error', '(', '""Row {}, Column {}: Expected {}, got {}""', ',', 'i', ',', 'col', ',', 'expected', ',', 'got', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'jsap', '(', 'Word', '(', ')', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'UnflaggedOption', '(', '""""', '.', '_', ',', '""""', ')', ',', '(', '""""', ')', ',', 'Switch', '(', '""""', ',', '""""', ')', '}', ')', ';', 'try', '(', 'BufferedReader', 'lines', '=', '(', 'FileReader', '(', ')', ')', ')', '{', '(', 'header', '[', '0', ']', ')', '.', 'start', '(', '""""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'for', '(', ';', ';', ')', '{', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'col', ']', '=', 'columnAbsSum', '[', 'col', ']', '=', '(', 'entry', ')', ';', '}', '}', '}', 'golombModuli', '[', 'vectorSize', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 'numWords', ')', '{', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', '(', '(', '2', ')', '.', 'log', '(', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', ';', '}', '(', '(', 'utf', '(', ')', ')', ')', ';', 'permutation', '[', 'numWords', ']', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', '[', 'newPos', ']', '=', 'i', ';', '}', '(', '0', ')', ';', 'LongArrayList', '(', '""""', ',', 'bps', ')', ';', '(', 'numWords', ')', ';', 'if', '(', '_', ')', '{', '(', 'filename', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'expected', '[', 'i', ']', ';', 'got', '[', 'col', ']', ';', 'if', '(', 'got', ')', '{', 'error', '(', '""""', ',', 'got', ')', ';', '(', '1', ')', ';', '}', '}', '}', 'done', '(', ')', ';', '}', '}']",995,296,6,699,70.67745197168858
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_2.txt,0.9042,0.135,"{'n_total': 4290, 'n_valid': 304, 'n_correct': 304}",538.506903,"@SuppressWarnings(""null"") public static void main(String[] args) { if (catalinaHome == null) { log.error(""Must set '"" + Globals.CATALINA_HOME_PROP + ""' system property""); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (""-ant"".equals(args[index])) ant = true; else if (""-common"".equals(args[index])) common = true; else if (""-server"".equals(args[index])) server = true; else if (""-shared"".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(""ant.home"", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, ""classes"")); packed.add(new File(catalinaHome, ""lib"")); if (common) { unpacked.add(new File(catalinaHome, ""common"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""common"" + File.separator + ""lib"")); } if (server) { unpacked.add(new File(catalinaHome, ""server"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""server"" + File.separator + ""lib"")); } if (shared) { unpacked.add(new File(catalinaHome, ""shared"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""shared"" + File.separator + ""lib"")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Class loader creation threw exception"", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(""Loading application class "" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception creating instance of "" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(""Identifying main() method""); String methodName = ""main""; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception locating main() method"", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(""Calling main() method""); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(""Exception calling main() method"", t); System.exit(1); } }","void main(String[]args){if(null){(""""+"""");}while(true){if(index){(1);}("""".equals(args[index]));("""".equals());("""".equals(args[index]));("""".equals());}if(length){(1);}if(ant)setProperty("""",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,""""));if(common){(File(catalinaHome,""""+""""));(File(catalinaHome,""""+""""));}if(shared){((""""));(File(catalinaHome,""""));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error("""",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(""""+t);(1);}String[args];try{if(log())("""");methodName="""";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){("""");}try{("""");(paramValues);}catch(Throwable t){t();}}",2785,697,10,2088,75.24324324324324,"['@', 'SuppressWarnings', '(', '""null""', ')', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'catalinaHome', '==', 'null', ')', '{', 'log', '.', 'error', '(', '""Must set \'""', '+', 'Globals', '.', 'CATALINA_HOME_PROP', '+', '""\' system property""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'int', 'index', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'index', '==', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '""-ant""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'ant', '=', 'true', ';', 'else', 'if', '(', '""-common""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'common', '=', 'true', ';', 'else', 'if', '(', '""-server""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'server', '=', 'true', ';', 'else', 'if', '(', '""-shared""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'shared', '=', 'true', ';', 'else', 'break', ';', 'index', '++', ';', '}', 'if', '(', 'index', '>', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'System', '.', 'setProperty', '(', '""ant.home""', ',', 'catalinaHome', ')', ';', 'ClassLoader', 'classLoader', '=', 'null', ';', 'try', '{', 'ArrayList', '<', 'File', '>', 'packed', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""lib""', ')', ')', ';', 'if', '(', 'common', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'server', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'classLoader', '=', 'ClassLoaderFactory', '.', 'createClassLoader', '(', 'unpacked', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'packed', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Class loader creation threw exception""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Thread', '.', 'currentThread', '(', ')', '.', 'setContextClassLoader', '(', 'classLoader', ')', ';', 'Class', '<', '?', '>', 'clazz', '=', 'null', ';', 'String', 'className', '=', 'args', '[', 'index', '++', ']', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Loading application class ""', '+', 'className', ')', ';', 'clazz', '=', 'classLoader', '.', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception creating instance of ""', '+', 'className', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Method', 'method', '=', 'null', ';', 'String', '[', ']', 'params', '=', 'new', 'String', '[', 'args', '.', 'length', '-', 'index', ']', ';', 'System', '.', 'arraycopy', '(', 'args', ',', 'index', ',', 'params', ',', '0', ',', 'params', '.', 'length', ')', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Identifying main() method""', ')', ';', 'String', 'methodName', '=', '""main""', ';', 'Class', '<', '?', '>', '[', ']', 'paramTypes', '=', 'new', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'params', '.', 'getClass', '(', ')', ';', 'method', '=', 'clazz', '.', 'getMethod', '(', 'methodName', ',', 'paramTypes', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception locating main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Calling main() method""', ')', ';', 'Object', '[', ']', 'paramValues', '=', 'new', 'Object', '[', '1', ']', ';', 'paramValues', '[', '0', ']', '=', 'params', ';', 'method', '.', 'invoke', '(', 'null', ',', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '=', 'ExceptionUtils', '.', 'unwrapInvocationTargetException', '(', 't', ')', ';', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception calling main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'null', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'while', '(', 'true', ')', '{', 'if', '(', 'index', ')', '{', '(', '1', ')', ';', '}', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '}', 'if', '(', 'length', ')', '{', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'setProperty', '(', '""""', ',', 'catalinaHome', ')', ';', 'try', '{', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', 'if', '(', 'common', ')', '{', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', '(', '(', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', '}', 'ClassLoaderFactory', '(', '(', 'File', '[', '0', ']', ')', ',', '(', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'error', '(', '""""', ',', 't', ')', ';', '(', '1', ')', ';', '}', 'args', '[', 'index', ']', ';', 'try', '{', 'if', '(', 'isDebugEnabled', '(', ')', ')', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', 't', ')', ';', '(', '""""', '+', 't', ')', ';', '(', '1', ')', ';', '}', 'String', '[', 'args', ']', ';', 'try', '{', 'if', '(', 'log', '(', ')', ')', '(', '""""', ')', ';', 'methodName', '=', '""""', ';', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'getClass', '(', ')', ';', '(', 'methodName', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '(', '""""', ')', ';', '(', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '(', ')', ';', '}', '}']",736,318,6,418,57.26027397260274
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,execute_3.txt,0.7564,0.5614,"{'n_total': 7475, 'n_valid': 551, 'n_correct': 358}",1065.395036,"public void execute(JobExecutionContext arg0) throws JobExecutionException { Session sakaiSession = sessionManager.getCurrentSession(); sakaiSession.setUserId(""admin""); sakaiSession.setUserEid(""admin""); Calendar cal = new GregorianCalendar(); String maxDaysLocalStr = serverConfigurationService.getString(""accountValidator.maxDays"", null); if (maxDaysLocalStr == null) { log.warn(""accountValidator.maxDays was found. The new property is accountValidator.maxReminderDays""); } maxDaysLocalStr = serverConfigurationService.getString(""accountValidator.maxReminderDays"", maxDaysLocalStr); if (maxDaysLocalStr == null) { maxDaysLocalStr = """" + maxDays; } try { maxDays = Integer.parseInt(maxDaysLocalStr); } catch (Exception e) { } cal.add(Calendar.DAY_OF_MONTH, (maxDays * -1)); Date maxAge = cal.getTime(); int maxAttempts = 10; String maxAttemptsStr = serverConfigurationService.getString(""accountValidator.maxResendAttempts"", """" + maxAttempts); try { maxAttempts = Integer.parseInt(maxAttemptsStr); } catch (Exception e) { } StringBuilder usedAccounts = new StringBuilder(); List<String> oldAccounts = new ArrayList<String>(); List<ValidationAccount> list = validationLogic.getValidationAccountsByStatus(ValidationAccount.STATUS_SENT); List<ValidationAccount> list2 = validationLogic.getValidationAccountsByStatus(ValidationAccount.STATUS_RESENT); if (list2 != null) { list.addAll(list2); } int loggedInAccounts = 0; int notLogedIn = 0; for (int i = 0; i < list.size(); i++) { ValidationAccount account = list.get(i); log.debug(""account "" + account.getUserId() + "" created on "" + account.getValidationSent()); String userSiteId = siteService.getUserSiteId(account.getUserId()); if (siteService.siteExists(userSiteId)) { log.info(""looks like this user logged in!""); loggedInAccounts++; if (account.getValidationsSent().intValue() < maxAttempts && serverConfigurationService.getBoolean(""accountValidator.resendValidations"", true)) { validationLogic.resendValidation(account.getValidationToken()); } else if (account.getValidationSent().before(maxAge) || account.getValidationsSent().intValue() >= maxAttempts) { account.setStatus(ValidationAccount.STATUS_EXPIRED); cal = new GregorianCalendar(); account.setvalidationReceived(cal.getTime()); validationLogic.save(account); } else if (validationLogic.isTokenExpired(account)) { } else { } usedAccounts.append(account.getUserId() + ""\n""); } else { log.debug(""realm: "" + ""/site/~"" + account.getUserId() + "" does not seem to exist""); notLogedIn++; if (account.getValidationSent().before(maxAge)) { oldAccounts.add(account.getUserId()); } } } log.info(""users have logged in: "" + loggedInAccounts + "" not logged in: "" + notLogedIn); log.info(""we would delete: "" + oldAccounts.size() + "" accounts""); if (log.isDebugEnabled()) { log.debug(""users:"" + usedAccounts.toString()); } Map<String, List<String>> addedMap = buildAddedMap(oldAccounts); Set<Entry<String, List<String>>> entrySet = addedMap.entrySet(); Iterator<Entry<String, List<String>>> it = entrySet.iterator(); while (it.hasNext()) { Entry<String, List<String>> entry = it.next(); String creatorId = entry.getKey(); try { User creator = userDirectoryService.getUser(creatorId); Locale locale = getUserLocale(creatorId); List<String> users = entry.getValue(); StringBuilder userText = new StringBuilder(); for (int i = 0; i < users.size(); i++) { try { User u = userDirectoryService.getUser(users.get(i)); DateTime dt = new DateTime(u.getCreatedDate()); DateTimeFormatter fmt = DateTimeFormat.longDate(); String str = fmt.withLocale(locale).print(dt); userText.append(u.getEid() + "" ("" + str + "")\n""); removeCleaUpUser(u.getId()); } catch (UserNotDefinedException e) { ValidationAccount va = validationLogic.getVaLidationAcountByUserId(users.get(i)); validationLogic.deleteValidationAccount(va); } } List<String> userReferences = new ArrayList<String>(); userReferences.add(creator.getReference()); Map<String, String> replacementValues = new HashMap<String, String>(); replacementValues.put(""userList"", userText.toString()); replacementValues.put(""creatorName"", creator.getDisplayName()); replacementValues.put(""deleteDays"", Integer.valueOf(maxDays).toString()); replacementValues.put(""institution"", serverConfigurationService.getString(""ui.institution"")); String fromEmail = serverConfigurationService.getString(""accountValidator.checkValidations.fromEmailAddress"", serverConfigurationService.getString(""mail.support"")); String fromName = serverConfigurationService.getString(""accountValidator.checkValidations.fromEmailName"", serverConfigurationService.getString(""mail.support"")); emailTemplateService.sendRenderedMessages(""validate.deleted"", userReferences, replacementValues, fromEmail, fromName); } catch (UserNotDefinedException e) { log.error(e.getMessage(), e); } } }","void execute(JobExecutionContext arg){("""").setUserEid();getString("""",null);{("""");}getString("""",maxDaysLocalStr);if(null){}try{}catch(Exception e){}((1));(""""+maxAttempts);try{}catch(Exception e){}StringBuilder();List<String>oldAccounts=ArrayList();List<ValidationAccount>list=getValidationAccountsByStatus();for(;;i++){("""");(getUserId());if((userSiteId)) {("""");if(getBoolean()){}if(getValidationSent().intValue()>maxAttempts){(ValidationAccount);}(""""); if(account){add(getUserId());}}}info(""""+notLogedIn);("""".size()+"""");if(isDebugEnabled()) {("""");}Map<List<String>>addedMap;Set<Entry< List<String>>>it=iterator(); while(hasNext()) {Entry<List<String>>creatorId= getKey();try{for(inti ;;i++){try{(u);(+"""");(u);}catch(UserNotDefinedException e){(va); }}("""".toString()).getString("""");}catch(UserNotDefinedException e){error(getMessage(),e);}}}",4774,839,13,3935,82.6507036336904,"['public', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', 'throws', 'JobExecutionException', '{', 'Session', 'sakaiSession', '=', 'sessionManager', '.', 'getCurrentSession', '(', ')', ';', 'sakaiSession', '.', 'setUserId', '(', '""admin""', ')', ';', 'sakaiSession', '.', 'setUserEid', '(', '""admin""', ')', ';', 'Calendar', 'cal', '=', 'new', 'GregorianCalendar', '(', ')', ';', 'String', 'maxDaysLocalStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxDays""', ',', 'null', ')', ';', 'if', '(', 'maxDaysLocalStr', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""accountValidator.maxDays was found. The new property is accountValidator.maxReminderDays""', ')', ';', '}', 'maxDaysLocalStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxReminderDays""', ',', 'maxDaysLocalStr', ')', ';', 'if', '(', 'maxDaysLocalStr', '==', 'null', ')', '{', 'maxDaysLocalStr', '=', '""""', '+', 'maxDays', ';', '}', 'try', '{', 'maxDays', '=', 'Integer', '.', 'parseInt', '(', 'maxDaysLocalStr', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'cal', '.', 'add', '(', 'Calendar', '.', 'DAY_OF_MONTH', ',', '(', 'maxDays', '*', '-', '1', ')', ')', ';', 'Date', 'maxAge', '=', 'cal', '.', 'getTime', '(', ')', ';', 'int', 'maxAttempts', '=', '10', ';', 'String', 'maxAttemptsStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxResendAttempts""', ',', '""""', '+', 'maxAttempts', ')', ';', 'try', '{', 'maxAttempts', '=', 'Integer', '.', 'parseInt', '(', 'maxAttemptsStr', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'StringBuilder', 'usedAccounts', '=', 'new', 'StringBuilder', '(', ')', ';', 'List', '<', 'String', '>', 'oldAccounts', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'List', '<', 'ValidationAccount', '>', 'list', '=', 'validationLogic', '.', 'getValidationAccountsByStatus', '(', 'ValidationAccount', '.', 'STATUS_SENT', ')', ';', 'List', '<', 'ValidationAccount', '>', 'list2', '=', 'validationLogic', '.', 'getValidationAccountsByStatus', '(', 'ValidationAccount', '.', 'STATUS_RESENT', ')', ';', 'if', '(', 'list2', '!=', 'null', ')', '{', 'list', '.', 'addAll', '(', 'list2', ')', ';', '}', 'int', 'loggedInAccounts', '=', '0', ';', 'int', 'notLogedIn', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'list', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'ValidationAccount', 'account', '=', 'list', '.', 'get', '(', 'i', ')', ';', 'log', '.', 'debug', '(', '""account ""', '+', 'account', '.', 'getUserId', '(', ')', '+', '"" created on ""', '+', 'account', '.', 'getValidationSent', '(', ')', ')', ';', 'String', 'userSiteId', '=', 'siteService', '.', 'getUserSiteId', '(', 'account', '.', 'getUserId', '(', ')', ')', ';', 'if', '(', 'siteService', '.', 'siteExists', '(', 'userSiteId', ')', ')', '{', 'log', '.', 'info', '(', '""looks like this user logged in!""', ')', ';', 'loggedInAccounts', '++', ';', 'if', '(', 'account', '.', 'getValidationsSent', '(', ')', '.', 'intValue', '(', ')', '<', 'maxAttempts', '&&', 'serverConfigurationService', '.', 'getBoolean', '(', '""accountValidator.resendValidations""', ',', 'true', ')', ')', '{', 'validationLogic', '.', 'resendValidation', '(', 'account', '.', 'getValidationToken', '(', ')', ')', ';', '}', 'else', 'if', '(', 'account', '.', 'getValidationSent', '(', ')', '.', 'before', '(', 'maxAge', ')', '||', 'account', '.', 'getValidationsSent', '(', ')', '.', 'intValue', '(', ')', '>=', 'maxAttempts', ')', '{', 'account', '.', 'setStatus', '(', 'ValidationAccount', '.', 'STATUS_EXPIRED', ')', ';', 'cal', '=', 'new', 'GregorianCalendar', '(', ')', ';', 'account', '.', 'setvalidationReceived', '(', 'cal', '.', 'getTime', '(', ')', ')', ';', 'validationLogic', '.', 'save', '(', 'account', ')', ';', '}', 'else', 'if', '(', 'validationLogic', '.', 'isTokenExpired', '(', 'account', ')', ')', '{', '}', 'else', '{', '}', 'usedAccounts', '.', 'append', '(', 'account', '.', 'getUserId', '(', ')', '+', '""\\n""', ')', ';', '}', 'else', '{', 'log', '.', 'debug', '(', '""realm: ""', '+', '""/site/~""', '+', 'account', '.', 'getUserId', '(', ')', '+', '"" does not seem to exist""', ')', ';', 'notLogedIn', '++', ';', 'if', '(', 'account', '.', 'getValidationSent', '(', ')', '.', 'before', '(', 'maxAge', ')', ')', '{', 'oldAccounts', '.', 'add', '(', 'account', '.', 'getUserId', '(', ')', ')', ';', '}', '}', '}', 'log', '.', 'info', '(', '""users have logged in: ""', '+', 'loggedInAccounts', '+', '"" not logged in: ""', '+', 'notLogedIn', ')', ';', 'log', '.', 'info', '(', '""we would delete: ""', '+', 'oldAccounts', '.', 'size', '(', ')', '+', '"" accounts""', ')', ';', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""users:""', '+', 'usedAccounts', '.', 'toString', '(', ')', ')', ';', '}', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'addedMap', '=', 'buildAddedMap', '(', 'oldAccounts', ')', ';', 'Set', '<', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', '>', 'entrySet', '=', 'addedMap', '.', 'entrySet', '(', ')', ';', 'Iterator', '<', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', '>', 'it', '=', 'entrySet', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'entry', '=', 'it', '.', 'next', '(', ')', ';', 'String', 'creatorId', '=', 'entry', '.', 'getKey', '(', ')', ';', 'try', '{', 'User', 'creator', '=', 'userDirectoryService', '.', 'getUser', '(', 'creatorId', ')', ';', 'Locale', 'locale', '=', 'getUserLocale', '(', 'creatorId', ')', ';', 'List', '<', 'String', '>', 'users', '=', 'entry', '.', 'getValue', '(', ')', ';', 'StringBuilder', 'userText', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'users', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'try', '{', 'User', 'u', '=', 'userDirectoryService', '.', 'getUser', '(', 'users', '.', 'get', '(', 'i', ')', ')', ';', 'DateTime', 'dt', '=', 'new', 'DateTime', '(', 'u', '.', 'getCreatedDate', '(', ')', ')', ';', 'DateTimeFormatter', 'fmt', '=', 'DateTimeFormat', '.', 'longDate', '(', ')', ';', 'String', 'str', '=', 'fmt', '.', 'withLocale', '(', 'locale', ')', '.', 'print', '(', 'dt', ')', ';', 'userText', '.', 'append', '(', 'u', '.', 'getEid', '(', ')', '+', '"" (""', '+', 'str', '+', '"")\\n""', ')', ';', 'removeCleaUpUser', '(', 'u', '.', 'getId', '(', ')', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', 'ValidationAccount', 'va', '=', 'validationLogic', '.', 'getVaLidationAcountByUserId', '(', 'users', '.', 'get', '(', 'i', ')', ')', ';', 'validationLogic', '.', 'deleteValidationAccount', '(', 'va', ')', ';', '}', '}', 'List', '<', 'String', '>', 'userReferences', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'userReferences', '.', 'add', '(', 'creator', '.', 'getReference', '(', ')', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'replacementValues', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'replacementValues', '.', 'put', '(', '""userList""', ',', 'userText', '.', 'toString', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""creatorName""', ',', 'creator', '.', 'getDisplayName', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""deleteDays""', ',', 'Integer', '.', 'valueOf', '(', 'maxDays', ')', '.', 'toString', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""institution""', ',', 'serverConfigurationService', '.', 'getString', '(', '""ui.institution""', ')', ')', ';', 'String', 'fromEmail', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.checkValidations.fromEmailAddress""', ',', 'serverConfigurationService', '.', 'getString', '(', '""mail.support""', ')', ')', ';', 'String', 'fromName', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.checkValidations.fromEmailName""', ',', 'serverConfigurationService', '.', 'getString', '(', '""mail.support""', ')', ')', ';', 'emailTemplateService', '.', 'sendRenderedMessages', '(', '""validate.deleted""', ',', 'userReferences', ',', 'replacementValues', ',', 'fromEmail', ',', 'fromName', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}', '}']","['void', 'execute', '(', 'JobExecutionContext', 'arg', ')', '{', '(', '""""', ')', '.', 'setUserEid', '(', ')', ';', 'getString', '(', '""""', ',', 'null', ')', ';', '{', '(', '""""', ')', ';', '}', 'getString', '(', '""""', ',', 'maxDaysLocalStr', ')', ';', 'if', '(', 'null', ')', '{', '}', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', '(', '1', ')', ')', ';', '(', '""""', '+', 'maxAttempts', ')', ';', 'try', '{', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'StringBuilder', '(', ')', ';', 'List', '<', 'String', '>', 'oldAccounts', '=', 'ArrayList', '(', ')', ';', 'List', '<', 'ValidationAccount', '>', 'list', '=', 'getValidationAccountsByStatus', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', '""""', ')', ';', '(', 'getUserId', '(', ')', ')', ';', 'if', '(', '(', 'userSiteId', ')', ')', '{', '(', '""""', ')', ';', 'if', '(', 'getBoolean', '(', ')', ')', '{', '}', 'if', '(', 'getValidationSent', '(', ')', '.', 'intValue', '(', ')', '>', 'maxAttempts', ')', '{', '(', 'ValidationAccount', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'account', ')', '{', 'add', '(', 'getUserId', '(', ')', ')', ';', '}', '}', '}', 'info', '(', '""""', '+', 'notLogedIn', ')', ';', '(', '""""', '.', 'size', '(', ')', '+', '""""', ')', ';', 'if', '(', 'isDebugEnabled', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'Map', '<', 'List', '<', 'String', '>', '>', 'addedMap', ';', 'Set', '<', 'Entry', '<', 'List', '<', 'String', '>', '>', '>', 'it', '=', 'iterator', '(', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'Entry', '<', 'List', '<', 'String', '>', '>', 'creatorId', '=', 'getKey', '(', ')', ';', 'try', '{', 'for', '(', 'inti', ';', ';', 'i', '++', ')', '{', 'try', '{', '(', 'u', ')', ';', '(', '+', '""""', ')', ';', '(', 'u', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', '(', 'va', ')', ';', '}', '}', '(', '""""', '.', 'toString', '(', ')', ')', '.', 'getString', '(', '""""', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', 'error', '(', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}', '}']",998,316,6,682,68.75
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_7.txt,0.8007,0.3963,"{'n_total': 3114, 'n_valid': 245, 'n_correct': 245}",415.541849,"@Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(""Retrying reconnect ... ["").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(""Unknown command: "").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(""Network error. Server died?"").$(); LOG.debug().$(""Network error details: "").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(""Unhandled exception in client"").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(""Fatal exception when closing client"").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(""Terminated"").$(); } }","void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("""");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}",3115,539,9,2576,82.93625241468126,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'running', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_RUNNING', ')', ';', 'int', 'event', '=', 'JournalClientEvents', '.', 'EVT_NONE', ';', 'boolean', 'connected', '=', 'false', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', '!', 'connected', ')', '{', 'int', 'retryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getRetryCount', '(', ')', ';', 'int', 'loginRetryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getLoginRetryCount', '(', ')', ';', 'do', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'openChannel', '(', ')', ';', 'counter', '.', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', 'retryCount', '--', '>', '0', ')', '{', 'continue', ';', '}', 'else', '{', 'break', ';', '}', '}', 'sendProtocolVersion', '(', ')', ';', 'checkAuthAndSendCredential', '(', ')', ';', 'resubscribe', '(', ')', ';', 'sendReady', '(', ')', ';', 'connected', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_CONNECTED', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_ERROR', ')', ';', 'loginRetryCount', '--', ';', '}', 'catch', '(', 'AuthenticationConfigException', '|', 'AuthenticationProviderException', 'e', ')', '{', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_CONFIG_ERROR', ')', ';', 'return', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'info', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', '}', 'if', '(', '!', 'connected', '&&', 'retryCount', '--', '>', '0', '&&', 'loginRetryCount', '>', '0', ')', '{', 'LockSupport', '.', 'parkNanos', '(', 'TimeUnit', '.', 'MILLISECONDS', '.', 'toNanos', '(', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getSleepBetweenRetriesMillis', '(', ')', ')', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Retrying reconnect ... [""', ')', '.', '$', '(', 'retryCount', '+', '1', ')', '.', '$', '(', ""']'"", ')', '.', '$', '(', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'while', '(', 'true', ')', ';', 'if', '(', '!', 'connected', '&&', '(', 'retryCount', '==', '0', '||', 'loginRetryCount', '==', '0', ')', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_SERVER_ERROR', ';', '}', '}', 'try', '{', 'if', '(', 'connected', '&&', 'channel', '.', 'isOpen', '(', ')', '&&', 'isRunning', '(', ')', ')', '{', 'commandConsumer', '.', 'read', '(', 'channel', ')', ';', 'byte', 'cmd', '=', 'commandConsumer', '.', 'getCommand', '(', ')', ';', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', '.', 'JOURNAL_DELTA_CMD', ':', 'statsChannel', '.', 'setDelegate', '(', 'channel', ')', ';', 'int', 'index', '=', 'intResponseConsumer', '.', 'getValue', '(', 'statsChannel', ')', ';', 'deltaConsumers', '.', 'getQuick', '(', 'index', ')', '.', 'read', '(', 'statsChannel', ')', ';', 'statusSentList', '.', 'set', '(', 'index', ',', '0', ')', ';', 'statsChannel', '.', 'logStats', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_READY_CMD', ':', 'sendState', '(', ')', ';', 'sendReady', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_HEARTBEAT', ':', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', 'sendReady', '(', ')', ';', '}', 'else', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', 'break', ';', 'case', 'Command', '.', 'SERVER_SHUTDOWN', ':', 'connected', '=', 'false', ';', 'break', ';', 'default', ':', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Unknown command: ""', ')', '.', '$', '(', 'cmd', ')', '.', '$', '(', ')', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'event', '==', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_INCOMPATIBLE_JOURNAL', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Network error. Server died?""', ')', '.', '$', '(', ')', ';', 'LOG', '.', 'debug', '(', ')', '.', '$', '(', '""Network error details: ""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_SERVER_DIED', ')', ';', 'connected', '=', 'false', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Unhandled exception in client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_EXCEPTION', ';', '}', 'if', '(', 'event', '!=', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'if', '(', 'channel', '!=', 'null', '&&', 'channel', '.', 'isOpen', '(', ')', ')', '{', 'sendDisconnect', '(', ')', ';', '}', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'event', ')', ';', 'break', ';', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Fatal exception when closing client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', '}', 'finally', '{', 'running', '=', 'false', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_TERMINATED', ')', ';', 'haltLatch', '.', 'countDown', '(', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Terminated""', ')', '.', '$', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', 'RUNNING', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', 'connected', ')', '{', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'AuthenticationConfigException', 'e', ')', '{', 'close', '(', ')', ';', '(', 'JournalClientEvents', ')', ';', '}', '}', '(', 'true', ')', ';', 'if', '(', '(', 'retryCount', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'isRunning', ')', '{', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', ':', '(', 'channel', ')', ';', '(', 'statsChannel', ')', ';', '(', '0', ')', ';', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', '}', '}', '}', 'if', '(', 'event', ')', '{', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', '(', 'e', '(', ')', ')', '.', '$', '(', ')', '.', '$', '(', '""""', ')', ';', '}', 'if', '(', 'event', ')', '{', 'if', '(', 'channel', '(', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']",736,191,6,545,74.65753424657534
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,run_8.txt,0.9903,0.0164,"{'n_total': 3857, 'n_valid': 279, 'n_correct': 270}",483.51958,"@Override public void run() { logger.trace(""host proxy port "" + this.localport + "" for "" + host + "" started""); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(""Proxy server cannot connect to "" + host + "":"" + remoteport + "":\n"" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } }","void run(){("""");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(""""+"""");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}",1762,600,9,1162,66.28636622932116,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'logger', '.', 'trace', '(', '""host proxy port ""', '+', 'this', '.', 'localport', '+', '"" for ""', '+', 'host', '+', '"" started""', ')', ';', 'stop', '=', 'false', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'final', 'byte', '[', ']', 'request', '=', 'new', 'byte', '[', '1024', ']', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '4096', ']', ';', 'while', '(', '!', 'stop', ')', '{', 'try', '{', 'client', '=', 'ss', '.', 'accept', '(', ')', ';', 'final', 'InputStream', 'fromClient', '=', 'client', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toClient', '=', 'client', '.', 'getOutputStream', '(', ')', ';', 'try', '{', 'server', '=', 'new', 'Socket', '(', 'host', ',', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'PrintWriter', 'out', '=', 'new', 'PrintWriter', '(', 'new', 'OutputStreamWriter', '(', 'toClient', ')', ')', ';', 'out', '.', 'println', '(', '""Proxy server cannot connect to ""', '+', 'host', '+', '"":""', '+', 'remoteport', '+', '"":\\n""', '+', 'e', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'client', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'final', 'InputStream', 'fromServer', '=', 'server', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toServer', '=', 'server', '.', 'getOutputStream', '(', ')', ';', 'new', 'Thread', '(', '(', ')', '->', '{', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromClient', '.', 'read', '(', 'request', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'delay', '>', '0', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'toServer', '.', 'write', '(', 'request', ',', '0', ',', 'bytesRead', ')', ';', 'toServer', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'try', '{', 'toServer', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'start', '(', ')', ';', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromServer', '.', 'read', '(', 'reply', ')', ')', '!=', '-', '1', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '1', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'toClient', '.', 'write', '(', 'reply', ',', '0', ',', 'bytesRead', ')', ';', 'toClient', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'toClient', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'finally', '{', 'try', '{', 'if', '(', 'server', '!=', 'null', ')', '{', 'server', '.', 'close', '(', ')', ';', '}', 'if', '(', 'client', '!=', 'null', ')', '{', 'client', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '(', ')', ')', '{', 'ss', '(', ')', ';', '}', '}', 'newbyte', '[', '1', ']', ';', 'reply', '[', '6', ']', ';', 'while', '(', 'stop', ')', '{', 'try', '{', 'client', '(', ')', ';', 'getOutputStream', '(', ')', ';', 'try', '{', '(', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'fromServer', '(', ')', ';', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '(', 'request', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', 'bytesRead', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'try', '{', 'if', '(', 'server', ')', '{', 'close', '(', ')', ';', '}', 'if', '(', 'client', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",488,236,6,252,52.28215767634856
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,hashCode_1.txt,0.9957,0.0053,"{'n_total': 2710, 'n_valid': 222, 'n_correct': 222}",413.0666,"@SuppressWarnings(""SimplifiableIfStatement"") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }",int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);},4847,523,14,4324,89.46823918890958,"['@', 'SuppressWarnings', '(', '""SimplifiableIfStatement""', ')', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'user', '!=', 'null', '?', 'user', '.', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '31', '*', 'result', '+', '(', 'password', '!=', 'null', '?', 'password', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverSslCert', '!=', 'null', '?', 'serverSslCert', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStore', '!=', 'null', '?', 'trustStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStorePassword', '!=', 'null', '?', 'trustStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStore', '!=', 'null', '?', 'keyStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStorePassword', '!=', 'null', '?', 'keyStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyPassword', '!=', 'null', '?', 'keyPassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslProtocolSuites', '!=', 'null', '?', 'enabledSslProtocolSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pinGlobalTxToPhysicalConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketFactory', '!=', 'null', '?', 'socketFactory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'connectTimeout', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pipe', '!=', 'null', '?', 'pipe', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocket', '!=', 'null', '?', 'localSocket', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sharedMemory', '!=', 'null', '?', 'sharedMemory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpNoDelay', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpKeepAlive', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpRcvBuf', '!=', 'null', '?', 'tcpRcvBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpSndBuf', '!=', 'null', '?', 'tcpSndBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpAbortiveClose', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocketAddress', '!=', 'null', '?', 'localSocketAddress', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketTimeout', '!=', 'null', '?', 'socketTimeout', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMultiQueries', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'rewriteBatchedStatements', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'interactiveClient', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'passwordCharacterEncoding', '!=', 'null', '?', 'passwordCharacterEncoding', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useSsl', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslCipherSuites', '!=', 'null', '?', 'enabledSslCipherSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sessionVariables', '!=', 'null', '?', 'sessionVariables', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tinyInt1isBit', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'yearIsDateType', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'createDatabaseIfNotExist', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverTimezone', '!=', 'null', '?', 'serverTimezone', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'nullCatalogMeansCurrent', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'dumpQueriesOnException', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useOldAliasMetadataBehavior', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowLocalInfile', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cachePrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSqlLimit', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useLegacyDatetimeCode', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'maximizeMysqlCompatibility', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useServerPrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cacheCallableStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'callableStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'connectionAttributes', '!=', 'null', '?', 'connectionAttributes', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBatchMultiSend', '!=', 'null', '?', 'useBatchMultiSend', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'useBatchMultiSendNumber', ';', 'result', '=', '31', '*', 'result', '+', '(', 'usePipelineAuth', '!=', 'null', '?', 'usePipelineAuth', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enablePacketDebug', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBulkStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'disableSslHostnameVerification', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'log', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'profileSql', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxQuerySizeToLog', ';', 'result', '=', '31', '*', 'result', '+', '(', 'slowQueryThresholdNanos', '!=', 'null', '?', 'slowQueryThresholdNanos', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'assureReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autoReconnect', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'failOnReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMasterDownConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'retriesAllDown', ';', 'result', '=', '31', '*', 'result', '+', 'validConnectionTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'loadBalanceBlacklistTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'failoverLoopRetries', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'registerJmxPool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useResetConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'staticGlobal', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'poolName', '!=', 'null', '?', 'poolName', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxPoolSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'minPoolSize', '!=', 'null', '?', 'minPoolSize', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxIdleTime', ';', 'result', '=', '31', '*', 'result', '+', 'poolValidMinDelay', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autocommit', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'result', '=', 'null', '?', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '1', '*', '(', 'password', '?', 'hashCode', '(', ')', ':', '0', ')', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', '(', 'keyPassword', '?', 'enabledSslProtocolSuites', ':', '0', ')', ';', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'socketFactory', '?', 'socketFactory', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'pipe', '?', 'localSocket', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'sharedMemory', ')', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '(', 'interactiveClient', '?', '1', ':', '0', ')', '+', '(', 'useSsl', '?', '1', ':', '0', ')', '*', '(', 'sessionVariables', '?', 'sessionVariables', ':', '0', ')', '*', '(', '1', ')', ';', 'result', '=', '1', '*', '(', 'createDatabaseIfNotExist', ')', ';', 'result', '=', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'minPoolSize', '?', 'hashCode', ':', '0', ')', ';', '(', 'autocommit', '?', '1', ':', '0', ')', ';', '}']",1202,169,6,1033,86.37123745819399
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_9.txt,0.9978,0.0026,"{'n_total': 1653, 'n_valid': 157, 'n_correct': 157}",245.081147,"public static void main(String[] args) throws CryptoException { JPAKEPrimeOrderGroup group = JPAKEPrimeOrderGroups.NIST_3072; BigInteger p = group.getP(); BigInteger q = group.getQ(); BigInteger g = group.getG(); String alicePassword = ""password""; String bobPassword = ""password""; System.out.println(""********* Initialization **********""); System.out.println(""Public parameters for the cyclic group:""); System.out.println(""p ("" + p.bitLength() + "" bits): "" + p.toString(16)); System.out.println(""q ("" + q.bitLength() + "" bits): "" + q.toString(16)); System.out.println(""g ("" + p.bitLength() + "" bits): "" + g.toString(16)); System.out.println(""p mod q = "" + p.mod(q).toString(16)); System.out.println(""g^{q} mod p = "" + g.modPow(q, p).toString(16)); System.out.println(""""); System.out.println(""(Secret passwords used by Alice and Bob: "" + ""\"""" + alicePassword + ""\"" and \"""" + bobPassword + ""\"")\n""); Digest digest = new SHA256Digest(); SecureRandom random = new SecureRandom(); JPAKEParticipant alice = new JPAKEParticipant(""alice"", alicePassword.toCharArray(), group, digest, random); JPAKEParticipant bob = new JPAKEParticipant(""bob"", bobPassword.toCharArray(), group, digest, random); JPAKERound1Payload aliceRound1Payload = alice.createRound1PayloadToSend(); JPAKERound1Payload bobRound1Payload = bob.createRound1PayloadToSend(); System.out.println(""************ Round 1 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""g^{x1}="" + aliceRound1Payload.getGx1().toString(16)); System.out.println(""g^{x2}="" + aliceRound1Payload.getGx2().toString(16)); System.out.println(""KP{x1}={"" + aliceRound1Payload.getKnowledgeProofForX1()[0].toString(16) + ""};{"" + aliceRound1Payload.getKnowledgeProofForX1()[1].toString(16) + ""}""); System.out.println(""KP{x2}={"" + aliceRound1Payload.getKnowledgeProofForX2()[0].toString(16) + ""};{"" + aliceRound1Payload.getKnowledgeProofForX2()[1].toString(16) + ""}""); System.out.println(""""); System.out.println(""Bob sends to Alice: ""); System.out.println(""g^{x3}="" + bobRound1Payload.getGx1().toString(16)); System.out.println(""g^{x4}="" + bobRound1Payload.getGx2().toString(16)); System.out.println(""KP{x3}={"" + bobRound1Payload.getKnowledgeProofForX1()[0].toString(16) + ""};{"" + bobRound1Payload.getKnowledgeProofForX1()[1].toString(16) + ""}""); System.out.println(""KP{x4}={"" + bobRound1Payload.getKnowledgeProofForX2()[0].toString(16) + ""};{"" + bobRound1Payload.getKnowledgeProofForX2()[1].toString(16) + ""}""); System.out.println(""""); alice.validateRound1PayloadReceived(bobRound1Payload); System.out.println(""Alice checks g^{x4}!=1: OK""); System.out.println(""Alice checks KP{x3}: OK""); System.out.println(""Alice checks KP{x4}: OK""); System.out.println(""""); bob.validateRound1PayloadReceived(aliceRound1Payload); System.out.println(""Bob checks g^{x2}!=1: OK""); System.out.println(""Bob checks KP{x1},: OK""); System.out.println(""Bob checks KP{x2},: OK""); System.out.println(""""); JPAKERound2Payload aliceRound2Payload = alice.createRound2PayloadToSend(); JPAKERound2Payload bobRound2Payload = bob.createRound2PayloadToSend(); System.out.println(""************ Round 2 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""A="" + aliceRound2Payload.getA().toString(16)); System.out.println(""KP{x2*s}={"" + aliceRound2Payload.getKnowledgeProofForX2s()[0].toString(16) + ""},{"" + aliceRound2Payload.getKnowledgeProofForX2s()[1].toString(16) + ""}""); System.out.println(""""); System.out.println(""Bob sends to Alice""); System.out.println(""B="" + bobRound2Payload.getA().toString(16)); System.out.println(""KP{x4*s}={"" + bobRound2Payload.getKnowledgeProofForX2s()[0].toString(16) + ""},{"" + bobRound2Payload.getKnowledgeProofForX2s()[1].toString(16) + ""}""); System.out.println(""""); alice.validateRound2PayloadReceived(bobRound2Payload); System.out.println(""Alice checks KP{x4*s}: OK\n""); bob.validateRound2PayloadReceived(aliceRound2Payload); System.out.println(""Bob checks KP{x2*s}: OK\n""); BigInteger aliceKeyingMaterial = alice.calculateKeyingMaterial(); BigInteger bobKeyingMaterial = bob.calculateKeyingMaterial(); System.out.println(""********* After round 2 ***********""); System.out.println(""Alice computes key material \t K="" + aliceKeyingMaterial.toString(16)); System.out.println(""Bob computes key material \t K="" + bobKeyingMaterial.toString(16)); System.out.println(); BigInteger aliceKey = deriveSessionKey(aliceKeyingMaterial); BigInteger bobKey = deriveSessionKey(bobKeyingMaterial); JPAKERound3Payload aliceRound3Payload = alice.createRound3PayloadToSend(aliceKeyingMaterial); JPAKERound3Payload bobRound3Payload = bob.createRound3PayloadToSend(bobKeyingMaterial); System.out.println(""************ Round 3 **************""); System.out.println(""Alice sends to Bob: ""); System.out.println(""MacTag="" + aliceRound3Payload.getMacTag().toString(16)); System.out.println(""""); System.out.println(""Bob sends to Alice: ""); System.out.println(""MacTag="" + bobRound3Payload.getMacTag().toString(16)); System.out.println(""""); alice.validateRound3PayloadReceived(bobRound3Payload, aliceKeyingMaterial); System.out.println(""Alice checks MacTag: OK\n""); bob.validateRound3PayloadReceived(aliceRound3Payload, bobKeyingMaterial); System.out.println(""Bob checks MacTag: OK\n""); System.out.println(); System.out.println(""MacTags validated, therefore the keying material matches.""); }","void main(String[]args)throws CryptoException{("""");(""""+""""+toString());(""""+(6));(""""+toString());("""".toString());("""");alice("""",random);(Payload);("""");(aliceRound);("""");(""""+(6));(""""+(6));(bobKeyingMaterial);("""");}",5344,210,10,5134,96.25046869141356,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', 'JPAKEPrimeOrderGroup', 'group', '=', 'JPAKEPrimeOrderGroups', '.', 'NIST_3072', ';', 'BigInteger', 'p', '=', 'group', '.', 'getP', '(', ')', ';', 'BigInteger', 'q', '=', 'group', '.', 'getQ', '(', ')', ';', 'BigInteger', 'g', '=', 'group', '.', 'getG', '(', ')', ';', 'String', 'alicePassword', '=', '""password""', ';', 'String', 'bobPassword', '=', '""password""', ';', 'System', '.', 'out', '.', 'println', '(', '""********* Initialization **********""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Public parameters for the cyclic group:""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""p (""', '+', 'p', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'p', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""q (""', '+', 'q', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'q', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g (""', '+', 'p', '.', 'bitLength', '(', ')', '+', '"" bits): ""', '+', 'g', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""p mod q = ""', '+', 'p', '.', 'mod', '(', 'q', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{q} mod p = ""', '+', 'g', '.', 'modPow', '(', 'q', ',', 'p', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""(Secret passwords used by Alice and Bob: ""', '+', '""\\""""', '+', 'alicePassword', '+', '""\\"" and \\""""', '+', 'bobPassword', '+', '""\\"")\\n""', ')', ';', 'Digest', 'digest', '=', 'new', 'SHA256Digest', '(', ')', ';', 'SecureRandom', 'random', '=', 'new', 'SecureRandom', '(', ')', ';', 'JPAKEParticipant', 'alice', '=', 'new', 'JPAKEParticipant', '(', '""alice""', ',', 'alicePassword', '.', 'toCharArray', '(', ')', ',', 'group', ',', 'digest', ',', 'random', ')', ';', 'JPAKEParticipant', 'bob', '=', 'new', 'JPAKEParticipant', '(', '""bob""', ',', 'bobPassword', '.', 'toCharArray', '(', ')', ',', 'group', ',', 'digest', ',', 'random', ')', ';', 'JPAKERound1Payload', 'aliceRound1Payload', '=', 'alice', '.', 'createRound1PayloadToSend', '(', ')', ';', 'JPAKERound1Payload', 'bobRound1Payload', '=', 'bob', '.', 'createRound1PayloadToSend', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 1 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x1}=""', '+', 'aliceRound1Payload', '.', 'getGx1', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x2}=""', '+', 'aliceRound1Payload', '.', 'getGx2', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x1}={""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x2}={""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'aliceRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x3}=""', '+', 'bobRound1Payload', '.', 'getGx1', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""g^{x4}=""', '+', 'bobRound1Payload', '.', 'getGx2', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x3}={""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX1', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x4}={""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""};{""', '+', 'bobRound1Payload', '.', 'getKnowledgeProofForX2', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound1PayloadReceived', '(', 'bobRound1Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks g^{x4}!=1: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x3}: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x4}: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'bob', '.', 'validateRound1PayloadReceived', '(', 'aliceRound1Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks g^{x2}!=1: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x1},: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x2},: OK""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'JPAKERound2Payload', 'aliceRound2Payload', '=', 'alice', '.', 'createRound2PayloadToSend', '(', ')', ';', 'JPAKERound2Payload', 'bobRound2Payload', '=', 'bob', '.', 'createRound2PayloadToSend', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 2 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""A=""', '+', 'aliceRound2Payload', '.', 'getA', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x2*s}={""', '+', 'aliceRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""},{""', '+', 'aliceRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""B=""', '+', 'bobRound2Payload', '.', 'getA', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""KP{x4*s}={""', '+', 'bobRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '0', ']', '.', 'toString', '(', '16', ')', '+', '""},{""', '+', 'bobRound2Payload', '.', 'getKnowledgeProofForX2s', '(', ')', '[', '1', ']', '.', 'toString', '(', '16', ')', '+', '""}""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound2PayloadReceived', '(', 'bobRound2Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks KP{x4*s}: OK\\n""', ')', ';', 'bob', '.', 'validateRound2PayloadReceived', '(', 'aliceRound2Payload', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks KP{x2*s}: OK\\n""', ')', ';', 'BigInteger', 'aliceKeyingMaterial', '=', 'alice', '.', 'calculateKeyingMaterial', '(', ')', ';', 'BigInteger', 'bobKeyingMaterial', '=', 'bob', '.', 'calculateKeyingMaterial', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""********* After round 2 ***********""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice computes key material \\t K=""', '+', 'aliceKeyingMaterial', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob computes key material \\t K=""', '+', 'bobKeyingMaterial', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'BigInteger', 'aliceKey', '=', 'deriveSessionKey', '(', 'aliceKeyingMaterial', ')', ';', 'BigInteger', 'bobKey', '=', 'deriveSessionKey', '(', 'bobKeyingMaterial', ')', ';', 'JPAKERound3Payload', 'aliceRound3Payload', '=', 'alice', '.', 'createRound3PayloadToSend', '(', 'aliceKeyingMaterial', ')', ';', 'JPAKERound3Payload', 'bobRound3Payload', '=', 'bob', '.', 'createRound3PayloadToSend', '(', 'bobKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""************ Round 3 **************""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice sends to Bob: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTag=""', '+', 'aliceRound3Payload', '.', 'getMacTag', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob sends to Alice: ""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTag=""', '+', 'bobRound3Payload', '.', 'getMacTag', '(', ')', '.', 'toString', '(', '16', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""""', ')', ';', 'alice', '.', 'validateRound3PayloadReceived', '(', 'bobRound3Payload', ',', 'aliceKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Alice checks MacTag: OK\\n""', ')', ';', 'bob', '.', 'validateRound3PayloadReceived', '(', 'aliceRound3Payload', ',', 'bobKeyingMaterial', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Bob checks MacTag: OK\\n""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MacTags validated, therefore the keying material matches.""', ')', ';', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', '(', '""""', ')', ';', '(', '""""', '+', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '.', 'toString', '(', ')', ')', ';', '(', '""""', ')', ';', 'alice', '(', '""""', ',', 'random', ')', ';', '(', 'Payload', ')', ';', '(', '""""', ')', ';', '(', 'aliceRound', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', 'bobKeyingMaterial', ')', ';', '(', '""""', ')', ';', '}']",1129,101,6,1028,91.54051647373107
code2seq,METHOD_NAME,dd_token,large,dd_token_large_methods,main_8.txt,0.9829,0.023,"{'n_total': 3639, 'n_valid': 296, 'n_correct': 295}",491.052003,"public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print(""Enter your email address and press enter : ""); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print(""Please enter a valid email address and press enter : ""); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println(""Unable to get the OAuth token. Please check the config.properties file.""); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser(""tom"", ""tom@mobx.com"", true); if (!status) { System.out.println(""Unable to create the admin user. Please check the config.properties file.""); System.exit(0); } status = UserOperations.changePassword(""tom"", ""tomemm""); if (!status) { System.out.println(""Unable to change the password of the admin user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createUser(""kim"", email, false); if (!status) { System.out.println(""Unable to create the emm user Kim. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.changePassword(""kim"", ""kimemm""); if (!status) { System.out.println(""Unable to change the password of the emm user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { ""kim"" }); if (!status) { System.out.println(""Unable to create the emm user role. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""android-passcode-policy1"", Constants.DeviceType.ANDROID); if (!status) { System.out.println(""Unable to create the android passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""windows-passcode-policy1"", Constants.DeviceType.WINDOWS); if (!status) { System.out.println(""Unable to create the windows passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""ios-passcode-policy1"", Constants.DeviceType.IOS); if (!status) { System.out.println(""Unable to create the ios passcode policy. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, ""catalog.apk"", ""application/vnd.android.package-archive""); if (application == null) { System.out.println(""Unable to upload the sample android application. Terminating the EMM QSG now.""); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println(""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""Catalog"", application, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, ""PNDemo.ipa"", ""application/octet-stream""); iOSApplication.setVersion(""1.0.0""); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println(""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""WSO2Con"", iOSApplication, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } }","void main(String[]args){if((email)){{("""");}((email));}getOAuthToken();if(token){("""");(0);}createUser("""","""",true);if(status){("""");(0);}("""");if(status){("""");(0);}status("""",false);if(status){System();}("""");if(status){("""");}(new String[]{""""});if(status){("""");(0);}("""".ANDROID);if(status){("""");}createPasscodePolicy("""",Constants);if(status){("""");}MobileApplication(Constants,"""");if(application){("""");}uploadAssets();(application="""");uploadAssets();if(iOSApplication){}addApplication("""",true);if(status){("""");(0);}}",3615,509,10,3106,86.15811373092926,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'boolean', 'status', '=', 'false', ';', 'Scanner', 'scanner', '=', 'new', 'Scanner', '(', 'System', '.', 'in', ')', ';', 'System', '.', 'out', '.', 'print', '(', '""Enter your email address and press enter : ""', ')', ';', 'String', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', 'if', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', '{', 'do', '{', 'System', '.', 'out', '.', 'print', '(', '""Please enter a valid email address and press enter : ""', ')', ';', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', '}', 'while', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', ';', '}', 'String', 'token', '=', 'QSGUtils', '.', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to get the OAuth token. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'HTTPInvoker', '.', 'oAuthToken', '=', 'token', ';', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""tom""', ',', '""tom@mobx.com""', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the admin user. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""tom""', ',', '""tomemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the admin user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""kim""', ',', 'email', ',', 'false', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user Kim. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""kim""', ',', '""kimemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the emm user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createRole', '(', 'Constants', '.', 'EMM_USER_ROLE', ',', 'new', 'String', '[', ']', '{', '""kim""', '}', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user role. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""android-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the android passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""windows-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'WINDOWS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the windows passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""ios-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'IOS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the ios passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'application', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', '""catalog.apk""', ',', '""application/vnd.android.package-archive""', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'application', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', 'application', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""Catalog""', ',', 'application', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'iOSApplication', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', '""PNDemo.ipa""', ',', '""application/octet-stream""', ')', ';', 'iOSApplication', '.', 'setVersion', '(', '""1.0.0""', ')', ';', 'iOSApplication', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', 'iOSApplication', ')', ';', 'if', '(', 'iOSApplication', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""WSO2Con""', ',', 'iOSApplication', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'email', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'email', ')', ')', ';', '}', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'createUser', '(', '""""', ',', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'status', '(', '""""', ',', 'false', ')', ';', 'if', '(', 'status', ')', '{', 'System', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', '.', 'ANDROID', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'createPasscodePolicy', '(', '""""', ',', 'Constants', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'MobileApplication', '(', 'Constants', ',', '""""', ')', ';', 'if', '(', 'application', ')', '{', '(', '""""', ')', ';', '}', 'uploadAssets', '(', ')', ';', '(', 'application', '=', '""""', ')', ';', 'uploadAssets', '(', ')', ';', 'if', '(', 'iOSApplication', ')', '{', '}', 'addApplication', '(', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '}']",641,235,6,406,63.93700787401575
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 309, 'n_valid': 73, 'n_correct': 24}",111.896184,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },d onCreate(e a){super.onCreat();(g);},134,37,14,97,80.83333333333333,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'a', ')', '{', 'super', '.', 'onCreat', '(', ')', ';', '(', 'g', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 483, 'n_valid': 58, 'n_correct': 53}",99.402664,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c r toString(){if(l)("""");("""");(o);("""");(b);}",211,45,14,166,84.26395939086294,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'r', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 306, 'n_valid': 39, 'n_correct': 30}",68.095906,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","t toString(){if(l)return""""+e;}",135,30,14,105,86.77685950413223,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['t', 'toString', '(', ')', '{', 'if', '(', 'l', ')', 'return', '""""', '+', 'e', ';', '}']",29,15,6,14,60.86956521739131
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 392, 'n_valid': 68, 'n_correct': 31}",103.499443,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b o){if(k){y.equal(((k)).s);}return false;},146,52,12,94,70.1492537313433,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'o', ')', '{', 'if', '(', 'k', ')', '{', 'y', '.', 'equal', '(', '(', '(', 'k', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 392, 'n_valid': 68, 'n_correct': 31}",106.110778,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b o){if(k){y.equal(((k)).s);}return false;},146,52,12,94,70.1492537313433,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'o', ')', '{', 'if', '(', 'k', ')', '{', 'y', '.', 'equal', '(', '(', '(', 'k', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 347, 'n_valid': 70, 'n_correct': 33}",112.624054,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },d onCreate(e e){s.onCreat();(t);},144,33,14,111,85.38461538461539,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'e', ')', '{', 's', '.', 'onCreat', '(', ')', ';', '(', 't', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 322, 'n_valid': 57, 'n_correct': 30}",92.50056,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","t toString(){d();("""");rn(s.to);}",242,32,14,210,92.10526315789474,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['t', 'toString', '(', ')', '{', 'd', '(', ')', ';', '(', '""""', ')', ';', 'rn', '(', 's', '.', 'to', ')', ';', '}']",66,21,6,45,75.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_2.txt,0.9959,0.0046,"{'n_total': 592, 'n_valid': 102, 'n_correct': 51}",159.424143,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",n equals(ject o){if(s){}r=(e)o;return s()&s()&&equals(e);},309,58,12,251,84.51178451178451,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['n', 'equals', '(', 'ject', 'o', ')', '{', 'if', '(', 's', ')', '{', '}', 'r', '=', '(', 'e', ')', 'o', ';', 'return', 's', '(', ')', '&', 's', '(', ')', '&&', 'equals', '(', 'e', ')', ';', '}']",83,35,6,48,62.33766233766234
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 505, 'n_valid': 124, 'n_correct': 31}",183.718681,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(t obj){if(o){ls(((y)).l);}return false;},141,55,12,86,66.66666666666666,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 't', 'obj', ')', '{', 'if', '(', 'o', ')', '{', 'ls', '(', '(', '(', 'y', ')', ')', '.', 'l', ')', ';', '}', 'return', 'false', ';', '}']",37,28,6,9,29.03225806451613
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 249, 'n_valid': 35, 'n_correct': 17}",58.737576,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },@O v init()throws n{super.init();t();},99,38,10,61,68.53932584269663,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['@', 'O', 'v', 'init', '(', ')', 'throws', 'n', '{', 'super', '.', 'init', '(', ')', ';', 't', '(', ')', ';', '}']",23,20,6,3,17.647058823529413
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_2.txt,0.9479,0.0671,"{'n_total': 537, 'n_valid': 106, 'n_correct': 37}",166.957794,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","g toString(){r(""="");t();for(0;t;){ln(getCooString());}rg();}",270,60,14,210,82.03125,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'r', '(', '""=""', ')', ';', 't', '(', ')', ';', 'for', '(', '0', ';', 't', ';', ')', '{', 'ln', '(', 'getCooString', '(', ')', ')', ';', '}', 'rg', '(', ')', ';', '}']",77,35,6,42,59.15492957746479
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 271, 'n_valid': 55, 'n_correct': 24}",87.839555,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },d onCreate(B e){super.onCreat();},172,33,14,139,87.9746835443038,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['d', 'onCreate', '(', 'B', 'e', ')', '{', 'super', '.', 'onCreat', '(', ')', ';', '}']",39,14,6,25,75.75757575757575
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 293, 'n_valid': 44, 'n_correct': 24}",76.990359,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","@O v onCreate(){i(L,""onCreat"");(0);}",215,36,14,179,89.05472636815921,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['@', 'O', 'v', 'onCreate', '(', ')', '{', 'i', '(', 'L', ',', '""onCreat""', ')', ';', '(', '0', ')', ';', '}']",52,19,6,33,71.73913043478261
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 501, 'n_valid': 123, 'n_correct': 28}",185.53273,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",tring toString(){if(nul==buff){return ll;}if(t==0){}return Str(this);},150,70,14,80,58.82352941176471,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['tring', 'toString', '(', ')', '{', 'if', '(', 'nul', '==', 'buff', ')', '{', 'return', 'll', ';', '}', 'if', '(', 't', '==', '0', ')', '{', '}', 'return', 'Str', '(', 'this', ')', ';', '}']",42,31,6,11,30.55555555555556
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 449, 'n_valid': 109, 'n_correct': 29}",162.354921,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },lean equals(ect obj){if(o){return ths();}return false;},136,55,12,81,65.32258064516128,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['lean', 'equals', '(', 'ect', 'obj', ')', '{', 'if', '(', 'o', ')', '{', 'return', 'ths', '(', ')', ';', '}', 'return', 'false', ';', '}']",35,22,6,13,44.82758620689656
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 390, 'n_valid': 97, 'n_correct': 28}",145.294797,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },n equals(O o){if((o))return false.equals();},186,44,12,142,81.60919540229885,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['n', 'equals', '(', 'O', 'o', ')', '{', 'if', '(', '(', 'o', ')', ')', 'return', 'false', '.', 'equals', '(', ')', ';', '}']",50,21,6,29,65.9090909090909
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_10.txt,0.999,0.0012,"{'n_total': 392, 'n_valid': 66, 'n_correct': 32}",103.011211,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws E{if(ED){(""s"");}set();}",181,42,11,139,81.76470588235294,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'ED', ')', '{', '(', '""s""', ')', ';', '}', 'set', '(', ')', ';', '}']",35,22,6,13,44.82758620689656
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_10.txt,0.9948,0.0059,"{'n_total': 526, 'n_valid': 76, 'n_correct': 35}",127.658948,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },n equals(ject r){if(o instanceof k){a=(k)c==l;}false;},247,54,12,193,82.12765957446808,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'ject', 'r', ')', '{', 'if', '(', 'o', 'instanceof', 'k', ')', '{', 'a', '=', '(', 'k', ')', 'c', '==', 'l', ';', '}', 'false', ';', '}']",71,27,6,44,67.6923076923077
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 229, 'n_valid': 50, 'n_correct': 15}",81.54802,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }",g toString(){Str(toString());},132,30,14,102,86.4406779661017,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'Str', '(', 'toString', '(', ')', ')', ';', '}']",34,13,6,21,75.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 289, 'n_valid': 71, 'n_correct': 13}",102.94683,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },public booean onCreate(){DbHer(contxt);return true;},175,52,14,123,76.3975155279503,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['public', 'booean', 'onCreate', '(', ')', '{', 'DbHer', '(', 'contxt', ')', ';', 'return', 'true', ';', '}']",35,15,6,20,68.96551724137932
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 701, 'n_valid': 198, 'n_correct': 50}",292.310747,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",@c boolean equals(b obj){r();if(mFil())return(e)((f()));},190,57,12,133,74.71910112359551,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['@', 'c', 'boolean', 'equals', '(', 'b', 'obj', ')', '{', 'r', '(', ')', ';', 'if', '(', 'mFil', '(', ')', ')', 'return', '(', 'e', ')', '(', '(', 'f', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 511, 'n_valid': 56, 'n_correct': 42}",90.310682,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{(0);}catch(t e){}ren();}},164,46,9,118,76.12903225806451,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 't', 'e', ')', '{', '}', 'ren', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 287, 'n_valid': 50, 'n_correct': 22}",77.065326,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",d execute()throws n{r.execute();k();},165,37,13,128,84.21052631578947,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'n', '{', 'r', '.', 'execute', '(', ')', ';', 'k', '(', ')', ';', '}']",44,18,6,26,68.42105263157895
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 411, 'n_valid': 133, 'n_correct': 16}",186.285283,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },@Override protected void setUp()throws Exception{xt().eCoeReolver();},114,69,11,45,43.68932038834952,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'xt', '(', ')', '.', 'eCoeReolver', '(', ')', ';', '}']",27,19,6,8,38.095238095238095
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 456, 'n_valid': 60, 'n_correct': 38}",94.473289,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","d main(S[]args)throws E{(("""".g));(("""".s()));}",179,45,10,134,79.28994082840237,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['d', 'main', '(', 'S', '[', ']', 'args', ')', 'throws', 'E', '{', '(', '(', '""""', '.', 'g', ')', ')', ';', '(', '(', '""""', '.', 's', '(', ')', ')', ')', ';', '}']",50,30,6,20,45.45454545454545
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 407, 'n_valid': 50, 'n_correct': 30}",82.21004,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },t main(S[]args){try{(I());}catch(E e){}e();},154,44,10,110,76.38888888888889,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'try', '{', '(', 'I', '(', ')', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '}', 'e', '(', ')', ';', '}']",38,30,6,8,25.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 337, 'n_valid': 64, 'n_correct': 31}",97.169314,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(l){throw new N("""");}}",109,32,9,77,77.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'l', ')', '{', 'throw', 'new', 'N', '(', '""""', ')', ';', '}', '}']",25,19,6,6,31.57894736842105
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 268, 'n_valid': 62, 'n_correct': 29}",93.494549,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },@c void setUp(){r=ne(es);},107,26,11,81,84.375,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['@', 'c', 'void', 'setUp', '(', ')', '{', 'r', '=', 'ne', '(', 'es', ')', ';', '}']",26,15,6,11,55.00000000000001
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 340, 'n_valid': 57, 'n_correct': 23}",84.588479,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@Override public void run(){try{t();t();}catch(n x){}},127,54,9,73,61.86440677966102,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 't', '(', ')', ';', 't', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', '}', '}']",33,27,6,6,22.22222222222222
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 385, 'n_valid': 45, 'n_correct': 43}",73.280247,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","i get(p<t>t,t e){(k);if(l){}}",166,29,9,137,87.26114649681529,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['i', 'get', '(', 'p', '<', 't', '>', 't', ',', 't', 'e', ')', '{', '(', 'k', ')', ';', 'if', '(', 'l', ')', '{', '}', '}']",46,24,6,22,55.00000000000001
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 355, 'n_valid': 53, 'n_correct': 38}",81.971777,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","d main(g args)throws n{(B);("""");w();}",251,37,10,214,88.79668049792531,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'n', '{', '(', 'B', ')', ';', '(', '""""', ')', ';', 'w', '(', ')', ';', '}']",53,22,6,31,65.95744680851064
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 255, 'n_valid': 38, 'n_correct': 25}",58.343334,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },d main(n[]s)throws x{Sn();},132,27,10,105,86.0655737704918,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['d', 'main', '(', 'n', '[', ']', 's', ')', 'throws', 'x', '{', 'Sn', '(', ')', ';', '}']",34,16,6,18,64.28571428571429
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 261, 'n_valid': 42, 'n_correct': 21}",67.008562,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }",@Ov void setUp()throws E{Up();(g);},122,35,11,87,78.37837837837837,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['@', 'Ov', 'void', 'setUp', '(', ')', 'throws', 'E', '{', 'Up', '(', ')', ';', '(', 'g', ')', ';', '}']",31,18,6,13,52.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_5.txt,0.408,1.0307,"{'n_total': 688, 'n_valid': 178, 'n_correct': 54}",266.704708,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","i execute(T tuple){("""");m=(a)d(""mtt"",(D));collector.ck(le);}",305,60,13,245,83.9041095890411,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['i', 'execute', '(', 'T', 'tuple', ')', '{', '(', '""""', ')', ';', 'm', '=', '(', 'a', ')', 'd', '(', '""mtt""', ',', '(', 'D', ')', ')', ';', 'collector', '.', 'ck', '(', 'le', ')', ';', '}']",70,33,6,37,57.8125
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 337, 'n_valid': 50, 'n_correct': 32}",76.695935,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{p();}catch(E x){}(0);},121,37,9,84,75.0,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'p', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 410, 'n_valid': 57, 'n_correct': 33}",87.656481,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","public void run(){try{}catch(T t){(""""+e);}}",149,43,9,106,75.71428571428571,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['public', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'T', 't', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '}']",36,23,6,13,43.333333333333336
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 393, 'n_valid': 131, 'n_correct': 19}",195.949326,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override public int hashCode(){it rsrs;},174,41,14,133,83.125,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'it', 'rsrs', ';', '}']",45,12,6,33,84.61538461538461
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 332, 'n_valid': 64, 'n_correct': 26}",99.549647,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }",d execute()throws n{r.execute;exe(g().o);},123,42,13,81,73.63636363636363,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'n', '{', 'r', '.', 'execute', ';', 'exe', '(', 'g', '(', ')', '.', 'o', ')', ';', '}']",29,21,6,8,34.78260869565217
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 271, 'n_valid': 48, 'n_correct': 17}",74.710686,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","d setUp()throws E{("""");super.setUp();}",149,38,11,111,80.43478260869566,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', '(', '""""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']",26,18,6,8,40.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_1.txt,0.9838,0.0201,"{'n_total': 554, 'n_valid': 75, 'n_correct': 63}",114.392354,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","t main(g[]args){("""");("""");(""""+r());((""""));}",579,43,10,536,94.20035149384886,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', 'r', '(', ')', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",131,32,6,99,79.2
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 586, 'n_valid': 121, 'n_correct': 59}",175.745865,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(g t,imeUt t)throws I{if(((ut))){(""""+eo);}e;}",248,50,9,198,82.84518828451883,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'g', 't', ',', 'imeUt', 't', ')', 'throws', 'I', '{', 'if', '(', '(', '(', 'ut', ')', ')', ')', '{', '(', '""""', '+', 'eo', ')', ';', '}', 'e', ';', '}']",51,31,6,20,44.44444444444444
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 483, 'n_valid': 108, 'n_correct': 39}",167.645196,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){final t t=t+((sl)?0:s);r s;},262,43,14,219,88.30645161290323,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'final', 't', 't', '=', 't', '+', '(', '(', 'sl', ')', '?', '0', ':', 's', ')', ';', 'r', 's', ';', '}']",75,25,6,50,72.46376811594203
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 409, 'n_valid': 56, 'n_correct': 45}",88.101335,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;;i++){if(o){}}run();},171,34,9,137,84.5679012345679,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'o', ')', '{', '}', '}', 'run', '(', ')', ';', '}']",62,25,6,37,66.07142857142857
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 337, 'n_valid': 50, 'n_correct': 32}",77.171301,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{p();}catch(E x){}(0);},121,37,9,84,75.0,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'p', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 282, 'n_valid': 61, 'n_correct': 19}",93.625972,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }",d execute()throws u{super.execute(l());},140,40,13,100,78.74015748031496,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'u', '{', 'super', '.', 'execute', '(', 'l', '(', ')', ')', ';', '}']",29,17,6,12,52.17391304347826
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 331, 'n_valid': 68, 'n_correct': 24}",107.606101,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },d setUp()throws E{supe.setUp();T();},182,36,11,146,85.38011695906432,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'supe', '.', 'setUp', '(', ')', ';', 'T', '(', ')', ';', '}']",38,18,6,20,62.5
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 279, 'n_valid': 59, 'n_correct': 28}",89.182591,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },@O void init(t en){init();s();},193,31,10,162,88.52459016393442,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', 't', 'en', ')', '{', 'init', '(', ')', ';', 's', '(', ')', ';', '}']",49,18,6,31,72.09302325581395
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 227, 'n_valid': 32, 'n_correct': 22}",52.49234,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },t main(g[]rgs)throws x{},147,24,10,123,89.78102189781022,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'rgs', ')', 'throws', 'x', '{', '}']",32,12,6,20,76.92307692307693
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 296, 'n_valid': 54, 'n_correct': 27}",81.776146,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","d main(Sg[]r){y(C,"""");Main(ar);}",136,32,10,104,82.53968253968253,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['d', 'main', '(', 'Sg', '[', ']', 'r', ')', '{', 'y', '(', 'C', ',', '""""', ')', ';', 'Main', '(', 'ar', ')', ';', '}']",30,22,6,8,33.33333333333333
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 427, 'n_valid': 57, 'n_correct': 40}",86.365407,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","d main(Sg[]args)throws E{(n(V,"""")).o("""");}",273,42,10,231,87.83269961977186,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['d', 'main', '(', 'Sg', '[', ']', 'args', ')', 'throws', 'E', '{', '(', 'n', '(', 'V', ',', '""""', ')', ')', '.', 'o', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_7.txt,0.4525,0.8319,"{'n_total': 625, 'n_valid': 129, 'n_correct': 56}",186.875083,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getDefaultInstance(); final PostgresConfig config = new PostgresConfig(PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password"")); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","@Before public d setUp()throws n{P(n("""",""""));t("""",d());(u);}",854,60,11,794,94.18742586002372,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['@', 'Before', 'public', 'd', 'setUp', '(', ')', 'throws', 'n', '{', 'P', '(', 'n', '(', '""""', ',', '""""', ')', ')', ';', 't', '(', '""""', ',', 'd', '(', ')', ')', ';', '(', 'u', ')', ';', '}']",179,34,6,145,83.8150289017341
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 393, 'n_valid': 97, 'n_correct': 21}",153.841625,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","@v v execute()throws i{super.execute;("""");}",98,43,13,55,64.70588235294117,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['@', 'v', 'v', 'execute', '(', ')', 'throws', 'i', '{', 'super', '.', 'execute', ';', '(', '""""', ')', ';', '}']",22,18,6,4,25.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 408, 'n_valid': 93, 'n_correct': 29}",134.325631,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },d run(){try{d.slee(hoe);}catch(Exception x){x.race();}},162,55,9,107,69.93464052287581,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'd', '.', 'slee', '(', 'hoe', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'race', '(', ')', ';', '}', '}']",44,29,6,15,39.47368421052632
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 374, 'n_valid': 52, 'n_correct': 39}",87.798407,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },@v int hashCode(){e();t=((l)?0:e());},239,37,14,202,89.77777777777777,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'v', 'int', 'hashCode', '(', ')', '{', 'e', '(', ')', ';', 't', '=', '(', '(', 'l', ')', '?', '0', ':', 'e', '(', ')', ')', ';', '}']",66,26,6,40,66.66666666666666
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 278, 'n_valid': 98, 'n_correct': 20}",139.624144,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }","d run(){d();awLayout(Widow,s);}",150,31,9,119,84.39716312056737,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['d', 'run', '(', ')', '{', 'd', '(', ')', ';', 'awLayout', '(', 'Widow', ',', 's', ')', ';', '}']",33,17,6,16,59.25925925925925
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 304, 'n_valid': 61, 'n_correct': 28}",98.899856,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },t hashCode(){((l)?0:e.hashCod());},154,34,14,120,85.71428571428571,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', '(', '(', 'l', ')', '?', '0', ':', 'e', '.', 'hashCod', '(', ')', ')', ';', '}']",45,20,6,25,64.1025641025641
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 483, 'n_valid': 58, 'n_correct': 53}",98.434967,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c r toString(){if(l)("""");("""");(o);("""");(b);}",211,45,14,166,84.26395939086294,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'r', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 511, 'n_valid': 56, 'n_correct': 42}",90.736628,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{(0);}catch(t e){}ren();}},164,46,9,118,76.12903225806451,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 't', 'e', ')', '{', '}', 'ren', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 249, 'n_valid': 64, 'n_correct': 10}",97.149254,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@Override public int hashCode(){int r;return t;},92,48,14,44,56.41025641025641,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'r', ';', 'return', 't', ';', '}']",25,15,6,10,52.63157894736842
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 357, 'n_valid': 61, 'n_correct': 41}",98.836661,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },@c int hashCode(){e=((l)?0:a);},220,31,14,189,91.747572815534,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'c', 'int', 'hashCode', '(', ')', '{', 'e', '=', '(', '(', 'l', ')', '?', '0', ':', 'a', ')', ';', '}']",67,20,6,47,77.04918032786885
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 495, 'n_valid': 79, 'n_correct': 45}",124.633639,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@Before d setUp()throws n{(new l[]{});(C);n();},317,47,11,270,88.23529411764706,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'Before', 'd', 'setUp', '(', ')', 'throws', 'n', '{', '(', 'new', 'l', '[', ']', '{', '}', ')', ';', '(', 'C', ')', ';', 'n', '(', ')', ';', '}']",72,27,6,45,68.18181818181817
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 286, 'n_valid': 41, 'n_correct': 27}",67.882161,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },@c d init(f c)throws S{r.init(g);},107,34,10,73,75.25773195876289,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['@', 'c', 'd', 'init', '(', 'f', 'c', ')', 'throws', 'S', '{', 'r', '.', 'init', '(', 'g', ')', ';', '}']",24,19,6,5,27.77777777777778
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 533, 'n_valid': 125, 'n_correct': 48}",180.208163,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },d init()throws n{e(InitPr()).ea=le((D));},344,41,10,303,90.71856287425148,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['d', 'init', '(', ')', 'throws', 'n', '{', 'e', '(', 'InitPr', '(', ')', ')', '.', 'ea', '=', 'le', '(', '(', 'D', ')', ')', ';', '}']",71,24,6,47,72.3076923076923
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 477, 'n_valid': 71, 'n_correct': 41}",110.094582,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","d setUp()throws E{if(D){("""");}supe.setUp();t();}",320,48,11,272,88.02588996763754,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'D', ')', '{', '(', '""""', ')', ';', '}', 'supe', '.', 'setUp', '(', ')', ';', 't', '(', ')', ';', '}']",61,28,6,33,60.0
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 249, 'n_valid': 64, 'n_correct': 10}",96.495502,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@Override public int hashCode(){int r;return t;},92,48,14,44,56.41025641025641,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'r', ';', 'return', 't', ';', '}']",25,15,6,10,52.63157894736842
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 409, 'n_valid': 56, 'n_correct': 45}",88.498394,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;;i++){if(o){}}run();},171,34,9,137,84.5679012345679,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'o', ')', '{', '}', '}', 'run', '(', ')', ';', '}']",62,25,6,37,66.07142857142857
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 323, 'n_valid': 59, 'n_correct': 25}",88.927136,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","d execute()throws B{super.execute();(("""").o);}",122,46,13,76,69.72477064220183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,22,6,7,30.434782608695656
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 334, 'n_valid': 44, 'n_correct': 27}",70.783411,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","@c d execute()throws B{super.execute();(("""").o);}",126,49,13,77,68.14159292035397,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 275, 'n_valid': 67, 'n_correct': 22}",101.448892,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },public i hashCode(){me.hashCoe();},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['public', 'i', 'hashCode', '(', ')', '{', 'me', '.', 'hashCoe', '(', ')', ';', '}']",45,13,6,32,82.05128205128204
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 267, 'n_valid': 48, 'n_correct': 30}",75.288567,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },r get(e k){En e=(l)?n:e;},114,25,9,89,84.76190476190476,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['r', 'get', '(', 'e', 'k', ')', '{', 'En', 'e', '=', '(', 'l', ')', '?', 'n', ':', 'e', ';', '}']",30,19,6,11,45.83333333333333
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 613, 'n_valid': 71, 'n_correct': 55}",112.117744,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","t main(g[]s){try{l(""Main"",s);e();}catch(e e){l(E,"""");}}",295,55,10,240,84.21052631578947,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['t', 'main', '(', 'g', '[', ']', 's', ')', '{', 'try', '{', 'l', '(', '""Main""', ',', 's', ')', ';', 'e', '(', ')', ';', '}', 'catch', '(', 'e', 'e', ')', '{', 'l', '(', 'E', ',', '""""', ')', ';', '}', '}']",78,38,6,40,55.55555555555556
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 239, 'n_valid': 35, 'n_correct': 21}",55.025972,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",d main(g[]args)throws E{n();},124,29,10,95,83.33333333333334,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'n', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 334, 'n_valid': 44, 'n_correct': 27}",70.809617,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","@c d execute()throws B{super.execute();(("""").o);}",126,49,13,77,68.14159292035397,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 487, 'n_valid': 78, 'n_correct': 50}",131.674059,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },t hashCode(){f=((l)?0:c);((u)hashC());},236,39,14,197,88.73873873873875,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', 'f', '=', '(', '(', 'l', ')', '?', '0', ':', 'c', ')', ';', '(', '(', 'u', ')', 'hashC', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 291, 'n_valid': 51, 'n_correct': 34}",83.918259,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@c int hashCode(){(d?1:0);},213,27,14,186,93.46733668341707,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'c', 'int', 'hashCode', '(', ')', '{', '(', 'd', '?', '1', ':', '0', ')', ';', '}']",59,16,6,43,81.13207547169812
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_9.txt,0.9979,0.0026,"{'n_total': 406, 'n_valid': 91, 'n_correct': 35}",134.779865,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(c o){if(o){}that=(i)&&(d);},268,42,12,226,88.28125,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'c', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'that', '=', '(', 'i', ')', '&&', '(', 'd', ')', ';', '}']",85,24,6,61,77.21518987341773
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 495, 'n_valid': 72, 'n_correct': 35}",115.575136,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },n equals(t j){if(o instanceof y){equals(((N)));fe;}},152,52,12,100,71.42857142857143,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['n', 'equals', '(', 't', 'j', ')', '{', 'if', '(', 'o', 'instanceof', 'y', ')', '{', 'equals', '(', '(', '(', 'N', ')', ')', ')', ';', 'fe', ';', '}', '}']",40,27,6,13,38.23529411764706
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 472, 'n_valid': 97, 'n_correct': 51}",146.667941,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },d onCreate(d s){r.onCreat();(m());(l);},319,39,14,280,91.8032786885246,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['d', 'onCreate', '(', 'd', 's', ')', '{', 'r', '.', 'onCreat', '(', ')', ';', '(', 'm', '(', ')', ')', ';', '(', 'l', ')', ';', '}']",61,24,6,37,67.27272727272727
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 286, 'n_valid': 49, 'n_correct': 22}",80.544323,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },d onCreate(){super.onCreat;if(ll){e();}},171,40,14,131,83.43949044585987,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['d', 'onCreate', '(', ')', '{', 'super', '.', 'onCreat', ';', 'if', '(', 'll', ')', '{', 'e', '(', ')', ';', '}', '}']",35,20,6,15,51.72413793103448
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 332, 'n_valid': 79, 'n_correct': 28}",120.359335,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },d onCreate(u s){super.onCreate();w();},140,38,14,102,80.95238095238095,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['d', 'onCreate', '(', 'u', 's', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'w', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 418, 'n_valid': 70, 'n_correct': 37}",117.390109,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },g toString(){for(e n:r){d(String());}r;},165,40,14,125,82.78145695364239,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'for', '(', 'e', 'n', ':', 'r', ')', '{', 'd', '(', 'String', '(', ')', ')', ';', '}', 'r', ';', '}']",44,24,6,20,52.63157894736842
code2seq,METHOD_NAME,dd_char,freq,dd_char_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 501, 'n_valid': 123, 'n_correct': 28}",183.215329,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",tring toString(){if(nul==buff){return ll;}if(t==0){}return Str(this);},150,70,14,80,58.82352941176471,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['tring', 'toString', '(', ')', '{', 'if', '(', 'nul', '==', 'buff', ')', '{', 'return', 'll', ';', '}', 'if', '(', 't', '==', '0', ')', '{', '}', 'return', 'Str', '(', 'this', ')', ';', '}']",42,31,6,11,30.55555555555556
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,deleteContainerIfEmpty_1.txt,0.4758,1.6436,"{'n_total': 572, 'n_valid': 179, 'n_correct': 24}",267.107974,private void deleteContainerIfEmpty(String container) { if (deleteEmptyContainers) { getBlobStore().deleteContainerIfEmpty(container); } },id deleteContainerIfEmpty(ring container){if(le){Btr().deleteContainerIfEmpty(i);}},138,83,28,55,50.0,"['private', 'void', 'deleteContainerIfEmpty', '(', 'String', 'container', ')', '{', 'if', '(', 'deleteEmptyContainers', ')', '{', 'getBlobStore', '(', ')', '.', 'deleteContainerIfEmpty', '(', 'container', ')', ';', '}', '}']","['id', 'deleteContainerIfEmpty', '(', 'ring', 'container', ')', '{', 'if', '(', 'le', ')', '{', 'Btr', '(', ')', '.', 'deleteContainerIfEmpty', '(', 'i', ')', ';', '}', '}']",24,23,6,1,5.555555555555555
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,deleteObsoleteFiles_1.txt,0.1754,3.9735,"{'n_total': 846, 'n_valid': 230, 'n_correct': 58}",361.077985,"void deleteObsoleteFiles() throws IOException { final long rrdDiskUsage = CounterStorage.deleteObsoleteCounterFiles(getApplication()); final long serGzDiskUsage = JRobin.deleteObsoleteJRobinFiles(getApplication()); diskUsage = rrdDiskUsage + serGzDiskUsage; LOG.debug(""Obsolete files deleted. JavaMelody disk usage: "" + diskUsage / 1024 + "" KB""); }","d deleteObsoleteFiles()throws I{g=e.deleteObsoleteFiles();(""""+"""");}",348,67,25,281,86.9969040247678,"['void', 'deleteObsoleteFiles', '(', ')', 'throws', 'IOException', '{', 'final', 'long', 'rrdDiskUsage', '=', 'CounterStorage', '.', 'deleteObsoleteCounterFiles', '(', 'getApplication', '(', ')', ')', ';', 'final', 'long', 'serGzDiskUsage', '=', 'JRobin', '.', 'deleteObsoleteJRobinFiles', '(', 'getApplication', '(', ')', ')', ';', 'diskUsage', '=', 'rrdDiskUsage', '+', 'serGzDiskUsage', ';', 'LOG', '.', 'debug', '(', '""Obsolete files deleted. JavaMelody disk usage: ""', '+', 'diskUsage', '/', '1024', '+', '"" KB""', ')', ';', '}']","['d', 'deleteObsoleteFiles', '(', ')', 'throws', 'I', '{', 'g', '=', 'e', '.', 'deleteObsoleteFiles', '(', ')', ';', '(', '""""', '+', '""""', ')', ';', '}']",53,22,6,31,65.95744680851064
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getOnAddedCnt_1.txt,0.4794,1.8054,"{'n_total': 160, 'n_valid': 38, 'n_correct': 6}",58.355315,public int getOnAddedCnt() { return onAddedCnt; },t getOnAddedCnt(){return onAddedCnt;},49,37,19,12,40.0,"['public', 'int', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}']","['t', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}']",10,9,6,1,25.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,newInitializerBuilder_1.txt,0.348,4.8937,"{'n_total': 515, 'n_valid': 173, 'n_correct': 12}",252.651359,public static InitializerBuilder newInitializerBuilder(Context context) { return new InitializerBuilder(context); },InitializerBuilder newInitializerBuilder(Conext cext){return new InitializerBuilder(n);},115,88,27,27,30.681818181818183,"['public', 'static', 'InitializerBuilder', 'newInitializerBuilder', '(', 'Context', 'context', ')', '{', 'return', 'new', 'InitializerBuilder', '(', 'context', ')', ';', '}']","['InitializerBuilder', 'newInitializerBuilder', '(', 'Conext', 'cext', ')', '{', 'return', 'new', 'InitializerBuilder', '(', 'n', ')', ';', '}']",17,15,6,2,18.181818181818183
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setIgnoreKey_1.txt,0.4474,1.9016,"{'n_total': 512, 'n_valid': 160, 'n_correct': 30}",237.423347,"public Builder setIgnoreKey(boolean ignoreKey, Set<String> ignoreKeyTopics) { this.ignoreKey = ignoreKey; this.ignoreKeyTopics = ignoreKeyTopics; return this; }","l setIgnoreKey(a ignoreKey,t<g>ignoreKT){pics;return this;}",160,59,18,101,71.12676056338029,"['public', 'Builder', 'setIgnoreKey', '(', 'boolean', 'ignoreKey', ',', 'Set', '<', 'String', '>', 'ignoreKeyTopics', ')', '{', 'this', '.', 'ignoreKey', '=', 'ignoreKey', ';', 'this', '.', 'ignoreKeyTopics', '=', 'ignoreKeyTopics', ';', 'return', 'this', ';', '}']","['l', 'setIgnoreKey', '(', 'a', 'ignoreKey', ',', 't', '<', 'g', '>', 'ignoreKT', ')', '{', 'pics', ';', 'return', 'this', ';', '}']",30,19,6,11,45.83333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getComputedStyles_1.txt,0.4892,1.164,"{'n_total': 500, 'n_valid': 114, 'n_correct': 36}",182.978669,"@Override public void getComputedStyles(E element, ComputedStyleAccumulator accumulator) { mSuper.getComputedStyles(element, accumulator); onGetComputedStyles(element, accumulator); }","v getComputedStyles(E e,C c){s();GeComputedStyles();}",183,53,23,130,81.25,"['@', 'Override', 'public', 'void', 'getComputedStyles', '(', 'E', 'element', ',', 'ComputedStyleAccumulator', 'accumulator', ')', '{', 'mSuper', '.', 'getComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', 'onGetComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', '}']","['v', 'getComputedStyles', '(', 'E', 'e', ',', 'C', 'c', ')', '{', 's', '(', ')', ';', 'GeComputedStyles', '(', ')', ';', '}']",30,19,6,11,45.83333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,odexOnly_1.txt,0.4431,0.9001,"{'n_total': 233, 'n_valid': 39, 'n_correct': 13}",73.309357,public final boolean odexOnly() { return (flags & ODEX_ONLY) != 0; },n odexOnly(){return(f&ODEX_ONLY)!=0;},68,37,14,31,57.407407407407405,"['public', 'final', 'boolean', 'odexOnly', '(', ')', '{', 'return', '(', 'flags', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}']","['n', 'odexOnly', '(', ')', '{', 'return', '(', 'f', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}']",17,15,6,2,18.181818181818183
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addVerb_1.txt,0.3558,1.4713,"{'n_total': 249, 'n_valid': 67, 'n_correct': 13}",99.079598,"public void addVerb(Verb v) { verbs.put(v.getHashKey(), v); }","d addVerb(Verb v){bs.put(v.getHy(),v);}",61,39,13,22,45.83333333333333,"['public', 'void', 'addVerb', '(', 'Verb', 'v', ')', '{', 'verbs', '.', 'put', '(', 'v', '.', 'getHashKey', '(', ')', ',', 'v', ')', ';', '}']","['d', 'addVerb', '(', 'Verb', 'v', ')', '{', 'bs', '.', 'put', '(', 'v', '.', 'getHy', '(', ')', ',', 'v', ')', ';', '}']",22,21,6,1,6.25
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,convertJoinType_1.txt,0.4424,1.5976,"{'n_total': 982, 'n_valid': 246, 'n_correct': 65}",375.353585,"public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.core.JoinType.JOIN; case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + "" unknown""); } }","e convertJoinType(JoinType e){switch(e){case R:m.N;return m;dteExn(""wn"");}}",340,75,21,265,83.07210031347962,"['public', 'static', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', 'convertJoinType', '(', 'JoinType', 'joinType', ')', '{', 'switch', '(', 'joinType', ')', '{', 'case', 'INNER', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'JOIN', ';', 'case', 'LEFT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'LEFTJOIN', ';', 'case', 'RIGHT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'RIGHTJOIN', ';', 'default', ':', 'throw', 'new', 'IllegalStateException', '(', 'joinType', '.', 'toString', '(', ')', '+', '"" unknown""', ')', ';', '}', '}']","['e', 'convertJoinType', '(', 'JoinType', 'e', ')', '{', 'switch', '(', 'e', ')', '{', 'case', 'R', ':', 'm', '.', 'N', ';', 'return', 'm', ';', 'dteExn', '(', '""wn""', ')', ';', '}', '}']",79,29,6,50,68.4931506849315
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getRepl_1.txt,0.4767,1.8164,"{'n_total': 507, 'n_valid': 113, 'n_correct': 38}",179.954678,@Nonnull private synchronized RuntimeRepl getRepl(RuntimeReplFactory replFactory) { if (mRepl == null) { mRepl = replFactory.newInstance(); } return mRepl; },@N l getRepl(y y){if(l){e();}etRepl;},157,37,13,120,83.33333333333334,"['@', 'Nonnull', 'private', 'synchronized', 'RuntimeRepl', 'getRepl', '(', 'RuntimeReplFactory', 'replFactory', ')', '{', 'if', '(', 'mRepl', '==', 'null', ')', '{', 'mRepl', '=', 'replFactory', '.', 'newInstance', '(', ')', ';', '}', 'return', 'mRepl', ';', '}']","['@', 'N', 'l', 'getRepl', '(', 'y', 'y', ')', '{', 'if', '(', 'l', ')', '{', 'e', '(', ')', ';', '}', 'etRepl', ';', '}']",31,22,6,9,36.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,onBiomeDecorate_1.txt,0.3974,3.3578,"{'n_total': 956, 'n_valid': 299, 'n_correct': 48}",435.329345,"@SubscribeEvent public void onBiomeDecorate(DecorateBiomeEvent.Decorate event) { if (BOPBiomes.excludedDecoratedWorldTypes.contains(event.getWorld().getWorldType())) return; if (event.getType() != Decorate.EventType.CUSTOM) { runGeneratorStage(event.getWorld(), event.getRand(), event.getPos(), GeneratorStage.mapDecorateType(event.getType())); } }","@Subscribe public void onBiomeDecorate(DecorateBiomeEvee t){if((e))if(eveOM){rStage(e(),vent);}}",348,96,21,252,77.06422018348624,"['@', 'SubscribeEvent', 'public', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvent', '.', 'Decorate', 'event', ')', '{', 'if', '(', 'BOPBiomes', '.', 'excludedDecoratedWorldTypes', '.', 'contains', '(', 'event', '.', 'getWorld', '(', ')', '.', 'getWorldType', '(', ')', ')', ')', 'return', ';', 'if', '(', 'event', '.', 'getType', '(', ')', '!=', 'Decorate', '.', 'EventType', '.', 'CUSTOM', ')', '{', 'runGeneratorStage', '(', 'event', '.', 'getWorld', '(', ')', ',', 'event', '.', 'getRand', '(', ')', ',', 'event', '.', 'getPos', '(', ')', ',', 'GeneratorStage', '.', 'mapDecorateType', '(', 'event', '.', 'getType', '(', ')', ')', ')', ';', '}', '}']","['@', 'Subscribe', 'public', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvee', 't', ')', '{', 'if', '(', '(', 'e', ')', ')', 'if', '(', 'eveOM', ')', '{', 'rStage', '(', 'e', '(', ')', ',', 'vent', ')', ';', '}', '}']",82,32,6,50,65.78947368421053
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,withRecyclerView_1.txt,0.2744,2.4624,"{'n_total': 529, 'n_valid': 142, 'n_correct': 18}",216.223199,public static RecyclerViewMatcher withRecyclerView(final int recyclerViewId) { return new RecyclerViewMatcher(recyclerViewId); },r withRecyclerView(final in recyclerVwId){return new Matche(recyclerVi);},128,73,22,55,51.886792452830186,"['public', 'static', 'RecyclerViewMatcher', 'withRecyclerView', '(', 'final', 'int', 'recyclerViewId', ')', '{', 'return', 'new', 'RecyclerViewMatcher', '(', 'recyclerViewId', ')', ';', '}']","['r', 'withRecyclerView', '(', 'final', 'in', 'recyclerVwId', ')', '{', 'return', 'new', 'Matche', '(', 'recyclerVi', ')', ';', '}']",18,16,6,2,16.666666666666664
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isAwait_1.txt,0.4773,0.7911,"{'n_total': 161, 'n_valid': 40, 'n_correct': 4}",58.274462,public boolean isAwait() { return await; },public boolean isAwait(){return await;},42,39,13,3,10.344827586206897,"['public', 'boolean', 'isAwait', '(', ')', '{', 'return', 'await', ';', '}']","['public', 'boolean', 'isAwait', '(', ')', '{', 'return', 'await', ';', '}']",10,10,6,0,0.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addResourceRef_1.txt,0.4411,1.3444,"{'n_total': 733, 'n_valid': 157, 'n_correct': 53}",240.565843,"public void addResourceRef(ContextResource resourceRef) { if (resourceRefs.containsKey(resourceRef.getName())) { throw new IllegalArgumentException(sm.getString(""webXml.duplicateResourceRef"", resourceRef.getName())); } resourceRefs.put(resourceRef.getName(), resourceRef); }","d addResourceRef(C r){if((e())){(g("""",r()));}resourceRefs.put(r(),f);}",274,70,20,204,80.31496062992126,"['public', 'void', 'addResourceRef', '(', 'ContextResource', 'resourceRef', ')', '{', 'if', '(', 'resourceRefs', '.', 'containsKey', '(', 'resourceRef', '.', 'getName', '(', ')', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'sm', '.', 'getString', '(', '""webXml.duplicateResourceRef""', ',', 'resourceRef', '.', 'getName', '(', ')', ')', ')', ';', '}', 'resourceRefs', '.', 'put', '(', 'resourceRef', '.', 'getName', '(', ')', ',', 'resourceRef', ')', ';', '}']","['d', 'addResourceRef', '(', 'C', 'r', ')', '{', 'if', '(', '(', 'e', '(', ')', ')', ')', '{', '(', 'g', '(', '""""', ',', 'r', '(', ')', ')', ')', ';', '}', 'resourceRefs', '.', 'put', '(', 'r', '(', ')', ',', 'f', ')', ';', '}']",55,40,6,15,30.612244897959183
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,trimLine_1.txt,0.2354,3.0523,"{'n_total': 655, 'n_valid': 190, 'n_correct': 36}",279.992491,"protected String[] trimLine(String[] line) { String trim = """"; for (int i = 0; i < line.length; i++) { trim = line[i].trim(); line[i] = trim; } return line; }","Str trimLine(g[]line){ng t="""";for(int i=0;length;){im=l[i].trim();li=t;}return line;}",158,85,14,73,50.69444444444444,"['protected', 'String', '[', ']', 'trimLine', '(', 'String', '[', ']', 'line', ')', '{', 'String', 'trim', '=', '""""', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'line', '.', 'length', ';', 'i', '++', ')', '{', 'trim', '=', 'line', '[', 'i', ']', '.', 'trim', '(', ')', ';', 'line', '[', 'i', ']', '=', 'trim', ';', '}', 'return', 'line', ';', '}']","['Str', 'trimLine', '(', 'g', '[', ']', 'line', ')', '{', 'ng', 't', '=', '""""', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'length', ';', ')', '{', 'im', '=', 'l', '[', 'i', ']', '.', 'trim', '(', ')', ';', 'li', '=', 't', ';', '}', 'return', 'line', ';', '}']",57,45,6,12,23.52941176470588
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setWebapp_1.txt,0.4438,0.9273,"{'n_total': 200, 'n_valid': 36, 'n_correct': 13}",56.024108,public LindenConfig setWebapp(String webapp) { this.webapp = webapp; return this; },g setWebapp(g webapp){return this;},83,35,15,48,70.58823529411765,"['public', 'LindenConfig', 'setWebapp', '(', 'String', 'webapp', ')', '{', 'this', '.', 'webapp', '=', 'webapp', ';', 'return', 'this', ';', '}']","['g', 'setWebapp', '(', 'g', 'webapp', ')', '{', 'return', 'this', ';', '}']",18,11,6,7,58.333333333333336
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addResultMap_1.txt,0.271,2.974,"{'n_total': 465, 'n_valid': 136, 'n_correct': 25}",209.384418,"public void addResultMap(ResultMap rm) { resultMaps.put(rm.getId(), rm); checkLocallyForDiscriminatedNestedResultMaps(rm); checkGloballyForDiscriminatedNestedResultMaps(rm); }",l addResultMap(ResultMap m){sul.put();Map();},175,45,18,130,82.80254777070064,"['public', 'void', 'addResultMap', '(', 'ResultMap', 'rm', ')', '{', 'resultMaps', '.', 'put', '(', 'rm', '.', 'getId', '(', ')', ',', 'rm', ')', ';', 'checkLocallyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', 'checkGloballyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', '}']","['l', 'addResultMap', '(', 'ResultMap', 'm', ')', '{', 'sul', '.', 'put', '(', ')', ';', 'Map', '(', ')', ';', '}']",32,18,6,14,53.84615384615385
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getSendEmail_1.txt,0.4551,0.8835,"{'n_total': 256, 'n_valid': 64, 'n_correct': 17}",94.891297,public boolean getSendEmail() { if (!getPublishedSite()) sendEmail = false; return sendEmail; },n getSendEmail(){(g);return sendEmail;},95,39,18,56,72.72727272727273,"['public', 'boolean', 'getSendEmail', '(', ')', '{', 'if', '(', '!', 'getPublishedSite', '(', ')', ')', 'sendEmail', '=', 'false', ';', 'return', 'sendEmail', ';', '}']","['n', 'getSendEmail', '(', ')', '{', '(', 'g', ')', ';', 'return', 'sendEmail', ';', '}']",21,13,6,8,53.333333333333336
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getEnumInt_1.txt,0.4064,2.3936,"{'n_total': 427, 'n_valid': 77, 'n_correct': 16}",115.204723,"public <E extends Enum<E>> E getEnumInt(int index, Class<E> enumClass) { return toEnum(enumClass, getInt(index)); }","<E extends E>E getEnumInt(int index,s<E>mlas){return toEnum(enumCletInt(dex));}",115,79,16,36,36.36363636363637,"['public', '<', 'E', 'extends', 'Enum', '<', 'E', '>', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 'Class', '<', 'E', '>', 'enumClass', ')', '{', 'return', 'toEnum', '(', 'enumClass', ',', 'getInt', '(', 'index', ')', ')', ';', '}']","['<', 'E', 'extends', 'E', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 's', '<', 'E', '>', 'mlas', ')', '{', 'return', 'toEnum', '(', 'enumCletInt', '(', 'dex', ')', ')', ';', '}']",34,28,6,6,21.428571428571427
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,poolClosed_1.txt,0.4595,0.8022,"{'n_total': 339, 'n_valid': 75, 'n_correct': 27}",117.699397,@Override public void poolClosed(ConnectionPool pool) { cacheSizeMap.remove(pool); super.poolClosed(pool); },@e d poolClosed(l p){e();s.poolClosed();},108,41,16,67,72.82608695652173,"['@', 'Override', 'public', 'void', 'poolClosed', '(', 'ConnectionPool', 'pool', ')', '{', 'cacheSizeMap', '.', 'remove', '(', 'pool', ')', ';', 'super', '.', 'poolClosed', '(', 'pool', ')', ';', '}']","['@', 'e', 'd', 'poolClosed', '(', 'l', 'p', ')', '{', 'e', '(', ')', ';', 's', '.', 'poolClosed', '(', ')', ';', '}']",25,20,6,5,26.31578947368421
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,checkScope_1.txt,0.4849,2.1041,"{'n_total': 866, 'n_valid': 232, 'n_correct': 56}",334.423808,"public static void checkScope(String scope, Node n, ErrorDispatcher err) throws JasperException { if (scope != null && !scope.equals(""page"") && !scope.equals(""request"") && !scope.equals(""session"") && !scope.equals(""application"")) { err.jspError(n, ""jsp.error.invalid.scope"", scope); } }","d checkScope(S p,t e)throws Jti{if(sp&scope("""")&scope.l(""pion"")){r(""je"",scope);}}",286,81,16,205,75.92592592592592,"['public', 'static', 'void', 'checkScope', '(', 'String', 'scope', ',', 'Node', 'n', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'if', '(', 'scope', '!=', 'null', '&&', '!', 'scope', '.', 'equals', '(', '""page""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""request""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""session""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""application""', ')', ')', '{', 'err', '.', 'jspError', '(', 'n', ',', '""jsp.error.invalid.scope""', ',', 'scope', ')', ';', '}', '}']","['d', 'checkScope', '(', 'S', 'p', ',', 't', 'e', ')', 'throws', 'Jti', '{', 'if', '(', 'sp', '&', 'scope', '(', '""""', ')', '&', 'scope', '.', 'l', '(', '""pion""', ')', ')', '{', 'r', '(', '""je""', ',', 'scope', ')', ';', '}', '}']",69,38,6,31,49.2063492063492
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,unlockDrawer_1.txt,0.191,2.6604,"{'n_total': 419, 'n_valid': 119, 'n_correct': 26}",179.289039,private void unlockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED); } },void unlockDrawer(){if(l){Drawer.set(UNLOCK);}},116,47,18,69,70.40816326530613,"['private', 'void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_UNLOCKED', ')', ';', '}', '}']","['void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'l', ')', '{', 'Drawer', '.', 'set', '(', 'UNLOCK', ')', ';', '}', '}']",24,19,6,5,27.77777777777778
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addStatusHandlers_1.txt,0.406,1.6007,"{'n_total': 855, 'n_valid': 148, 'n_correct': 67}",239.125487,"public void addStatusHandlers(Collection<StatusChecker> statusHandlers) { for (StatusChecker statusChecker : statusHandlers) { String name = statusChecker.getClass().getSimpleName(); if (name.endsWith(StatusChecker.class.getSimpleName())) { name = name.substring(0, name.length() - StatusChecker.class.getSimpleName().length()); } this.statusHandlers.put(name, statusChecker); } }",d addStatusHandlers(n<r>s){for(S t:statusHandlers){s().S;if(n()){n();}t.put();}},380,80,23,300,84.03361344537815,"['public', 'void', 'addStatusHandlers', '(', 'Collection', '<', 'StatusChecker', '>', 'statusHandlers', ')', '{', 'for', '(', 'StatusChecker', 'statusChecker', ':', 'statusHandlers', ')', '{', 'String', 'name', '=', 'statusChecker', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ';', 'if', '(', 'name', '.', 'endsWith', '(', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', ')', ')', '{', 'name', '=', 'name', '.', 'substring', '(', '0', ',', 'name', '.', 'length', '(', ')', '-', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'this', '.', 'statusHandlers', '.', 'put', '(', 'name', ',', 'statusChecker', ')', ';', '}', '}']","['d', 'addStatusHandlers', '(', 'n', '<', 'r', '>', 's', ')', '{', 'for', '(', 'S', 't', ':', 'statusHandlers', ')', '{', 's', '(', ')', '.', 'S', ';', 'if', '(', 'n', '(', ')', ')', '{', 'n', '(', ')', ';', '}', 't', '.', 'put', '(', ')', ';', '}', '}']",89,44,6,45,54.21686746987952
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,canInitializeReference_1.txt,0.4107,1.1457,"{'n_total': 381, 'n_valid': 90, 'n_correct': 16}",148.601939,public final boolean canInitializeReference() { return (flags & CAN_INITIALIZE_REFERENCE) != 0; },booean canInitializeReference(){return(g&CAN_INITIALIZE_REFERENCE)!=0;},97,71,28,26,37.68115942028986,"['public', 'final', 'boolean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'flags', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}']","['booean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'g', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}']",17,15,6,2,18.181818181818183
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,checkVerificationError_1.txt,0.3413,1.8975,"{'n_total': 1103, 'n_valid': 345, 'n_correct': 70}",518.020478,"public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(""Invalid verification error value: %d. Must be between 1 and 9, inclusive"", verificationError)); } return verificationError; }","lci checkVerificationError(i ionr){if(Vr(verificationError)){throw(Sat(""e"",r));}n o;}",311,85,28,226,79.85865724381625,"['public', 'static', 'int', 'checkVerificationError', '(', 'int', 'verificationError', ')', '{', 'if', '(', '!', 'VerificationError', '.', 'isValidVerificationError', '(', 'verificationError', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""Invalid verification error value: %d. Must be between 1 and 9, inclusive""', ',', 'verificationError', ')', ')', ';', '}', 'return', 'verificationError', ';', '}']","['lci', 'checkVerificationError', '(', 'i', 'ionr', ')', '{', 'if', '(', 'Vr', '(', 'verificationError', ')', ')', '{', 'throw', '(', 'Sat', '(', '""e""', ',', 'r', ')', ')', ';', '}', 'n', 'o', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,withHostConfig_1.txt,0.4648,1.0495,"{'n_total': 410, 'n_valid': 136, 'n_correct': 19}",198.32123,public ContainerBuilder withHostConfig(HostConfig hostConfig) { this.hostConfig = hostConfig; return this; },ContainBu withHostConfig(ig hostConfig){return this;},108,53,20,55,62.5,"['public', 'ContainerBuilder', 'withHostConfig', '(', 'HostConfig', 'hostConfig', ')', '{', 'this', '.', 'hostConfig', '=', 'hostConfig', ';', 'return', 'this', ';', '}']","['ContainBu', 'withHostConfig', '(', 'ig', 'hostConfig', ')', '{', 'return', 'this', ';', '}']",18,11,6,7,58.333333333333336
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setMaxInFlightRequests_1.txt,0.4991,13.3322,"{'n_total': 377, 'n_valid': 86, 'n_correct': 20}",140.089184,public Builder setMaxInFlightRequests(int maxInFlightRequests) { this.maxInFlightRequests = maxInFlightRequests; return this; },r setMaxInFlightRequests(i FlightRequests){s.maxInFlig=s;},127,58,28,69,69.6969696969697,"['public', 'Builder', 'setMaxInFlightRequests', '(', 'int', 'maxInFlightRequests', ')', '{', 'this', '.', 'maxInFlightRequests', '=', 'maxInFlightRequests', ';', 'return', 'this', ';', '}']","['r', 'setMaxInFlightRequests', '(', 'i', 'FlightRequests', ')', '{', 's', '.', 'maxInFlig', '=', 's', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createSocketAddress_1.txt,0.4708,2.5216,"{'n_total': 381, 'n_valid': 100, 'n_correct': 19}",158.934685,@Override protected SocketAddress createSocketAddress(int port) { return new VmPipeAddress(port); },@d SocketAddr createSocketAddress(t o){nemPipeAddress();},99,57,25,42,56.75675675675676,"['@', 'Override', 'protected', 'SocketAddress', 'createSocketAddress', '(', 'int', 'port', ')', '{', 'return', 'new', 'VmPipeAddress', '(', 'port', ')', ';', '}']","['@', 'd', 'SocketAddr', 'createSocketAddress', '(', 't', 'o', ')', '{', 'nemPipeAddress', '(', ')', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addSecurityProvider_1.txt,0.2816,1.8009,"{'n_total': 337, 'n_valid': 80, 'n_correct': 16}",126.682298,@Override public void addSecurityProvider(SecurityProvider securityProvider) { numSecurityProviders++; },@c vod addSecurityProvider(r ser){umSecurityProviders++;},104,57,25,47,59.49367088607595,"['@', 'Override', 'public', 'void', 'addSecurityProvider', '(', 'SecurityProvider', 'securityProvider', ')', '{', 'numSecurityProviders', '++', ';', '}']","['@', 'c', 'vod', 'addSecurityProvider', '(', 'r', 'ser', ')', '{', 'umSecurityProviders', '++', ';', '}']",14,13,6,1,12.5
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getActiveConsumerCount_1.txt,0.3367,2.3035,"{'n_total': 515, 'n_valid': 105, 'n_correct': 39}",167.066743,"protected org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(""activeConsumerCount"").ofType(AtomicInteger.class).in(jobConsumerExecutor); }","r<r>getActiveConsumerCount(J j){d(""activeConsumerCnt"").y();}",223,60,28,163,83.58974358974359,"['protected', 'org', '.', 'fest', '.', 'reflect', '.', 'field', '.', 'Invoker', '<', 'AtomicInteger', '>', 'getActiveConsumerCount', '(', 'JobConsumerExecutor', 'jobConsumerExecutor', ')', '{', 'return', 'Reflection', '.', 'field', '(', '""activeConsumerCount""', ')', '.', 'ofType', '(', 'AtomicInteger', '.', 'class', ')', '.', 'in', '(', 'jobConsumerExecutor', ')', ';', '}']","['r', '<', 'r', '>', 'getActiveConsumerCount', '(', 'J', 'j', ')', '{', 'd', '(', '""activeConsumerCnt""', ')', '.', 'y', '(', ')', ';', '}']",40,20,6,20,58.82352941176471
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getRegisteredFunctions_1.txt,0.4872,1.8226,"{'n_total': 837, 'n_valid': 148, 'n_correct': 49}",248.207761,public List<String> getRegisteredFunctions(String prefix) { List<String> rv = new Vector<String>(); for (String function : m_registeredFunctions) { if (function.startsWith(prefix)) { rv.add(function); } } return rv; },t<ng>getRegisteredFunctions(g x){t<S>r=new V<S>();for(ng n:registeredFunctions){if(h()){(fuction);}}},217,101,28,116,61.37566137566137,"['public', 'List', '<', 'String', '>', 'getRegisteredFunctions', '(', 'String', 'prefix', ')', '{', 'List', '<', 'String', '>', 'rv', '=', 'new', 'Vector', '<', 'String', '>', '(', ')', ';', 'for', '(', 'String', 'function', ':', 'm_registeredFunctions', ')', '{', 'if', '(', 'function', '.', 'startsWith', '(', 'prefix', ')', ')', '{', 'rv', '.', 'add', '(', 'function', ')', ';', '}', '}', 'return', 'rv', ';', '}']","['t', '<', 'ng', '>', 'getRegisteredFunctions', '(', 'g', 'x', ')', '{', 't', '<', 'S', '>', 'r', '=', 'new', 'V', '<', 'S', '>', '(', ')', ';', 'for', '(', 'ng', 'n', ':', 'registeredFunctions', ')', '{', 'if', '(', 'h', '(', ')', ')', '{', '(', 'fuction', ')', ';', '}', '}', '}']",56,46,6,10,20.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setAttributesAsText_1.txt,0.397,4.2725,"{'n_total': 1211, 'n_valid': 312, 'n_correct': 89}",483.962836,"@ChromeDevtoolsMethod public void setAttributesAsText(JsonRpcPeer peer, JSONObject params) { final SetAttributesAsTextRequest request = mObjectMapper.convertValue(params, SetAttributesAsTextRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { Object element = mDocument.getElementForNodeId(request.nodeId); if (element != null) { mDocument.setAttributesAsText(element, request.text); } } }); }",@c v setAttributesAsText(t s){f r=m(pAttsAss);d(new R(){d n(){Ob();if(e){nt.setAttributesAsText();}}});},425,104,25,321,80.25,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'setAttributesAsText', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetAttributesAsTextRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetAttributesAsTextRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Object', 'element', '=', 'mDocument', '.', 'getElementForNodeId', '(', 'request', '.', 'nodeId', ')', ';', 'if', '(', 'element', '!=', 'null', ')', '{', 'mDocument', '.', 'setAttributesAsText', '(', 'element', ',', 'request', '.', 'text', ')', ';', '}', '}', '}', ')', ';', '}']","['@', 'c', 'v', 'setAttributesAsText', '(', 't', 's', ')', '{', 'f', 'r', '=', 'm', '(', 'pAttsAss', ')', ';', 'd', '(', 'new', 'R', '(', ')', '{', 'd', 'n', '(', ')', '{', 'Ob', '(', ')', ';', 'if', '(', 'e', ')', '{', 'nt', '.', 'setAttributesAsText', '(', ')', ';', '}', '}', '}', ')', ';', '}']",81,50,6,31,41.333333333333336
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,appendLink_1.txt,0.4143,1.1743,"{'n_total': 360, 'n_valid': 97, 'n_correct': 22}",147.692938,"public void appendLink(StringBuffer buffer, String name, String view) { buffer.append(""link:"" + view); }","void appendLink(SBuf i){f.append(""link""+w);}",104,44,16,60,68.18181818181817,"['public', 'void', 'appendLink', '(', 'StringBuffer', 'buffer', ',', 'String', 'name', ',', 'String', 'view', ')', '{', 'buffer', '.', 'append', '(', '""link:""', '+', 'view', ')', ';', '}']","['void', 'appendLink', '(', 'SBuf', 'i', ')', '{', 'f', '.', 'append', '(', '""link""', '+', 'w', ')', ';', '}']",24,17,6,7,38.88888888888889
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setIgnoreSchema_1.txt,0.4317,1.2877,"{'n_total': 339, 'n_valid': 79, 'n_correct': 23}",131.246872,"public Builder setIgnoreSchema(boolean ignoreSchema, Set<String> ignoreSchemaTopics) { this.ignoreSchema = ignoreSchema; this.ignoreSchemaTopics = ignoreSchemaTopics; return this; }",r setIgnoreSchema(a s){s.ignoreSchema=i;},181,41,21,140,87.5,"['public', 'Builder', 'setIgnoreSchema', '(', 'boolean', 'ignoreSchema', ',', 'Set', '<', 'String', '>', 'ignoreSchemaTopics', ')', '{', 'this', '.', 'ignoreSchema', '=', 'ignoreSchema', ';', 'this', '.', 'ignoreSchemaTopics', '=', 'ignoreSchemaTopics', ';', 'return', 'this', ';', '}']","['r', 'setIgnoreSchema', '(', 'a', 's', ')', '{', 's', '.', 'ignoreSchema', '=', 'i', ';', '}']",30,14,6,16,66.66666666666666
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,withLogPath_1.txt,0.4118,0.9614,"{'n_total': 344, 'n_valid': 96, 'n_correct': 18}",146.302125,public ContainerBuilder withLogPath(String logPath) { this.logPath = logPath; return this; },pubic withLogPath(Sing logPath){h oh;return this;},92,50,17,42,56.00000000000001,"['public', 'ContainerBuilder', 'withLogPath', '(', 'String', 'logPath', ')', '{', 'this', '.', 'logPath', '=', 'logPath', ';', 'return', 'this', ';', '}']","['pubic', 'withLogPath', '(', 'Sing', 'logPath', ')', '{', 'h', 'oh', ';', 'return', 'this', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createUploadDir_1.txt,0.4403,2.1904,"{'n_total': 783, 'n_valid': 198, 'n_correct': 44}",295.013705,"public static void createUploadDir(Server server, String uploadDir) throws DockerJSONException { File uploadFolder = new File(uploadDir + ""/uploadDir_"" + server.getContainerID()); if (!uploadFolder.exists()) { uploadFolder.mkdir(); } }","id createUploadDir(S uploadDir)throws D{(u+""/""+se);if(!up()){uploadFolder.dir();}}",235,82,21,153,71.49532710280374,"['public', 'static', 'void', 'createUploadDir', '(', 'Server', 'server', ',', 'String', 'uploadDir', ')', 'throws', 'DockerJSONException', '{', 'File', 'uploadFolder', '=', 'new', 'File', '(', 'uploadDir', '+', '""/uploadDir_""', '+', 'server', '.', 'getContainerID', '(', ')', ')', ';', 'if', '(', '!', 'uploadFolder', '.', 'exists', '(', ')', ')', '{', 'uploadFolder', '.', 'mkdir', '(', ')', ';', '}', '}']","['id', 'createUploadDir', '(', 'S', 'uploadDir', ')', 'throws', 'D', '{', '(', 'u', '+', '""/""', '+', 'se', ')', ';', 'if', '(', '!', 'up', '(', ')', ')', '{', 'uploadFolder', '.', 'dir', '(', ')', ';', '}', '}']",49,33,6,16,37.2093023255814
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,toConnectException_1.txt,0.2481,1.8404,"{'n_total': 758, 'n_valid': 154, 'n_correct': 32}",241.545389,private static ConnectException toConnectException(Throwable t) { if (t instanceof ConnectException) { return (ConnectException) t; } else { return new ConnectException(t); } },on toConnectException(e t){if(t instanceof n){return(ConnectException)t;}else{return ewctExcetion(t);}},176,103,24,73,48.026315789473685,"['private', 'static', 'ConnectException', 'toConnectException', '(', 'Throwable', 't', ')', '{', 'if', '(', 't', 'instanceof', 'ConnectException', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', 'else', '{', 'return', 'new', 'ConnectException', '(', 't', ')', ';', '}', '}']","['on', 'toConnectException', '(', 'e', 't', ')', '{', 'if', '(', 't', 'instanceof', 'n', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', 'else', '{', 'return', 'ewctExcetion', '(', 't', ')', ';', '}', '}']",34,31,6,3,10.714285714285714
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addVerifier_1.txt,0.4103,4.2949,"{'n_total': 368, 'n_valid': 116, 'n_correct': 31}",174.49739,"public void addVerifier(PurchaseVerifier verifier) { verifiers.put(verifier.storeName(), verifier); }",d addVerifier(Verifier r){put();},101,33,17,68,80.95238095238095,"['public', 'void', 'addVerifier', '(', 'PurchaseVerifier', 'verifier', ')', '{', 'verifiers', '.', 'put', '(', 'verifier', '.', 'storeName', '(', ')', ',', 'verifier', ')', ';', '}']","['d', 'addVerifier', '(', 'Verifier', 'r', ')', '{', 'put', '(', ')', ';', '}']",22,12,6,10,62.5
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setOpeningTime_1.txt,0.4529,0.8308,"{'n_total': 284, 'n_valid': 58, 'n_correct': 17}",100.327452,protected Period setOpeningTime(String openingTime) { this.openingTime = openingTime; return this; },d setOpeningTime(S e){s.openingTime=s;},100,39,20,61,76.25,"['protected', 'Period', 'setOpeningTime', '(', 'String', 'openingTime', ')', '{', 'this', '.', 'openingTime', '=', 'openingTime', ';', 'return', 'this', ';', '}']","['d', 'setOpeningTime', '(', 'S', 'e', ')', '{', 's', '.', 'openingTime', '=', 's', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,hasIncludeAction_1.txt,0.4815,0.795,"{'n_total': 218, 'n_valid': 58, 'n_correct': 5}",87.381908,public boolean hasIncludeAction() { return hasIncludeAction; },boolean hasIncludeAction(){return hasIncludeAction;},62,52,22,10,25.0,"['public', 'boolean', 'hasIncludeAction', '(', ')', '{', 'return', 'hasIncludeAction', ';', '}']","['boolean', 'hasIncludeAction', '(', ')', '{', 'return', 'hasIncludeAction', ';', '}']",10,9,6,1,25.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,withNetworkDisabled_1.txt,0.3359,1.337,"{'n_total': 461, 'n_valid': 132, 'n_correct': 21}",199.673087,public ConfigBuilder withNetworkDisabled(Boolean networkDisabled) { this.networkDisabled = networkDisabled; return this; },d withNetworkDisabled(Bn network){tis.networkDisabled=k;return this;},122,69,25,53,54.63917525773196,"['public', 'ConfigBuilder', 'withNetworkDisabled', '(', 'Boolean', 'networkDisabled', ')', '{', 'this', '.', 'networkDisabled', '=', 'networkDisabled', ';', 'return', 'this', ';', '}']","['d', 'withNetworkDisabled', '(', 'Bn', 'network', ')', '{', 'tis', '.', 'networkDisabled', '=', 'k', ';', 'return', 'this', ';', '}']",18,17,6,1,8.333333333333332
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getInstanceFieldsOffset_1.txt,0.4904,1.6183,"{'n_total': 675, 'n_valid': 148, 'n_correct': 36}",236.78796,"private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexReader(dexFile, staticFieldsOffset); DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; }",private int getInstanceFieldsOffset(){if(0){}(t);(r);s();return instanceFieldsOffset;},292,86,29,206,78.32699619771863,"['private', 'int', 'getInstanceFieldsOffset', '(', ')', '{', 'if', '(', 'instanceFieldsOffset', '>', '0', ')', '{', 'return', 'instanceFieldsOffset', ';', '}', 'DexReader', 'reader', '=', 'new', 'DexReader', '(', 'dexFile', ',', 'staticFieldsOffset', ')', ';', 'DexBackedField', '.', 'skipFields', '(', 'reader', ',', 'staticFieldCount', ')', ';', 'instanceFieldsOffset', '=', 'reader', '.', 'getOffset', '(', ')', ';', 'return', 'instanceFieldsOffset', ';', '}']","['private', 'int', 'getInstanceFieldsOffset', '(', ')', '{', 'if', '(', '0', ')', '{', '}', '(', 't', ')', ';', '(', 'r', ')', ';', 's', '(', ')', ';', 'return', 'instanceFieldsOffset', ';', '}']",49,28,6,21,48.837209302325576
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getFinalScore_1.txt,0.4739,1.601,"{'n_total': 366, 'n_valid': 74, 'n_correct': 22}",114.495416,"public String getFinalScore() { return Validator.check(finalScore, ""0"").replace(',', '.'); }","i getFinalScore(){ck(finalScore,"""").replace(',','.');}",92,54,19,38,52.05479452054794,"['public', 'String', 'getFinalScore', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'finalScore', ',', '""0""', ')', '.', 'replace', '(', ""','"", ',', ""'.'"", ')', ';', '}']","['i', 'getFinalScore', '(', ')', '{', 'ck', '(', 'finalScore', ',', '""""', ')', '.', 'replace', '(', ""','"", ',', ""'.'"", ')', ';', '}']",24,20,6,4,22.22222222222222
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setCallbackClass_1.txt,0.4291,0.9069,"{'n_total': 350, 'n_valid': 85, 'n_correct': 25}",136.791824,public HttpClassCallbackDTO setCallbackClass(String callbackClass) { this.callbackClass = callbackClass; return this; },O setCallbackClass(g s){s.callbackClass=s;},119,43,22,76,78.35051546391753,"['public', 'HttpClassCallbackDTO', 'setCallbackClass', '(', 'String', 'callbackClass', ')', '{', 'this', '.', 'callbackClass', '=', 'callbackClass', ';', 'return', 'this', ';', '}']","['O', 'setCallbackClass', '(', 'g', 's', ')', '{', 's', '.', 'callbackClass', '=', 's', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setItemIdentity_1.txt,0.378,1.7538,"{'n_total': 369, 'n_valid': 93, 'n_correct': 19}",145.351835,"public void setItemIdentity(int itemOffset, String identity) { itemIdentities.put(itemOffset, identity); }","void setItemIdentity(int Of,Sng identity){itemIiet(i);}",106,55,21,51,60.0,"['public', 'void', 'setItemIdentity', '(', 'int', 'itemOffset', ',', 'String', 'identity', ')', '{', 'itemIdentities', '.', 'put', '(', 'itemOffset', ',', 'identity', ')', ';', '}']","['void', 'setItemIdentity', '(', 'int', 'Of', ',', 'Sng', 'identity', ')', '{', 'itemIiet', '(', 'i', ')', ';', '}']",21,16,6,5,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isMiss_1.txt,0.4905,0.7415,"{'n_total': 197, 'n_valid': 53, 'n_correct': 4}",79.728443,public boolean isMiss() { return miss; },public boolean isMiss(){return miss;},40,37,12,3,10.714285714285714,"['public', 'boolean', 'isMiss', '(', ')', '{', 'return', 'miss', ';', '}']","['public', 'boolean', 'isMiss', '(', ')', '{', 'return', 'miss', ';', '}']",10,10,6,0,0.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,deleteAllTasks_1.txt,0.4445,1.3767,"{'n_total': 338, 'n_valid': 79, 'n_correct': 23}",125.321477,protected void deleteAllTasks() { storage.write((NoResult.Quiet) storeProvider -> storeProvider.getUnsafeTaskStore().deleteAllTasks()); },d deleteAllTasks(){((N)deleteAllTasks());},137,42,20,95,81.19658119658119,"['protected', 'void', 'deleteAllTasks', '(', ')', '{', 'storage', '.', 'write', '(', '(', 'NoResult', '.', 'Quiet', ')', 'storeProvider', '->', 'storeProvider', '.', 'getUnsafeTaskStore', '(', ')', '.', 'deleteAllTasks', '(', ')', ')', ';', '}']","['d', 'deleteAllTasks', '(', ')', '{', '(', '(', 'N', ')', 'deleteAllTasks', '(', ')', ')', ';', '}']",29,15,6,14,60.86956521739131
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createJobManager_1.txt,0.4678,1.1321,"{'n_total': 615, 'n_valid': 146, 'n_correct': 30}",230.635548,"protected JobManager createJobManager(Configuration.Builder configurationBuilder) { return new JobManager(Robolectric.application, configurationBuilder.id(UUID.randomUUID().toString()).build()); }",protected JobManger createJobManager(Cder r){new J((UU)i());},196,61,22,135,77.58620689655173,"['protected', 'JobManager', 'createJobManager', '(', 'Configuration', '.', 'Builder', 'configurationBuilder', ')', '{', 'return', 'new', 'JobManager', '(', 'Robolectric', '.', 'application', ',', 'configurationBuilder', '.', 'id', '(', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ')', '.', 'build', '(', ')', ')', ';', '}']","['protected', 'JobManger', 'createJobManager', '(', 'Cder', 'r', ')', '{', 'new', 'J', '(', '(', 'UU', ')', 'i', '(', ')', ')', ';', '}']",39,20,6,19,57.57575757575758
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isSendEmail_1.txt,0.46,1.6664,"{'n_total': 457, 'n_valid': 137, 'n_correct': 32}",199.641811,public boolean isSendEmail() { boolean sendEmail; if (isEmailCopyAlways() || (isEmailCopyOptional() && getBooleanEmailOut())) { sendEmail = true; } else { sendEmail = false; } return sendEmail; },boolean isSendEmail(){n;if(s()){}return sndEmail;},195,50,17,145,81.46067415730337,"['public', 'boolean', 'isSendEmail', '(', ')', '{', 'boolean', 'sendEmail', ';', 'if', '(', 'isEmailCopyAlways', '(', ')', '||', '(', 'isEmailCopyOptional', '(', ')', '&&', 'getBooleanEmailOut', '(', ')', ')', ')', '{', 'sendEmail', '=', 'true', ';', '}', 'else', '{', 'sendEmail', '=', 'false', ';', '}', 'return', 'sendEmail', ';', '}']","['boolean', 'isSendEmail', '(', ')', '{', 'n', ';', 'if', '(', 's', '(', ')', ')', '{', '}', 'return', 'sndEmail', ';', '}']",42,19,6,23,63.888888888888886
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,hasWater_1.txt,0.3327,1.615,"{'n_total': 868, 'n_valid': 199, 'n_correct': 65}",290.823114,"private boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }","boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){}}return false;}",279,81,14,198,74.71698113207546,"['private', 'boolean', 'hasWater', '(', 'World', 'world', ',', 'BlockPos', 'pos', ')', '{', 'for', '(', 'BlockPos', '.', 'MutableBlockPos', 'mutableblockpos', ':', 'BlockPos', '.', 'getAllInBoxMutable', '(', 'pos', '.', 'add', '(', '-', '4', ',', '0', ',', '-', '4', ')', ',', 'pos', '.', 'add', '(', '4', ',', '1', ',', '4', ')', ')', ')', '{', 'if', '(', 'world', '.', 'getBlockState', '(', 'mutableblockpos', ')', '.', 'getMaterial', '(', ')', '==', 'Material', '.', 'WATER', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'hasWater', '(', 'Wold', 'w', ',', 'Bl', 'p', ')', '{', 'for', '(', 'B', 'm', ':', 'gee', '(', '(', '4', ')', ',', 'd', '(', ')', ')', ')', '{', 'if', '(', '(', 's', ')', 'WATER', ')', '{', '}', '}', 'return', 'false', ';', '}']",75,41,6,34,49.275362318840585
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,lockDrawer_1.txt,0.3333,2.4948,"{'n_total': 395, 'n_valid': 119, 'n_correct': 24}",172.606531,private void lockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); } },void lockDrawer(){if(mDrawer=null){e(Layout.LOCK_OED);}},119,56,16,63,61.16504854368932,"['private', 'void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_LOCKED_CLOSED', ')', ';', '}', '}']","['void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '=', 'null', ')', '{', 'e', '(', 'Layout', '.', 'LOCK_OED', ')', ';', '}', '}']",24,21,6,3,16.666666666666664
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,initializeFilters_1.txt,0.3516,1.9742,"{'n_total': 656, 'n_valid': 217, 'n_correct': 30}",324.248701,protected static synchronized void initializeFilters(AbstractExtensionFileFilterFileChooser chooser) { if (!chooser.getFiltersInitialized()) chooser.doInitializeFilters(); },icid initializeFilters(o r){if(FiltersInitialized())er.doInitializeFilters();},173,78,23,95,63.33333333333333,"['protected', 'static', 'synchronized', 'void', 'initializeFilters', '(', 'AbstractExtensionFileFilterFileChooser', 'chooser', ')', '{', 'if', '(', '!', 'chooser', '.', 'getFiltersInitialized', '(', ')', ')', 'chooser', '.', 'doInitializeFilters', '(', ')', ';', '}']","['icid', 'initializeFilters', '(', 'o', 'r', ')', '{', 'if', '(', 'FiltersInitialized', '(', ')', ')', 'er', '.', 'doInitializeFilters', '(', ')', ';', '}']",26,20,6,6,30.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getPropagate_1.txt,0.3744,1.0233,"{'n_total': 168, 'n_valid': 36, 'n_correct': 6}",60.189976,"@JsonProperty(""propagate"") public Boolean getPropagate() { return propagate; }",n getPropagate(){return propagate;},78,35,18,43,71.66666666666667,"['@', 'JsonProperty', '(', '""propagate""', ')', 'public', 'Boolean', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}']","['n', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}']",15,9,6,6,66.66666666666666
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setAlwaysUseSession_1.txt,0.4382,3.0313,"{'n_total': 539, 'n_valid': 115, 'n_correct': 32}",181.284743,private void setAlwaysUseSession() { ((AuthenticatorBase) basicContext.getAuthenticator()).setAlwaysUseSession(true); ((AuthenticatorBase) nonloginContext.getAuthenticator()).setAlwaysUseSession(true); },private void setAlwaysUseSession(){((e)).setAlwaysUseSes;((e)).n();},203,68,25,135,75.84269662921348,"['private', 'void', 'setAlwaysUseSession', '(', ')', '{', '(', '(', 'AuthenticatorBase', ')', 'basicContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '(', '(', 'AuthenticatorBase', ')', 'nonloginContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '}']","['private', 'void', 'setAlwaysUseSession', '(', ')', '{', '(', '(', 'e', ')', ')', '.', 'setAlwaysUseSes', ';', '(', '(', 'e', ')', ')', '.', 'n', '(', ')', ';', '}']",39,25,6,14,42.42424242424242
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,fireMessageSent_1.txt,0.4562,2.3226,"{'n_total': 546, 'n_valid': 120, 'n_correct': 37}",194.664329,"private void fireMessageSent(T session, WriteRequest req) { session.setCurrentWriteRequest(null); IoFilterChain filterChain = session.getFilterChain(); filterChain.fireMessageSent(req); }","d fireMessageSent(T sn,st r){t(l).fireMessageSent();}",187,53,21,134,80.72289156626506,"['private', 'void', 'fireMessageSent', '(', 'T', 'session', ',', 'WriteRequest', 'req', ')', '{', 'session', '.', 'setCurrentWriteRequest', '(', 'null', ')', ';', 'IoFilterChain', 'filterChain', '=', 'session', '.', 'getFilterChain', '(', ')', ';', 'filterChain', '.', 'fireMessageSent', '(', 'req', ')', ';', '}']","['d', 'fireMessageSent', '(', 'T', 'sn', ',', 'st', 'r', ')', '{', 't', '(', 'l', ')', '.', 'fireMessageSent', '(', ')', ';', '}']",35,20,6,15,51.72413793103448
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isDedicated_1.txt,0.386,1.5912,"{'n_total': 580, 'n_valid': 175, 'n_correct': 34}",251.87727,public static boolean isDedicated(Offer offer) { return FluentIterable.from(offer.getAttributesList()).transform(ATTRIBUTE_NAME).anyMatch(Predicates.equalTo(ConfigurationManager.DEDICATED_ATTRIBUTE)); },static boolean isDedicated(f f){m().tranform((DEDICATED));},202,59,17,143,77.29729729729729,"['public', 'static', 'boolean', 'isDedicated', '(', 'Offer', 'offer', ')', '{', 'return', 'FluentIterable', '.', 'from', '(', 'offer', '.', 'getAttributesList', '(', ')', ')', '.', 'transform', '(', 'ATTRIBUTE_NAME', ')', '.', 'anyMatch', '(', 'Predicates', '.', 'equalTo', '(', 'ConfigurationManager', '.', 'DEDICATED_ATTRIBUTE', ')', ')', ';', '}']","['static', 'boolean', 'isDedicated', '(', 'f', 'f', ')', '{', 'm', '(', ')', '.', 'tranform', '(', '(', 'DEDICATED', ')', ')', ';', '}']",39,20,6,19,57.57575757575758
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getShowStats_1.txt,0.4868,0.7752,"{'n_total': 161, 'n_valid': 29, 'n_correct': 10}",50.852896,public boolean getShowStats() { return this.showStats; },n getShowStats(){showStats;},56,28,18,28,73.68421052631578,"['public', 'boolean', 'getShowStats', '(', ')', '{', 'return', 'this', '.', 'showStats', ';', '}']","['n', 'getShowStats', '(', ')', '{', 'showStats', ';', '}']",12,8,6,4,66.66666666666666
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setLoginResult_1.txt,0.471,1.0801,"{'n_total': 539, 'n_valid': 142, 'n_correct': 36}",213.545602,"public final void setLoginResult(LoginResult loginResult) { if (!this.loginResult.compareAndSet(null, loginResult)) { throw new UnsupportedOperationException(""A Login Result already exists in this callback and cannot be set again.""); } }","i setLoginResult(u loginResult){if(h.Set(inlt)){E("""");}}",237,56,20,181,83.41013824884793,"['public', 'final', 'void', 'setLoginResult', '(', 'LoginResult', 'loginResult', ')', '{', 'if', '(', '!', 'this', '.', 'loginResult', '.', 'compareAndSet', '(', 'null', ',', 'loginResult', ')', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '""A Login Result already exists in this callback and cannot be set again.""', ')', ';', '}', '}']","['i', 'setLoginResult', '(', 'u', 'loginResult', ')', '{', 'if', '(', 'h', '.', 'Set', '(', 'inlt', ')', ')', '{', 'E', '(', '""""', ')', ';', '}', '}']",33,24,6,9,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setClosingTime_1.txt,0.4556,0.8631,"{'n_total': 284, 'n_valid': 58, 'n_correct': 17}",100.46481,protected Period setClosingTime(String closingTime) { this.closingTime = closingTime; return this; },d setClosingTime(S e){s.closingTime=s;},100,39,20,61,76.25,"['protected', 'Period', 'setClosingTime', '(', 'String', 'closingTime', ')', '{', 'this', '.', 'closingTime', '=', 'closingTime', ';', 'return', 'this', ';', '}']","['d', 'setClosingTime', '(', 'S', 'e', ')', '{', 's', '.', 'closingTime', '=', 's', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getExclusionRule_1.txt,0.4556,0.8926,"{'n_total': 273, 'n_valid': 62, 'n_correct': 12}",107.463484,public RecurrenceRule getExclusionRule() { return this.exclusionRule; },l getExclusionRule(){s.exclusionRule;},71,38,22,33,67.3469387755102,"['public', 'RecurrenceRule', 'getExclusionRule', '(', ')', '{', 'return', 'this', '.', 'exclusionRule', ';', '}']","['l', 'getExclusionRule', '(', ')', '{', 's', '.', 'exclusionRule', ';', '}']",12,10,6,2,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getLocalPosition_1.txt,0.472,1.5389,"{'n_total': 297, 'n_valid': 62, 'n_correct': 13}",106.002374,@Override public Vector3 getLocalPosition(Vector3 out) { return out.set(localPosition); },r getLocalPosition(eor o){return(localPosition);},89,49,22,40,59.70149253731343,"['@', 'Override', 'public', 'Vector3', 'getLocalPosition', '(', 'Vector3', 'out', ')', '{', 'return', 'out', '.', 'set', '(', 'localPosition', ')', ';', '}']","['r', 'getLocalPosition', '(', 'eor', 'o', ')', '{', 'return', '(', 'localPosition', ')', ';', '}']",19,13,6,6,46.15384615384615
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,withFsUrl_1.txt,0.4768,0.9482,"{'n_total': 274, 'n_valid': 66, 'n_correct': 13}",99.338182,public GzipHdfsBolt withFsUrl(String fsUrl) { this.fsUrl = fsUrl; return this; },Bolt withFsUrl(g f){t.fsUrl=fsUrl;return this;},80,47,15,33,50.76923076923077,"['public', 'GzipHdfsBolt', 'withFsUrl', '(', 'String', 'fsUrl', ')', '{', 'this', '.', 'fsUrl', '=', 'fsUrl', ';', 'return', 'this', ';', '}']","['Bolt', 'withFsUrl', '(', 'g', 'f', ')', '{', 't', '.', 'fsUrl', '=', 'fsUrl', ';', 'return', 'this', ';', '}']",18,17,6,1,8.333333333333332
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,squaredError_1.txt,0.4459,2.1769,"{'n_total': 772, 'n_valid': 194, 'n_correct': 52}",294.462951,"public static double squaredError(double[] vector1, double[] vector2) { double squaredError = 0; for (int i = 0; i < vector1.length; i++) { squaredError += (vector1[i] - vector2[i]) * (vector1[i] - vector2[i]); } return squaredError; }","d squaredError(d vec,e v){b s=0;for(i=0;;i++){squaredErr+=(1[i]-o[i]);}return squaredError;}",235,92,18,143,65.89861751152074,"['public', 'static', 'double', 'squaredError', '(', 'double', '[', ']', 'vector1', ',', 'double', '[', ']', 'vector2', ')', '{', 'double', 'squaredError', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vector1', '.', 'length', ';', 'i', '++', ')', '{', 'squaredError', '+=', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', '*', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', ';', '}', 'return', 'squaredError', ';', '}']","['d', 'squaredError', '(', 'd', 'vec', ',', 'e', 'v', ')', '{', 'b', 's', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', ';', 'i', '++', ')', '{', 'squaredErr', '+=', '(', '1', '[', 'i', ']', '-', 'o', '[', 'i', ']', ')', ';', '}', 'return', 'squaredError', ';', '}']",69,45,6,24,38.095238095238095
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getWriteRequestQueue_1.txt,0.4636,1.9228,"{'n_total': 467, 'n_valid': 116, 'n_correct': 20}",190.585739,"@SuppressWarnings(""unchecked"") private Queue<WriteRequest> getWriteRequestQueue(IoSession session) { return (Queue<WriteRequest>) session.getAttribute(WRITE_REQUEST_QUEUE); }",e<t>getWriteRequestQueue(io eon){on.getAtt(WRITE_REQUEST_QUEUE);},174,65,26,109,73.64864864864865,"['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'private', 'Queue', '<', 'WriteRequest', '>', 'getWriteRequestQueue', '(', 'IoSession', 'session', ')', '{', 'return', '(', 'Queue', '<', 'WriteRequest', '>', ')', 'session', '.', 'getAttribute', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}']","['e', '<', 't', '>', 'getWriteRequestQueue', '(', 'io', 'eon', ')', '{', 'on', '.', 'getAtt', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}']",31,18,6,13,52.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addCacheControl_1.txt,0.2555,3.5326,"{'n_total': 910, 'n_valid': 249, 'n_correct': 55}",368.867816,"private void addCacheControl(HttpAcceptSession session, File requestFile, String requestPath) { CacheControlHandler cacheControlHandler = urlCacheControlMap.computeIfAbsent(requestPath, path -> patterns.stream().filter(patternCacheControl -> PatternMatcherUtils.caseInsensitiveMatch(requestPath, patternCacheControl.getPattern())).findFirst().map(patternCacheControl -> new CacheControlHandler(requestFile, patternCacheControl)).orElse(null)); if (cacheControlHandler != null) { addCacheControlHeader(session, requestFile, cacheControlHandler); } }","id addCacheControl(Hn s){Cach((p()).e(null));if(c){addCder(e,cacheControlHandler);}}",548,84,21,464,88.04554079696395,"['private', 'void', 'addCacheControl', '(', 'HttpAcceptSession', 'session', ',', 'File', 'requestFile', ',', 'String', 'requestPath', ')', '{', 'CacheControlHandler', 'cacheControlHandler', '=', 'urlCacheControlMap', '.', 'computeIfAbsent', '(', 'requestPath', ',', 'path', '->', 'patterns', '.', 'stream', '(', ')', '.', 'filter', '(', 'patternCacheControl', '->', 'PatternMatcherUtils', '.', 'caseInsensitiveMatch', '(', 'requestPath', ',', 'patternCacheControl', '.', 'getPattern', '(', ')', ')', ')', '.', 'findFirst', '(', ')', '.', 'map', '(', 'patternCacheControl', '->', 'new', 'CacheControlHandler', '(', 'requestFile', ',', 'patternCacheControl', ')', ')', '.', 'orElse', '(', 'null', ')', ')', ';', 'if', '(', 'cacheControlHandler', '!=', 'null', ')', '{', 'addCacheControlHeader', '(', 'session', ',', 'requestFile', ',', 'cacheControlHandler', ')', ';', '}', '}']","['id', 'addCacheControl', '(', 'Hn', 's', ')', '{', 'Cach', '(', '(', 'p', '(', ')', ')', '.', 'e', '(', 'null', ')', ')', ';', 'if', '(', 'c', ')', '{', 'addCder', '(', 'e', ',', 'cacheControlHandler', ')', ';', '}', '}']",90,35,6,55,65.47619047619048
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,htmlContent_1.txt,0.4836,3.8923,"{'n_total': 687, 'n_valid': 290, 'n_correct': 30}",410.658928,"protected String htmlContent(Event event) { return Web.encodeUrlsAsHtml(Web.escapeHtml(plainTextContent(event), true)); }","e htmlContent(t n){AsHm(WapeHtml(plainTextContent(e),true));}",121,61,17,60,57.692307692307686,"['protected', 'String', 'htmlContent', '(', 'Event', 'event', ')', '{', 'return', 'Web', '.', 'encodeUrlsAsHtml', '(', 'Web', '.', 'escapeHtml', '(', 'plainTextContent', '(', 'event', ')', ',', 'true', ')', ')', ';', '}']","['e', 'htmlContent', '(', 't', 'n', ')', '{', 'AsHm', '(', 'WapeHtml', '(', 'plainTextContent', '(', 'e', ')', ',', 'true', ')', ')', ';', '}']",27,21,6,6,28.57142857142857
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getUseSendfile_1.txt,0.4474,0.918,"{'n_total': 241, 'n_valid': 51, 'n_correct': 10}",84.453598,public boolean getUseSendfile() { return ((NioEndpoint) endpoint).getUseSendfile(); },n getUseSendfile(){(t).getUseSendfile();},85,41,20,44,67.6923076923077,"['public', 'boolean', 'getUseSendfile', '(', ')', '{', 'return', '(', '(', 'NioEndpoint', ')', 'endpoint', ')', '.', 'getUseSendfile', '(', ')', ';', '}']","['n', 'getUseSendfile', '(', ')', '{', '(', 't', ')', '.', 'getUseSendfile', '(', ')', ';', '}']",19,14,6,5,38.46153846153847
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,saveTasks_1.txt,0.3414,1.596,"{'n_total': 603, 'n_valid': 134, 'n_correct': 50}",206.793212,@Override public void saveTasks(final Set<IScheduledTask> newTasks) { requireNonNull(newTasks); write(Op.saveTasks(new SaveTasks(IScheduledTask.toBuildersSet(newTasks)))); taskStore.saveTasks(newTasks); },@b vo saveTasks(f<dTask>ne){(ne);(((e())));e.saveTasks();},204,58,15,146,77.24867724867724,"['@', 'Override', 'public', 'void', 'saveTasks', '(', 'final', 'Set', '<', 'IScheduledTask', '>', 'newTasks', ')', '{', 'requireNonNull', '(', 'newTasks', ')', ';', 'write', '(', 'Op', '.', 'saveTasks', '(', 'new', 'SaveTasks', '(', 'IScheduledTask', '.', 'toBuildersSet', '(', 'newTasks', ')', ')', ')', ')', ';', 'taskStore', '.', 'saveTasks', '(', 'newTasks', ')', ';', '}']","['@', 'b', 'vo', 'saveTasks', '(', 'f', '<', 'dTask', '>', 'ne', ')', '{', '(', 'ne', ')', ';', '(', '(', '(', 'e', '(', ')', ')', ')', ')', ';', 'e', '.', 'saveTasks', '(', ')', ';', '}']",46,33,6,13,32.5
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setMarginMirroring_1.txt,0.4722,1.5002,"{'n_total': 249, 'n_valid': 51, 'n_correct': 6}",79.896415,public boolean setMarginMirroring(boolean marginMirroring) { return true; },n setMarginMirroring(boolean marginMirroring){return true;},75,59,24,16,31.37254901960784,"['public', 'boolean', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', 'return', 'true', ';', '}']","['n', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', 'return', 'true', ';', '}']",12,11,6,1,16.666666666666664
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,handleIllegalArgumentException_1.txt,0.4779,1.3571,"{'n_total': 668, 'n_valid': 178, 'n_correct': 33}",272.069902,"@ExceptionHandler() void handleIllegalArgumentException(IllegalArgumentException e, HttpServletResponse response) throws IOException { response.sendError(HttpStatus.BAD_REQUEST.value(), e.getMessage()); }","@Handle()v handleIllegalArgumentException(IllegalArgumentException e,se r)throws IOException{(H);}",204,98,36,106,63.095238095238095,"['@', 'ExceptionHandler', '(', ')', 'void', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', '{', 'response', '.', 'sendError', '(', 'HttpStatus', '.', 'BAD_REQUEST', '.', 'value', '(', ')', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}']","['@', 'Handle', '(', ')', 'v', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'se', 'r', ')', 'throws', 'IOException', '{', '(', 'H', ')', ';', '}']",36,21,6,15,50.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,listBackups_1.txt,0.3527,1.3455,"{'n_total': 382, 'n_valid': 91, 'n_correct': 23}",137.511273,@Override public Response listBackups() { return ok(Result.listBackupsResult(new ListBackupsResult().setBackups(recovery.listBackups()))); },e listBackups(){return ok(t.t(new ListBackups()));},140,51,17,89,72.35772357723577,"['@', 'Override', 'public', 'Response', 'listBackups', '(', ')', '{', 'return', 'ok', '(', 'Result', '.', 'listBackupsResult', '(', 'new', 'ListBackupsResult', '(', ')', '.', 'setBackups', '(', 'recovery', '.', 'listBackups', '(', ')', ')', ')', ')', ';', '}']","['e', 'listBackups', '(', ')', '{', 'return', 'ok', '(', 't', '.', 't', '(', 'new', 'ListBackups', '(', ')', ')', ')', ';', '}']",32,20,6,12,46.15384615384615
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addPathParameter_1.txt,0.4633,1.3055,"{'n_total': 418, 'n_valid': 104, 'n_correct': 18}",169.965722,"protected void addPathParameter(String name, String value) { pathParameters.put(name, value); }","d addPathParameter(g name,g vale){pathParameters.put();}",95,56,22,39,53.42465753424658,"['protected', 'void', 'addPathParameter', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'pathParameters', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}']","['d', 'addPathParameter', '(', 'g', 'name', ',', 'g', 'vale', ')', '{', 'pathParameters', '.', 'put', '(', ')', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addHttpCookie_1.txt,0.4748,1.6152,"{'n_total': 320, 'n_valid': 67, 'n_correct': 23}",108.9739,@Override public void addHttpCookie(Suppressible<String> httpCookie) { httpCookies.add(httpCookie); },u addHttpCookie(e<g>e){httpCookies.add();},101,42,19,59,71.95121951219512,"['@', 'Override', 'public', 'void', 'addHttpCookie', '(', 'Suppressible', '<', 'String', '>', 'httpCookie', ')', '{', 'httpCookies', '.', 'add', '(', 'httpCookie', ')', ';', '}']","['u', 'addHttpCookie', '(', 'e', '<', 'g', '>', 'e', ')', '{', 'httpCookies', '.', 'add', '(', ')', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,exportInt_1.txt,0.3434,2.5947,"{'n_total': 880, 'n_valid': 309, 'n_correct': 72}",439.898467,"public static AtomicInteger exportInt(final String name) { final AtomicInteger intVar = new AtomicInteger(0); export(new SampledStat<Integer>(name, 0) { @Override public Integer doSample() { return intVar.get(); } }); return intVar; }",e exportInt(f n){fiIeInteger();export(new S<I>(){e(){}});return intV;},234,70,15,164,74.88584474885845,"['public', 'static', 'AtomicInteger', 'exportInt', '(', 'final', 'String', 'name', ')', '{', 'final', 'AtomicInteger', 'intVar', '=', 'new', 'AtomicInteger', '(', '0', ')', ';', 'export', '(', 'new', 'SampledStat', '<', 'Integer', '>', '(', 'name', ',', '0', ')', '{', '@', 'Override', 'public', 'Integer', 'doSample', '(', ')', '{', 'return', 'intVar', '.', 'get', '(', ')', ';', '}', '}', ')', ';', 'return', 'intVar', ';', '}']","['e', 'exportInt', '(', 'f', 'n', ')', '{', 'fiIeInteger', '(', ')', ';', 'export', '(', 'new', 'S', '<', 'I', '>', '(', ')', '{', 'e', '(', ')', '{', '}', '}', ')', ';', 'return', 'intV', ';', '}']",56,33,6,23,46.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,getFilterChainBuilder_1.txt,0.4668,1.4382,"{'n_total': 249, 'n_valid': 65, 'n_correct': 6}",98.559564,@Override public final IoFilterChainBuilder getFilterChainBuilder() { return filterChainBuilder; },Builder getFilterChainBuilder(){return filterChainBuilder;},98,59,27,39,54.929577464788736,"['@', 'Override', 'public', 'final', 'IoFilterChainBuilder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}']","['Builder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}']",13,9,6,4,57.14285714285714
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,videoUrl_1.txt,0.4674,0.8358,"{'n_total': 324, 'n_valid': 107, 'n_correct': 25}",155.769636,public VideoBuilder videoUrl(String videoUrl) { this.videoUrl = videoUrl; return this; },l videoUrl(Str r){videoUrl=l;return;},88,37,14,51,68.91891891891892,"['public', 'VideoBuilder', 'videoUrl', '(', 'String', 'videoUrl', ')', '{', 'this', '.', 'videoUrl', '=', 'videoUrl', ';', 'return', 'this', ';', '}']","['l', 'videoUrl', '(', 'Str', 'r', ')', '{', 'videoUrl', '=', 'l', ';', 'return', ';', '}']",18,14,6,4,33.33333333333333
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isAutoShrink_1.txt,0.4982,1.0305,"{'n_total': 310, 'n_valid': 89, 'n_correct': 14}",136.692753,@Override public final boolean isAutoShrink() { return autoShrink && recapacityAllowed; },boolean isAutoShrink(){return autoShrink&l;},89,44,18,45,63.38028169014085,"['@', 'Override', 'public', 'final', 'boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&&', 'recapacityAllowed', ';', '}']","['boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&', 'l', ';', '}']",15,11,6,4,44.44444444444444
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createMirrorSelector_1.txt,0.3698,2.8052,"{'n_total': 902, 'n_valid': 258, 'n_correct': 50}",385.834331,"private MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; }",privMirrorSelector createMirrorSelector(s n){r=new D();for(M i:etMirrors()){dd(m);}return r;},318,93,26,225,77.05479452054794,"['private', 'MirrorSelector', 'createMirrorSelector', '(', 'Settings', 'settings', ')', '{', 'DefaultMirrorSelector', 'selector', '=', 'new', 'DefaultMirrorSelector', '(', ')', ';', 'for', '(', 'Mirror', 'mirror', ':', 'settings', '.', 'getMirrors', '(', ')', ')', '{', 'selector', '.', 'add', '(', 'mirror', '.', 'getId', '(', ')', ',', 'mirror', '.', 'getUrl', '(', ')', ',', 'mirror', '.', 'getLayout', '(', ')', ',', 'false', ',', 'mirror', '.', 'getMirrorOf', '(', ')', ',', 'mirror', '.', 'getMirrorOfLayouts', '(', ')', ')', ';', '}', 'return', 'selector', ';', '}']","['privMirrorSelector', 'createMirrorSelector', '(', 's', 'n', ')', '{', 'r', '=', 'new', 'D', '(', ')', ';', 'for', '(', 'M', 'i', ':', 'etMirrors', '(', ')', ')', '{', 'dd', '(', 'm', ')', ';', '}', 'return', 'r', ';', '}']",70,34,6,36,56.25
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isUseGeneratedKeys_1.txt,0.4829,0.7915,"{'n_total': 245, 'n_valid': 53, 'n_correct': 5}",86.361554,public boolean isUseGeneratedKeys() { return useGeneratedKeys; },public boolean isUseGeneratedKeys(){re useGeneratedKeys;},64,57,24,7,17.5,"['public', 'boolean', 'isUseGeneratedKeys', '(', ')', '{', 'return', 'useGeneratedKeys', ';', '}']","['public', 'boolean', 'isUseGeneratedKeys', '(', ')', '{', 're', 'useGeneratedKeys', ';', '}']",10,10,6,0,0.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,assertCounter_1.txt,0.257,3.957,"{'n_total': 925, 'n_valid': 300, 'n_correct': 78}",427.179551,"private static void assertCounter(String method) { final Counter counter = JpaWrapper.getJpaCounter(); assertEquals(""getRequestsCount"", 1, counter.getRequestsCount()); assertEquals(""requestName"", method, counter.getRequests().get(0).getName()); counter.clear(); }","d assertCounter(t d){fnalCounter=r();l("""",t());assertE(""rtNa"",(0).get());u();}",263,78,19,185,75.81967213114754,"['private', 'static', 'void', 'assertCounter', '(', 'String', 'method', ')', '{', 'final', 'Counter', 'counter', '=', 'JpaWrapper', '.', 'getJpaCounter', '(', ')', ';', 'assertEquals', '(', '""getRequestsCount""', ',', '1', ',', 'counter', '.', 'getRequestsCount', '(', ')', ')', ';', 'assertEquals', '(', '""requestName""', ',', 'method', ',', 'counter', '.', 'getRequests', '(', ')', '.', 'get', '(', '0', ')', '.', 'getName', '(', ')', ')', ';', 'counter', '.', 'clear', '(', ')', ';', '}']","['d', 'assertCounter', '(', 't', 'd', ')', '{', 'fnalCounter', '=', 'r', '(', ')', ';', 'l', '(', '""""', ',', 't', '(', ')', ')', ';', 'assertE', '(', '""rtNa""', ',', '(', '0', ')', '.', 'get', '(', ')', ')', ';', 'u', '(', ')', ';', '}']",61,40,6,21,38.18181818181819
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,updateFrameTitle_1.txt,0.4817,2.6162,"{'n_total': 793, 'n_valid': 236, 'n_correct': 53}",350.551014,public void updateFrameTitle() { if (getParentFrame() != null) { getParentFrame().setTitle(getFrameTitle()); } if (getParentInternalFrame() != null) { getParentInternalFrame().setTitle(getFrameTitle()); } },void updateFrameTitle(){if(geFrame){e.setTitle(tFrameTitle());}if(l){(F);}},206,75,22,131,71.19565217391305,"['public', 'void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'getParentFrame', '(', ')', '!=', 'null', ')', '{', 'getParentFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', 'if', '(', 'getParentInternalFrame', '(', ')', '!=', 'null', ')', '{', 'getParentInternalFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', '}']","['void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'geFrame', ')', '{', 'e', '.', 'setTitle', '(', 'tFrameTitle', '(', ')', ')', ';', '}', 'if', '(', 'l', ')', '{', '(', 'F', ')', ';', '}', '}']",49,31,6,18,41.86046511627907
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,isAttributes_1.txt,0.4903,0.8227,"{'n_total': 169, 'n_valid': 42, 'n_correct': 7}",64.714304,public boolean isAttributes() { return attributes; },boolean isAttributes(){attributes;},52,35,18,17,50.0,"['public', 'boolean', 'isAttributes', '(', ')', '{', 'return', 'attributes', ';', '}']","['boolean', 'isAttributes', '(', ')', '{', 'attributes', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,initHeaders_1.txt,0.4717,1.7975,"{'n_total': 255, 'n_valid': 44, 'n_correct': 12}",72.050759,private void initHeaders() { headers = new TreeMap<>(HttpHeaderNameComparator.INSTANCE); },private void initHeaders(){headers=new p<>();},90,46,17,44,60.273972602739725,"['private', 'void', 'initHeaders', '(', ')', '{', 'headers', '=', 'new', 'TreeMap', '<', '>', '(', 'HttpHeaderNameComparator', '.', 'INSTANCE', ')', ';', '}']","['private', 'void', 'initHeaders', '(', ')', '{', 'headers', '=', 'new', 'p', '<', '>', '(', ')', ';', '}']",19,16,6,3,23.07692307692308
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,canAddItem_1.txt,0.3625,1.0518,"{'n_total': 246, 'n_valid': 85, 'n_correct': 13}",125.72977,public boolean canAddItem() { return m_canAddItem; },boolean canAddItem(){m_canAddItem;},52,35,16,17,47.22222222222222,"['public', 'boolean', 'canAddItem', '(', ')', '{', 'return', 'm_canAddItem', ';', '}']","['boolean', 'canAddItem', '(', ')', '{', 'm_canAddItem', ';', '}']",10,8,6,2,50.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createTagList_1.txt,0.3323,7.405,"{'n_total': 421, 'n_valid': 94, 'n_correct': 21}",150.651964,public TagList createTagList(List<TagColumn> columns) { return new TagListImpl(columns); },i createTagList(L<g>s){return new TagListImpl();},90,49,19,41,57.74647887323944,"['public', 'TagList', 'createTagList', '(', 'List', '<', 'TagColumn', '>', 'columns', ')', '{', 'return', 'new', 'TagListImpl', '(', 'columns', ')', ';', '}']","['i', 'createTagList', '(', 'L', '<', 'g', '>', 's', ')', '{', 'return', 'new', 'TagListImpl', '(', ')', ';', '}']",19,17,6,2,15.384615384615383
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,findChildIndex_1.txt,0.4618,1.811,"{'n_total': 698, 'n_valid': 139, 'n_correct': 50}",225.433333,"public static int findChildIndex(ViewGroup parent, View child) { int count = parent.getChildCount(); for (int i = 0; i < count; ++i) { if (parent.getChildAt(i) == child) { return i; } } return -1; }","s findChildIndex(p pnt,iew child){nt n;for(i;unt;+i){if(ld){}}return-1;}",198,72,20,126,70.78651685393258,"['public', 'static', 'int', 'findChildIndex', '(', 'ViewGroup', 'parent', ',', 'View', 'child', ')', '{', 'int', 'count', '=', 'parent', '.', 'getChildCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'if', '(', 'parent', '.', 'getChildAt', '(', 'i', ')', '==', 'child', ')', '{', 'return', 'i', ';', '}', '}', 'return', '-', '1', ';', '}']","['s', 'findChildIndex', '(', 'p', 'pnt', ',', 'iew', 'child', ')', '{', 'nt', 'n', ';', 'for', '(', 'i', ';', 'unt', ';', '+', 'i', ')', '{', 'if', '(', 'ld', ')', '{', '}', '}', 'return', '-', '1', ';', '}']",58,35,6,23,44.230769230769226
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setFilterChainBuilder_1.txt,0.4601,1.6634,"{'n_total': 524, 'n_valid': 133, 'n_correct': 30}",210.188667,@Override public final void setFilterChainBuilder(IoFilterChainBuilder builder) { if (builder == null) { builder = new DefaultIoFilterChainBuilder(); } filterChainBuilder = builder; },d setFilterChainBuilder(o builder){if(l){r();}filterChainBuilder=b;},183,68,27,115,73.71794871794873,"['@', 'Override', 'public', 'final', 'void', 'setFilterChainBuilder', '(', 'IoFilterChainBuilder', 'builder', ')', '{', 'if', '(', 'builder', '==', 'null', ')', '{', 'builder', '=', 'new', 'DefaultIoFilterChainBuilder', '(', ')', ';', '}', 'filterChainBuilder', '=', 'builder', ';', '}']","['d', 'setFilterChainBuilder', '(', 'o', 'builder', ')', '{', 'if', '(', 'l', ')', '{', 'r', '(', ')', ';', '}', 'filterChainBuilder', '=', 'b', ';', '}']",31,22,6,9,36.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setExtendedData_1.txt,0.494,0.8437,"{'n_total': 580, 'n_valid': 104, 'n_correct': 38}",170.499811,"public void setExtendedData(String name, String value) { if (mExtendedData == null) mExtendedData = new HashMap<String, String>(); mExtendedData.put(name, value); }","d setExtendedData(g e,g e){if(l)new p<g>();ExtendedData.put(ue);}",164,65,21,99,69.23076923076923,"['public', 'void', 'setExtendedData', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'if', '(', 'mExtendedData', '==', 'null', ')', 'mExtendedData', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'mExtendedData', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}']","['d', 'setExtendedData', '(', 'g', 'e', ',', 'g', 'e', ')', '{', 'if', '(', 'l', ')', 'new', 'p', '<', 'g', '>', '(', ')', ';', 'ExtendedData', '.', 'put', '(', 'ue', ')', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,configurator_1.txt,0.4495,1.9112,"{'n_total': 540, 'n_valid': 156, 'n_correct': 34}",224.813658,public Builder configurator(Configurator serverEndpointConfigurator) { if (serverEndpointConfigurator == null) { this.configurator = Configurator.fetchContainerDefaultConfigurator(); } else { this.configurator = serverEndpointConfigurator; } return this; },r configurator(Configurator r){if(s){Configurator;}return this;},256,64,18,192,80.67226890756302,"['public', 'Builder', 'configurator', '(', 'Configurator', 'serverEndpointConfigurator', ')', '{', 'if', '(', 'serverEndpointConfigurator', '==', 'null', ')', '{', 'this', '.', 'configurator', '=', 'Configurator', '.', 'fetchContainerDefaultConfigurator', '(', ')', ';', '}', 'else', '{', 'this', '.', 'configurator', '=', 'serverEndpointConfigurator', ';', '}', 'return', 'this', ';', '}']","['r', 'configurator', '(', 'Configurator', 'r', ')', '{', 'if', '(', 's', ')', '{', 'Configurator', ';', '}', 'return', 'this', ';', '}']",39,19,6,20,60.60606060606061
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addEjbRef_1.txt,0.4161,1.3334,"{'n_total': 268, 'n_valid': 55, 'n_correct': 19}",86.433516,"public void addEjbRef(ContextEjb ejbRef) { ejbRefs.put(ejbRef.getName(), ejbRef); }","d addEjbRef(b f){ejbRefs.put(ee(),f);}",83,38,15,45,66.17647058823529,"['public', 'void', 'addEjbRef', '(', 'ContextEjb', 'ejbRef', ')', '{', 'ejbRefs', '.', 'put', '(', 'ejbRef', '.', 'getName', '(', ')', ',', 'ejbRef', ')', ';', '}']","['d', 'addEjbRef', '(', 'b', 'f', ')', '{', 'ejbRefs', '.', 'put', '(', 'ee', '(', ')', ',', 'f', ')', ';', '}']",22,19,6,3,18.75
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,nextFunction_1.txt,0.4779,1.1064,"{'n_total': 575, 'n_valid': 93, 'n_correct': 33}",150.219704,public Function nextFunction() throws AuthorizationException { try { return (Function) functionIter.next(); } catch (Exception e) { throw new AuthorizationException(e.getMessage()); } },ti nextFunction()throws u{try{return(Fn)functionIr.nxt();}catch(E e){(e);}},185,75,18,110,65.86826347305389,"['public', 'Function', 'nextFunction', '(', ')', 'throws', 'AuthorizationException', '{', 'try', '{', 'return', '(', 'Function', ')', 'functionIter', '.', 'next', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'AuthorizationException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['ti', 'nextFunction', '(', ')', 'throws', 'u', '{', 'try', '{', 'return', '(', 'Fn', ')', 'functionIr', '.', 'nxt', '(', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",40,32,6,8,23.52941176470588
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setInspectModeEnabled_1.txt,0.3394,2.7664,"{'n_total': 987, 'n_valid': 284, 'n_correct': 60}",442.736301,"@ChromeDevtoolsMethod public void setInspectModeEnabled(JsonRpcPeer peer, JSONObject params) { final SetInspectModeEnabledRequest request = mObjectMapper.convertValue(params, SetInspectModeEnabledRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { mDocument.setInspectModeEnabled(request.enabled); } }); }",d setInspectModeEnabled(o p){t rq=lue(new e(){n(){t.setInspectModeEnabled(eqd);}});},338,84,27,254,81.67202572347267,"['@', 'ChromeDevtoolsMethod', 'public', 'void', 'setInspectModeEnabled', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetInspectModeEnabledRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetInspectModeEnabledRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'mDocument', '.', 'setInspectModeEnabled', '(', 'request', '.', 'enabled', ')', ';', '}', '}', ')', ';', '}']","['d', 'setInspectModeEnabled', '(', 'o', 'p', ')', '{', 't', 'rq', '=', 'lue', '(', 'new', 'e', '(', ')', '{', 'n', '(', ')', '{', 't', '.', 'setInspectModeEnabled', '(', 'eqd', ')', ';', '}', '}', ')', ';', '}']",59,33,6,26,49.0566037735849
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,createTaskId_1.txt,0.3034,1.8655,"{'n_total': 544, 'n_valid': 154, 'n_correct': 26}",239.565401,private static TaskID createTaskId(String taskId) { return TaskID.newBuilder().setValue(taskId).build(); },ID createTaskId(g s){e.Bl().e(taskId).bild();},106,46,18,60,68.18181818181817,"['private', 'static', 'TaskID', 'createTaskId', '(', 'String', 'taskId', ')', '{', 'return', 'TaskID', '.', 'newBuilder', '(', ')', '.', 'setValue', '(', 'taskId', ')', '.', 'build', '(', ')', ';', '}']","['ID', 'createTaskId', '(', 'g', 's', ')', '{', 'e', '.', 'Bl', '(', ')', '.', 'e', '(', 'taskId', ')', '.', 'bild', '(', ')', ';', '}']",26,23,6,3,15.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,setMaxBufferedRecords_1.txt,0.4769,0.8254,"{'n_total': 401, 'n_valid': 99, 'n_correct': 20}",156.467624,public Builder setMaxBufferedRecords(int maxBufferedRecords) { this.maxBufferedRecords = maxBufferedRecords; return this; },r setMaxBufferedRecords(t ds){is.maxBufferedRecords;return this;},123,65,27,58,60.41666666666666,"['public', 'Builder', 'setMaxBufferedRecords', '(', 'int', 'maxBufferedRecords', ')', '{', 'this', '.', 'maxBufferedRecords', '=', 'maxBufferedRecords', ';', 'return', 'this', ';', '}']","['r', 'setMaxBufferedRecords', '(', 't', 'ds', ')', '{', 'is', '.', 'maxBufferedRecords', ';', 'return', 'this', ';', '}']",18,15,6,3,25.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,addSessionTrackingMode_1.txt,0.4526,1.0878,"{'n_total': 450, 'n_valid': 98, 'n_correct': 22}",167.698858,public void addSessionTrackingMode(String sessionTrackingMode) { sessionTrackingModes.add(SessionTrackingMode.valueOf(sessionTrackingMode)); },d addSessionTrackingMode(g s){add((sessionTrackingMode));},142,58,28,84,73.68421052631578,"['public', 'void', 'addSessionTrackingMode', '(', 'String', 'sessionTrackingMode', ')', '{', 'sessionTrackingModes', '.', 'add', '(', 'SessionTrackingMode', '.', 'valueOf', '(', 'sessionTrackingMode', ')', ')', ';', '}']","['d', 'addSessionTrackingMode', '(', 'g', 's', ')', '{', 'add', '(', '(', 'sessionTrackingMode', ')', ')', ';', '}']",21,15,6,6,40.0
code2seq,METHOD_NAME,dd_char,rare,dd_char_rare_methods,invalidRequest_1.txt,0.3425,1.4721,"{'n_total': 414, 'n_valid': 136, 'n_correct': 17}",203.654059,"static Response invalidRequest(String message) { return addMessage(empty(), INVALID_REQUEST, message); }","e invalidRequest(ng mee){e(e,INVALID_REQUEST,messag);}",104,54,20,50,59.523809523809526,"['static', 'Response', 'invalidRequest', '(', 'String', 'message', ')', '{', 'return', 'addMessage', '(', 'empty', '(', ')', ',', 'INVALID_REQUEST', ',', 'message', ')', ';', '}']","['e', 'invalidRequest', '(', 'ng', 'mee', ')', '{', 'e', '(', 'e', ',', 'INVALID_REQUEST', ',', 'messag', ')', ';', '}']",21,17,6,4,26.666666666666668
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 309, 'n_valid': 73, 'n_correct': 24}",111.896184,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); },d onCreate(e a){super.onCreat();(g);},134,37,14,97,80.83333333333333,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'a', ')', '{', 'super', '.', 'onCreat', '(', ')', ';', '(', 'g', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 483, 'n_valid': 58, 'n_correct': 53}",99.402664,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c r toString(){if(l)("""");("""");(o);("""");(b);}",211,45,14,166,84.26395939086294,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'r', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 306, 'n_valid': 39, 'n_correct': 30}",68.095906,"@Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); }","t toString(){if(l)return""""+e;}",135,30,14,105,86.77685950413223,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}']","['t', 'toString', '(', ')', '{', 'if', '(', 'l', ')', 'return', '""""', '+', 'e', ';', '}']",29,15,6,14,60.86956521739131
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 392, 'n_valid': 68, 'n_correct': 31}",103.499443,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b o){if(k){y.equal(((k)).s);}return false;},146,52,12,94,70.1492537313433,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'o', ')', '{', 'if', '(', 'k', ')', '{', 'y', '.', 'equal', '(', '(', '(', 'k', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 392, 'n_valid': 68, 'n_correct': 31}",106.110778,@Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; },n equals(b o){if(k){y.equal(((k)).s);}return false;},146,52,12,94,70.1492537313433,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'b', 'o', ')', '{', 'if', '(', 'k', ')', '{', 'y', '.', 'equal', '(', '(', '(', 'k', ')', ')', '.', 's', ')', ';', '}', 'return', 'false', ';', '}']",39,30,6,9,27.27272727272727
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 347, 'n_valid': 70, 'n_correct': 33}",112.624054,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); },d onCreate(e e){s.onCreat();(t);},144,33,14,111,85.38461538461539,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'e', ')', '{', 's', '.', 'onCreat', '(', ')', ';', '(', 't', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 322, 'n_valid': 57, 'n_correct': 30}",92.50056,"@Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); }","t toString(){d();("""");rn(s.to);}",242,32,14,210,92.10526315789474,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['t', 'toString', '(', ')', '{', 'd', '(', ')', ';', '(', '""""', ')', ';', 'rn', '(', 's', '.', 'to', ')', ';', '}']",66,21,6,45,75.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_2.txt,0.9959,0.0046,"{'n_total': 592, 'n_valid': 102, 'n_correct': 51}",159.424143,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); }",n equals(ject o){if(s){}r=(e)o;return s()&s()&&equals(e);},309,58,12,251,84.51178451178451,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}']","['n', 'equals', '(', 'ject', 'o', ')', '{', 'if', '(', 's', ')', '{', '}', 'r', '=', '(', 'e', ')', 'o', ';', 'return', 's', '(', ')', '&', 's', '(', ')', '&&', 'equals', '(', 'e', ')', ';', '}']",83,35,6,48,62.33766233766234
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 505, 'n_valid': 124, 'n_correct': 31}",183.718681,@Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; },boolean equals(t obj){if(o){ls(((y)).l);}return false;},141,55,12,86,66.66666666666666,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'equals', '(', 't', 'obj', ')', '{', 'if', '(', 'o', ')', '{', 'ls', '(', '(', '(', 'y', ')', ')', '.', 'l', ')', ';', '}', 'return', 'false', ';', '}']",37,28,6,9,29.03225806451613
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 249, 'n_valid': 35, 'n_correct': 17}",58.737576,@Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); },@O v init()throws n{super.init();t();},99,38,10,61,68.53932584269663,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}']","['@', 'O', 'v', 'init', '(', ')', 'throws', 'n', '{', 'super', '.', 'init', '(', ')', ';', 't', '(', ')', ';', '}']",23,20,6,3,17.647058823529413
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_2.txt,0.9479,0.0671,"{'n_total': 537, 'n_valid': 106, 'n_correct': 37}",166.957794,"@Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); }","g toString(){r(""="");t();for(0;t;){ln(getCooString());}rg();}",270,60,14,210,82.03125,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'r', '(', '""=""', ')', ';', 't', '(', ')', ';', 'for', '(', '0', ';', 't', ';', ')', '{', 'ln', '(', 'getCooString', '(', ')', ')', ';', '}', 'rg', '(', ')', ';', '}']",77,35,6,42,59.15492957746479
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 271, 'n_valid': 55, 'n_correct': 24}",87.839555,@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); },d onCreate(B e){super.onCreat();},172,33,14,139,87.9746835443038,"['@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}']","['d', 'onCreate', '(', 'B', 'e', ')', '{', 'super', '.', 'onCreat', '(', ')', ';', '}']",39,14,6,25,75.75757575757575
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 293, 'n_valid': 44, 'n_correct': 24}",76.990359,"@Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); }","@O v onCreate(){i(L,""onCreat"");(0);}",215,36,14,179,89.05472636815921,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}']","['@', 'O', 'v', 'onCreate', '(', ')', '{', 'i', '(', 'L', ',', '""onCreat""', ')', ';', '(', '0', ')', ';', '}']",52,19,6,33,71.73913043478261
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 501, 'n_valid': 123, 'n_correct': 28}",185.53273,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",tring toString(){if(nul==buff){return ll;}if(t==0){}return Str(this);},150,70,14,80,58.82352941176471,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['tring', 'toString', '(', ')', '{', 'if', '(', 'nul', '==', 'buff', ')', '{', 'return', 'll', ';', '}', 'if', '(', 't', '==', '0', ')', '{', '}', 'return', 'Str', '(', 'this', ')', ';', '}']",42,31,6,11,30.55555555555556
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 449, 'n_valid': 109, 'n_correct': 29}",162.354921,@Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; },lean equals(ect obj){if(o){return ths();}return false;},136,55,12,81,65.32258064516128,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}']","['lean', 'equals', '(', 'ect', 'obj', ')', '{', 'if', '(', 'o', ')', '{', 'return', 'ths', '(', ')', ';', '}', 'return', 'false', ';', '}']",35,22,6,13,44.82758620689656
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 390, 'n_valid': 97, 'n_correct': 28}",145.294797,@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); },n equals(O o){if((o))return false.equals();},186,44,12,142,81.60919540229885,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}']","['n', 'equals', '(', 'O', 'o', ')', '{', 'if', '(', '(', 'o', ')', ')', 'return', 'false', '.', 'equals', '(', ')', ';', '}']",50,21,6,29,65.9090909090909
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_10.txt,0.999,0.0012,"{'n_total': 392, 'n_valid': 66, 'n_correct': 32}",103.011211,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); }","void setUp()throws E{if(ED){(""s"");}set();}",181,42,11,139,81.76470588235294,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}']","['void', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'ED', ')', '{', '(', '""s""', ')', ';', '}', 'set', '(', ')', ';', '}']",35,22,6,13,44.82758620689656
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_10.txt,0.9948,0.0059,"{'n_total': 526, 'n_valid': 76, 'n_correct': 35}",127.658948,@Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; },n equals(ject r){if(o instanceof k){a=(k)c==l;}false;},247,54,12,193,82.12765957446808,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}']","['n', 'equals', '(', 'ject', 'r', ')', '{', 'if', '(', 'o', 'instanceof', 'k', ')', '{', 'a', '=', '(', 'k', ')', 'c', '==', 'l', ';', '}', 'false', ';', '}']",71,27,6,44,67.6923076923077
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 229, 'n_valid': 50, 'n_correct': 15}",81.54802,"@Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); }",g toString(){Str(toString());},132,30,14,102,86.4406779661017,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'Str', '(', 'toString', '(', ')', ')', ';', '}']",34,13,6,21,75.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 289, 'n_valid': 71, 'n_correct': 13}",102.94683,@Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; },public booean onCreate(){DbHer(contxt);return true;},175,52,14,123,76.3975155279503,"['@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}']","['public', 'booean', 'onCreate', '(', ')', '{', 'DbHer', '(', 'contxt', ')', ';', 'return', 'true', ';', '}']",35,15,6,20,68.96551724137932
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 701, 'n_valid': 198, 'n_correct': 50}",292.310747,"@Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); }",@c boolean equals(b obj){r();if(mFil())return(e)((f()));},190,57,12,133,74.71910112359551,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}']","['@', 'c', 'boolean', 'equals', '(', 'b', 'obj', ')', '{', 'r', '(', ')', ';', 'if', '(', 'mFil', '(', ')', ')', 'return', '(', 'e', ')', '(', '(', 'f', '(', ')', ')', ')', ';', '}']",60,32,6,28,51.85185185185185
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 511, 'n_valid': 56, 'n_correct': 42}",90.310682,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{(0);}catch(t e){}ren();}},164,46,9,118,76.12903225806451,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 't', 'e', ')', '{', '}', 'ren', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 287, 'n_valid': 50, 'n_correct': 22}",77.065326,"@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }",d execute()throws n{r.execute();k();},165,37,13,128,84.21052631578947,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'n', '{', 'r', '.', 'execute', '(', ')', ';', 'k', '(', ')', ';', '}']",44,18,6,26,68.42105263157895
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 411, 'n_valid': 133, 'n_correct': 16}",186.285283,@Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); },@Override protected void setUp()throws Exception{xt().eCoeReolver();},114,69,11,45,43.68932038834952,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}']","['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'xt', '(', ')', '.', 'eCoeReolver', '(', ')', ';', '}']",27,19,6,8,38.095238095238095
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 456, 'n_valid': 60, 'n_correct': 38}",94.473289,"public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); }","d main(S[]args)throws E{(("""".g));(("""".s()));}",179,45,10,134,79.28994082840237,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}']","['d', 'main', '(', 'S', '[', ']', 'args', ')', 'throws', 'E', '{', '(', '(', '""""', '.', 'g', ')', ')', ';', '(', '(', '""""', '.', 's', '(', ')', ')', ')', ';', '}']",50,30,6,20,45.45454545454545
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 407, 'n_valid': 50, 'n_correct': 30}",82.21004,public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); },t main(S[]args){try{(I());}catch(E e){}e();},154,44,10,110,76.38888888888889,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}']","['t', 'main', '(', 'S', '[', ']', 'args', ')', '{', 'try', '{', '(', 'I', '(', ')', ')', ';', '}', 'catch', '(', 'E', 'e', ')', '{', '}', 'e', '(', ')', ';', '}']",38,30,6,8,25.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 337, 'n_valid': 64, 'n_correct': 31}",97.169314,"public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; }","T get(){if(l){throw new N("""");}}",109,32,9,77,77.0,"['public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}']","['T', 'get', '(', ')', '{', 'if', '(', 'l', ')', '{', 'throw', 'new', 'N', '(', '""""', ')', ';', '}', '}']",25,19,6,6,31.57894736842105
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 268, 'n_valid': 62, 'n_correct': 29}",93.494549,@Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); },@c void setUp(){r=ne(es);},107,26,11,81,84.375,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}']","['@', 'c', 'void', 'setUp', '(', ')', '{', 'r', '=', 'ne', '(', 'es', ')', ';', '}']",26,15,6,11,55.00000000000001
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 340, 'n_valid': 57, 'n_correct': 23}",84.588479,@Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } },@Override public void run(){try{t();t();}catch(n x){}},127,54,9,73,61.86440677966102,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 't', '(', ')', ';', 't', '(', ')', ';', '}', 'catch', '(', 'n', 'x', ')', '{', '}', '}']",33,27,6,6,22.22222222222222
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 385, 'n_valid': 45, 'n_correct': 43}",73.280247,"public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; }","i get(p<t>t,t e){(k);if(l){}}",166,29,9,137,87.26114649681529,"['public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}']","['i', 'get', '(', 'p', '<', 't', '>', 't', ',', 't', 'e', ')', '{', '(', 'k', ')', ';', 'if', '(', 'l', ')', '{', '}', '}']",46,24,6,22,55.00000000000001
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 355, 'n_valid': 53, 'n_correct': 38}",81.971777,"public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); }","d main(g args)throws n{(B);("""");w();}",251,37,10,214,88.79668049792531,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}']","['d', 'main', '(', 'g', 'args', ')', 'throws', 'n', '{', '(', 'B', ')', ';', '(', '""""', ')', ';', 'w', '(', ')', ';', '}']",53,22,6,31,65.95744680851064
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 255, 'n_valid': 38, 'n_correct': 25}",58.343334,public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); },d main(n[]s)throws x{Sn();},132,27,10,105,86.0655737704918,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}']","['d', 'main', '(', 'n', '[', ']', 's', ')', 'throws', 'x', '{', 'Sn', '(', ')', ';', '}']",34,16,6,18,64.28571428571429
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 261, 'n_valid': 42, 'n_correct': 21}",67.008562,"@Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); }",@Ov void setUp()throws E{Up();(g);},122,35,11,87,78.37837837837837,"['@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}']","['@', 'Ov', 'void', 'setUp', '(', ')', 'throws', 'E', '{', 'Up', '(', ')', ';', '(', 'g', ')', ';', '}']",31,18,6,13,52.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_5.txt,0.408,1.0307,"{'n_total': 688, 'n_valid': 178, 'n_correct': 54}",266.704708,"@Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); }","i execute(T tuple){("""");m=(a)d(""mtt"",(D));collector.ck(le);}",305,60,13,245,83.9041095890411,"['@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}']","['i', 'execute', '(', 'T', 'tuple', ')', '{', '(', '""""', ')', ';', 'm', '=', '(', 'a', ')', 'd', '(', '""mtt""', ',', '(', 'D', ')', ')', ';', 'collector', '.', 'ck', '(', 'le', ')', ';', '}']",70,33,6,37,57.8125
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 337, 'n_valid': 50, 'n_correct': 32}",76.695935,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{p();}catch(E x){}(0);},121,37,9,84,75.0,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'p', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 410, 'n_valid': 57, 'n_correct': 33}",87.656481,"public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } }","public void run(){try{}catch(T t){(""""+e);}}",149,43,9,106,75.71428571428571,"['public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}']","['public', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'T', 't', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '}']",36,23,6,13,43.333333333333336
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 393, 'n_valid': 131, 'n_correct': 19}",195.949326,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },@Override public int hashCode(){it rsrs;},174,41,14,133,83.125,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'it', 'rsrs', ';', '}']",45,12,6,33,84.61538461538461
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 332, 'n_valid': 64, 'n_correct': 26}",99.549647,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); }",d execute()throws n{r.execute;exe(g().o);},123,42,13,81,73.63636363636363,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'n', '{', 'r', '.', 'execute', ';', 'exe', '(', 'g', '(', ')', '.', 'o', ')', ';', '}']",29,21,6,8,34.78260869565217
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 271, 'n_valid': 48, 'n_correct': 17}",74.710686,"@Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); }","d setUp()throws E{("""");super.setUp();}",149,38,11,111,80.43478260869566,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', '(', '""""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}']",26,18,6,8,40.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_1.txt,0.9838,0.0201,"{'n_total': 554, 'n_valid': 75, 'n_correct': 63}",114.392354,"public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); }","t main(g[]args){("""");("""");(""""+r());((""""));}",579,43,10,536,94.20035149384886,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'args', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', 'r', '(', ')', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",131,32,6,99,79.2
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 586, 'n_valid': 121, 'n_correct': 59}",175.745865,"@Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; }","V get(g t,imeUt t)throws I{if(((ut))){(""""+eo);}e;}",248,50,9,198,82.84518828451883,"['@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}']","['V', 'get', '(', 'g', 't', ',', 'imeUt', 't', ')', 'throws', 'I', '{', 'if', '(', '(', '(', 'ut', ')', ')', ')', '{', '(', '""""', '+', 'eo', ')', ';', '}', 'e', ';', '}']",51,31,6,20,44.44444444444444
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 483, 'n_valid': 108, 'n_correct': 39}",167.645196,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; },int hashCode(){final t t=t+((sl)?0:s);r s;},262,43,14,219,88.30645161290323,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['int', 'hashCode', '(', ')', '{', 'final', 't', 't', '=', 't', '+', '(', '(', 'sl', ')', '?', '0', ':', 's', ')', ';', 'r', 's', ';', '}']",75,25,6,50,72.46376811594203
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 409, 'n_valid': 56, 'n_correct': 45}",88.101335,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;;i++){if(o){}}run();},171,34,9,137,84.5679012345679,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'o', ')', '{', '}', '}', 'run', '(', ')', ';', '}']",62,25,6,37,66.07142857142857
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 337, 'n_valid': 50, 'n_correct': 32}",77.171301,@Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); },void run(){try{p();}catch(E x){}(0);},121,37,9,84,75.0,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}']","['void', 'run', '(', ')', '{', 'try', '{', 'p', '(', ')', ';', '}', 'catch', '(', 'E', 'x', ')', '{', '}', '(', '0', ')', ';', '}']",39,24,6,15,45.45454545454545
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 282, 'n_valid': 61, 'n_correct': 19}",93.625972,"@Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); }",d execute()throws u{super.execute(l());},140,40,13,100,78.74015748031496,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'u', '{', 'super', '.', 'execute', '(', 'l', '(', ')', ')', ';', '}']",29,17,6,12,52.17391304347826
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 331, 'n_valid': 68, 'n_correct': 24}",107.606101,@Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); },d setUp()throws E{supe.setUp();T();},182,36,11,146,85.38011695906432,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'supe', '.', 'setUp', '(', ')', ';', 'T', '(', ')', ';', '}']",38,18,6,20,62.5
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 279, 'n_valid': 59, 'n_correct': 28}",89.182591,@Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); },@O void init(t en){init();s();},193,31,10,162,88.52459016393442,"['@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}']","['@', 'O', 'void', 'init', '(', 't', 'en', ')', '{', 'init', '(', ')', ';', 's', '(', ')', ';', '}']",49,18,6,31,72.09302325581395
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 227, 'n_valid': 32, 'n_correct': 22}",52.49234,public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); },t main(g[]rgs)throws x{},147,24,10,123,89.78102189781022,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}']","['t', 'main', '(', 'g', '[', ']', 'rgs', ')', 'throws', 'x', '{', '}']",32,12,6,20,76.92307692307693
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 296, 'n_valid': 54, 'n_correct': 27}",81.776146,"public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); }","d main(Sg[]r){y(C,"""");Main(ar);}",136,32,10,104,82.53968253968253,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}']","['d', 'main', '(', 'Sg', '[', ']', 'r', ')', '{', 'y', '(', 'C', ',', '""""', ')', ';', 'Main', '(', 'ar', ')', ';', '}']",30,22,6,8,33.33333333333333
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 427, 'n_valid': 57, 'n_correct': 40}",86.365407,"public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); }","d main(Sg[]args)throws E{(n(V,"""")).o("""");}",273,42,10,231,87.83269961977186,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}']","['d', 'main', '(', 'Sg', '[', ']', 'args', ')', 'throws', 'E', '{', '(', 'n', '(', 'V', ',', '""""', ')', ')', '.', 'o', '(', '""""', ')', ';', '}']",62,26,6,36,64.28571428571429
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_7.txt,0.4525,0.8319,"{'n_total': 625, 'n_valid': 129, 'n_correct': 56}",186.875083,"@Before public void setUp() throws Exception { PostgresStarter<PostgresExecutable, PostgresProcess> runtime = PostgresStarter.getDefaultInstance(); final PostgresConfig config = new PostgresConfig(PRODUCTION, new AbstractPostgresConfig.Net(""localhost"", findFreePort()), new AbstractPostgresConfig.Storage(""test""), new AbstractPostgresConfig.Timeout(), new AbstractPostgresConfig.Credentials(""user"", ""password"")); config.getAdditionalInitDbParams().addAll(asList(""-E"", ""SQL_ASCII"", ""--locale=C"", ""--lc-collate=C"", ""--lc-ctype=C"")); PostgresExecutable exec = runtime.prepare(config); process = exec.start(); String url = format(""jdbc:postgresql://%s:%s/%s?user=%s&password=%s"", config.net().host(), config.net().port(), config.storage().dbName(), config.credentials().username(), config.credentials().password()); conn = DriverManager.getConnection(url); }","@Before public d setUp()throws n{P(n("""",""""));t("""",d());(u);}",854,60,11,794,94.18742586002372,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'PostgresStarter', '<', 'PostgresExecutable', ',', 'PostgresProcess', '>', 'runtime', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', ';', 'final', 'PostgresConfig', 'config', '=', 'new', 'PostgresConfig', '(', 'PRODUCTION', ',', 'new', 'AbstractPostgresConfig', '.', 'Net', '(', '""localhost""', ',', 'findFreePort', '(', ')', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Storage', '(', '""test""', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Timeout', '(', ')', ',', 'new', 'AbstractPostgresConfig', '.', 'Credentials', '(', '""user""', ',', '""password""', ')', ')', ';', 'config', '.', 'getAdditionalInitDbParams', '(', ')', '.', 'addAll', '(', 'asList', '(', '""-E""', ',', '""SQL_ASCII""', ',', '""--locale=C""', ',', '""--lc-collate=C""', ',', '""--lc-ctype=C""', ')', ')', ';', 'PostgresExecutable', 'exec', '=', 'runtime', '.', 'prepare', '(', 'config', ')', ';', 'process', '=', 'exec', '.', 'start', '(', ')', ';', 'String', 'url', '=', 'format', '(', '""jdbc:postgresql://%s:%s/%s?user=%s&password=%s""', ',', 'config', '.', 'net', '(', ')', '.', 'host', '(', ')', ',', 'config', '.', 'net', '(', ')', '.', 'port', '(', ')', ',', 'config', '.', 'storage', '(', ')', '.', 'dbName', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'username', '(', ')', ',', 'config', '.', 'credentials', '(', ')', '.', 'password', '(', ')', ')', ';', 'conn', '=', 'DriverManager', '.', 'getConnection', '(', 'url', ')', ';', '}']","['@', 'Before', 'public', 'd', 'setUp', '(', ')', 'throws', 'n', '{', 'P', '(', 'n', '(', '""""', ',', '""""', ')', ')', ';', 't', '(', '""""', ',', 'd', '(', ')', ')', ';', '(', 'u', ')', ';', '}']",179,34,6,145,83.8150289017341
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 393, 'n_valid': 97, 'n_correct': 21}",153.841625,"@Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); }","@v v execute()throws i{super.execute;("""");}",98,43,13,55,64.70588235294117,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}']","['@', 'v', 'v', 'execute', '(', ')', 'throws', 'i', '{', 'super', '.', 'execute', ';', '(', '""""', ')', ';', '}']",22,18,6,4,25.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 408, 'n_valid': 93, 'n_correct': 29}",134.325631,@Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } },d run(){try{d.slee(hoe);}catch(Exception x){x.race();}},162,55,9,107,69.93464052287581,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'try', '{', 'd', '.', 'slee', '(', 'hoe', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'race', '(', ')', ';', '}', '}']",44,29,6,15,39.47368421052632
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 374, 'n_valid': 52, 'n_correct': 39}",87.798407,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; },@v int hashCode(){e();t=((l)?0:e());},239,37,14,202,89.77777777777777,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'v', 'int', 'hashCode', '(', ')', '{', 'e', '(', ')', ';', 't', '=', '(', '(', 'l', ')', '?', '0', ':', 'e', '(', ')', ')', ';', '}']",66,26,6,40,66.66666666666666
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 278, 'n_valid': 98, 'n_correct': 20}",139.624144,"public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); }","d run(){d();awLayout(Widow,s);}",150,31,9,119,84.39716312056737,"['public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}']","['d', 'run', '(', ')', '{', 'd', '(', ')', ';', 'awLayout', '(', 'Widow', ',', 's', ')', ';', '}']",33,17,6,16,59.25925925925925
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 304, 'n_valid': 61, 'n_correct': 28}",98.899856,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; },t hashCode(){((l)?0:e.hashCod());},154,34,14,120,85.71428571428571,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', '(', '(', 'l', ')', '?', '0', ':', 'e', '.', 'hashCod', '(', ')', ')', ';', '}']",45,20,6,25,64.1025641025641
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 483, 'n_valid': 58, 'n_correct': 53}",98.434967,"@Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); }","@c r toString(){if(l)("""");("""");(o);("""");(b);}",211,45,14,166,84.26395939086294,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'r', 'toString', '(', ')', '{', 'if', '(', 'l', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '(', 'b', ')', ';', '}']",52,32,6,20,43.47826086956522
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 511, 'n_valid': 56, 'n_correct': 42}",90.736628,@Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } },d run(){while(e){try{(0);}catch(t e){}ren();}},164,46,9,118,76.12903225806451,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}']","['d', 'run', '(', ')', '{', 'while', '(', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 't', 'e', ')', '{', '}', 'ren', '(', ')', ';', '}', '}']",47,30,6,17,41.46341463414634
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 249, 'n_valid': 64, 'n_correct': 10}",97.149254,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@Override public int hashCode(){int r;return t;},92,48,14,44,56.41025641025641,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'r', ';', 'return', 't', ';', '}']",25,15,6,10,52.63157894736842
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 357, 'n_valid': 61, 'n_correct': 41}",98.836661,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; },@c int hashCode(){e=((l)?0:a);},220,31,14,189,91.747572815534,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['@', 'c', 'int', 'hashCode', '(', ')', '{', 'e', '=', '(', '(', 'l', ')', '?', '0', ':', 'a', ')', ';', '}']",67,20,6,47,77.04918032786885
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 495, 'n_valid': 79, 'n_correct': 45}",124.633639,"@Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); }",@Before d setUp()throws n{(new l[]{});(C);n();},317,47,11,270,88.23529411764706,"['@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}']","['@', 'Before', 'd', 'setUp', '(', ')', 'throws', 'n', '{', '(', 'new', 'l', '[', ']', '{', '}', ')', ';', '(', 'C', ')', ';', 'n', '(', ')', ';', '}']",72,27,6,45,68.18181818181817
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 286, 'n_valid': 41, 'n_correct': 27}",67.882161,@Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; },@c d init(f c)throws S{r.init(g);},107,34,10,73,75.25773195876289,"['@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}']","['@', 'c', 'd', 'init', '(', 'f', 'c', ')', 'throws', 'S', '{', 'r', '.', 'init', '(', 'g', ')', ';', '}']",24,19,6,5,27.77777777777778
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 533, 'n_valid': 125, 'n_correct': 48}",180.208163,@Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); },d init()throws n{e(InitPr()).ea=le((D));},344,41,10,303,90.71856287425148,"['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}']","['d', 'init', '(', ')', 'throws', 'n', '{', 'e', '(', 'InitPr', '(', ')', ')', '.', 'ea', '=', 'le', '(', '(', 'D', ')', ')', ';', '}']",71,24,6,47,72.3076923076923
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 477, 'n_valid': 71, 'n_correct': 41}",110.094582,"@Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); }","d setUp()throws E{if(D){("""");}supe.setUp();t();}",320,48,11,272,88.02588996763754,"['@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}']","['d', 'setUp', '(', ')', 'throws', 'E', '{', 'if', '(', 'D', ')', '{', '(', '""""', ')', ';', '}', 'supe', '.', 'setUp', '(', ')', ';', 't', '(', ')', ';', '}']",61,28,6,33,60.0
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 249, 'n_valid': 64, 'n_correct': 10}",96.495502,@Override public int hashCode() { int result = x; result = 31 * result + y; return result; },@Override public int hashCode(){int r;return t;},92,48,14,44,56.41025641025641,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}']","['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'r', ';', 'return', 't', ';', '}']",25,15,6,10,52.63157894736842
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 409, 'n_valid': 56, 'n_correct': 45}",88.498394,@Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); },d run(){for(;;i++){if(o){}}run();},171,34,9,137,84.5679012345679,"['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}']","['d', 'run', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'o', ')', '{', '}', '}', 'run', '(', ')', ';', '}']",62,25,6,37,66.07142857142857
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 323, 'n_valid': 59, 'n_correct': 25}",88.927136,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); }","d execute()throws B{super.execute();(("""").o);}",122,46,13,76,69.72477064220183,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['d', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,22,6,7,30.434782608695656
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 334, 'n_valid': 44, 'n_correct': 27}",70.783411,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); }","@c d execute()throws B{super.execute();(("""").o);}",126,49,13,77,68.14159292035397,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 275, 'n_valid': 67, 'n_correct': 22}",101.448892,@Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; },public i hashCode(){me.hashCoe();},168,34,14,134,87.01298701298701,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}']","['public', 'i', 'hashCode', '(', ')', '{', 'me', '.', 'hashCoe', '(', ')', ';', '}']",45,13,6,32,82.05128205128204
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 267, 'n_valid': 48, 'n_correct': 30}",75.288567,public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; },r get(e k){En e=(l)?n:e;},114,25,9,89,84.76190476190476,"['public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}']","['r', 'get', '(', 'e', 'k', ')', '{', 'En', 'e', '=', '(', 'l', ')', '?', 'n', ':', 'e', ';', '}']",30,19,6,11,45.83333333333333
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 613, 'n_valid': 71, 'n_correct': 55}",112.117744,"public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } }","t main(g[]s){try{l(""Main"",s);e();}catch(e e){l(E,"""");}}",295,55,10,240,84.21052631578947,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}']","['t', 'main', '(', 'g', '[', ']', 's', ')', '{', 'try', '{', 'l', '(', '""Main""', ',', 's', ')', ';', 'e', '(', ')', ';', '}', 'catch', '(', 'e', 'e', ')', '{', 'l', '(', 'E', ',', '""""', ')', ';', '}', '}']",78,38,6,40,55.55555555555556
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 239, 'n_valid': 35, 'n_correct': 21}",55.025972,"public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); }",d main(g[]args)throws E{n();},124,29,10,95,83.33333333333334,"['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'E', '{', 'n', '(', ')', ';', '}']",29,16,6,13,56.52173913043478
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 334, 'n_valid': 44, 'n_correct': 27}",70.809617,"@Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); }","@c d execute()throws B{super.execute();(("""").o);}",126,49,13,77,68.14159292035397,"['@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}']","['@', 'c', 'd', 'execute', '(', ')', 'throws', 'B', '{', 'super', '.', 'execute', '(', ')', ';', '(', '(', '""""', ')', '.', 'o', ')', ';', '}']",29,24,6,5,21.73913043478261
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 487, 'n_valid': 78, 'n_correct': 50}",131.674059,@Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; },t hashCode(){f=((l)?0:c);((u)hashC());},236,39,14,197,88.73873873873875,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}']","['t', 'hashCode', '(', ')', '{', 'f', '=', '(', '(', 'l', ')', '?', '0', ':', 'c', ')', ';', '(', '(', 'u', ')', 'hashC', '(', ')', ')', ';', '}']",67,27,6,40,65.57377049180327
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 291, 'n_valid': 51, 'n_correct': 34}",83.918259,@Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; },@c int hashCode(){(d?1:0);},213,27,14,186,93.46733668341707,"['@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}']","['@', 'c', 'int', 'hashCode', '(', ')', '{', '(', 'd', '?', '1', ':', '0', ')', ';', '}']",59,16,6,43,81.13207547169812
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_9.txt,0.9979,0.0026,"{'n_total': 406, 'n_valid': 91, 'n_correct': 35}",134.779865,"@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); }",boolean equals(c o){if(o){}that=(i)&&(d);},268,42,12,226,88.28125,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}']","['boolean', 'equals', '(', 'c', 'o', ')', '{', 'if', '(', 'o', ')', '{', '}', 'that', '=', '(', 'i', ')', '&&', '(', 'd', ')', ';', '}']",85,24,6,61,77.21518987341773
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 495, 'n_valid': 72, 'n_correct': 35}",115.575136,@Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } },n equals(t j){if(o instanceof y){equals(((N)));fe;}},152,52,12,100,71.42857142857143,"['@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['n', 'equals', '(', 't', 'j', ')', '{', 'if', '(', 'o', 'instanceof', 'y', ')', '{', 'equals', '(', '(', '(', 'N', ')', ')', ')', ';', 'fe', ';', '}', '}']",40,27,6,13,38.23529411764706
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 472, 'n_valid': 97, 'n_correct': 51}",146.667941,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); },d onCreate(d s){r.onCreat();(m());(l);},319,39,14,280,91.8032786885246,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}']","['d', 'onCreate', '(', 'd', 's', ')', '{', 'r', '.', 'onCreat', '(', ')', ';', '(', 'm', '(', ')', ')', ';', '(', 'l', ')', ';', '}']",61,24,6,37,67.27272727272727
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 286, 'n_valid': 49, 'n_correct': 22}",80.544323,@Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } },d onCreate(){super.onCreat;if(ll){e();}},171,40,14,131,83.43949044585987,"['@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}']","['d', 'onCreate', '(', ')', '{', 'super', '.', 'onCreat', ';', 'if', '(', 'll', ')', '{', 'e', '(', ')', ';', '}', '}']",35,20,6,15,51.72413793103448
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 332, 'n_valid': 79, 'n_correct': 28}",120.359335,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); },d onCreate(u s){super.onCreate();w();},140,38,14,102,80.95238095238095,"['@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}']","['d', 'onCreate', '(', 'u', 's', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'w', '(', ')', ';', '}']",27,18,6,9,42.85714285714285
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 418, 'n_valid': 70, 'n_correct': 37}",117.390109,@Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); },g toString(){for(e n:r){d(String());}r;},165,40,14,125,82.78145695364239,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","['g', 'toString', '(', ')', '{', 'for', '(', 'e', 'n', ':', 'r', ')', '{', 'd', '(', 'String', '(', ')', ')', ';', '}', 'r', ';', '}']",44,24,6,20,52.63157894736842
code2seq,METHOD_NAME,dd_char,small,dd_char_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 501, 'n_valid': 123, 'n_correct': 28}",183.215329,"@Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); }",tring toString(){if(nul==buff){return ll;}if(t==0){}return Str(this);},150,70,14,80,58.82352941176471,"['@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}']","['tring', 'toString', '(', ')', '{', 'if', '(', 'nul', '==', 'buff', ')', '{', 'return', 'll', ';', '}', 'if', '(', 't', '==', '0', ')', '{', '}', 'return', 'Str', '(', 'this', ')', ';', '}']",42,31,6,11,30.55555555555556
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_1.txt,0.3809,1.816,"{'n_total': 513, 'n_valid': 63, 'n_correct': 23}",93.841329,boolean equals(Object obj){(this==obj);if(null){(null);}if((other))if(null){}if((filename))(isLink);if(null){(null);}if((other))if(mimeType){(null);}if((other))if(null){(status);}((other));},boolean equals(Obect obj){(j);if(l){(l);}if((er))if(i){(l);}if((r))if(l){(s);}((er));},190,86,12,104,58.42696629213483,"['boolean', 'equals', '(', 'Object', 'obj', ')', '{', '(', 'this', '==', 'obj', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'null', ')', '{', '}', 'if', '(', '(', 'filename', ')', ')', '(', 'isLink', ')', ';', 'if', '(', 'null', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'mimeType', ')', '{', '(', 'null', ')', ';', '}', 'if', '(', '(', 'other', ')', ')', 'if', '(', 'null', ')', '{', '(', 'status', ')', ';', '}', '(', '(', 'other', ')', ')', ';', '}']","['boolean', 'equals', '(', 'Obect', 'obj', ')', '{', '(', 'j', ')', ';', 'if', '(', 'l', ')', '{', '(', 'l', ')', ';', '}', 'if', '(', '(', 'er', ')', ')', 'if', '(', 'i', ')', '{', '(', 'l', ')', ';', '}', 'if', '(', '(', 'r', ')', ')', 'if', '(', 'l', ')', '{', '(', 's', ')', ';', '}', '(', '(', 'er', ')', ')', ';', '}']",94,60,6,34,38.63636363636363
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_3.txt,0.4966,1.2994,"{'n_total': 532, 'n_valid': 77, 'n_correct': 32}",119.94805,boolean equals(Object obj){if(this==NTRUSigningKeyGenerationParameters)if(B){}if(basisType!=other){}if(1)if(d){}if(3){}if(hashAlg){if(other){}}if(getAlgorithmName()){}if(doubleToLongBits()){}if((keyNormBoundSq)){}if(sparse){}},n equals(Obj j){if(this==e!=A){if(r){}}if(ge()){}if(s())if((q)){}},226,66,12,160,74.76635514018692,"['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'NTRUSigningKeyGenerationParameters', ')', 'if', '(', 'B', ')', '{', '}', 'if', '(', 'basisType', '!=', 'other', ')', '{', '}', 'if', '(', '1', ')', 'if', '(', 'd', ')', '{', '}', 'if', '(', '3', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'other', ')', '{', '}', '}', 'if', '(', 'getAlgorithmName', '(', ')', ')', '{', '}', 'if', '(', 'doubleToLongBits', '(', ')', ')', '{', '}', 'if', '(', '(', 'keyNormBoundSq', ')', ')', '{', '}', 'if', '(', 'sparse', ')', '{', '}', '}']","['n', 'equals', '(', 'Obj', 'j', ')', '{', 'if', '(', 'this', '==', 'e', '!=', 'A', ')', '{', 'if', '(', 'r', ')', '{', '}', '}', 'if', '(', 'ge', '(', ')', ')', '{', '}', 'if', '(', 's', '(', ')', ')', 'if', '(', '(', 'q', ')', ')', '{', '}', '}']",86,46,6,40,50.0
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,onCreate_1.txt,0.8581,0.3497,"{'n_total': 1464, 'n_valid': 198, 'n_correct': 88}",304.172758,"void onCreate(Bundle savedInstanceState){policy=(MapView)(R)(true);(0).getDrawable(getResources().drawable);for(;;i++){road();(node).setSubDescription((this));(_).setImage();(nodeMarker);}NominatimPOIProvider(getResources(),R);((BitmapDrawable));add();(null);{for(POI poi:pois){(poi);(mDescription);if(null){((mThumbnail));}}}(getLatitude().getLatitude());("""");(oUrl);if(ok){getDrawable(getResources(),R);((BitmapDrawable)).Style();styler();if(null){}}("""").show();if(null){((""""));}getOverlays();}","d onCreate(e savedState){(t);for(;;i++){((s));(_).e();}((e));(l);{for(I i:s){(pn);if(ll){((T));}}}(g);;(l);if(ok){((e)).r;if(l){}}("""").w();{((""""));}g();}",496,153,14,343,71.16182572614107,"['void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'policy', '=', '(', 'MapView', ')', '(', 'R', ')', '(', 'true', ')', ';', '(', '0', ')', '.', 'getDrawable', '(', 'getResources', '(', ')', '.', 'drawable', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'road', '(', ')', ';', '(', 'node', ')', '.', 'setSubDescription', '(', '(', 'this', ')', ')', ';', '(', '_', ')', '.', 'setImage', '(', ')', ';', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', '(', 'getResources', '(', ')', ',', 'R', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', ';', 'add', '(', ')', ';', '(', 'null', ')', ';', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', '(', 'poi', ')', ';', '(', 'mDescription', ')', ';', 'if', '(', 'null', ')', '{', '(', '(', 'mThumbnail', ')', ')', ';', '}', '}', '}', '(', 'getLatitude', '(', ')', '.', 'getLatitude', '(', ')', ')', ';', '(', '""""', ')', ';', '(', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', ')', ';', '(', '(', 'BitmapDrawable', ')', ')', '.', 'Style', '(', ')', ';', 'styler', '(', ')', ';', 'if', '(', 'null', ')', '{', '}', '}', '(', '""""', ')', '.', 'show', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', '(', '""""', ')', ')', ';', '}', 'getOverlays', '(', ')', ';', '}']","['d', 'onCreate', '(', 'e', 'savedState', ')', '{', '(', 't', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', '(', 's', ')', ')', ';', '(', '_', ')', '.', 'e', '(', ')', ';', '}', '(', '(', 'e', ')', ')', ';', '(', 'l', ')', ';', '{', 'for', '(', 'I', 'i', ':', 's', ')', '{', '(', 'pn', ')', ';', 'if', '(', 'll', ')', '{', '(', '(', 'T', ')', ')', ';', '}', '}', '}', '(', 'g', ')', ';', ';', '(', 'l', ')', ';', 'if', '(', 'ok', ')', '{', '(', '(', 'e', ')', ')', '.', 'r', ';', 'if', '(', 'l', ')', '{', '}', '}', '(', '""""', ')', '.', 'w', '(', ')', ';', '{', '(', '(', '""""', ')', ')', ';', '}', 'g', '(', ')', ';', '}']",200,121,6,79,40.72164948453608
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,equals_4.txt,0.2134,2.5365,"{'n_total': 440, 'n_valid': 81, 'n_correct': 17}",120.539422,boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}},boolean equals(t o){if(i==obj){}{}if(ge()!=obj())if(N){}if(c)if(dbn){}if(otr)if(sse){}},173,87,12,86,53.41614906832298,"['boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', '}', '{', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '(', ')', ')', 'if', '(', 'N', ')', '{', '}', '{', '}', 'if', '(', 'c', ')', '{', '}', 'if', '(', 'db', ')', '{', '}', 'if', '(', 'dr', ')', '{', '}', 'if', '(', 'hashAlg', ')', '{', 'if', '(', 'null', ')', '{', '}', '}', '{', '}', 'if', '(', 'hashSeed', ')', '{', '}', 'if', '(', 'pkLen', ')', '{', '}', '{', '}', 'if', '(', 'q', '=', 'other', ')', 'if', '(', 'sparse', ')', '{', '}', '}']","['boolean', 'equals', '(', 't', 'o', ')', '{', 'if', '(', 'i', '==', 'obj', ')', '{', '}', '{', '}', 'if', '(', 'ge', '(', ')', '!=', 'obj', '(', ')', ')', 'if', '(', 'N', ')', '{', '}', 'if', '(', 'c', ')', 'if', '(', 'dbn', ')', '{', '}', 'if', '(', 'otr', ')', 'if', '(', 'sse', ')', '{', '}', '}']",94,54,6,40,45.45454545454545
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_6.txt,0.9852,0.0189,"{'n_total': 366, 'n_valid': 32, 'n_correct': 28}",50.939232,"void main(String[]args){try{setProperty("""","""");"""".verifyEncodedString();println();("""");("""");if(map)(""""+1);("""");("""");("""");(""""+3);(1);(1);(1);("""");getEncodedString();verifyEncodedString();if(null)("""");("""");}catch(Exception exception){(""""+exception);}}","d main(g[]args){try{(""""+"""");f();("""");}catch(n n){(n);}}",249,55,10,194,81.17154811715481,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'setProperty', '(', '""""', ',', '""""', ')', ';', '""""', '.', 'verifyEncodedString', '(', ')', ';', 'println', '(', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', 'if', '(', 'map', ')', '(', '""""', '+', '1', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '3', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '1', ')', ';', '(', '""""', ')', ';', 'getEncodedString', '(', ')', ';', 'verifyEncodedString', '(', ')', ';', 'if', '(', 'null', ')', '(', '""""', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', '(', '""""', '+', 'exception', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', '{', 'try', '{', '(', '""""', '+', '""""', ')', ';', 'f', '(', ')', ';', '(', '""""', ')', ';', '}', 'catch', '(', 'n', 'n', ')', '{', '(', 'n', ')', ';', '}', '}']",115,38,6,77,70.64220183486239
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_7.txt,0.8806,0.1783,"{'n_total': 1145, 'n_valid': 71, 'n_correct': 52}",116.752769,"void main(String[]args){if((length)(length)){System();}if(1){try{((args[0])).intValue();if(nbTraps){}}catch(NumberFormatException e){(1);}}try{MBeanServerFactory();if((servers)){(0);}{createMBeanServer();}ObjectName();(""""+snmpPort);("""").setTrapPort((snmpPort));snmpV(0,null);("""");try{("""");(url);}catch(Exception ex){("""");}}catch(Exception e){printStackTrace();}}","d main(g[]args){if((h)(h))if(1){try{((s[0]));{}}catch(n e){}}try{if((s)){(0);}{}("""");try{("""");(u);}catch(i x){("""");}}catch(c e){}}",362,130,10,232,65.9090909090909,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'length', ')', '(', 'length', ')', ')', '{', 'System', '(', ')', ';', '}', 'if', '(', '1', ')', '{', 'try', '{', '(', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', ')', '{', '}', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '1', ')', ';', '}', '}', 'try', '{', 'MBeanServerFactory', '(', ')', ';', 'if', '(', '(', 'servers', ')', ')', '{', '(', '0', ')', ';', '}', '{', 'createMBeanServer', '(', ')', ';', '}', 'ObjectName', '(', ')', ';', '(', '""""', '+', 'snmpPort', ')', ';', '(', '""""', ')', '.', 'setTrapPort', '(', '(', 'snmpPort', ')', ')', ';', 'snmpV', '(', '0', ',', 'null', ')', ';', '(', '""""', ')', ';', 'try', '{', '(', '""""', ')', ';', '(', 'url', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', '{', 'if', '(', '(', 'h', ')', '(', 'h', ')', ')', 'if', '(', '1', ')', '{', 'try', '{', '(', '(', 's', '[', '0', ']', ')', ')', ';', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', 'try', '{', 'if', '(', '(', 's', ')', ')', '{', '(', '0', ')', ';', '}', '{', '}', '(', '""""', ')', ';', 'try', '{', '(', '""""', ')', ';', '(', 'u', ')', ';', '}', 'catch', '(', 'i', 'x', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'c', 'e', ')', '{', '}', '}']",154,96,6,58,39.18918918918919
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_2.txt,0.9627,0.0823,"{'n_total': 1300, 'n_valid': 89, 'n_correct': 56}",137.854055,"void run(){if(debug){(""""+daemon);}while(running){try{currentTimeMillis();if(nextWakeup){(now);while(hasNext()){isValid();readyOps=(valid)?sk:0;if(debugWakeup){(""""+""""+(now)""""+""""+ch);}if(null){("""");}if(channel()){("""");}if(sk){if(debug){(""""+ch);}}try{ready();if(sk()){(ch);}if(sk()){sk();}if(sk){(ch);}if(0){(""""+""""+callbackCnt);}{}}catch(Throwable t){("""");lastException();}}}}catch(Throwable e){log("""",e);}}("""");}","d run(){if(g){(""""+n);}while(running){try{if(p){(w);while(t()){if(l()){("""");}if(k){if(g){(h);}}try{y();if(s){(h);}if(s)if(0){(k);}}catch(T t){}}}}catch(T e){g();}}("""");}",410,168,9,242,60.349127182044896,"['void', 'run', '(', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', ')', '{', '(', 'now', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'isValid', '(', ')', ';', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', ':', '0', ';', 'if', '(', 'debugWakeup', ')', '{', '(', '""""', '+', '""""', '+', '(', 'now', ')', '""""', '+', '""""', '+', 'ch', ')', ';', '}', 'if', '(', 'null', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'channel', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'sk', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', '+', 'ch', ')', ';', '}', '}', 'try', '{', 'ready', '(', ')', ';', 'if', '(', 'sk', '(', ')', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '(', ')', ')', '{', 'sk', '(', ')', ';', '}', 'if', '(', 'sk', ')', '{', '(', 'ch', ')', ';', '}', 'if', '(', '0', ')', '{', '(', '""""', '+', '""""', '+', 'callbackCnt', ')', ';', '}', '{', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', 'lastException', '(', ')', ';', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '(', '""""', ',', 'e', ')', ';', '}', '}', '(', '""""', ')', ';', '}']","['d', 'run', '(', ')', '{', 'if', '(', 'g', ')', '{', '(', '""""', '+', 'n', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'if', '(', 'p', ')', '{', '(', 'w', ')', ';', 'while', '(', 't', '(', ')', ')', '{', 'if', '(', 'l', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'k', ')', '{', 'if', '(', 'g', ')', '{', '(', 'h', ')', ';', '}', '}', 'try', '{', 'y', '(', ')', ';', 'if', '(', 's', ')', '{', '(', 'h', ')', ';', '}', 'if', '(', 's', ')', 'if', '(', '0', ')', '{', '(', 'k', ')', ';', '}', '}', 'catch', '(', 'T', 't', ')', '{', '}', '}', '}', '}', 'catch', '(', 'T', 'e', ')', '{', 'g', '(', ')', ';', '}', '}', '(', '""""', ')', ';', '}']",214,126,6,88,42.30769230769231
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_5.txt,0.9676,0.0574,"{'n_total': 1352, 'n_valid': 77, 'n_correct': 67}",131.363605,"void main(String[]args)throws Exception{if((2)){String=args[0].split()?3:(c[1]);p=(length)?"""":args[1];(("""")+"""");File(dir,"""");if(file()){File(dir,"""");}}(""""+"""");(ks);X=(X)getTrustManagers()[0];tm(null,new TrustManager[]{});("""").setSoTimeout();try{("""");}catch(SSLException e){println();}if(null){}((System)).getInstance();for(;;){((i)""""+cert).println(""""+toHexString());(cert).println(""""+toHexString());}("""");try{k=(length()==0)?0:(line);}catch(NumberFormatException e){("""");}(""""+"""");}","d main(g[]args)throws n{if((2)){(c[1]);p=(h)?"""":s[1];(("""")+"""");e(d,"""");if(e){e(d,"""");}}("""");(s);try{("""");}catch(n e){n();}if(l){}((m)).e();for(;;){((i)).p(""""+g);}("""");try{k=(l)?0:(e);}catch(n e){("""");}("""");}",481,207,10,274,58.17409766454352,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '(', '2', ')', ')', '{', 'String', '=', 'args', '[', '0', ']', '.', 'split', '(', ')', '?', '3', ':', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'length', ')', '?', '""""', ':', 'args', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'File', '(', 'dir', ',', '""""', ')', ';', 'if', '(', 'file', '(', ')', ')', '{', 'File', '(', 'dir', ',', '""""', ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '(', 'ks', ')', ';', 'X', '=', '(', 'X', ')', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'tm', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', '}', ')', ';', '(', '""""', ')', '.', 'setSoTimeout', '(', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'println', '(', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '(', '(', 'System', ')', ')', '.', 'getInstance', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', '""""', '+', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '(', 'cert', ')', '.', 'println', '(', '""""', '+', 'toHexString', '(', ')', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', 'length', '(', ')', '==', '0', ')', '?', '0', ':', '(', 'line', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'n', '{', 'if', '(', '(', '2', ')', ')', '{', '(', 'c', '[', '1', ']', ')', ';', 'p', '=', '(', 'h', ')', '?', '""""', ':', 's', '[', '1', ']', ';', '(', '(', '""""', ')', '+', '""""', ')', ';', 'e', '(', 'd', ',', '""""', ')', ';', 'if', '(', 'e', ')', '{', 'e', '(', 'd', ',', '""""', ')', ';', '}', '}', '(', '""""', ')', ';', '(', 's', ')', ';', 'try', '{', '(', '""""', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', 'n', '(', ')', ';', '}', 'if', '(', 'l', ')', '{', '}', '(', '(', 'm', ')', ')', '.', 'e', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', '.', 'p', '(', '""""', '+', 'g', ')', ';', '}', '(', '""""', ')', ';', 'try', '{', 'k', '=', '(', 'l', ')', '?', '0', ':', '(', 'e', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', ')', ';', '}']",237,164,6,73,31.601731601731604
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_16.txt,0.992,0.0171,"{'n_total': 1355, 'n_valid': 103, 'n_correct': 77}",163.878241,"void main(String[]args)throws IOException{if(length){("""");(1);}File(directory,"""");if(false){(""""+toString()+"""");(1);}if(false){(""""+toString()+"""");(1);try(BufferedReader chunkreader=((chunkfile))){try(BufferedReader posreader=((posfile))){while(true){cl();if(null)(cl);if((ctsent)){put();}if(pl){(pt);}}}}for(ChunkTree postree:posSentences){(postree());if(chunktree){("""");if(chunktree){(""""+chunktree);}if((chunktree)){}(toString());('n');}line++;}(""""+"""");}}","d main(g[]arg)throws n{if(l){("""");}if(f){("""");(1);try(r r=((e))){try(B p=((p))){while(r){f();if((t)){}if(l){(t);}}}}for(h p:p){(p);if(c){("""");if(e){(e);}if((c))(g());('n');}}(""""+"""");}}",455,184,10,271,60.89887640449439,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'if', '(', 'length', ')', '{', '(', '""""', ')', ';', '(', '1', ')', ';', '}', 'File', '(', 'directory', ',', '""""', ')', ';', 'if', '(', 'false', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', '(', '1', ')', ';', '}', 'if', '(', 'false', ')', '{', '(', '""""', '+', 'toString', '(', ')', '+', '""""', ')', ';', '(', '1', ')', ';', 'try', '(', 'BufferedReader', 'chunkreader', '=', '(', '(', 'chunkfile', ')', ')', ')', '{', 'try', '(', 'BufferedReader', 'posreader', '=', '(', '(', 'posfile', ')', ')', ')', '{', 'while', '(', 'true', ')', '{', 'cl', '(', ')', ';', 'if', '(', 'null', ')', '(', 'cl', ')', ';', 'if', '(', '(', 'ctsent', ')', ')', '{', 'put', '(', ')', ';', '}', 'if', '(', 'pl', ')', '{', '(', 'pt', ')', ';', '}', '}', '}', '}', 'for', '(', 'ChunkTree', 'postree', ':', 'posSentences', ')', '{', '(', 'postree', '(', ')', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', ')', ';', 'if', '(', 'chunktree', ')', '{', '(', '""""', '+', 'chunktree', ')', ';', '}', 'if', '(', '(', 'chunktree', ')', ')', '{', '}', '(', 'toString', '(', ')', ')', ';', '(', ""'n'"", ')', ';', '}', 'line', '++', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}']","['d', 'main', '(', 'g', '[', ']', 'arg', ')', 'throws', 'n', '{', 'if', '(', 'l', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'f', ')', '{', '(', '""""', ')', ';', '(', '1', ')', ';', 'try', '(', 'r', 'r', '=', '(', '(', 'e', ')', ')', ')', '{', 'try', '(', 'B', 'p', '=', '(', '(', 'p', ')', ')', ')', '{', 'while', '(', 'r', ')', '{', 'f', '(', ')', ';', 'if', '(', '(', 't', ')', ')', '{', '}', 'if', '(', 'l', ')', '{', '(', 't', ')', ';', '}', '}', '}', '}', 'for', '(', 'h', 'p', ':', 'p', ')', '{', '(', 'p', ')', ';', 'if', '(', 'c', ')', '{', '(', '""""', ')', ';', 'if', '(', 'e', ')', '{', '(', 'e', ')', ';', '}', 'if', '(', '(', 'c', ')', ')', '(', 'g', '(', ')', ')', ';', '(', ""'n'"", ')', ';', '}', '}', '(', '""""', '+', '""""', ')', ';', '}', '}']",203,145,6,58,29.441624365482237
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_4.txt,0.9797,0.0271,"{'n_total': 1696, 'n_valid': 108, 'n_correct': 94}",170.635784,"void main(String[]args)throws Exception{jsap(QuasiSuccinctEntityHash,"""",new Parameter[]{FlaggedOption("""",""""),FlaggedOption("""",'q',"""")});jsapResult((""""),(""""),(""""));((("""")));while((readLine())!=null){(parts[1]);(x);}surfaceForms=new Iterable<>(){<CharSequence>iterator(){new AbstractObjectIterator<>(){Iterator<StringAndCandidate>i();hasNext(){}};}};ShiftAddXorSignedStringMap()[size()];EliasFanoMonotoneLongBigList[size()];for(;;i++){new LongIterable(){{(iterator());}};((i));valuesA[i]=(lI);}("""");(quasiSuccinctEntityHash);(getString());("""");checkMap();}","d main(t[]args)throws n{p(S,"""",new P[]{F("""",""""),n("""","""")});t((""""),(""""),(""""));((("""")));while((e)){(s[1]);}s=new t(){<e>r(){new r(){<e>i(){}};}}[e()];for(;;){new e(){{(i);}};((i));a[i]=(I);}(g);("""");}",554,198,10,356,65.44117647058823,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'jsap', '(', 'QuasiSuccinctEntityHash', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'FlaggedOption', '(', '""""', ',', '""""', ')', ',', 'FlaggedOption', '(', '""""', ',', ""'q'"", ',', '""""', ')', '}', ')', ';', 'jsapResult', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', '(', 'parts', '[', '1', ']', ')', ';', '(', 'x', ')', ';', '}', 'surfaceForms', '=', 'new', 'Iterable', '<', '>', '(', ')', '{', '<', 'CharSequence', '>', 'iterator', '(', ')', '{', 'new', 'AbstractObjectIterator', '<', '>', '(', ')', '{', 'Iterator', '<', 'StringAndCandidate', '>', 'i', '(', ')', ';', 'hasNext', '(', ')', '{', '}', '}', ';', '}', '}', ';', 'ShiftAddXorSignedStringMap', '(', ')', '[', 'size', '(', ')', ']', ';', 'EliasFanoMonotoneLongBigList', '[', 'size', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'new', 'LongIterable', '(', ')', '{', '{', '(', 'iterator', '(', ')', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'valuesA', '[', 'i', ']', '=', '(', 'lI', ')', ';', '}', '(', '""""', ')', ';', '(', 'quasiSuccinctEntityHash', ')', ';', '(', 'getString', '(', ')', ')', ';', '(', '""""', ')', ';', 'checkMap', '(', ')', ';', '}']","['d', 'main', '(', 't', '[', ']', 'args', ')', 'throws', 'n', '{', 'p', '(', 'S', ',', '""""', ',', 'new', 'P', '[', ']', '{', 'F', '(', '""""', ',', '""""', ')', ',', 'n', '(', '""""', ',', '""""', ')', '}', ')', ';', 't', '(', '(', '""""', ')', ',', '(', '""""', ')', ',', '(', '""""', ')', ')', ';', '(', '(', '(', '""""', ')', ')', ')', ';', 'while', '(', '(', 'e', ')', ')', '{', '(', 's', '[', '1', ']', ')', ';', '}', 's', '=', 'new', 't', '(', ')', '{', '<', 'e', '>', 'r', '(', ')', '{', 'new', 'r', '(', ')', '{', '<', 'e', '>', 'i', '(', ')', '{', '}', '}', ';', '}', '}', '[', 'e', '(', ')', ']', ';', 'for', '(', ';', ';', ')', '{', 'new', 'e', '(', ')', '{', '{', '(', 'i', ')', ';', '}', '}', ';', '(', '(', 'i', ')', ')', ';', 'a', '[', 'i', ']', '=', '(', 'I', ')', ';', '}', '(', 'g', ')', ';', '(', '""""', ')', ';', '}']",205,157,6,48,24.12060301507537
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_1.txt,0.4649,8.0888,"{'n_total': 4612, 'n_valid': 395, 'n_correct': 94}",611.278882,"{if(isReady){(""""+"""");}if((0)|(indexOf()>0)|(("""".separator)=0)){(getClass().getName()+""""+"""");}if(0){cmdAndArgs();}cmdAndArgs();try{rt((String[cmdAndArgs()]),wd);("""");if("""".equals){(proc());}((proc()));errReaderThread=new Thread(){void run(){}};((cgiHeaderStream));while(isRunning){try{while(((line())!=null)&("""".equals)){if(2){(""""+"""");}if(("""")){(getSCFromHttpStatusLine);}if(("""")>0){line(0,("""")).substring(indexOf()+1);if(("""")){((value));(value);}(""""+"""");}}try{while(((bBuf))){if(debug){("""");}write();}}finally{if(1){while(((bBuf))){}}}exitValue();}catch(IllegalThreadStateException e){try{(0);}catch(InterruptedException ignored){}}}}catch(IOException e){(""""+e);}{if(cgiHeaderReader){try{close();}catch(IOException ioe){(""""+ioe);}}if(null){try{}catch(IOException ioe){}catch(InterruptedException e){("""");}}if(4){("""");}if(null){}}}","{if(y){(""""+"""");}if((0)|(f()>0)|((o)0)){(e);}if(0){s();}c();try{r((Sg[cmdArs()]),d);("""");if(s){(c());}((p()));d=new T(){d run(){}};((am));while(g){try{while(((l)=l)&("""".ls)){if(2){("""");}if(("""")){(g);if(("""")){((ue)e);}("""");}}try{while(((b))){if(d){("""");}w;}}finally{if(1){while(((bf))){}}}Vue;}catch(n e){try{(0);}catch(on i){}}}}catch(IO e){(""""+e);}{if(iH){try{}catch(Ix e){("""");}}if(null){try{}catch(n e){("""");}}if(4){("""");}if(nl){}}}",830,434,9,396,48.23386114494519,"['{', 'if', '(', 'isReady', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '0', ')', '|', '(', 'indexOf', '(', ')', '>', '0', ')', '|', '(', '(', '""""', '.', 'separator', ')', '=', '0', ')', ')', '{', '(', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '""""', '+', '""""', ')', ';', '}', 'if', '(', '0', ')', '{', 'cmdAndArgs', '(', ')', ';', '}', 'cmdAndArgs', '(', ')', ';', 'try', '{', 'rt', '(', '(', 'String', '[', 'cmdAndArgs', '(', ')', ']', ')', ',', 'wd', ')', ';', '(', '""""', ')', ';', 'if', '(', '""""', '.', 'equals', ')', '{', '(', 'proc', '(', ')', ')', ';', '}', '(', '(', 'proc', '(', ')', ')', ')', ';', 'errReaderThread', '=', 'new', 'Thread', '(', ')', '{', 'void', 'run', '(', ')', '{', '}', '}', ';', '(', '(', 'cgiHeaderStream', ')', ')', ';', 'while', '(', 'isRunning', ')', '{', 'try', '{', 'while', '(', '(', '(', 'line', '(', ')', ')', '!=', 'null', ')', '&', '(', '""""', '.', 'equals', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'getSCFromHttpStatusLine', ')', ';', '}', 'if', '(', '(', '""""', ')', '>', '0', ')', '{', 'line', '(', '0', ',', '(', '""""', ')', ')', '.', 'substring', '(', 'indexOf', '(', ')', '+', '1', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', '(', 'value', ')', ')', ';', '(', 'value', ')', ';', '}', '(', '""""', '+', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', 'if', '(', 'debug', ')', '{', '(', '""""', ')', ';', '}', 'write', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'bBuf', ')', ')', ')', '{', '}', '}', '}', 'exitValue', '(', ')', ';', '}', 'catch', '(', 'IllegalThreadStateException', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ignored', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '{', 'if', '(', 'cgiHeaderReader', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '(', '""""', '+', 'ioe', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'null', ')', '{', '}', '}', '}']","['{', 'if', '(', 'y', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '(', '0', ')', '|', '(', 'f', '(', ')', '>', '0', ')', '|', '(', '(', 'o', ')', '0', ')', ')', '{', '(', 'e', ')', ';', '}', 'if', '(', '0', ')', '{', 's', '(', ')', ';', '}', 'c', '(', ')', ';', 'try', '{', 'r', '(', '(', 'Sg', '[', 'cmdArs', '(', ')', ']', ')', ',', 'd', ')', ';', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', '(', 'c', '(', ')', ')', ';', '}', '(', '(', 'p', '(', ')', ')', ')', ';', 'd', '=', 'new', 'T', '(', ')', '{', 'd', 'run', '(', ')', '{', '}', '}', ';', '(', '(', 'am', ')', ')', ';', 'while', '(', 'g', ')', '{', 'try', '{', 'while', '(', '(', '(', 'l', ')', '=', 'l', ')', '&', '(', '""""', '.', 'ls', ')', ')', '{', 'if', '(', '2', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', 'g', ')', ';', 'if', '(', '(', '""""', ')', ')', '{', '(', '(', 'ue', ')', 'e', ')', ';', '}', '(', '""""', ')', ';', '}', '}', 'try', '{', 'while', '(', '(', '(', 'b', ')', ')', ')', '{', 'if', '(', 'd', ')', '{', '(', '""""', ')', ';', '}', 'w', ';', '}', '}', 'finally', '{', 'if', '(', '1', ')', '{', 'while', '(', '(', '(', 'bf', ')', ')', ')', '{', '}', '}', '}', 'Vue', ';', '}', 'catch', '(', 'n', 'e', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'on', 'i', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IO', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '{', 'if', '(', 'iH', ')', '{', 'try', '{', '}', 'catch', '(', 'Ix', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', 'null', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'if', '(', '4', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'nl', ')', '{', '}', '}', '}']",392,323,6,69,17.875647668393782
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_5.txt,0.7282,0.9675,"{'n_total': 3224, 'n_valid': 193, 'n_correct': 160}",305.952653,"@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG("""",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG("""",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){("""");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG("""",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn("""",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG("""",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG("""",ie);}catch(RuntimeException e){warn("""",StreamingContainer);}if(isActive()){LOG("""",eventloop);}}}("""");}","@S()i run(ng r){try{if(r){try{(D);}catch(I e){(e);}b("""",s);}while(e){for(g r:d){c();(r);}while(y()){if(l){(c);}}if(d){(e);}if(i){}if(s)try{if(e){("""");}}catch(E x){}if(d)if(a){try{p();}catch(n e){L("""",e);}}}}finally{for(r c:a){(l);}for(d d:c){try{}catch(n e){}}try{}catch(n e){n();}if(s){try{s();}catch(n i){}catch(R e){("""");}if(i){G(p);}}}("""");}",1069,345,9,724,68.30188679245282,"['@', 'SuppressWarnings', '(', '{', '}', ')', 'void', 'run', '(', 'long', 'runMillis', ')', '{', 'List', '<', 'Thread', '>', 'containerThreads', ';', 'try', '{', 'if', '(', 'perContainerBufferServer', ')', '{', '(', '8', ')', ';', 'try', '{', '(', 'DiskStorage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', 'bufferServerAddress', '(', ')', ';', 'LOG', '(', '""""', ',', 'bufferServerAddress', ')', ';', '}', 'endMillis', '=', 'currentTimeMillis', '(', ')', '+', 'runMillis', ';', 'while', '(', 'appDone', ')', '{', 'for', '(', 'String', 'containerIdStr', ':', 'dnmgr', ')', '{', 'c', '(', ')', ';', 'if', '(', 'null', ')', '{', '(', 'r', ')', ';', '}', '(', 'containerIdStr', ')', ';', 'LOG', '(', '""""', ',', 'containerIdStr', ')', ';', '(', 'containerIdStr', ')', ';', '}', 'while', '(', 'isEmpty', '(', ')', ')', '{', 'if', '(', 'null', ')', '{', '(', 'containerThreads', ')', ';', '}', '}', 'if', '(', 'heartbeatMonitoringEnabled', ')', '{', '(', 'false', ')', ';', '}', 'if', '(', 'isEmpty', '(', ')', ')', '{', '}', 'if', '(', 'endMillis', ')', '{', '}', 'try', '{', 'if', '(', 'exitCondition', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '}', 'if', '(', 'Thread', ')', '{', '}', 'if', '(', 'appDone', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '(', '""""', ',', 'e', ')', ';', '}', '}', '}', '}', 'finally', '{', 'for', '(', 'LocalStreamingContainer', 'lsc', ':', 'values', '(', ')', ')', '{', '(', 'lsc', ')', ';', 'triggerHeartbeat', '(', ')', ';', '}', 'for', '(', 'Thread', 'thread', ':', 'containerThreads', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'debug', '(', ')', ';', '}', '}', 'try', '{', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'warn', '(', '""""', ',', 'e', ')', ';', '}', 'if', '(', 'bufferServerAddress', ')', '{', 'try', '{', 'stop', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '(', '""""', ',', 'e', ')', ';', '}', '}', 'if', '(', 'eventLoopThread', ')', '{', 'try', '{', '(', '0', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', 'LOG', '(', '""""', ',', 'ie', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'warn', '(', '""""', ',', 'StreamingContainer', ')', ';', '}', 'if', '(', 'isActive', '(', ')', ')', '{', 'LOG', '(', '""""', ',', 'eventloop', ')', ';', '}', '}', '}', '(', '""""', ')', ';', '}']","['@', 'S', '(', ')', 'i', 'run', '(', 'ng', 'r', ')', '{', 'try', '{', 'if', '(', 'r', ')', '{', 'try', '{', '(', 'D', ')', ';', '}', 'catch', '(', 'I', 'e', ')', '{', '(', 'e', ')', ';', '}', 'b', '(', '""""', ',', 's', ')', ';', '}', 'while', '(', 'e', ')', '{', 'for', '(', 'g', 'r', ':', 'd', ')', '{', 'c', '(', ')', ';', '(', 'r', ')', ';', '}', 'while', '(', 'y', '(', ')', ')', '{', 'if', '(', 'l', ')', '{', '(', 'c', ')', ';', '}', '}', 'if', '(', 'd', ')', '{', '(', 'e', ')', ';', '}', 'if', '(', 'i', ')', '{', '}', 'if', '(', 's', ')', 'try', '{', 'if', '(', 'e', ')', '{', '(', '""""', ')', ';', '}', '}', 'catch', '(', 'E', 'x', ')', '{', '}', 'if', '(', 'd', ')', 'if', '(', 'a', ')', '{', 'try', '{', 'p', '(', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', 'L', '(', '""""', ',', 'e', ')', ';', '}', '}', '}', '}', 'finally', '{', 'for', '(', 'r', 'c', ':', 'a', ')', '{', '(', 'l', ')', ';', '}', 'for', '(', 'd', 'd', ':', 'c', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', 'n', '(', ')', ';', '}', 'if', '(', 's', ')', '{', 'try', '{', 's', '(', ')', ';', '}', 'catch', '(', 'n', 'i', ')', '{', '}', 'catch', '(', 'R', 'e', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'i', ')', '{', 'G', '(', 'p', ')', ';', '}', '}', '}', '(', '""""', ')', ';', '}']",364,253,6,111,31.00558659217877
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_13.txt,0.863,0.1554,"{'n_total': 3630, 'n_valid': 403, 'n_correct': 138}",615.898386,"void main(String[]argv){for(;;optind++){if(argv[optind].equals("""")){protocol[optind];}if(argv[optind].equals("""")){host[optind];}if(argv[optind].equals("""")){user[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){argv[optind];}if(argv[optind].equals("""")){optind++;}if(argv[optind].startsWith("""")){("""").exit();}{}}try{if(optind)(argv[optind]).getInstance();if(url=null){urln();if(protocol) store;if(host)connect();}{("""").exit();}(mbox);if(exists()){println();(1);}(UIDFolder);{("""");}if(verbose){(""""+totalMessages);(FLAGS);("""");(msgs); for(;;){("""");}}{if(null)println();}}catch(Exception ex){(""""+getMessage());}}","o main(g[]argv){for(;;d++){{r[o];}if(v[i].s()){t[d];}if(a){r[d];}if(("""")){v[d];}if(a[d].u("""")){}if(v[o].q("""")){v[o];}if(v[d].e("""")){v[i];}if(l(""""))if(g[o].s()){}}try{if(d)(av[d]).c;if(l){f(r) ;if(h)it;};if(ex){};{("""");}if(e){(""""+s);for(;;){("""");}}{}}catch(E x){(+g);}}",708,268,10,440,63.03724928366762,"['void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'protocol', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'host', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'user', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'argv', '[', 'optind', ']', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""""', ')', ')', '{', 'optind', '++', ';', '}', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""""', ')', ')', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '{', '}', '}', 'try', '{', 'if', '(', 'optind', ')', '(', 'argv', '[', 'optind', ']', ')', '.', 'getInstance', '(', ')', ';', 'if', '(', 'url', '=', 'null', ')', '{', 'urln', '(', ')', ';', 'if', '(', 'protocol', ')', 'store', ';', 'if', '(', 'host', ')', 'connect', '(', ')', ';', '}', '{', '(', '""""', ')', '.', 'exit', '(', ')', ';', '}', '(', 'mbox', ')', ';', 'if', '(', 'exists', '(', ')', ')', '{', 'println', '(', ')', ';', '(', '1', ')', ';', '}', '(', 'UIDFolder', ')', ';', '{', '(', '""""', ')', ';', '}', 'if', '(', 'verbose', ')', '{', '(', '""""', '+', 'totalMessages', ')', ';', '(', 'FLAGS', ')', ';', '(', '""""', ')', ';', '(', 'msgs', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', '}', '}', '{', 'if', '(', 'null', ')', 'println', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']","['o', 'main', '(', 'g', '[', ']', 'argv', ')', '{', 'for', '(', ';', ';', 'd', '++', ')', '{', '{', 'r', '[', 'o', ']', ';', '}', 'if', '(', 'v', '[', 'i', ']', '.', 's', '(', ')', ')', '{', 't', '[', 'd', ']', ';', '}', 'if', '(', 'a', ')', '{', 'r', '[', 'd', ']', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'v', '[', 'd', ']', ';', '}', 'if', '(', 'a', '[', 'd', ']', '.', 'u', '(', '""""', ')', ')', '{', '}', 'if', '(', 'v', '[', 'o', ']', '.', 'q', '(', '""""', ')', ')', '{', 'v', '[', 'o', ']', ';', '}', 'if', '(', 'v', '[', 'd', ']', '.', 'e', '(', '""""', ')', ')', '{', 'v', '[', 'i', ']', ';', '}', 'if', '(', 'l', '(', '""""', ')', ')', 'if', '(', 'g', '[', 'o', ']', '.', 's', '(', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'd', ')', '(', 'av', '[', 'd', ']', ')', '.', 'c', ';', 'if', '(', 'l', ')', '{', 'f', '(', 'r', ')', ';', 'if', '(', 'h', ')', 'it', ';', '}', ';', 'if', '(', 'ex', ')', '{', '}', ';', '{', '(', '""""', ')', ';', '}', 'if', '(', 'e', ')', '{', '(', '""""', '+', 's', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '""""', ')', ';', '}', '}', '{', '}', '}', 'catch', '(', 'E', 'x', ')', '{', '(', '+', 'g', ')', ';', '}', '}']",332,224,6,108,33.12883435582822
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_1.txt,0.5012,1.029,"{'n_total': 3072, 'n_valid': 244, 'n_correct': 78}",386.404246,"void main(String[]args)throws Exception{if(0){args=new String[]{""""};}for(;;i++){if(""""){(args[i]);}if(""""){(args[i]);(""""+"""");}if("""".equals()){pause=(args[i])*0;}if(""""){}if("""".equals(args[i])){}if("""".equals(args[i])){(args[i]);(""""+"""");}if("""".equals(args[i])){channelOptions(args[i]);(""""+channelOptions);}if((args[i])){(""""+(4)+"""");}if("""".equals(args[i])){("""".equals(args[i]));}if("""".equals(args[i])){}if("""".equals(args[i])){(1);}}(startoptions);(Shutdown());while(threads) {test= LoadTest();}(DEFAULT);("""");sleep();}","d main(t[]args)throws n{if(0){g=new S[]{};}for(;;){if(""""){(r[i]);}if(""""){(s[i]);("""");}if("""".e){e=(a[i])*0;}if("""".s(g[i])){(a[i]);s();}if((a)){((4)+"""");}if("""".a()){((a[i]));}if(s(s[i])){}if(s(r[i])){}}(s);while(s){e();}(D);("""");}",512,228,10,284,56.57370517928288,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""""', '}', ';', '}', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '}', 'if', '(', '""""', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', ')', ')', '{', 'pause', '=', '(', 'args', '[', 'i', ']', ')', '*', '0', ';', '}', 'if', '(', '""""', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '(', 'args', '[', 'i', ']', ')', ';', '(', '""""', '+', 'channelOptions', ')', ';', '}', 'if', '(', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '+', '(', '4', ')', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', ';', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', '""""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', '(', '1', ')', ';', '}', '}', '(', 'startoptions', ')', ';', '(', 'Shutdown', '(', ')', ')', ';', 'while', '(', 'threads', ')', '{', 'test', '=', 'LoadTest', '(', ')', ';', '}', '(', 'DEFAULT', ')', ';', '(', '""""', ')', ';', 'sleep', '(', ')', ';', '}']","['d', 'main', '(', 't', '[', ']', 'args', ')', 'throws', 'n', '{', 'if', '(', '0', ')', '{', 'g', '=', 'new', 'S', '[', ']', '{', '}', ';', '}', 'for', '(', ';', ';', ')', '{', 'if', '(', '""""', ')', '{', '(', 'r', '[', 'i', ']', ')', ';', '}', 'if', '(', '""""', ')', '{', '(', 's', '[', 'i', ']', ')', ';', '(', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'e', ')', '{', 'e', '=', '(', 'a', '[', 'i', ']', ')', '*', '0', ';', '}', 'if', '(', '""""', '.', 's', '(', 'g', '[', 'i', ']', ')', ')', '{', '(', 'a', '[', 'i', ']', ')', ';', 's', '(', ')', ';', '}', 'if', '(', '(', 'a', ')', ')', '{', '(', '(', '4', ')', '+', '""""', ')', ';', '}', 'if', '(', '""""', '.', 'a', '(', ')', ')', '{', '(', '(', 'a', '[', 'i', ']', ')', ')', ';', '}', 'if', '(', 's', '(', 's', '[', 'i', ']', ')', ')', '{', '}', 'if', '(', 's', '(', 'r', '[', 'i', ']', ')', ')', '{', '}', '}', '(', 's', ')', ';', 'while', '(', 's', ')', '{', 'e', '(', ')', ';', '}', '(', 'D', ')', ';', '(', '""""', ')', ';', '}']",278,189,6,89,32.72058823529412
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_6.txt,0.8833,0.3029,"{'n_total': 1377, 'n_valid': 96, 'n_correct': 82}",149.068227,"void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug("""",e);(remotePort);closeSockets();}{if(debug){message(""""+""""+"""",ex);}}if(toProxySocket){}try{out=""""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("""");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"""");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("""")){("""");}try{}catch(IOException ioe){error("""",ioe);}RWGroupJSSProxy();}","void run(){r[1];try{(n);}catch(n e){(r);if(d){e(""""+"""",x);}}if(o){}try{o=""""+(m);try{}catch(p d){}while(n){if(i){("""");}if('r'){if(h){}}}}catch(I i){t(0,"""");}catch(n d){r();}if(("""")){}try{}catch(I i){r();}}",480,203,9,277,58.81104033970276,"['void', 'run', '(', ')', '{', 'prebuffer', '[', '1', ']', ';', 'try', '{', '(', 'inconnection', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '(', '""""', ',', 'e', ')', ';', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', '}', '{', 'if', '(', 'debug', ')', '{', 'message', '(', '""""', '+', '""""', '+', '""""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', ')', '{', '}', 'try', '{', 'out', '=', '""""', '+', '(', 'msg', ')', ';', 'try', '{', 'getBytes', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', '}', '(', 'b', ')', ';', 'while', '(', 'newlinesSeen', ')', '{', 'i', '(', ')', ';', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'length', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '(', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'error', '(', '""""', ',', 'ioe', ')', ';', '}', 'RWGroupJSSProxy', '(', ')', ';', '}']","['void', 'run', '(', ')', '{', 'r', '[', '1', ']', ';', 'try', '{', '(', 'n', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'r', ')', ';', 'if', '(', 'd', ')', '{', 'e', '(', '""""', '+', '""""', ',', 'x', ')', ';', '}', '}', 'if', '(', 'o', ')', '{', '}', 'try', '{', 'o', '=', '""""', '+', '(', 'm', ')', ';', 'try', '{', '}', 'catch', '(', 'p', 'd', ')', '{', '}', 'while', '(', 'n', ')', '{', 'if', '(', 'i', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', ""'r'"", ')', '{', 'if', '(', 'h', ')', '{', '}', '}', '}', '}', 'catch', '(', 'I', 'i', ')', '{', 't', '(', '0', ',', '""""', ')', ';', '}', 'catch', '(', 'n', 'd', ')', '{', 'r', '(', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', '}', 'try', '{', '}', 'catch', '(', 'I', 'i', ')', '{', 'r', '(', ')', ';', '}', '}']",187,146,6,41,22.65193370165746
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_3.txt,0.8046,0.4488,"{'n_total': 2434, 'n_valid': 132, 'n_correct': 113}",225.781576,"void main(String[]args){jsap(Word(),"""",new Parameter[]{UnflaggedOption(""""._,""""),(""""),Switch("""","""")});try(BufferedReader lines=(FileReader())){(header[0]).start("""");indexToWord=new ArrayList<>();for(;;){}pl();("""");for(;;){for(;;){(lineEntries[col]);entries[col]=columnAbsSum[col]=(entry);}}}golombModuli[vectorSize];for(;;){if(numWords){f=((double)numWords)/columnAbsSum[col];m=(int)((2).log());}golombModuli[col];}((utf()));permutation[numWords];for(;;){((i))[newPos]=i;}(0);LongArrayList("""",bps);(numWords);if(_){(filename);}if(("""")){for(;;){((i));for(;;){expected[i];got[col];if(got){error("""",got);(1);}}}done();}}","d main(t[]args){p(d(),"""",new P[]{U(""""._,"""")});try(r s=(r)){(r[0]).s("""");A();for(;;){}l();for(;;){for(;;){(l);s[l]=m[l]=(y);}}}i[v];for(;;){if(s){f=((d))/m[l];m();}i[l];}((f()));n[s];for(;;){((i))[n];}(m);if(_){(e);}if(("""")){for(;;){((i));for(;;){d[i][c];if(g){r("""",1);}}}}}",616,273,10,343,56.60066006600661,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'jsap', '(', 'Word', '(', ')', ',', '""""', ',', 'new', 'Parameter', '[', ']', '{', 'UnflaggedOption', '(', '""""', '.', '_', ',', '""""', ')', ',', '(', '""""', ')', ',', 'Switch', '(', '""""', ',', '""""', ')', '}', ')', ';', 'try', '(', 'BufferedReader', 'lines', '=', '(', 'FileReader', '(', ')', ')', ')', '{', '(', 'header', '[', '0', ']', ')', '.', 'start', '(', '""""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', 'pl', '(', ')', ';', '(', '""""', ')', ';', 'for', '(', ';', ';', ')', '{', 'for', '(', ';', ';', ')', '{', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'col', ']', '=', 'columnAbsSum', '[', 'col', ']', '=', '(', 'entry', ')', ';', '}', '}', '}', 'golombModuli', '[', 'vectorSize', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 'numWords', ')', '{', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', '(', '(', '2', ')', '.', 'log', '(', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', ';', '}', '(', '(', 'utf', '(', ')', ')', ')', ';', 'permutation', '[', 'numWords', ']', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', '[', 'newPos', ']', '=', 'i', ';', '}', '(', '0', ')', ';', 'LongArrayList', '(', '""""', ',', 'bps', ')', ';', '(', 'numWords', ')', ';', 'if', '(', '_', ')', '{', '(', 'filename', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'expected', '[', 'i', ']', ';', 'got', '[', 'col', ']', ';', 'if', '(', 'got', ')', '{', 'error', '(', '""""', ',', 'got', ')', ';', '(', '1', ')', ';', '}', '}', '}', 'done', '(', ')', ';', '}', '}']","['d', 'main', '(', 't', '[', ']', 'args', ')', '{', 'p', '(', 'd', '(', ')', ',', '""""', ',', 'new', 'P', '[', ']', '{', 'U', '(', '""""', '.', '_', ',', '""""', ')', '}', ')', ';', 'try', '(', 'r', 's', '=', '(', 'r', ')', ')', '{', '(', 'r', '[', '0', ']', ')', '.', 's', '(', '""""', ')', ';', 'A', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '}', 'l', '(', ')', ';', 'for', '(', ';', ';', ')', '{', 'for', '(', ';', ';', ')', '{', '(', 'l', ')', ';', 's', '[', 'l', ']', '=', 'm', '[', 'l', ']', '=', '(', 'y', ')', ';', '}', '}', '}', 'i', '[', 'v', ']', ';', 'for', '(', ';', ';', ')', '{', 'if', '(', 's', ')', '{', 'f', '=', '(', '(', 'd', ')', ')', '/', 'm', '[', 'l', ']', ';', 'm', '(', ')', ';', '}', 'i', '[', 'l', ']', ';', '}', '(', '(', 'f', '(', ')', ')', ')', ';', 'n', '[', 's', ']', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', '[', 'n', ']', ';', '}', '(', 'm', ')', ';', 'if', '(', '_', ')', '{', '(', 'e', ')', ';', '}', 'if', '(', '(', '""""', ')', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '(', 'i', ')', ')', ';', 'for', '(', ';', ';', ')', '{', 'd', '[', 'i', ']', '[', 'c', ']', ';', 'if', '(', 'g', ')', '{', 'r', '(', '""""', ',', '1', ')', ';', '}', '}', '}', '}', '}']",296,236,6,60,20.689655172413797
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_2.txt,0.5979,0.864,"{'n_total': 1072, 'n_valid': 114, 'n_correct': 58}",166.124229,"void main(String[]args){if(null){(""""+"""");}while(true){if(index){(1);}("""".equals(args[index]));("""".equals());("""".equals(args[index]));("""".equals());}if(length){(1);}if(ant)setProperty("""",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,""""));if(common){(File(catalinaHome,""""+""""));(File(catalinaHome,""""+""""));}if(shared){((""""));(File(catalinaHome,""""));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error("""",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(""""+t);(1);}String[args];try{if(log())("""");methodName="""";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){("""");}try{("""");(paramValues);}catch(Throwable t){t();}}","voi main(g[]as){if(ll){(""""+"""");}while(te){f((args[i]));(s());}if(le){(1);}(e);try{undra(e(caome,""""));if(mon){(e(ca,""""));}C((Fe[0]),l);}catch(The t){er(m);}catch(Thr t){("""");}try{(es);}catch(Tle t){;}}",697,200,10,497,72.34352256186317,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'null', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'while', '(', 'true', ')', '{', 'if', '(', 'index', ')', '{', '(', '1', ')', ';', '}', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '(', '""""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', ';', '(', '""""', '.', 'equals', '(', ')', ')', ';', '}', 'if', '(', 'length', ')', '{', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'setProperty', '(', '""""', ',', 'catalinaHome', ')', ';', 'try', '{', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', 'if', '(', 'common', ')', '{', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', '+', '""""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', '(', '(', '""""', ')', ')', ';', '(', 'File', '(', 'catalinaHome', ',', '""""', ')', ')', ';', '}', 'ClassLoaderFactory', '(', '(', 'File', '[', '0', ']', ')', ',', '(', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'error', '(', '""""', ',', 't', ')', ';', '(', '1', ')', ';', '}', 'args', '[', 'index', ']', ';', 'try', '{', 'if', '(', 'isDebugEnabled', '(', ')', ')', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', 't', ')', ';', '(', '""""', '+', 't', ')', ';', '(', '1', ')', ';', '}', 'String', '[', 'args', ']', ';', 'try', '{', 'if', '(', 'log', '(', ')', ')', '(', '""""', ')', ';', 'methodName', '=', '""""', ';', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'getClass', '(', ')', ';', '(', 'methodName', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '(', '""""', ')', ';', '(', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '(', ')', ';', '}', '}']","['voi', 'main', '(', 'g', '[', ']', 'as', ')', '{', 'if', '(', 'll', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'while', '(', 'te', ')', '{', 'f', '(', '(', 'args', '[', 'i', ']', ')', ')', ';', '(', 's', '(', ')', ')', ';', '}', 'if', '(', 'le', ')', '{', '(', '1', ')', ';', '}', '(', 'e', ')', ';', 'try', '{', 'undra', '(', 'e', '(', 'caome', ',', '""""', ')', ')', ';', 'if', '(', 'mon', ')', '{', '(', 'e', '(', 'ca', ',', '""""', ')', ')', ';', '}', 'C', '(', '(', 'Fe', '[', '0', ']', ')', ',', 'l', ')', ';', '}', 'catch', '(', 'The', 't', ')', '{', 'er', '(', 'm', ')', ';', '}', 'catch', '(', 'Thr', 't', ')', '{', '(', '""""', ')', ';', '}', 'try', '{', '(', 'es', ')', ';', '}', 'catch', '(', 'Tle', 't', ')', '{', ';', '}', '}']",318,136,6,182,58.333333333333336
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_7.txt,0.9489,0.1462,"{'n_total': 1249, 'n_valid': 70, 'n_correct': 63}",110.005409,"void run(){(RUNNING);try{while(true){if(connected){{try{closeChannel();try{incrementAndGet();}catch(JournalNetworkException e){if(0){}}(JournalClientEvents);}catch(UnauthorizedException e){(JournalClientEvents);}catch(AuthenticationConfigException e){close();(JournalClientEvents);}}(true);if((retryCount)){}}try{if(isRunning){switch(cmd){case Command:(channel);(statsChannel);(0);if(processSubscriptionQueue()){}}}if(event){}}catch(IncompatibleJournalException e){(e()).$().$("""");}if(event){if(channel()){}}}}catch(Throwable e){(e).$();}}",i run(){(G);try{while(tru){if(d){{try{l();try{}catch(n e){if(0){}}(s);}catch(n e){(s);}}(e);if((e)){}}try{if(g){switch(d){case d:(h);if(e()){}}}if(e){}}catch(n e){(e).$().$();}if(v){if(c){}}}}catch(e e){(e).$();}},539,213,9,326,61.50943396226415,"['void', 'run', '(', ')', '{', '(', 'RUNNING', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', 'connected', ')', '{', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', '(', 'JournalClientEvents', ')', ';', '}', 'catch', '(', 'AuthenticationConfigException', 'e', ')', '{', 'close', '(', ')', ';', '(', 'JournalClientEvents', ')', ';', '}', '}', '(', 'true', ')', ';', 'if', '(', '(', 'retryCount', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'isRunning', ')', '{', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', ':', '(', 'channel', ')', ';', '(', 'statsChannel', ')', ';', '(', '0', ')', ';', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', '}', '}', '}', 'if', '(', 'event', ')', '{', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', '(', 'e', '(', ')', ')', '.', '$', '(', ')', '.', '$', '(', '""""', ')', ';', '}', 'if', '(', 'event', ')', '{', 'if', '(', 'channel', '(', ')', ')', '{', '}', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']","['i', 'run', '(', ')', '{', '(', 'G', ')', ';', 'try', '{', 'while', '(', 'tru', ')', '{', 'if', '(', 'd', ')', '{', '{', 'try', '{', 'l', '(', ')', ';', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', 'if', '(', '0', ')', '{', '}', '}', '(', 's', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 's', ')', ';', '}', '}', '(', 'e', ')', ';', 'if', '(', '(', 'e', ')', ')', '{', '}', '}', 'try', '{', 'if', '(', 'g', ')', '{', 'switch', '(', 'd', ')', '{', 'case', 'd', ':', '(', 'h', ')', ';', 'if', '(', 'e', '(', ')', ')', '{', '}', '}', '}', 'if', '(', 'e', ')', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', '.', '$', '(', ')', ';', '}', 'if', '(', 'v', ')', '{', 'if', '(', 'c', ')', '{', '}', '}', '}', '}', 'catch', '(', 'e', 'e', ')', '{', '(', 'e', ')', '.', '$', '(', ')', ';', '}', '}']",191,159,6,32,17.2972972972973
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,run_8.txt,0.8949,0.2078,"{'n_total': 2002, 'n_valid': 100, 'n_correct': 76}",159.231777,"void run(){("""");try{try{if(ss()){}}catch(BindException b){try{Thread();}catch(InterruptedException i){}if(ss()){ss();}}newbyte[1];reply[6];while(stop){try{client();getOutputStream();try{(remoteport);}catch(IOException e){(""""+"""");}fromServer();(()->{try{while((bytesRead)){if(0){try{}catch(InterruptedException e){}}(request);}}catch(IOException e){}}).bytesRead;try{while((bytesRead)){try{}catch(InterruptedException e){printStackTrace();}(bytesRead);}}catch(IOException e){}}catch(IOException e){try{if(server){close();}if(client){}}catch(IOException e){}}}}catch(IOException e){printStackTrace();}}","void run(){("""");try{try{if(ss()){}}catch(d b){try{d();}catch(I i){}if(ss){}}n[6];while(p){try{try{(r);}catch(n e){("""");}(()->{try{while((b)){if(0){try{}catch(n e){}}}}catch(n e){}});try{while((d)){try{}catch(t e){pr();}(b);}}catch(I e){}}catch(n e){try{if(c){}}catch(n e){}}}}catch(n e){T;}}",600,291,9,309,52.28426395939086,"['void', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '(', ')', ')', '{', 'ss', '(', ')', ';', '}', '}', 'newbyte', '[', '1', ']', ';', 'reply', '[', '6', ']', ';', 'while', '(', 'stop', ')', '{', 'try', '{', 'client', '(', ')', ';', 'getOutputStream', '(', ')', ';', 'try', '{', '(', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'fromServer', '(', ')', ';', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '(', 'request', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', ')', ')', '{', 'try', '{', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '(', 'bytesRead', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'try', '{', 'if', '(', 'server', ')', '{', 'close', '(', ')', ';', '}', 'if', '(', 'client', ')', '{', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'run', '(', ')', '{', '(', '""""', ')', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '(', ')', ')', '{', '}', '}', 'catch', '(', 'd', 'b', ')', '{', 'try', '{', 'd', '(', ')', ';', '}', 'catch', '(', 'I', 'i', ')', '{', '}', 'if', '(', 'ss', ')', '{', '}', '}', 'n', '[', '6', ']', ';', 'while', '(', 'p', ')', '{', 'try', '{', 'try', '{', '(', 'r', ')', ';', '}', 'catch', '(', 'n', 'e', ')', '{', '(', '""""', ')', ';', '}', '(', '(', ')', '->', '{', 'try', '{', 'while', '(', '(', 'b', ')', ')', '{', 'if', '(', '0', ')', '{', 'try', '{', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', ')', ';', 'try', '{', 'while', '(', '(', 'd', ')', ')', '{', 'try', '{', '}', 'catch', '(', 't', 'e', ')', '{', 'pr', '(', ')', ';', '}', '(', 'b', ')', ';', '}', '}', 'catch', '(', 'I', 'e', ')', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', 'try', '{', 'if', '(', 'c', ')', '{', '}', '}', 'catch', '(', 'n', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'n', 'e', ')', '{', 'T', ';', '}', '}']",236,193,6,43,18.695652173913043
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,hashCode_1.txt,0.9439,0.0848,"{'n_total': 350, 'n_valid': 30, 'n_correct': 29}",55.697538,int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);},t hashCode(){t=l?e():0;t=1*(d?h:0);e=1*(t?1:0);},523,48,14,475,93.32023575638507,"['int', 'hashCode', '(', ')', '{', 'result', '=', 'null', '?', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '1', '*', '(', 'password', '?', 'hashCode', '(', ')', ':', '0', ')', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', '(', 'keyPassword', '?', 'enabledSslProtocolSuites', ':', '0', ')', ';', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'socketFactory', '?', 'socketFactory', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'pipe', '?', 'localSocket', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'sharedMemory', ')', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '(', 'interactiveClient', '?', '1', ':', '0', ')', '+', '(', 'useSsl', '?', '1', ':', '0', ')', '*', '(', 'sessionVariables', '?', 'sessionVariables', ':', '0', ')', '*', '(', '1', ')', ';', 'result', '=', '1', '*', '(', 'createDatabaseIfNotExist', ')', ';', 'result', '=', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '1', '*', '(', 'minPoolSize', '?', 'hashCode', ':', '0', ')', ';', '(', 'autocommit', '?', '1', ':', '0', ')', ';', '}']","['t', 'hashCode', '(', ')', '{', 't', '=', 'l', '?', 'e', '(', ')', ':', '0', ';', 't', '=', '1', '*', '(', 'd', '?', 'h', ':', '0', ')', ';', 'e', '=', '1', '*', '(', 't', '?', '1', ':', '0', ')', ';', '}']",169,40,6,129,79.14110429447852
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_9.txt,0.6462,0.7297,"{'n_total': 270, 'n_valid': 22, 'n_correct': 16}",35.616136,"void main(String[]args)throws CryptoException{("""");(""""+""""+toString());(""""+(6));(""""+toString());("""".toString());("""");alice("""",random);(Payload);("""");(aliceRound);("""");(""""+(6));(""""+(6));(bobKeyingMaterial);("""");}","d main(g[]args)throws n{("""");((6));((6));(o);("""");}",210,51,10,159,79.5,"['void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'CryptoException', '{', '(', '""""', ')', ';', '(', '""""', '+', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', 'toString', '(', ')', ')', ';', '(', '""""', '.', 'toString', '(', ')', ')', ';', '(', '""""', ')', ';', 'alice', '(', '""""', ',', 'random', ')', ';', '(', 'Payload', ')', ';', '(', '""""', ')', ';', '(', 'aliceRound', ')', ';', '(', '""""', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', '""""', '+', '(', '6', ')', ')', ';', '(', 'bobKeyingMaterial', ')', ';', '(', '""""', ')', ';', '}']","['d', 'main', '(', 'g', '[', ']', 'args', ')', 'throws', 'n', '{', '(', '""""', ')', ';', '(', '(', '6', ')', ')', ';', '(', '(', '6', ')', ')', ';', '(', 'o', ')', ';', '(', '""""', ')', ';', '}']",101,36,6,65,68.42105263157895
code2seq,METHOD_NAME,dd_char,large,dd_char_token_large_methods,main_8.txt,0.4636,1.1756,"{'n_total': 1651, 'n_valid': 109, 'n_correct': 80}",170.143054,"void main(String[]args){if((email)){{("""");}((email));}getOAuthToken();if(token){("""");(0);}createUser("""","""",true);if(status){("""");(0);}("""");if(status){("""");(0);}status("""",false);if(status){System();}("""");if(status){("""");}(new String[]{""""});if(status){("""");(0);}("""".ANDROID);if(status){("""");}createPasscodePolicy("""",Constants);if(status){("""");}MobileApplication(Constants,"""");if(application){("""");}uploadAssets();(application="""");uploadAssets();if(iOSApplication){}addApplication("""",true);if(status){("""");(0);}}","d main(n[]args){if((l)){{("""");}((e));}r();if(s){("""");}("""");if(s){("""");}s("""",f);if(s){m();}("""");if(s){("""");}(new g[]{""""});if(s){("""");}(D);if(s){("""");}y("""",C);if(s){("""");}(C="""");s();if(n)n("""",r);if(s){("""");}}",509,206,10,303,60.72144288577155,"['void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', '(', 'email', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'email', ')', ')', ';', '}', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'createUser', '(', '""""', ',', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', 'status', '(', '""""', ',', 'false', ')', ';', 'if', '(', 'status', ')', '{', 'System', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '(', '""""', '.', 'ANDROID', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'createPasscodePolicy', '(', '""""', ',', 'Constants', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '}', 'MobileApplication', '(', 'Constants', ',', '""""', ')', ';', 'if', '(', 'application', ')', '{', '(', '""""', ')', ';', '}', 'uploadAssets', '(', ')', ';', '(', 'application', '=', '""""', ')', ';', 'uploadAssets', '(', ')', ';', 'if', '(', 'iOSApplication', ')', '{', '}', 'addApplication', '(', '""""', ',', 'true', ')', ';', 'if', '(', 'status', ')', '{', '(', '""""', ')', ';', '(', '0', ')', ';', '}', '}']","['d', 'main', '(', 'n', '[', ']', 'args', ')', '{', 'if', '(', '(', 'l', ')', ')', '{', '{', '(', '""""', ')', ';', '}', '(', '(', 'e', ')', ')', ';', '}', 'r', '(', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', 's', '(', '""""', ',', 'f', ')', ';', 'if', '(', 's', ')', '{', 'm', '(', ')', ';', '}', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'new', 'g', '[', ']', '{', '""""', '}', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'D', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', 'y', '(', '""""', ',', 'C', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '(', 'C', '=', '""""', ')', ';', 's', '(', ')', ';', 'if', '(', 'n', ')', 'n', '(', '""""', ',', 'r', ')', ';', 'if', '(', 's', ')', '{', '(', '""""', ')', ';', '}', '}']",235,171,6,64,27.947598253275107
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.908432,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); } },class T { void onCreate( ) { super.onCreate( ); } },146,51,28,95,80.50847457627118,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",164.797122,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }","class T { @Override String toString() { if (filterConfig == null) return ""TimingFilter()"" ; } }",223,95,28,128,65.64102564102564,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '""TimingFilter()""', ';', '}', '}']",56,21,10,35,76.08695652173914
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",118.75661,"class T { @Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); } }","class T { String toString() { return ""BaseModelMbean["" + resourceType + ""]""; } }",147,80,28,67,56.30252100840336,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', '}', '}']",33,17,10,16,69.56521739130434
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.613198,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { } },158,44,26,114,86.36363636363636,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.577035,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { } },158,44,26,114,86.36363636363636,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.634922,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); } },class T { void onCreate( ) { super.onCreate( ); } },156,51,28,105,82.03125,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",132.44678,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); } }",class T { String toString() { sb.append( ); } },254,47,28,207,91.5929203539823,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'sb', '.', 'append', '(', ')', ';', '}', '}']",70,16,10,54,90.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_2.txt,0.9977,0.0027,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",149.345503,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); } }",class T { @Override boolean equals(Object o) { if ( o) return true; } },321,71,26,250,84.7457627118644,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",87,21,10,66,85.71428571428571
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",69.111075,class T { @Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; } },class T { @Override boolean equals(Object obj) { } },153,52,26,101,79.52755905511812,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",41,14,10,27,87.09677419354838
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.495679,class T { @Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); } },class T { void init() { super.init(); } },111,41,24,70,80.45977011494253,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",27,16,10,11,64.70588235294117
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_2.txt,0.9511,0.063,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",202.688436,"class T { @Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); } }",class T { String toString() { pw.println(getCookie( ).toString()); } },282,70,28,212,83.46456692913385,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']",81,23,10,58,81.69014084507043
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",211.718716,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); } },class T { void onCreate( ) { super.onCreate( ); } },184,51,28,133,85.25641025641025,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",43,16,10,27,81.81818181818183
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",133.944192,"class T { @Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); } }","class T { void onCreate() { Log.i(LOG_TAG, ""onCreate""); } }",227,59,28,168,84.42211055276381,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', '}', '}']",56,19,10,37,80.43478260869566
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",123.158116,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { return StringCache.toString( ); } },162,65,28,97,72.38805970149254,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', 'StringCache', '.', 'toString', '(', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",69.051752,class T { @Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; } },class T { @Override boolean equals(Object obj) { } },148,52,26,96,78.68852459016394,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",39,14,10,25,86.20689655172413
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",121.756991,class T { @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); } },class T { @Override boolean equals(Object o) { if ( o) return true; } },198,71,26,127,73.83720930232558,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",54,21,10,33,75.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_10.txt,0.999,0.0012,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",136.574537,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); } }",class T { void setUp() throws Exception { if ( TesterSupport.RFC_5746_SUPPORTED) System.setProperty( ); } },193,107,25,86,51.19047619047619,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",39,24,10,15,51.72413793103448
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_10.txt,0.995,0.0057,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.581873,class T { @Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; } },class T { boolean equals(Object other) { } },259,44,26,215,92.274678111588,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",75,12,10,63,96.92307692307692
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",111.192526,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); } }",class T { String toString() { sb.append( ); } },144,47,28,97,83.62068965517241,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'sb', '.', 'append', '(', ')', ';', '}', '}']",38,16,10,22,78.57142857142857
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",154.740386,class T { @Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; } },class T { boolean onCreate() { mContentResolver = context.getContentResolver(); return true; } },187,96,28,91,57.23270440251572,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'onCreate', '(', ')', '{', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'return', 'true', ';', '}', '}']",39,21,10,18,62.06896551724138
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.47265,"class T { @Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); } }",class T { @Override boolean equals(Object obj) { } },202,52,26,150,85.22727272727273,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",64,14,10,50,92.5925925925926
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",83.256232,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { } },176,36,23,140,91.5032679738562,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",51,12,10,39,95.1219512195122
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",100.526446,"class T { @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); } }",class T { void execute() { super.execute(); } },177,47,27,130,86.66666666666667,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",48,16,10,32,84.21052631578947
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.324035,class T { @Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); } },class T { void setUp() { super.setUp(); } },126,43,25,83,82.17821782178217,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.435825,"class T { public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); } }",class T { void main(String args) { } },191,38,24,153,91.61676646706589,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",54,12,10,42,95.45454545454544
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",82.346188,class T { public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); } },class T { void main(String args) { } },166,38,24,128,90.14084507042254,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",42,12,10,30,93.75
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",47.805877,"class T { public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; } }",class T { public T get() { } },121,30,23,91,92.85714285714286,"['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', '}', '}']",29,11,10,18,94.73684210526316
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.380448,class T { @Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); } },class T { @Before void setUp() { } },119,36,25,83,88.29787234042553,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', '}', '}']",30,12,10,18,90.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.03286,class T { @Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } } },class T { @Override void run() { } },139,36,23,103,88.79310344827587,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",37,12,10,25,92.5925925925926
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",171.689063,"class T { public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; } }","class T { Object get(Map context , Object defaultv) { Object get ; } }",178,70,23,108,69.6774193548387,"['class', 'T', '{', 'public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}', '}']","['class', 'T', '{', 'Object', 'get', '(', 'Map', 'context', ',', 'Object', 'defaultv', ')', '{', 'Object', 'get', ';', '}', '}']",50,18,10,32,80.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.458881,"class T { public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); } }",class T { void main(String args) { } },263,38,24,225,94.14225941422592,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",57,12,10,45,95.74468085106383
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.440501,class T { public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); } },class T { void main(String args) { } },144,38,24,106,88.33333333333333,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",38,12,10,26,92.85714285714286
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.580634,"class T { @Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); } }",class T { void setUp() { super.setUp(); } },134,43,25,91,83.4862385321101,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",35,16,10,19,76.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_5.txt,0.4057,1.0315,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.428971,"class T { @Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); } }",class T { @Override void execute(Tuple tuple) { } },317,51,27,266,91.72413793103448,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', '}', '}']",74,14,10,60,93.75
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.476742,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { } },133,36,23,97,88.18181818181819,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",91.515797,"class T { public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } } }",class T { void run() { try { } catch (Throwable t) { } } },161,58,23,103,74.63768115942028,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 't', ')', '{', '}', '}', '}']",40,20,10,20,66.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",122.379737,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },186,53,28,133,84.17721518987342,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.578297,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); } }",class T { void execute() { super.execute(); } },135,47,27,88,81.48148148148148,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",89.997016,"class T { @Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); } }",class T { @Override void setUp() throws Exception { System.setProperty( ); } },161,78,25,83,61.02941176470589,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",30,20,10,10,50.0
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_1.txt,0.9966,0.0043,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.894767,"class T { public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); } }",class T { void main(String args) { } },591,38,24,553,97.53086419753086,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",135,12,10,123,98.4
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",90.763492,"class T { @Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; } }","class T { V get(long timeout, TimeUnit unit) { } }",260,50,23,210,88.60759493670885,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', '}', '}']",55,15,10,40,88.88888888888889
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",120.121094,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; } },class T { int hashCode() { result = prime * result + code; } },274,62,28,212,86.1788617886179,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', '}', '}']",79,18,10,61,88.40579710144928
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.503115,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { @Override void run() { } },183,36,23,147,91.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.702624,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { } },133,36,23,97,88.18181818181819,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.478237,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); } }",class T { void execute() { super.execute(); } },152,47,27,105,84.0,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",100.662963,class T { @Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); } },class T { void setUp() { super.setUp(); } },194,43,25,151,89.3491124260355,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",42,16,10,26,81.25
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",132.320862,class T { @Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); } },class T { void init( ) { super.init( ); } },205,43,24,162,89.50276243093923,"['class', 'T', '{', '@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",53,16,10,37,86.04651162790698
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.324508,class T { public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); } },class T { void main(String args) { } },159,38,24,121,89.62962962962962,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",36,12,10,24,92.3076923076923
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.97014,"class T { public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); } }",class T { void main(String args) { } },148,38,24,110,88.70967741935483,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",34,12,10,22,91.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.477066,"class T { public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); } }",class T { void main(String args) { } },285,38,24,247,94.6360153256705,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.519894,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); } }",class T { void execute() { super.execute(); } },110,47,27,63,75.90361445783132,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",26,16,10,10,62.5
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.459668,class T { @Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } } },class T { @Override void run() { } },174,36,23,138,91.3907284768212,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",48,12,10,36,94.73684210526316
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",138.125689,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; } },class T { int hashCode() { result = prime * result + Arrays ; } },251,65,28,186,83.40807174887892,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', ';', '}', '}']",70,18,10,52,86.66666666666667
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",135.681663,"class T { public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); } }",class T { void run() { dataRefresh(); if (isFloating) windowManager.updateViewLayout(viFloatingWindow ); } },162,108,23,54,38.84892086330935,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ')', ';', '}', '}']",37,25,10,12,44.44444444444444
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",163.075659,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; } },class T { int hashCode() { result = prime * result + ( name == null ); } },166,74,28,92,66.66666666666666,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', '(', 'name', '==', 'null', ')', ';', '}', '}']",49,22,10,27,69.23076923076923
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",164.454251,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }","class T { @Override String toString() { if (filterConfig == null) return ""TimingFilter()"" ; } }",223,95,28,128,65.64102564102564,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '""TimingFilter()""', ';', '}', '}']",56,21,10,35,76.08695652173914
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",86.333606,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { } },176,36,23,140,91.5032679738562,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",51,12,10,39,95.1219512195122
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",134.333058,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",144.265334,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; } },class T { int hashCode() { result = prime * result + key.hashCode() ; } },232,73,28,159,77.94117647058823,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'key', '.', 'hashCode', '(', ')', ';', '}', '}']",71,22,10,49,80.32786885245902
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.348883,"class T { @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); } }",class T { @Before void setUp() { } },329,36,25,293,96.38157894736842,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', '}', '}']",76,12,10,64,96.96969696969695
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.979775,class T { @Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; } },class T { void init(ServletConfig config) { } },119,47,24,72,75.78947368421053,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', 'ServletConfig', 'config', ')', '{', '}', '}']",28,12,10,16,88.88888888888889
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",427.104029,class T { @Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); } },class T { void init() { failOnBegin = Boolean.valueOf(getServletConfig ) ; } },356,78,24,278,83.73493975903614,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', ')', ';', '}', '}']",75,19,10,56,86.15384615384616
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",180.430339,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); } }",class T { void setUp() throws Exception { if ( TesterSupport.RFC_5746_SUPPORTED) System.setProperty( ); } },332,107,25,225,73.28990228013029,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",65,24,10,41,74.54545454545455
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",138.805215,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.624877,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { @Override void run() { } },183,36,23,147,91.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.577621,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); } }",class T { void execute() { super.execute(); } },134,47,27,87,81.30841121495327,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.561331,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); } }",class T { void execute() { super.execute(); } },138,47,27,91,81.98198198198197,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",125.603314,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },180,53,28,127,83.55263157894737,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.503545,class T { public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; } },class T { CBuffer get(CharSequence key) { } },126,45,23,81,78.64077669902912,"['class', 'T', '{', 'public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']","['class', 'T', '{', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', '}', '}']",34,12,10,22,91.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",80.95606,"class T { public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } } }",class T { void main(String args) { } },307,38,24,269,95.0530035335689,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",82,12,10,70,97.2222222222222
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.543891,"class T { public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); } }",class T { void main(String args) { } },136,38,24,98,87.5,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",33,12,10,21,91.30434782608695
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.511768,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); } }",class T { void execute() { super.execute(); } },138,47,27,91,81.98198198198197,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",133.856391,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; } },class T { int hashCode() { result = prime * result + 0 ; } },248,60,28,188,85.45454545454545,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', '0', ';', '}', '}']",71,18,10,53,86.88524590163934
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",143.920139,class T { @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; } },class T { @Override int hashCode() { int result ; } },225,53,28,172,87.30964467005076,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",63,15,10,48,90.56603773584906
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_9.txt,0.9989,0.0013,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",143.029426,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); } }",class T { @Override boolean equals(Object o) { if ( o) return true; } },280,71,26,209,82.28346456692913,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",89,21,10,68,86.07594936708861
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",68.798102,class T { @Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } } },class T { @Override boolean equals(Object obj) { } },164,52,26,112,81.15942028985508,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",44,14,10,30,88.23529411764706
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",222.807759,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); } },class T { void onCreate( ) { super.onCreate( ); } },331,51,28,280,92.4092409240924,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",65,16,10,49,89.0909090909091
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",79.485042,class T { @Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } } },class T { void onCreate() { super.onCreate(); } },183,49,28,134,86.45161290322581,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",39,16,10,23,79.3103448275862
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.852304,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); } },class T { void onCreate( ) { super.onCreate( ); } },152,51,28,101,81.45161290322581,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.703981,class T { @Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); } },class T { @Override String toString() { result.append( ); } },177,61,28,116,77.85234899328859,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'result', '.', 'append', '(', ')', ';', '}', '}']",48,18,10,30,78.94736842105263
code2seq,METHOD_NAME,perses_fixpoint,freq,perses_fixpoint_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",123.084594,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { return StringCache.toString( ); } },162,65,28,97,72.38805970149254,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', 'StringCache', '.', 'toString', '(', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,deleteContainerIfEmpty_1.txt,0.4758,1.6436,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",80.516401,class T { private void deleteContainerIfEmpty(String container) { if (deleteEmptyContainers) { getBlobStore().deleteContainerIfEmpty(container); } } },class T { void deleteContainerIfEmpty(String container) { getBlobStore().deleteContainerIfEmpty( ); } },150,103,42,47,43.51851851851852,"['class', 'T', '{', 'private', 'void', 'deleteContainerIfEmpty', '(', 'String', 'container', ')', '{', 'if', '(', 'deleteEmptyContainers', ')', '{', 'getBlobStore', '(', ')', '.', 'deleteContainerIfEmpty', '(', 'container', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'deleteContainerIfEmpty', '(', 'String', 'container', ')', '{', 'getBlobStore', '(', ')', '.', 'deleteContainerIfEmpty', '(', ')', ';', '}', '}']",28,20,10,8,44.44444444444444
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,deleteObsoleteFiles_1.txt,0.1754,3.9735,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",143.719999,"class T { void deleteObsoleteFiles() throws IOException { final long rrdDiskUsage = CounterStorage.deleteObsoleteCounterFiles(getApplication()); final long serGzDiskUsage = JRobin.deleteObsoleteJRobinFiles(getApplication()); diskUsage = rrdDiskUsage + serGzDiskUsage; LOG.debug(""Obsolete files deleted. JavaMelody disk usage: "" + diskUsage / 1024 + "" KB""); } }",class T { void deleteObsoleteFiles() { long rrdDiskUsage = CounterStorage.deleteObsoleteCounterFiles( ); } },360,108,39,252,78.50467289719626,"['class', 'T', '{', 'void', 'deleteObsoleteFiles', '(', ')', 'throws', 'IOException', '{', 'final', 'long', 'rrdDiskUsage', '=', 'CounterStorage', '.', 'deleteObsoleteCounterFiles', '(', 'getApplication', '(', ')', ')', ';', 'final', 'long', 'serGzDiskUsage', '=', 'JRobin', '.', 'deleteObsoleteJRobinFiles', '(', 'getApplication', '(', ')', ')', ';', 'diskUsage', '=', 'rrdDiskUsage', '+', 'serGzDiskUsage', ';', 'LOG', '.', 'debug', '(', '""Obsolete files deleted. JavaMelody disk usage: ""', '+', 'diskUsage', '/', '1024', '+', '"" KB""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'deleteObsoleteFiles', '(', ')', '{', 'long', 'rrdDiskUsage', '=', 'CounterStorage', '.', 'deleteObsoleteCounterFiles', '(', ')', ';', '}', '}']",57,19,10,38,80.85106382978722
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getOnAddedCnt_1.txt,0.4794,1.8054,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.043859,class T { public int getOnAddedCnt() { return onAddedCnt; } },class T { int getOnAddedCnt() { return onAddedCnt; } },61,54,33,7,25.0,"['class', 'T', '{', 'public', 'int', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}', '}']","['class', 'T', '{', 'int', 'getOnAddedCnt', '(', ')', '{', 'return', 'onAddedCnt', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,newInitializerBuilder_1.txt,0.348,4.8937,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",79.697299,class T { public static InitializerBuilder newInitializerBuilder(Context context) { return new InitializerBuilder(context); } },class T { InitializerBuilder newInitializerBuilder(Context context) { return new InitializerBuilder(context); } },127,113,41,14,16.27906976744186,"['class', 'T', '{', 'public', 'static', 'InitializerBuilder', 'newInitializerBuilder', '(', 'Context', 'context', ')', '{', 'return', 'new', 'InitializerBuilder', '(', 'context', ')', ';', '}', '}']","['class', 'T', '{', 'InitializerBuilder', 'newInitializerBuilder', '(', 'Context', 'context', ')', '{', 'return', 'new', 'InitializerBuilder', '(', 'context', ')', ';', '}', '}']",21,19,10,2,18.181818181818183
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setIgnoreKey_1.txt,0.4474,1.9016,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",142.65997,"class T { public Builder setIgnoreKey(boolean ignoreKey, Set<String> ignoreKeyTopics) { this.ignoreKey = ignoreKey; this.ignoreKeyTopics = ignoreKeyTopics; return this; } }","class T { Builder setIgnoreKey(boolean ignoreKey, Set ignoreKeyTopics) { ignoreKey = ignoreKey; } }",172,99,32,73,52.142857142857146,"['class', 'T', '{', 'public', 'Builder', 'setIgnoreKey', '(', 'boolean', 'ignoreKey', ',', 'Set', '<', 'String', '>', 'ignoreKeyTopics', ')', '{', 'this', '.', 'ignoreKey', '=', 'ignoreKey', ';', 'this', '.', 'ignoreKeyTopics', '=', 'ignoreKeyTopics', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'setIgnoreKey', '(', 'boolean', 'ignoreKey', ',', 'Set', 'ignoreKeyTopics', ')', '{', 'ignoreKey', '=', 'ignoreKey', ';', '}', '}']",34,19,10,15,62.5
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getComputedStyles_1.txt,0.4892,1.164,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",182.207869,"class T { @Override public void getComputedStyles(E element, ComputedStyleAccumulator accumulator) { mSuper.getComputedStyles(element, accumulator); onGetComputedStyles(element, accumulator); } }",class T { void getComputedStyles( ) { mSuper.getComputedStyles( ); } },195,70,37,125,79.11392405063292,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'getComputedStyles', '(', 'E', 'element', ',', 'ComputedStyleAccumulator', 'accumulator', ')', '{', 'mSuper', '.', 'getComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', 'onGetComputedStyles', '(', 'element', ',', 'accumulator', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'getComputedStyles', '(', ')', '{', 'mSuper', '.', 'getComputedStyles', '(', ')', ';', '}', '}']",34,16,10,18,75.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,odexOnly_1.txt,0.4431,0.9001,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",94.203879,class T { public final boolean odexOnly() { return (flags & ODEX_ONLY) != 0; } },class T { boolean odexOnly() { return (flags & ODEX_ONLY) != 0; } },80,67,28,13,25.0,"['class', 'T', '{', 'public', 'final', 'boolean', 'odexOnly', '(', ')', '{', 'return', '(', 'flags', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}', '}']","['class', 'T', '{', 'boolean', 'odexOnly', '(', ')', '{', 'return', '(', 'flags', '&', 'ODEX_ONLY', ')', '!=', '0', ';', '}', '}']",21,19,10,2,18.181818181818183
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addVerb_1.txt,0.3558,1.4713,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",98.428085,"class T { public void addVerb(Verb v) { verbs.put(v.getHashKey(), v); } }","class T { void addVerb(Verb v) { verbs.put(v.getHashKey(), v); } }",73,66,27,7,15.217391304347828,"['class', 'T', '{', 'public', 'void', 'addVerb', '(', 'Verb', 'v', ')', '{', 'verbs', '.', 'put', '(', 'v', '.', 'getHashKey', '(', ')', ',', 'v', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addVerb', '(', 'Verb', 'v', ')', '{', 'verbs', '.', 'put', '(', 'v', '.', 'getHashKey', '(', ')', ',', 'v', ')', ';', '}', '}']",26,25,10,1,6.25
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,convertJoinType_1.txt,0.4424,1.5976,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",202.020839,"class T { public static com.querydsl.core.JoinType convertJoinType(JoinType joinType) { switch(joinType) { case INNER: return com.querydsl.core.JoinType.JOIN; case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; case RIGHT: return com.querydsl.core.JoinType.RIGHTJOIN; default: throw new IllegalStateException(joinType.toString() + "" unknown""); } } }",class T { querydsl convertJoinType(JoinType joinType) { switch(joinType) { case LEFT: return com.querydsl.core.JoinType.LEFTJOIN; } } },352,135,35,217,68.45425867507886,"['class', 'T', '{', 'public', 'static', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', 'convertJoinType', '(', 'JoinType', 'joinType', ')', '{', 'switch', '(', 'joinType', ')', '{', 'case', 'INNER', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'JOIN', ';', 'case', 'LEFT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'LEFTJOIN', ';', 'case', 'RIGHT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'RIGHTJOIN', ';', 'default', ':', 'throw', 'new', 'IllegalStateException', '(', 'joinType', '.', 'toString', '(', ')', '+', '"" unknown""', ')', ';', '}', '}', '}']","['class', 'T', '{', 'querydsl', 'convertJoinType', '(', 'JoinType', 'joinType', ')', '{', 'switch', '(', 'joinType', ')', '{', 'case', 'LEFT', ':', 'return', 'com', '.', 'querydsl', '.', 'core', '.', 'JoinType', '.', 'LEFTJOIN', ';', '}', '}', '}']",83,32,10,51,69.86301369863014
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getRepl_1.txt,0.4767,1.8164,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",111.979849,class T { @Nonnull private synchronized RuntimeRepl getRepl(RuntimeReplFactory replFactory) { if (mRepl == null) { mRepl = replFactory.newInstance(); } return mRepl; } },class T { @Nonnull RuntimeRepl getRepl( ) { } },169,47,27,122,85.91549295774648,"['class', 'T', '{', '@', 'Nonnull', 'private', 'synchronized', 'RuntimeRepl', 'getRepl', '(', 'RuntimeReplFactory', 'replFactory', ')', '{', 'if', '(', 'mRepl', '==', 'null', ')', '{', 'mRepl', '=', 'replFactory', '.', 'newInstance', '(', ')', ';', '}', 'return', 'mRepl', ';', '}', '}']","['class', 'T', '{', '@', 'Nonnull', 'RuntimeRepl', 'getRepl', '(', ')', '{', '}', '}']",35,12,10,23,92.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,onBiomeDecorate_1.txt,0.3974,3.3578,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",265.987816,"class T { @SubscribeEvent public void onBiomeDecorate(DecorateBiomeEvent.Decorate event) { if (BOPBiomes.excludedDecoratedWorldTypes.contains(event.getWorld().getWorldType())) return; if (event.getType() != Decorate.EventType.CUSTOM) { runGeneratorStage(event.getWorld(), event.getRand(), event.getPos(), GeneratorStage.mapDecorateType(event.getType())); } } }","class T { @SubscribeEvent void onBiomeDecorate(DecorateBiomeEvent.Decorate event) { if (event.getType() != Decorate ) runGeneratorStage(event.getWorld(), event.getRand() ); } }",360,176,35,184,56.61538461538461,"['class', 'T', '{', '@', 'SubscribeEvent', 'public', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvent', '.', 'Decorate', 'event', ')', '{', 'if', '(', 'BOPBiomes', '.', 'excludedDecoratedWorldTypes', '.', 'contains', '(', 'event', '.', 'getWorld', '(', ')', '.', 'getWorldType', '(', ')', ')', ')', 'return', ';', 'if', '(', 'event', '.', 'getType', '(', ')', '!=', 'Decorate', '.', 'EventType', '.', 'CUSTOM', ')', '{', 'runGeneratorStage', '(', 'event', '.', 'getWorld', '(', ')', ',', 'event', '.', 'getRand', '(', ')', ',', 'event', '.', 'getPos', '(', ')', ',', 'GeneratorStage', '.', 'mapDecorateType', '(', 'event', '.', 'getType', '(', ')', ')', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'SubscribeEvent', 'void', 'onBiomeDecorate', '(', 'DecorateBiomeEvent', '.', 'Decorate', 'event', ')', '{', 'if', '(', 'event', '.', 'getType', '(', ')', '!=', 'Decorate', ')', 'runGeneratorStage', '(', 'event', '.', 'getWorld', '(', ')', ',', 'event', '.', 'getRand', '(', ')', ')', ';', '}', '}']",86,41,10,45,59.210526315789465
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,withRecyclerView_1.txt,0.2744,2.4624,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",92.968254,class T { public static RecyclerViewMatcher withRecyclerView(final int recyclerViewId) { return new RecyclerViewMatcher(recyclerViewId); } },class T { RecyclerViewMatcher withRecyclerView( int recyclerViewId) { return new RecyclerViewMatcher(recyclerViewId); } },140,121,36,19,18.269230769230766,"['class', 'T', '{', 'public', 'static', 'RecyclerViewMatcher', 'withRecyclerView', '(', 'final', 'int', 'recyclerViewId', ')', '{', 'return', 'new', 'RecyclerViewMatcher', '(', 'recyclerViewId', ')', ';', '}', '}']","['class', 'T', '{', 'RecyclerViewMatcher', 'withRecyclerView', '(', 'int', 'recyclerViewId', ')', '{', 'return', 'new', 'RecyclerViewMatcher', '(', 'recyclerViewId', ')', ';', '}', '}']",22,19,10,3,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isAwait_1.txt,0.4773,0.7911,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.001167,class T { public boolean isAwait() { return await; } },class T { boolean isAwait() { return await; } },54,47,27,7,25.925925925925924,"['class', 'T', '{', 'public', 'boolean', 'isAwait', '(', ')', '{', 'return', 'await', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isAwait', '(', ')', '{', 'return', 'await', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addResourceRef_1.txt,0.4411,1.3444,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",112.203337,"class T { public void addResourceRef(ContextResource resourceRef) { if (resourceRefs.containsKey(resourceRef.getName())) { throw new IllegalArgumentException(sm.getString(""webXml.duplicateResourceRef"", resourceRef.getName())); } resourceRefs.put(resourceRef.getName(), resourceRef); } }",class T { void addResourceRef(ContextResource resourceRef) { resourceRefs.put( ); } },286,85,34,201,79.76190476190477,"['class', 'T', '{', 'public', 'void', 'addResourceRef', '(', 'ContextResource', 'resourceRef', ')', '{', 'if', '(', 'resourceRefs', '.', 'containsKey', '(', 'resourceRef', '.', 'getName', '(', ')', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'sm', '.', 'getString', '(', '""webXml.duplicateResourceRef""', ',', 'resourceRef', '.', 'getName', '(', ')', ')', ')', ';', '}', 'resourceRefs', '.', 'put', '(', 'resourceRef', '.', 'getName', '(', ')', ',', 'resourceRef', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addResourceRef', '(', 'ContextResource', 'resourceRef', ')', '{', 'resourceRefs', '.', 'put', '(', ')', ';', '}', '}']",59,18,10,41,83.6734693877551
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,trimLine_1.txt,0.2354,3.0523,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",366.31818,"class T { protected String[] trimLine(String[] line) { String trim = """"; for (int i = 0; i < line.length; i++) { trim = line[i].trim(); line[i] = trim; } return line; } }",class T { String trimLine(String line) { for (int i ; ; ) trim = line[i].trim(); return line; } },170,97,28,73,51.40845070422535,"['class', 'T', '{', 'protected', 'String', '[', ']', 'trimLine', '(', 'String', '[', ']', 'line', ')', '{', 'String', 'trim', '=', '""""', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'line', '.', 'length', ';', 'i', '++', ')', '{', 'trim', '=', 'line', '[', 'i', ']', '.', 'trim', '(', ')', ';', 'line', '[', 'i', ']', '=', 'trim', ';', '}', 'return', 'line', ';', '}', '}']","['class', 'T', '{', 'String', 'trimLine', '(', 'String', 'line', ')', '{', 'for', '(', 'int', 'i', ';', ';', ')', 'trim', '=', 'line', '[', 'i', ']', '.', 'trim', '(', ')', ';', 'return', 'line', ';', '}', '}']",61,33,10,28,54.90196078431373
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setWebapp_1.txt,0.4438,0.9273,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",90.948989,class T { public LindenConfig setWebapp(String webapp) { this.webapp = webapp; return this; } },class T { LindenConfig setWebapp(String webapp) { webapp = webapp; } },95,70,29,25,37.87878787878788,"['class', 'T', '{', 'public', 'LindenConfig', 'setWebapp', '(', 'String', 'webapp', ')', '{', 'this', '.', 'webapp', '=', 'webapp', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'LindenConfig', 'setWebapp', '(', 'String', 'webapp', ')', '{', 'webapp', '=', 'webapp', ';', '}', '}']",22,16,10,6,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addResultMap_1.txt,0.271,2.974,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",112.180183,"class T { public void addResultMap(ResultMap rm) { resultMaps.put(rm.getId(), rm); checkLocallyForDiscriminatedNestedResultMaps(rm); checkGloballyForDiscriminatedNestedResultMaps(rm); } }",class T { void addResultMap(ResultMap rm) { resultMaps.put( ); } },187,66,32,121,78.06451612903226,"['class', 'T', '{', 'public', 'void', 'addResultMap', '(', 'ResultMap', 'rm', ')', '{', 'resultMaps', '.', 'put', '(', 'rm', '.', 'getId', '(', ')', ',', 'rm', ')', ';', 'checkLocallyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', 'checkGloballyForDiscriminatedNestedResultMaps', '(', 'rm', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addResultMap', '(', 'ResultMap', 'rm', ')', '{', 'resultMaps', '.', 'put', '(', ')', ';', '}', '}']",36,18,10,18,69.23076923076923
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getSendEmail_1.txt,0.4551,0.8835,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",122.805233,class T { public boolean getSendEmail() { if (!getPublishedSite()) sendEmail = false; return sendEmail; } },class T { boolean getSendEmail() { if ( getPublishedSite()) sendEmail = false; return sendEmail; } },107,100,32,7,9.333333333333334,"['class', 'T', '{', 'public', 'boolean', 'getSendEmail', '(', ')', '{', 'if', '(', '!', 'getPublishedSite', '(', ')', ')', 'sendEmail', '=', 'false', ';', 'return', 'sendEmail', ';', '}', '}']","['class', 'T', '{', 'boolean', 'getSendEmail', '(', ')', '{', 'if', '(', 'getPublishedSite', '(', ')', ')', 'sendEmail', '=', 'false', ';', 'return', 'sendEmail', ';', '}', '}']",25,23,10,2,13.333333333333334
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getEnumInt_1.txt,0.4064,2.3936,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",202.452883,"class T { public <E extends Enum<E>> E getEnumInt(int index, Class<E> enumClass) { return toEnum(enumClass, getInt(index)); } }","class T { <E extends Enum > E getEnumInt(int index, Class enumClass) { return toEnum(enumClass, getInt(index)); } }",127,115,30,12,12.371134020618555,"['class', 'T', '{', 'public', '<', 'E', 'extends', 'Enum', '<', 'E', '>', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 'Class', '<', 'E', '>', 'enumClass', ')', '{', 'return', 'toEnum', '(', 'enumClass', ',', 'getInt', '(', 'index', ')', ')', ';', '}', '}']","['class', 'T', '{', '<', 'E', 'extends', 'Enum', '>', 'E', 'getEnumInt', '(', 'int', 'index', ',', 'Class', 'enumClass', ')', '{', 'return', 'toEnum', '(', 'enumClass', ',', 'getInt', '(', 'index', ')', ')', ';', '}', '}']",38,31,10,7,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,poolClosed_1.txt,0.4595,0.8022,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",90.884863,class T { @Override public void poolClosed(ConnectionPool pool) { cacheSizeMap.remove(pool); super.poolClosed(pool); } },class T { void poolClosed( ) { super.poolClosed(pool); } },120,58,30,62,68.88888888888889,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'poolClosed', '(', 'ConnectionPool', 'pool', ')', '{', 'cacheSizeMap', '.', 'remove', '(', 'pool', ')', ';', 'super', '.', 'poolClosed', '(', 'pool', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'poolClosed', '(', ')', '{', 'super', '.', 'poolClosed', '(', 'pool', ')', ';', '}', '}']",29,17,10,12,63.1578947368421
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,checkScope_1.txt,0.4849,2.1041,"{'n_total': 13, 'n_valid': -1, 'n_correct': -1}",518.503161,"class T { public static void checkScope(String scope, Node n, ErrorDispatcher err) throws JasperException { if (scope != null && !scope.equals(""page"") && !scope.equals(""request"") && !scope.equals(""session"") && !scope.equals(""application"")) { err.jspError(n, ""jsp.error.invalid.scope"", scope); } } }","class T { void checkScope( ) { if (scope != null && ""page"" && equals && !scope.equals( ) && !scope.equals( )) err.jspError( ); } }",298,130,30,168,62.68656716417911,"['class', 'T', '{', 'public', 'static', 'void', 'checkScope', '(', 'String', 'scope', ',', 'Node', 'n', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'if', '(', 'scope', '!=', 'null', '&&', '!', 'scope', '.', 'equals', '(', '""page""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""request""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""session""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""application""', ')', ')', '{', 'err', '.', 'jspError', '(', 'n', ',', '""jsp.error.invalid.scope""', ',', 'scope', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'checkScope', '(', ')', '{', 'if', '(', 'scope', '!=', 'null', '&&', '""page""', '&&', 'equals', '&&', '!', 'scope', '.', 'equals', '(', ')', '&&', '!', 'scope', '.', 'equals', '(', ')', ')', 'err', '.', 'jspError', '(', ')', ';', '}', '}']",73,40,10,33,52.38095238095239
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,unlockDrawer_1.txt,0.191,2.6604,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",125.423712,class T { private void unlockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED); } } },class T { void unlockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED); } } },128,120,32,8,8.333333333333332,"['class', 'T', '{', 'private', 'void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_UNLOCKED', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'unlockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_UNLOCKED', ')', ';', '}', '}', '}']",28,27,10,1,5.555555555555555
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addStatusHandlers_1.txt,0.406,1.6007,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",92.971385,"class T { public void addStatusHandlers(Collection<StatusChecker> statusHandlers) { for (StatusChecker statusChecker : statusHandlers) { String name = statusChecker.getClass().getSimpleName(); if (name.endsWith(StatusChecker.class.getSimpleName())) { name = name.substring(0, name.length() - StatusChecker.class.getSimpleName().length()); } this.statusHandlers.put(name, statusChecker); } } }",class T { void addStatusHandlers(Collection<StatusChecker> statusHandlers) { } },392,80,37,312,87.88732394366198,"['class', 'T', '{', 'public', 'void', 'addStatusHandlers', '(', 'Collection', '<', 'StatusChecker', '>', 'statusHandlers', ')', '{', 'for', '(', 'StatusChecker', 'statusChecker', ':', 'statusHandlers', ')', '{', 'String', 'name', '=', 'statusChecker', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ';', 'if', '(', 'name', '.', 'endsWith', '(', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', ')', ')', '{', 'name', '=', 'name', '.', 'substring', '(', '0', ',', 'name', '.', 'length', '(', ')', '-', 'StatusChecker', '.', 'class', '.', 'getSimpleName', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'this', '.', 'statusHandlers', '.', 'put', '(', 'name', ',', 'statusChecker', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'addStatusHandlers', '(', 'Collection', '<', 'StatusChecker', '>', 'statusHandlers', ')', '{', '}', '}']",93,15,10,78,93.97590361445783
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,canInitializeReference_1.txt,0.4107,1.1457,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",102.107375,class T { public final boolean canInitializeReference() { return (flags & CAN_INITIALIZE_REFERENCE) != 0; } },class T { boolean canInitializeReference() { return (flags & CAN_INITIALIZE_REFERENCE) != 0; } },109,96,42,13,19.402985074626866,"['class', 'T', '{', 'public', 'final', 'boolean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'flags', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}', '}']","['class', 'T', '{', 'boolean', 'canInitializeReference', '(', ')', '{', 'return', '(', 'flags', '&', 'CAN_INITIALIZE_REFERENCE', ')', '!=', '0', ';', '}', '}']",21,19,10,2,18.181818181818183
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,checkVerificationError_1.txt,0.3413,1.8975,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",241.811115,"class T { public static int checkVerificationError(int verificationError) { if (!VerificationError.isValidVerificationError(verificationError)) { throw new IllegalArgumentException(String.format(""Invalid verification error value: %d. Must be between 1 and 9, inclusive"", verificationError)); } return verificationError; } }",class T { int checkVerificationError(int verificationError) { if ( VerificationError.isValidVerificationError( )) throw IllegalArgumentException ; } },323,150,42,173,61.56583629893239,"['class', 'T', '{', 'public', 'static', 'int', 'checkVerificationError', '(', 'int', 'verificationError', ')', '{', 'if', '(', '!', 'VerificationError', '.', 'isValidVerificationError', '(', 'verificationError', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""Invalid verification error value: %d. Must be between 1 and 9, inclusive""', ',', 'verificationError', ')', ')', ';', '}', 'return', 'verificationError', ';', '}', '}']","['class', 'T', '{', 'int', 'checkVerificationError', '(', 'int', 'verificationError', ')', '{', 'if', '(', 'VerificationError', '.', 'isValidVerificationError', '(', ')', ')', 'throw', 'IllegalArgumentException', ';', '}', '}']",43,23,10,20,60.60606060606061
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,withHostConfig_1.txt,0.4648,1.0495,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",102.330463,class T { public ContainerBuilder withHostConfig(HostConfig hostConfig) { this.hostConfig = hostConfig; return this; } },class T { ContainerBuilder withHostConfig(HostConfig hostConfig) { return this; } },120,83,34,37,43.02325581395349,"['class', 'T', '{', 'public', 'ContainerBuilder', 'withHostConfig', '(', 'HostConfig', 'hostConfig', ')', '{', 'this', '.', 'hostConfig', '=', 'hostConfig', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'ContainerBuilder', 'withHostConfig', '(', 'HostConfig', 'hostConfig', ')', '{', 'return', 'this', ';', '}', '}']",22,15,10,7,58.333333333333336
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setMaxInFlightRequests_1.txt,0.4991,13.3322,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",91.819097,class T { public Builder setMaxInFlightRequests(int maxInFlightRequests) { this.maxInFlightRequests = maxInFlightRequests; return this; } },class T { Builder setMaxInFlightRequests(int maxInFlightRequests) { maxInFlightRequests = maxInFlightRequests; } },139,114,42,25,25.773195876288657,"['class', 'T', '{', 'public', 'Builder', 'setMaxInFlightRequests', '(', 'int', 'maxInFlightRequests', ')', '{', 'this', '.', 'maxInFlightRequests', '=', 'maxInFlightRequests', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'setMaxInFlightRequests', '(', 'int', 'maxInFlightRequests', ')', '{', 'maxInFlightRequests', '=', 'maxInFlightRequests', ';', '}', '}']",22,16,10,6,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createSocketAddress_1.txt,0.4708,2.5216,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",186.762473,class T { @Override protected SocketAddress createSocketAddress(int port) { return new VmPipeAddress(port); } },class T { @Override SocketAddress createSocketAddress( ) { return new VmPipeAddress( ); } },111,91,39,20,27.77777777777778,"['class', 'T', '{', '@', 'Override', 'protected', 'SocketAddress', 'createSocketAddress', '(', 'int', 'port', ')', '{', 'return', 'new', 'VmPipeAddress', '(', 'port', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'SocketAddress', 'createSocketAddress', '(', ')', '{', 'return', 'new', 'VmPipeAddress', '(', ')', ';', '}', '}']",22,18,10,4,33.33333333333333
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addSecurityProvider_1.txt,0.2816,1.8009,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",59.14497,class T { @Override public void addSecurityProvider(SecurityProvider securityProvider) { numSecurityProviders++; } },class T { void addSecurityProvider( ) { numSecurityProviders++; } },116,67,39,49,63.63636363636363,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'addSecurityProvider', '(', 'SecurityProvider', 'securityProvider', ')', '{', 'numSecurityProviders', '++', ';', '}', '}']","['class', 'T', '{', 'void', 'addSecurityProvider', '(', ')', '{', 'numSecurityProviders', '++', ';', '}', '}']",18,13,10,5,62.5
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getActiveConsumerCount_1.txt,0.3367,2.3035,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",246.845727,"class T { protected org.fest.reflect.field.Invoker<AtomicInteger> getActiveConsumerCount(JobConsumerExecutor jobConsumerExecutor) { return Reflection.field(""activeConsumerCount"").ofType(AtomicInteger.class).in(jobConsumerExecutor); } }","class T { AtomicInteger getActiveConsumerCount( ) { return ""activeConsumerCount"" ; } }",235,86,42,149,77.2020725388601,"['class', 'T', '{', 'protected', 'org', '.', 'fest', '.', 'reflect', '.', 'field', '.', 'Invoker', '<', 'AtomicInteger', '>', 'getActiveConsumerCount', '(', 'JobConsumerExecutor', 'jobConsumerExecutor', ')', '{', 'return', 'Reflection', '.', 'field', '(', '""activeConsumerCount""', ')', '.', 'ofType', '(', 'AtomicInteger', '.', 'class', ')', '.', 'in', '(', 'jobConsumerExecutor', ')', ';', '}', '}']","['class', 'T', '{', 'AtomicInteger', 'getActiveConsumerCount', '(', ')', '{', 'return', '""activeConsumerCount""', ';', '}', '}']",44,13,10,31,91.17647058823528
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getRegisteredFunctions_1.txt,0.4872,1.8226,"{'n_total': 14, 'n_valid': -1, 'n_correct': -1}",408.101547,class T { public List<String> getRegisteredFunctions(String prefix) { List<String> rv = new Vector<String>(); for (String function : m_registeredFunctions) { if (function.startsWith(prefix)) { rv.add(function); } } return rv; } },class T { List getRegisteredFunctions( ) { for (String function : m_registeredFunctions) rv.add( ); } },229,103,42,126,67.37967914438502,"['class', 'T', '{', 'public', 'List', '<', 'String', '>', 'getRegisteredFunctions', '(', 'String', 'prefix', ')', '{', 'List', '<', 'String', '>', 'rv', '=', 'new', 'Vector', '<', 'String', '>', '(', ')', ';', 'for', '(', 'String', 'function', ':', 'm_registeredFunctions', ')', '{', 'if', '(', 'function', '.', 'startsWith', '(', 'prefix', ')', ')', '{', 'rv', '.', 'add', '(', 'function', ')', ';', '}', '}', 'return', 'rv', ';', '}', '}']","['class', 'T', '{', 'List', 'getRegisteredFunctions', '(', ')', '{', 'for', '(', 'String', 'function', ':', 'm_registeredFunctions', ')', 'rv', '.', 'add', '(', ')', ';', '}', '}']",60,23,10,37,74.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setAttributesAsText_1.txt,0.397,4.2725,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",447.063735,"class T { @ChromeDevtoolsMethod public void setAttributesAsText(JsonRpcPeer peer, JSONObject params) { final SetAttributesAsTextRequest request = mObjectMapper.convertValue(params, SetAttributesAsTextRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { Object element = mDocument.getElementForNodeId(request.nodeId); if (element != null) { mDocument.setAttributesAsText(element, request.text); } } }); } }","class T { void setAttributesAsText(JsonRpcPeer peer, JSONObject params) { SetAttributesAsTextRequest request = mObjectMapper.convertValue(params ); mDocument.postAndWait(new Runnable() { { mDocument.setAttributesAsText( ); } }); } }",437,232,39,205,51.507537688442206,"['class', 'T', '{', '@', 'ChromeDevtoolsMethod', 'public', 'void', 'setAttributesAsText', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetAttributesAsTextRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetAttributesAsTextRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Object', 'element', '=', 'mDocument', '.', 'getElementForNodeId', '(', 'request', '.', 'nodeId', ')', ';', 'if', '(', 'element', '!=', 'null', ')', '{', 'mDocument', '.', 'setAttributesAsText', '(', 'element', ',', 'request', '.', 'text', ')', ';', '}', '}', '}', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setAttributesAsText', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'SetAttributesAsTextRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '{', 'mDocument', '.', 'setAttributesAsText', '(', ')', ';', '}', '}', ')', ';', '}', '}']",85,45,10,40,53.333333333333336
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,appendLink_1.txt,0.4143,1.1743,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",115.137145,"class T { public void appendLink(StringBuffer buffer, String name, String view) { buffer.append(""link:"" + view); } }","class T { void appendLink(StringBuffer buffer , String view) { buffer.append(""link:"" + view); } }",116,97,30,19,22.093023255813957,"['class', 'T', '{', 'public', 'void', 'appendLink', '(', 'StringBuffer', 'buffer', ',', 'String', 'name', ',', 'String', 'view', ')', '{', 'buffer', '.', 'append', '(', '""link:""', '+', 'view', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'appendLink', '(', 'StringBuffer', 'buffer', ',', 'String', 'view', ')', '{', 'buffer', '.', 'append', '(', '""link:""', '+', 'view', ')', ';', '}', '}']",28,24,10,4,22.22222222222222
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setIgnoreSchema_1.txt,0.4317,1.2877,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",204.847402,"class T { public Builder setIgnoreSchema(boolean ignoreSchema, Set<String> ignoreSchemaTopics) { this.ignoreSchema = ignoreSchema; this.ignoreSchemaTopics = ignoreSchemaTopics; return this; } }","class T { Builder setIgnoreSchema(boolean ignoreSchema, Set ignoreSchemaTopics) { } }",193,85,35,108,68.35443037974683,"['class', 'T', '{', 'public', 'Builder', 'setIgnoreSchema', '(', 'boolean', 'ignoreSchema', ',', 'Set', '<', 'String', '>', 'ignoreSchemaTopics', ')', '{', 'this', '.', 'ignoreSchema', '=', 'ignoreSchema', ';', 'this', '.', 'ignoreSchemaTopics', '=', 'ignoreSchemaTopics', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'setIgnoreSchema', '(', 'boolean', 'ignoreSchema', ',', 'Set', 'ignoreSchemaTopics', ')', '{', '}', '}']",34,15,10,19,79.16666666666666
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,withLogPath_1.txt,0.4118,0.9614,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",106.039021,class T { public ContainerBuilder withLogPath(String logPath) { this.logPath = logPath; return this; } },class T { ContainerBuilder withLogPath(String logPath) { return this; } },104,73,31,31,42.465753424657535,"['class', 'T', '{', 'public', 'ContainerBuilder', 'withLogPath', '(', 'String', 'logPath', ')', '{', 'this', '.', 'logPath', '=', 'logPath', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'ContainerBuilder', 'withLogPath', '(', 'String', 'logPath', ')', '{', 'return', 'this', ';', '}', '}']",22,15,10,7,58.333333333333336
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createUploadDir_1.txt,0.4403,2.1904,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",339.360673,"class T { public static void createUploadDir(Server server, String uploadDir) throws DockerJSONException { File uploadFolder = new File(uploadDir + ""/uploadDir_"" + server.getContainerID()); if (!uploadFolder.exists()) { uploadFolder.mkdir(); } } }","class T { void createUploadDir( ) { File uploadFolder = new File(uploadDir + ""/uploadDir_"" + server.getContainerID()); uploadFolder.mkdir(); } }",247,144,35,103,48.58490566037736,"['class', 'T', '{', 'public', 'static', 'void', 'createUploadDir', '(', 'Server', 'server', ',', 'String', 'uploadDir', ')', 'throws', 'DockerJSONException', '{', 'File', 'uploadFolder', '=', 'new', 'File', '(', 'uploadDir', '+', '""/uploadDir_""', '+', 'server', '.', 'getContainerID', '(', ')', ')', ';', 'if', '(', '!', 'uploadFolder', '.', 'exists', '(', ')', ')', '{', 'uploadFolder', '.', 'mkdir', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'createUploadDir', '(', ')', '{', 'File', 'uploadFolder', '=', 'new', 'File', '(', 'uploadDir', '+', '""/uploadDir_""', '+', 'server', '.', 'getContainerID', '(', ')', ')', ';', 'uploadFolder', '.', 'mkdir', '(', ')', ';', '}', '}']",53,33,10,20,46.51162790697674
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,toConnectException_1.txt,0.2481,1.8404,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",186.075512,class T { private static ConnectException toConnectException(Throwable t) { if (t instanceof ConnectException) { return (ConnectException) t; } else { return new ConnectException(t); } } },class T { ConnectException toConnectException(Throwable t) { if (t instanceof ConnectException) { return (ConnectException) t; } else return new ConnectException( ); } },188,169,38,19,12.666666666666668,"['class', 'T', '{', 'private', 'static', 'ConnectException', 'toConnectException', '(', 'Throwable', 't', ')', '{', 'if', '(', 't', 'instanceof', 'ConnectException', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', 'else', '{', 'return', 'new', 'ConnectException', '(', 't', ')', ';', '}', '}', '}']","['class', 'T', '{', 'ConnectException', 'toConnectException', '(', 'Throwable', 't', ')', '{', 'if', '(', 't', 'instanceof', 'ConnectException', ')', '{', 'return', '(', 'ConnectException', ')', 't', ';', '}', 'else', 'return', 'new', 'ConnectException', '(', ')', ';', '}', '}']",38,33,10,5,17.857142857142858
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addVerifier_1.txt,0.4103,4.2949,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.442169,"class T { public void addVerifier(PurchaseVerifier verifier) { verifiers.put(verifier.storeName(), verifier); } }",class T { void addVerifier(PurchaseVerifier verifier) { verifiers.put( ); } },113,77,31,36,43.90243902439025,"['class', 'T', '{', 'public', 'void', 'addVerifier', '(', 'PurchaseVerifier', 'verifier', ')', '{', 'verifiers', '.', 'put', '(', 'verifier', '.', 'storeName', '(', ')', ',', 'verifier', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addVerifier', '(', 'PurchaseVerifier', 'verifier', ')', '{', 'verifiers', '.', 'put', '(', ')', ';', '}', '}']",26,18,10,8,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setOpeningTime_1.txt,0.4529,0.8308,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",93.234889,class T { protected Period setOpeningTime(String openingTime) { this.openingTime = openingTime; return this; } },class T { Period setOpeningTime(String openingTime) { openingTime = openingTime; } },112,84,34,28,35.8974358974359,"['class', 'T', '{', 'protected', 'Period', 'setOpeningTime', '(', 'String', 'openingTime', ')', '{', 'this', '.', 'openingTime', '=', 'openingTime', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Period', 'setOpeningTime', '(', 'String', 'openingTime', ')', '{', 'openingTime', '=', 'openingTime', ';', '}', '}']",22,16,10,6,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,hasIncludeAction_1.txt,0.4815,0.795,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",58.993448,class T { public boolean hasIncludeAction() { return hasIncludeAction; } },class T { boolean hasIncludeAction() { return hasIncludeAction; } },74,67,36,7,18.421052631578945,"['class', 'T', '{', 'public', 'boolean', 'hasIncludeAction', '(', ')', '{', 'return', 'hasIncludeAction', ';', '}', '}']","['class', 'T', '{', 'boolean', 'hasIncludeAction', '(', ')', '{', 'return', 'hasIncludeAction', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,withNetworkDisabled_1.txt,0.3359,1.337,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",102.959148,class T { public ConfigBuilder withNetworkDisabled(Boolean networkDisabled) { this.networkDisabled = networkDisabled; return this; } },class T { ConfigBuilder withNetworkDisabled(Boolean networkDisabled) { return this; } },134,87,39,47,49.47368421052632,"['class', 'T', '{', 'public', 'ConfigBuilder', 'withNetworkDisabled', '(', 'Boolean', 'networkDisabled', ')', '{', 'this', '.', 'networkDisabled', '=', 'networkDisabled', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'ConfigBuilder', 'withNetworkDisabled', '(', 'Boolean', 'networkDisabled', ')', '{', 'return', 'this', ';', '}', '}']",22,15,10,7,58.333333333333336
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getInstanceFieldsOffset_1.txt,0.4904,1.6183,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.575831,"class T { private int getInstanceFieldsOffset() { if (instanceFieldsOffset > 0) { return instanceFieldsOffset; } DexReader reader = new DexReader(dexFile, staticFieldsOffset); DexBackedField.skipFields(reader, staticFieldCount); instanceFieldsOffset = reader.getOffset(); return instanceFieldsOffset; } }",class T { int getInstanceFieldsOffset() { return instanceFieldsOffset; } },304,74,43,230,88.12260536398468,"['class', 'T', '{', 'private', 'int', 'getInstanceFieldsOffset', '(', ')', '{', 'if', '(', 'instanceFieldsOffset', '>', '0', ')', '{', 'return', 'instanceFieldsOffset', ';', '}', 'DexReader', 'reader', '=', 'new', 'DexReader', '(', 'dexFile', ',', 'staticFieldsOffset', ')', ';', 'DexBackedField', '.', 'skipFields', '(', 'reader', ',', 'staticFieldCount', ')', ';', 'instanceFieldsOffset', '=', 'reader', '.', 'getOffset', '(', ')', ';', 'return', 'instanceFieldsOffset', ';', '}', '}']","['class', 'T', '{', 'int', 'getInstanceFieldsOffset', '(', ')', '{', 'return', 'instanceFieldsOffset', ';', '}', '}']",53,13,10,40,93.02325581395348
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getFinalScore_1.txt,0.4739,1.601,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",124.124989,"class T { public String getFinalScore() { return Validator.check(finalScore, ""0"").replace(',', '.'); } }",class T { String getFinalScore() { return Validator.check(finalScore ) ; } },104,76,33,28,39.436619718309856,"['class', 'T', '{', 'public', 'String', 'getFinalScore', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'finalScore', ',', '""0""', ')', '.', 'replace', '(', ""','"", ',', ""'.'"", ')', ';', '}', '}']","['class', 'T', '{', 'String', 'getFinalScore', '(', ')', '{', 'return', 'Validator', '.', 'check', '(', 'finalScore', ')', ';', '}', '}']",28,18,10,10,55.55555555555556
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setCallbackClass_1.txt,0.4291,0.9069,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",90.839055,class T { public HttpClassCallbackDTO setCallbackClass(String callbackClass) { this.callbackClass = callbackClass; return this; } },class T { HttpClassCallbackDTO setCallbackClass(String callbackClass) { callbackClass = callbackClass; } },131,106,36,25,26.31578947368421,"['class', 'T', '{', 'public', 'HttpClassCallbackDTO', 'setCallbackClass', '(', 'String', 'callbackClass', ')', '{', 'this', '.', 'callbackClass', '=', 'callbackClass', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'HttpClassCallbackDTO', 'setCallbackClass', '(', 'String', 'callbackClass', ')', '{', 'callbackClass', '=', 'callbackClass', ';', '}', '}']",22,16,10,6,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setItemIdentity_1.txt,0.378,1.7538,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",80.146158,"class T { public void setItemIdentity(int itemOffset, String identity) { itemIdentities.put(itemOffset, identity); } }","class T { void setItemIdentity(int itemOffset, String identity) { itemIdentities.put( ); } }",118,92,35,26,31.32530120481928,"['class', 'T', '{', 'public', 'void', 'setItemIdentity', '(', 'int', 'itemOffset', ',', 'String', 'identity', ')', '{', 'itemIdentities', '.', 'put', '(', 'itemOffset', ',', 'identity', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setItemIdentity', '(', 'int', 'itemOffset', ',', 'String', 'identity', ')', '{', 'itemIdentities', '.', 'put', '(', ')', ';', '}', '}']",25,21,10,4,26.666666666666668
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isMiss_1.txt,0.4905,0.7415,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.44868,class T { public boolean isMiss() { return miss; } },class T { boolean isMiss() { return miss; } },52,45,26,7,26.923076923076923,"['class', 'T', '{', 'public', 'boolean', 'isMiss', '(', ')', '{', 'return', 'miss', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isMiss', '(', ')', '{', 'return', 'miss', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,deleteAllTasks_1.txt,0.4445,1.3767,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",127.9661,class T { protected void deleteAllTasks() { storage.write((NoResult.Quiet) storeProvider -> storeProvider.getUnsafeTaskStore().deleteAllTasks()); } },class T { void deleteAllTasks() { storage.write((NoResult ) storeProvider -> storeProvider.getUnsafeTaskStore().deleteAllTasks()); } },149,134,34,15,13.043478260869565,"['class', 'T', '{', 'protected', 'void', 'deleteAllTasks', '(', ')', '{', 'storage', '.', 'write', '(', '(', 'NoResult', '.', 'Quiet', ')', 'storeProvider', '->', 'storeProvider', '.', 'getUnsafeTaskStore', '(', ')', '.', 'deleteAllTasks', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'deleteAllTasks', '(', ')', '{', 'storage', '.', 'write', '(', '(', 'NoResult', ')', 'storeProvider', '->', 'storeProvider', '.', 'getUnsafeTaskStore', '(', ')', '.', 'deleteAllTasks', '(', ')', ')', ';', '}', '}']",33,30,10,3,13.043478260869565
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createJobManager_1.txt,0.4678,1.1321,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",92.885351,"class T { protected JobManager createJobManager(Configuration.Builder configurationBuilder) { return new JobManager(Robolectric.application, configurationBuilder.id(UUID.randomUUID().toString()).build()); } }",class T { JobManager createJobManager( ) { return new JobManager( ); } },208,72,36,136,79.06976744186046,"['class', 'T', '{', 'protected', 'JobManager', 'createJobManager', '(', 'Configuration', '.', 'Builder', 'configurationBuilder', ')', '{', 'return', 'new', 'JobManager', '(', 'Robolectric', '.', 'application', ',', 'configurationBuilder', '.', 'id', '(', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ')', '.', 'build', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'JobManager', 'createJobManager', '(', ')', '{', 'return', 'new', 'JobManager', '(', ')', ';', '}', '}']",43,16,10,27,81.81818181818183
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isSendEmail_1.txt,0.46,1.6664,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",106.564243,class T { public boolean isSendEmail() { boolean sendEmail; if (isEmailCopyAlways() || (isEmailCopyOptional() && getBooleanEmailOut())) { sendEmail = true; } else { sendEmail = false; } return sendEmail; } },class T { boolean isSendEmail() { return sendEmail; } },207,55,31,152,86.36363636363636,"['class', 'T', '{', 'public', 'boolean', 'isSendEmail', '(', ')', '{', 'boolean', 'sendEmail', ';', 'if', '(', 'isEmailCopyAlways', '(', ')', '||', '(', 'isEmailCopyOptional', '(', ')', '&&', 'getBooleanEmailOut', '(', ')', ')', ')', '{', 'sendEmail', '=', 'true', ';', '}', 'else', '{', 'sendEmail', '=', 'false', ';', '}', 'return', 'sendEmail', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isSendEmail', '(', ')', '{', 'return', 'sendEmail', ';', '}', '}']",46,13,10,33,91.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,hasWater_1.txt,0.3631,1.4937,"{'n_total': 11, 'n_valid': -1, 'n_correct': -1}",237.361361,"class T { private boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; } }",class T { boolean hasWater( ) { for (BlockPos mutableblockpos : add ) if ( getMaterial == Material.WATER) return ; } },291,118,28,173,65.77946768060836,"['class', 'T', '{', 'private', 'boolean', 'hasWater', '(', 'World', 'world', ',', 'BlockPos', 'pos', ')', '{', 'for', '(', 'BlockPos', '.', 'MutableBlockPos', 'mutableblockpos', ':', 'BlockPos', '.', 'getAllInBoxMutable', '(', 'pos', '.', 'add', '(', '-', '4', ',', '0', ',', '-', '4', ')', ',', 'pos', '.', 'add', '(', '4', ',', '1', ',', '4', ')', ')', ')', '{', 'if', '(', 'world', '.', 'getBlockState', '(', 'mutableblockpos', ')', '.', 'getMaterial', '(', ')', '==', 'Material', '.', 'WATER', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'hasWater', '(', ')', '{', 'for', '(', 'BlockPos', 'mutableblockpos', ':', 'add', ')', 'if', '(', 'getMaterial', '==', 'Material', '.', 'WATER', ')', 'return', ';', '}', '}']",79,27,10,52,75.36231884057972
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,lockDrawer_1.txt,0.3333,2.4948,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",117.810055,class T { private void lockDrawer() { if (mDrawer != null) { mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); } } },class T { void lockDrawer() { if (mDrawer != null) mDrawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); } },131,119,30,12,11.88118811881188,"['class', 'T', '{', 'private', 'void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', '{', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_LOCKED_CLOSED', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'lockDrawer', '(', ')', '{', 'if', '(', 'mDrawer', '!=', 'null', ')', 'mDrawer', '.', 'setDrawerLockMode', '(', 'DrawerLayout', '.', 'LOCK_MODE_LOCKED_CLOSED', ')', ';', '}', '}']",28,25,10,3,16.666666666666664
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,initializeFilters_1.txt,0.3516,1.9742,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",139.360982,class T { protected static synchronized void initializeFilters(AbstractExtensionFileFilterFileChooser chooser) { if (!chooser.getFiltersInitialized()) chooser.doInitializeFilters(); } },class T { void initializeFilters( ) { chooser.doInitializeFilters(); } },185,72,37,113,76.35135135135135,"['class', 'T', '{', 'protected', 'static', 'synchronized', 'void', 'initializeFilters', '(', 'AbstractExtensionFileFilterFileChooser', 'chooser', ')', '{', 'if', '(', '!', 'chooser', '.', 'getFiltersInitialized', '(', ')', ')', 'chooser', '.', 'doInitializeFilters', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'initializeFilters', '(', ')', '{', 'chooser', '.', 'doInitializeFilters', '(', ')', ';', '}', '}']",30,16,10,14,70.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getPropagate_1.txt,0.3744,1.0233,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",48.399733,"class T { @JsonProperty(""propagate"") public Boolean getPropagate() { return propagate; } }","class T { @JsonProperty(""propagate"") Boolean getPropagate() { return propagate; } }",90,83,32,7,12.06896551724138,"['class', 'T', '{', '@', 'JsonProperty', '(', '""propagate""', ')', 'public', 'Boolean', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}', '}']","['class', 'T', '{', '@', 'JsonProperty', '(', '""propagate""', ')', 'Boolean', 'getPropagate', '(', ')', '{', 'return', 'propagate', ';', '}', '}']",19,18,10,1,11.11111111111111
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setAlwaysUseSession_1.txt,0.4382,3.0313,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",91.142595,class T { private void setAlwaysUseSession() { ((AuthenticatorBase) basicContext.getAuthenticator()).setAlwaysUseSession(true); ((AuthenticatorBase) nonloginContext.getAuthenticator()).setAlwaysUseSession(true); } },class T { void setAlwaysUseSession() { basicContext.getAuthenticator() .setAlwaysUseSession( ); } },215,99,39,116,65.9090909090909,"['class', 'T', '{', 'private', 'void', 'setAlwaysUseSession', '(', ')', '{', '(', '(', 'AuthenticatorBase', ')', 'basicContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '(', '(', 'AuthenticatorBase', ')', 'nonloginContext', '.', 'getAuthenticator', '(', ')', ')', '.', 'setAlwaysUseSession', '(', 'true', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setAlwaysUseSession', '(', ')', '{', 'basicContext', '.', 'getAuthenticator', '(', ')', '.', 'setAlwaysUseSession', '(', ')', ';', '}', '}']",43,20,10,23,69.6969696969697
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,fireMessageSent_1.txt,0.4562,2.3226,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",101.463769,"class T { private void fireMessageSent(T session, WriteRequest req) { session.setCurrentWriteRequest(null); IoFilterChain filterChain = session.getFilterChain(); filterChain.fireMessageSent(req); } }",class T { void fireMessageSent( ) { filterChain.fireMessageSent( ); } },199,71,35,128,78.04878048780488,"['class', 'T', '{', 'private', 'void', 'fireMessageSent', '(', 'T', 'session', ',', 'WriteRequest', 'req', ')', '{', 'session', '.', 'setCurrentWriteRequest', '(', 'null', ')', ';', 'IoFilterChain', 'filterChain', '=', 'session', '.', 'getFilterChain', '(', ')', ';', 'filterChain', '.', 'fireMessageSent', '(', 'req', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'fireMessageSent', '(', ')', '{', 'filterChain', '.', 'fireMessageSent', '(', ')', ';', '}', '}']",39,16,10,23,79.3103448275862
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isDedicated_1.txt,0.386,1.5912,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",202.343405,class T { public static boolean isDedicated(Offer offer) { return FluentIterable.from(offer.getAttributesList()).transform(ATTRIBUTE_NAME).anyMatch(Predicates.equalTo(ConfigurationManager.DEDICATED_ATTRIBUTE)); } },class T { boolean isDedicated( ) { return offer.getAttributesList() .anyMatch(Predicates.equalTo(ConfigurationManager.DEDICATED_ATTRIBUTE)); } },214,144,31,70,38.25136612021858,"['class', 'T', '{', 'public', 'static', 'boolean', 'isDedicated', '(', 'Offer', 'offer', ')', '{', 'return', 'FluentIterable', '.', 'from', '(', 'offer', '.', 'getAttributesList', '(', ')', ')', '.', 'transform', '(', 'ATTRIBUTE_NAME', ')', '.', 'anyMatch', '(', 'Predicates', '.', 'equalTo', '(', 'ConfigurationManager', '.', 'DEDICATED_ATTRIBUTE', ')', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isDedicated', '(', ')', '{', 'return', 'offer', '.', 'getAttributesList', '(', ')', '.', 'anyMatch', '(', 'Predicates', '.', 'equalTo', '(', 'ConfigurationManager', '.', 'DEDICATED_ATTRIBUTE', ')', ')', ';', '}', '}']",43,29,10,14,42.42424242424242
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getShowStats_1.txt,0.4868,0.7752,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",80.127384,class T { public boolean getShowStats() { return this.showStats; } },class T { boolean getShowStats() { return this.showStats; } },68,61,32,7,19.444444444444446,"['class', 'T', '{', 'public', 'boolean', 'getShowStats', '(', ')', '{', 'return', 'this', '.', 'showStats', ';', '}', '}']","['class', 'T', '{', 'boolean', 'getShowStats', '(', ')', '{', 'return', 'this', '.', 'showStats', ';', '}', '}']",16,15,10,1,16.666666666666664
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setLoginResult_1.txt,0.471,1.0801,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",256.887352,"class T { public final void setLoginResult(LoginResult loginResult) { if (!this.loginResult.compareAndSet(null, loginResult)) { throw new UnsupportedOperationException(""A Login Result already exists in this callback and cannot be set again.""); } } }",class T { void setLoginResult(LoginResult loginResult) { throw new UnsupportedOperationException( ); } },249,104,34,145,67.44186046511628,"['class', 'T', '{', 'public', 'final', 'void', 'setLoginResult', '(', 'LoginResult', 'loginResult', ')', '{', 'if', '(', '!', 'this', '.', 'loginResult', '.', 'compareAndSet', '(', 'null', ',', 'loginResult', ')', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '""A Login Result already exists in this callback and cannot be set again.""', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'setLoginResult', '(', 'LoginResult', 'loginResult', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}', '}']",37,18,10,19,70.37037037037037
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setClosingTime_1.txt,0.4556,0.8631,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",94.315172,class T { protected Period setClosingTime(String closingTime) { this.closingTime = closingTime; return this; } },class T { Period setClosingTime(String closingTime) { closingTime = closingTime; } },112,84,34,28,35.8974358974359,"['class', 'T', '{', 'protected', 'Period', 'setClosingTime', '(', 'String', 'closingTime', ')', '{', 'this', '.', 'closingTime', '=', 'closingTime', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Period', 'setClosingTime', '(', 'String', 'closingTime', ')', '{', 'closingTime', '=', 'closingTime', ';', '}', '}']",22,16,10,6,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getExclusionRule_1.txt,0.4556,0.8926,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.554341,class T { public RecurrenceRule getExclusionRule() { return this.exclusionRule; } },class T { RecurrenceRule getExclusionRule() { return exclusionRule; } },83,71,36,12,25.53191489361702,"['class', 'T', '{', 'public', 'RecurrenceRule', 'getExclusionRule', '(', ')', '{', 'return', 'this', '.', 'exclusionRule', ';', '}', '}']","['class', 'T', '{', 'RecurrenceRule', 'getExclusionRule', '(', ')', '{', 'return', 'exclusionRule', ';', '}', '}']",16,13,10,3,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getLocalPosition_1.txt,0.472,1.5389,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",84.709686,class T { @Override public Vector3 getLocalPosition(Vector3 out) { return out.set(localPosition); } },class T { Vector3 getLocalPosition( ) { return out.set(localPosition); } },101,74,36,27,41.53846153846154,"['class', 'T', '{', '@', 'Override', 'public', 'Vector3', 'getLocalPosition', '(', 'Vector3', 'out', ')', '{', 'return', 'out', '.', 'set', '(', 'localPosition', ')', ';', '}', '}']","['class', 'T', '{', 'Vector3', 'getLocalPosition', '(', ')', '{', 'return', 'out', '.', 'set', '(', 'localPosition', ')', ';', '}', '}']",23,18,10,5,38.46153846153847
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,withFsUrl_1.txt,0.4768,0.9482,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",103.183863,class T { public GzipHdfsBolt withFsUrl(String fsUrl) { this.fsUrl = fsUrl; return this; } },class T { GzipHdfsBolt withFsUrl( ) { this.fsUrl = fsUrl; return this; } },92,74,29,18,28.57142857142857,"['class', 'T', '{', 'public', 'GzipHdfsBolt', 'withFsUrl', '(', 'String', 'fsUrl', ')', '{', 'this', '.', 'fsUrl', '=', 'fsUrl', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'GzipHdfsBolt', 'withFsUrl', '(', ')', '{', 'this', '.', 'fsUrl', '=', 'fsUrl', ';', 'return', 'this', ';', '}', '}']",22,19,10,3,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,squaredError_1.txt,0.4459,2.1769,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",154.047586,"class T { public static double squaredError(double[] vector1, double[] vector2) { double squaredError = 0; for (int i = 0; i < vector1.length; i++) { squaredError += (vector1[i] - vector2[i]) * (vector1[i] - vector2[i]); } return squaredError; } }","class T { double squaredError(double[] vector1, double[] vector2) { double squaredError = 0; return squaredError; } }",247,117,32,130,60.46511627906976,"['class', 'T', '{', 'public', 'static', 'double', 'squaredError', '(', 'double', '[', ']', 'vector1', ',', 'double', '[', ']', 'vector2', ')', '{', 'double', 'squaredError', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vector1', '.', 'length', ';', 'i', '++', ')', '{', 'squaredError', '+=', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', '*', '(', 'vector1', '[', 'i', ']', '-', 'vector2', '[', 'i', ']', ')', ';', '}', 'return', 'squaredError', ';', '}', '}']","['class', 'T', '{', 'double', 'squaredError', '(', 'double', '[', ']', 'vector1', ',', 'double', '[', ']', 'vector2', ')', '{', 'double', 'squaredError', '=', '0', ';', 'return', 'squaredError', ';', '}', '}']",73,27,10,46,73.01587301587301
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getWriteRequestQueue_1.txt,0.4636,1.9228,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",260.265007,"class T { @SuppressWarnings(""unchecked"") private Queue<WriteRequest> getWriteRequestQueue(IoSession session) { return (Queue<WriteRequest>) session.getAttribute(WRITE_REQUEST_QUEUE); } }",class T { Queue<WriteRequest> getWriteRequestQueue( ) { return (Queue ) session.getAttribute(WRITE_REQUEST_QUEUE); } },186,118,40,68,46.57534246575342,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'private', 'Queue', '<', 'WriteRequest', '>', 'getWriteRequestQueue', '(', 'IoSession', 'session', ')', '{', 'return', '(', 'Queue', '<', 'WriteRequest', '>', ')', 'session', '.', 'getAttribute', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}', '}']","['class', 'T', '{', 'Queue', '<', 'WriteRequest', '>', 'getWriteRequestQueue', '(', ')', '{', 'return', '(', 'Queue', ')', 'session', '.', 'getAttribute', '(', 'WRITE_REQUEST_QUEUE', ')', ';', '}', '}']",35,24,10,11,44.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,htmlContent_1.txt,0.4836,3.8923,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",161.768871,"class T { protected String htmlContent(Event event) { return Web.encodeUrlsAsHtml(Web.escapeHtml(plainTextContent(event), true)); } }",class T { String htmlContent(Event event) { return Web.encodeUrlsAsHtml(Web.escapeHtml(plainTextContent(event) )); } },133,118,31,15,14.705882352941178,"['class', 'T', '{', 'protected', 'String', 'htmlContent', '(', 'Event', 'event', ')', '{', 'return', 'Web', '.', 'encodeUrlsAsHtml', '(', 'Web', '.', 'escapeHtml', '(', 'plainTextContent', '(', 'event', ')', ',', 'true', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'htmlContent', '(', 'Event', 'event', ')', '{', 'return', 'Web', '.', 'encodeUrlsAsHtml', '(', 'Web', '.', 'escapeHtml', '(', 'plainTextContent', '(', 'event', ')', ')', ')', ';', '}', '}']",31,28,10,3,14.285714285714285
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getUseSendfile_1.txt,0.4474,0.918,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",87.561717,class T { public boolean getUseSendfile() { return ((NioEndpoint) endpoint).getUseSendfile(); } },class T { boolean getUseSendfile() { return ((NioEndpoint) endpoint).getUseSendfile(); } },97,90,34,7,11.11111111111111,"['class', 'T', '{', 'public', 'boolean', 'getUseSendfile', '(', ')', '{', 'return', '(', '(', 'NioEndpoint', ')', 'endpoint', ')', '.', 'getUseSendfile', '(', ')', ';', '}', '}']","['class', 'T', '{', 'boolean', 'getUseSendfile', '(', ')', '{', 'return', '(', '(', 'NioEndpoint', ')', 'endpoint', ')', '.', 'getUseSendfile', '(', ')', ';', '}', '}']",23,22,10,1,7.6923076923076925
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,saveTasks_1.txt,0.3414,1.596,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",284.24228,class T { @Override public void saveTasks(final Set<IScheduledTask> newTasks) { requireNonNull(newTasks); write(Op.saveTasks(new SaveTasks(IScheduledTask.toBuildersSet(newTasks)))); taskStore.saveTasks(newTasks); } },class T { void saveTasks( ) { write(Op.saveTasks( )); } },216,57,29,159,85.02673796791443,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'saveTasks', '(', 'final', 'Set', '<', 'IScheduledTask', '>', 'newTasks', ')', '{', 'requireNonNull', '(', 'newTasks', ')', ';', 'write', '(', 'Op', '.', 'saveTasks', '(', 'new', 'SaveTasks', '(', 'IScheduledTask', '.', 'toBuildersSet', '(', 'newTasks', ')', ')', ')', ')', ';', 'taskStore', '.', 'saveTasks', '(', 'newTasks', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'saveTasks', '(', ')', '{', 'write', '(', 'Op', '.', 'saveTasks', '(', ')', ')', ';', '}', '}']",50,19,10,31,77.5
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setMarginMirroring_1.txt,0.4722,1.5002,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.959729,class T { public boolean setMarginMirroring(boolean marginMirroring) { return true; } },class T { boolean setMarginMirroring(boolean marginMirroring) { } },87,67,38,20,40.81632653061224,"['class', 'T', '{', 'public', 'boolean', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'setMarginMirroring', '(', 'boolean', 'marginMirroring', ')', '{', '}', '}']",16,12,10,4,66.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,handleIllegalArgumentException_1.txt,0.4779,1.3571,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",80.597041,"class T { @ExceptionHandler() void handleIllegalArgumentException(IllegalArgumentException e, HttpServletResponse response) throws IOException { response.sendError(HttpStatus.BAD_REQUEST.value(), e.getMessage()); } }","class T { @ExceptionHandler() void handleIllegalArgumentException(IllegalArgumentException e, HttpServletResponse response) { } }",216,129,50,87,52.40963855421686,"['class', 'T', '{', '@', 'ExceptionHandler', '(', ')', 'void', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', '{', 'response', '.', 'sendError', '(', 'HttpStatus', '.', 'BAD_REQUEST', '.', 'value', '(', ')', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'ExceptionHandler', '(', ')', 'void', 'handleIllegalArgumentException', '(', 'IllegalArgumentException', 'e', ',', 'HttpServletResponse', 'response', ')', '{', '}', '}']",40,19,10,21,70.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,listBackups_1.txt,0.3527,1.3455,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",110.869694,class T { @Override public Response listBackups() { return ok(Result.listBackupsResult(new ListBackupsResult().setBackups(recovery.listBackups()))); } },class T { @Override Response listBackups() { return ok(Result.listBackupsResult( )); } },152,88,31,64,52.89256198347108,"['class', 'T', '{', '@', 'Override', 'public', 'Response', 'listBackups', '(', ')', '{', 'return', 'ok', '(', 'Result', '.', 'listBackupsResult', '(', 'new', 'ListBackupsResult', '(', ')', '.', 'setBackups', '(', 'recovery', '.', 'listBackups', '(', ')', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'Response', 'listBackups', '(', ')', '{', 'return', 'ok', '(', 'Result', '.', 'listBackupsResult', '(', ')', ')', ';', '}', '}']",36,22,10,14,53.84615384615385
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addPathParameter_1.txt,0.4633,1.3055,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",101.037305,"class T { protected void addPathParameter(String name, String value) { pathParameters.put(name, value); } }","class T { void addPathParameter(String name, String value) { pathParameters.put(name ); } }",107,91,36,16,22.53521126760564,"['class', 'T', '{', 'protected', 'void', 'addPathParameter', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'pathParameters', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addPathParameter', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'pathParameters', '.', 'put', '(', 'name', ')', ';', '}', '}']",25,22,10,3,20.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addHttpCookie_1.txt,0.4748,1.6152,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",90.990471,class T { @Override public void addHttpCookie(Suppressible<String> httpCookie) { httpCookies.add(httpCookie); } },class T { void addHttpCookie(Suppressible httpCookie) { httpCookies.add( ); } },113,79,33,34,42.5,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'addHttpCookie', '(', 'Suppressible', '<', 'String', '>', 'httpCookie', ')', '{', 'httpCookies', '.', 'add', '(', 'httpCookie', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addHttpCookie', '(', 'Suppressible', 'httpCookie', ')', '{', 'httpCookies', '.', 'add', '(', ')', ';', '}', '}']",25,18,10,7,46.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,exportInt_1.txt,0.3434,2.5947,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",350.083479,"class T { public static AtomicInteger exportInt(final String name) { final AtomicInteger intVar = new AtomicInteger(0); export(new SampledStat<Integer>(name, 0) { @Override public Integer doSample() { return intVar.get(); } }); return intVar; } }",class T { AtomicInteger exportInt( String name) { export(new SampledStat<Integer>(name ) { Integer doSample() { return intVar.get(); } }); } },246,142,29,104,47.92626728110599,"['class', 'T', '{', 'public', 'static', 'AtomicInteger', 'exportInt', '(', 'final', 'String', 'name', ')', '{', 'final', 'AtomicInteger', 'intVar', '=', 'new', 'AtomicInteger', '(', '0', ')', ';', 'export', '(', 'new', 'SampledStat', '<', 'Integer', '>', '(', 'name', ',', '0', ')', '{', '@', 'Override', 'public', 'Integer', 'doSample', '(', ')', '{', 'return', 'intVar', '.', 'get', '(', ')', ';', '}', '}', ')', ';', 'return', 'intVar', ';', '}', '}']","['class', 'T', '{', 'AtomicInteger', 'exportInt', '(', 'String', 'name', ')', '{', 'export', '(', 'new', 'SampledStat', '<', 'Integer', '>', '(', 'name', ')', '{', 'Integer', 'doSample', '(', ')', '{', 'return', 'intVar', '.', 'get', '(', ')', ';', '}', '}', ')', ';', '}', '}']",60,39,10,21,42.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,getFilterChainBuilder_1.txt,0.4668,1.4382,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",37.699057,class T { @Override public final IoFilterChainBuilder getFilterChainBuilder() { return filterChainBuilder; } },class T { IoFilterChainBuilder getFilterChainBuilder() { return filterChainBuilder; } },110,87,41,23,33.33333333333333,"['class', 'T', '{', '@', 'Override', 'public', 'final', 'IoFilterChainBuilder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}', '}']","['class', 'T', '{', 'IoFilterChainBuilder', 'getFilterChainBuilder', '(', ')', '{', 'return', 'filterChainBuilder', ';', '}', '}']",17,13,10,4,57.14285714285714
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,videoUrl_1.txt,0.4674,0.8358,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",170.986598,class T { public VideoBuilder videoUrl(String videoUrl) { this.videoUrl = videoUrl; return this; } },class T { VideoBuilder videoUrl( ) { videoUrl = videoUrl; return this; } },100,74,28,26,36.11111111111111,"['class', 'T', '{', 'public', 'VideoBuilder', 'videoUrl', '(', 'String', 'videoUrl', ')', '{', 'this', '.', 'videoUrl', '=', 'videoUrl', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'VideoBuilder', 'videoUrl', '(', ')', '{', 'videoUrl', '=', 'videoUrl', ';', 'return', 'this', ';', '}', '}']",22,17,10,5,41.66666666666667
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isAutoShrink_1.txt,0.4982,1.0305,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",48.33089,class T { @Override public final boolean isAutoShrink() { return autoShrink && recapacityAllowed; } },class T { boolean isAutoShrink() { return autoShrink && recapacityAllowed; } },101,78,32,23,33.33333333333333,"['class', 'T', '{', '@', 'Override', 'public', 'final', 'boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&&', 'recapacityAllowed', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isAutoShrink', '(', ')', '{', 'return', 'autoShrink', '&&', 'recapacityAllowed', ';', '}', '}']",19,15,10,4,44.44444444444444
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createMirrorSelector_1.txt,0.3698,2.8052,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",591.468429,"class T { private MirrorSelector createMirrorSelector(Settings settings) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(), mirror.getMirrorOfLayouts()); } return selector; } }","class T { MirrorSelector createMirrorSelector( ) { DefaultMirrorSelector selector = new DefaultMirrorSelector(); for (Mirror mirror : settings.getMirrors()) { selector.add( getId , mirror.getMirrorOf() ); } return selector; } }",330,227,40,103,35.51724137931034,"['class', 'T', '{', 'private', 'MirrorSelector', 'createMirrorSelector', '(', 'Settings', 'settings', ')', '{', 'DefaultMirrorSelector', 'selector', '=', 'new', 'DefaultMirrorSelector', '(', ')', ';', 'for', '(', 'Mirror', 'mirror', ':', 'settings', '.', 'getMirrors', '(', ')', ')', '{', 'selector', '.', 'add', '(', 'mirror', '.', 'getId', '(', ')', ',', 'mirror', '.', 'getUrl', '(', ')', ',', 'mirror', '.', 'getLayout', '(', ')', ',', 'false', ',', 'mirror', '.', 'getMirrorOf', '(', ')', ',', 'mirror', '.', 'getMirrorOfLayouts', '(', ')', ')', ';', '}', 'return', 'selector', ';', '}', '}']","['class', 'T', '{', 'MirrorSelector', 'createMirrorSelector', '(', ')', '{', 'DefaultMirrorSelector', 'selector', '=', 'new', 'DefaultMirrorSelector', '(', ')', ';', 'for', '(', 'Mirror', 'mirror', ':', 'settings', '.', 'getMirrors', '(', ')', ')', '{', 'selector', '.', 'add', '(', 'getId', ',', 'mirror', '.', 'getMirrorOf', '(', ')', ')', ';', '}', 'return', 'selector', ';', '}', '}']",74,47,10,27,42.1875
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isUseGeneratedKeys_1.txt,0.4829,0.7915,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.022349,class T { public boolean isUseGeneratedKeys() { return useGeneratedKeys; } },class T { boolean isUseGeneratedKeys() { return useGeneratedKeys; } },76,69,38,7,18.421052631578945,"['class', 'T', '{', 'public', 'boolean', 'isUseGeneratedKeys', '(', ')', '{', 'return', 'useGeneratedKeys', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isUseGeneratedKeys', '(', ')', '{', 'return', 'useGeneratedKeys', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,assertCounter_1.txt,0.257,3.957,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",199.991197,"class T { private static void assertCounter(String method) { final Counter counter = JpaWrapper.getJpaCounter(); assertEquals(""getRequestsCount"", 1, counter.getRequestsCount()); assertEquals(""requestName"", method, counter.getRequests().get(0).getName()); counter.clear(); } }","class T { void assertCounter(String method) { Counter counter = JpaWrapper.getJpaCounter(); assertEquals(""getRequestsCount"", 1 ); } }",275,133,33,142,58.67768595041323,"['class', 'T', '{', 'private', 'static', 'void', 'assertCounter', '(', 'String', 'method', ')', '{', 'final', 'Counter', 'counter', '=', 'JpaWrapper', '.', 'getJpaCounter', '(', ')', ';', 'assertEquals', '(', '""getRequestsCount""', ',', '1', ',', 'counter', '.', 'getRequestsCount', '(', ')', ')', ';', 'assertEquals', '(', '""requestName""', ',', 'method', ',', 'counter', '.', 'getRequests', '(', ')', '.', 'get', '(', '0', ')', '.', 'getName', '(', ')', ')', ';', 'counter', '.', 'clear', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'assertCounter', '(', 'String', 'method', ')', '{', 'Counter', 'counter', '=', 'JpaWrapper', '.', 'getJpaCounter', '(', ')', ';', 'assertEquals', '(', '""getRequestsCount""', ',', '1', ')', ';', '}', '}']",65,28,10,37,67.27272727272727
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,updateFrameTitle_1.txt,0.4817,2.6162,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",148.931944,class T { public void updateFrameTitle() { if (getParentFrame() != null) { getParentFrame().setTitle(getFrameTitle()); } if (getParentInternalFrame() != null) { getParentInternalFrame().setTitle(getFrameTitle()); } } },class T { void updateFrameTitle() { if (getParentInternalFrame != null) getParentInternalFrame().setTitle(getFrameTitle ); } },218,126,36,92,50.54945054945055,"['class', 'T', '{', 'public', 'void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'getParentFrame', '(', ')', '!=', 'null', ')', '{', 'getParentFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', 'if', '(', 'getParentInternalFrame', '(', ')', '!=', 'null', ')', '{', 'getParentInternalFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', '(', ')', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'updateFrameTitle', '(', ')', '{', 'if', '(', 'getParentInternalFrame', '!=', 'null', ')', 'getParentInternalFrame', '(', ')', '.', 'setTitle', '(', 'getFrameTitle', ')', ';', '}', '}']",53,25,10,28,65.11627906976744
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,isAttributes_1.txt,0.4903,0.8227,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.036938,class T { public boolean isAttributes() { return attributes; } },class T { boolean isAttributes() { return attributes; } },64,57,32,7,21.875,"['class', 'T', '{', 'public', 'boolean', 'isAttributes', '(', ')', '{', 'return', 'attributes', ';', '}', '}']","['class', 'T', '{', 'boolean', 'isAttributes', '(', ')', '{', 'return', 'attributes', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,initHeaders_1.txt,0.4717,1.7975,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",80.304106,class T { private void initHeaders() { headers = new TreeMap<>(HttpHeaderNameComparator.INSTANCE); } },class T { void initHeaders() { headers = new TreeMap ( ); } },102,61,31,41,57.74647887323944,"['class', 'T', '{', 'private', 'void', 'initHeaders', '(', ')', '{', 'headers', '=', 'new', 'TreeMap', '<', '>', '(', 'HttpHeaderNameComparator', '.', 'INSTANCE', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'initHeaders', '(', ')', '{', 'headers', '=', 'new', 'TreeMap', '(', ')', ';', '}', '}']",23,17,10,6,46.15384615384615
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,canAddItem_1.txt,0.3625,1.0518,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",59.051048,class T { public boolean canAddItem() { return m_canAddItem; } },class T { boolean canAddItem() { return m_canAddItem; } },64,57,30,7,20.588235294117645,"['class', 'T', '{', 'public', 'boolean', 'canAddItem', '(', ')', '{', 'return', 'm_canAddItem', ';', '}', '}']","['class', 'T', '{', 'boolean', 'canAddItem', '(', ')', '{', 'return', 'm_canAddItem', ';', '}', '}']",14,13,10,1,25.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createTagList_1.txt,0.3323,7.405,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",157.889761,class T { public TagList createTagList(List<TagColumn> columns) { return new TagListImpl(columns); } },class T { TagList createTagList( ) { return new TagListImpl( ); } },102,67,33,35,50.72463768115942,"['class', 'T', '{', 'public', 'TagList', 'createTagList', '(', 'List', '<', 'TagColumn', '>', 'columns', ')', '{', 'return', 'new', 'TagListImpl', '(', 'columns', ')', ';', '}', '}']","['class', 'T', '{', 'TagList', 'createTagList', '(', ')', '{', 'return', 'new', 'TagListImpl', '(', ')', ';', '}', '}']",23,16,10,7,53.84615384615385
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,findChildIndex_1.txt,0.4618,1.811,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",275.600659,"class T { public static int findChildIndex(ViewGroup parent, View child) { int count = parent.getChildCount(); for (int i = 0; i < count; ++i) { if (parent.getChildAt(i) == child) { return i; } } return -1; } }","class T { int findChildIndex(ViewGroup parent, View child) { for (int i ; i < count; ++i) { return i; } return -1; } }",210,118,34,92,52.27272727272727,"['class', 'T', '{', 'public', 'static', 'int', 'findChildIndex', '(', 'ViewGroup', 'parent', ',', 'View', 'child', ')', '{', 'int', 'count', '=', 'parent', '.', 'getChildCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'if', '(', 'parent', '.', 'getChildAt', '(', 'i', ')', '==', 'child', ')', '{', 'return', 'i', ';', '}', '}', 'return', '-', '1', ';', '}', '}']","['class', 'T', '{', 'int', 'findChildIndex', '(', 'ViewGroup', 'parent', ',', 'View', 'child', ')', '{', 'for', '(', 'int', 'i', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'return', 'i', ';', '}', 'return', '-', '1', ';', '}', '}']",62,36,10,26,50.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setFilterChainBuilder_1.txt,0.4601,1.6634,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",90.665634,class T { @Override public final void setFilterChainBuilder(IoFilterChainBuilder builder) { if (builder == null) { builder = new DefaultIoFilterChainBuilder(); } filterChainBuilder = builder; } },class T { void setFilterChainBuilder(IoFilterChainBuilder builder) { filterChainBuilder = builder; } },195,102,41,93,60.3896103896104,"['class', 'T', '{', '@', 'Override', 'public', 'final', 'void', 'setFilterChainBuilder', '(', 'IoFilterChainBuilder', 'builder', ')', '{', 'if', '(', 'builder', '==', 'null', ')', '{', 'builder', '=', 'new', 'DefaultIoFilterChainBuilder', '(', ')', ';', '}', 'filterChainBuilder', '=', 'builder', ';', '}', '}']","['class', 'T', '{', 'void', 'setFilterChainBuilder', '(', 'IoFilterChainBuilder', 'builder', ')', '{', 'filterChainBuilder', '=', 'builder', ';', '}', '}']",35,16,10,19,76.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setExtendedData_1.txt,0.494,0.8437,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",274.272234,"class T { public void setExtendedData(String name, String value) { if (mExtendedData == null) mExtendedData = new HashMap<String, String>(); mExtendedData.put(name, value); } }","class T { void setExtendedData(String name, String value) { mExtendedData = HashMap ; } }",176,89,35,87,61.70212765957447,"['class', 'T', '{', 'public', 'void', 'setExtendedData', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'if', '(', 'mExtendedData', '==', 'null', ')', 'mExtendedData', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'mExtendedData', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setExtendedData', '(', 'String', 'name', ',', 'String', 'value', ')', '{', 'mExtendedData', '=', 'HashMap', ';', '}', '}']",43,19,10,24,72.72727272727273
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,configurator_1.txt,0.4495,1.9112,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",301.678191,class T { public Builder configurator(Configurator serverEndpointConfigurator) { if (serverEndpointConfigurator == null) { this.configurator = Configurator.fetchContainerDefaultConfigurator(); } else { this.configurator = serverEndpointConfigurator; } return this; } },class T { Builder configurator( ) { if (serverEndpointConfigurator == null) configurator = Configurator.fetchContainerDefaultConfigurator(); else { this.configurator = serverEndpointConfigurator; } return this; } },268,214,32,54,22.88135593220339,"['class', 'T', '{', 'public', 'Builder', 'configurator', '(', 'Configurator', 'serverEndpointConfigurator', ')', '{', 'if', '(', 'serverEndpointConfigurator', '==', 'null', ')', '{', 'this', '.', 'configurator', '=', 'Configurator', '.', 'fetchContainerDefaultConfigurator', '(', ')', ';', '}', 'else', '{', 'this', '.', 'configurator', '=', 'serverEndpointConfigurator', ';', '}', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'configurator', '(', ')', '{', 'if', '(', 'serverEndpointConfigurator', '==', 'null', ')', 'configurator', '=', 'Configurator', '.', 'fetchContainerDefaultConfigurator', '(', ')', ';', 'else', '{', 'this', '.', 'configurator', '=', 'serverEndpointConfigurator', ';', '}', 'return', 'this', ';', '}', '}']",43,36,10,7,21.21212121212121
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addEjbRef_1.txt,0.4161,1.3334,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",99.947606,"class T { public void addEjbRef(ContextEjb ejbRef) { ejbRefs.put(ejbRef.getName(), ejbRef); } }",class T { void addEjbRef( ) { ejbRefs.put(ejbRef.getName() ); } },95,65,29,30,45.45454545454545,"['class', 'T', '{', 'public', 'void', 'addEjbRef', '(', 'ContextEjb', 'ejbRef', ')', '{', 'ejbRefs', '.', 'put', '(', 'ejbRef', '.', 'getName', '(', ')', ',', 'ejbRef', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addEjbRef', '(', ')', '{', 'ejbRefs', '.', 'put', '(', 'ejbRef', '.', 'getName', '(', ')', ')', ';', '}', '}']",26,21,10,5,31.25
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,nextFunction_1.txt,0.4779,1.1064,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",132.230873,class T { public Function nextFunction() throws AuthorizationException { try { return (Function) functionIter.next(); } catch (Exception e) { throw new AuthorizationException(e.getMessage()); } } },class T { Function nextFunction() throws AuthorizationException { try { return (Function) functionIter.next(); } catch (Exception e) { } } },197,140,32,57,34.54545454545455,"['class', 'T', '{', 'public', 'Function', 'nextFunction', '(', ')', 'throws', 'AuthorizationException', '{', 'try', '{', 'return', '(', 'Function', ')', 'functionIter', '.', 'next', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'AuthorizationException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}']","['class', 'T', '{', 'Function', 'nextFunction', '(', ')', 'throws', 'AuthorizationException', '{', 'try', '{', 'return', '(', 'Function', ')', 'functionIter', '.', 'next', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",44,32,10,12,35.294117647058826
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setInspectModeEnabled_1.txt,0.3394,2.7664,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",292.191277,"class T { @ChromeDevtoolsMethod public void setInspectModeEnabled(JsonRpcPeer peer, JSONObject params) { final SetInspectModeEnabledRequest request = mObjectMapper.convertValue(params, SetInspectModeEnabledRequest.class); mDocument.postAndWait(new Runnable() { @Override public void run() { mDocument.setInspectModeEnabled(request.enabled); } }); } }","class T { void setInspectModeEnabled(JsonRpcPeer peer, JSONObject params) { SetInspectModeEnabledRequest request = mObjectMapper.convertValue(params, SetInspectModeEnabledRequest ); mDocument.postAndWait(new Runnable() { { mDocument.setInspectModeEnabled(request.enabled); } }); } }",350,282,41,68,22.006472491909385,"['class', 'T', '{', '@', 'ChromeDevtoolsMethod', 'public', 'void', 'setInspectModeEnabled', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'final', 'SetInspectModeEnabledRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetInspectModeEnabledRequest', '.', 'class', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'mDocument', '.', 'setInspectModeEnabled', '(', 'request', '.', 'enabled', ')', ';', '}', '}', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setInspectModeEnabled', '(', 'JsonRpcPeer', 'peer', ',', 'JSONObject', 'params', ')', '{', 'SetInspectModeEnabledRequest', 'request', '=', 'mObjectMapper', '.', 'convertValue', '(', 'params', ',', 'SetInspectModeEnabledRequest', ')', ';', 'mDocument', '.', 'postAndWait', '(', 'new', 'Runnable', '(', ')', '{', '{', 'mDocument', '.', 'setInspectModeEnabled', '(', 'request', '.', 'enabled', ')', ';', '}', '}', ')', ';', '}', '}']",63,50,10,13,24.52830188679245
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,createTaskId_1.txt,0.3034,1.8655,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",140.957607,class T { private static TaskID createTaskId(String taskId) { return TaskID.newBuilder().setValue(taskId).build(); } },class T { TaskID createTaskId(String taskId) { return TaskID.newBuilder() .build(); } },118,87,32,31,36.04651162790697,"['class', 'T', '{', 'private', 'static', 'TaskID', 'createTaskId', '(', 'String', 'taskId', ')', '{', 'return', 'TaskID', '.', 'newBuilder', '(', ')', '.', 'setValue', '(', 'taskId', ')', '.', 'build', '(', ')', ';', '}', '}']","['class', 'T', '{', 'TaskID', 'createTaskId', '(', 'String', 'taskId', ')', '{', 'return', 'TaskID', '.', 'newBuilder', '(', ')', '.', 'build', '(', ')', ';', '}', '}']",30,23,10,7,35.0
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,setMaxBufferedRecords_1.txt,0.4769,0.8254,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",59.272028,class T { public Builder setMaxBufferedRecords(int maxBufferedRecords) { this.maxBufferedRecords = maxBufferedRecords; return this; } },class T { Builder setMaxBufferedRecords(int maxBufferedRecords) { } },135,69,41,66,70.2127659574468,"['class', 'T', '{', 'public', 'Builder', 'setMaxBufferedRecords', '(', 'int', 'maxBufferedRecords', ')', '{', 'this', '.', 'maxBufferedRecords', '=', 'maxBufferedRecords', ';', 'return', 'this', ';', '}', '}']","['class', 'T', '{', 'Builder', 'setMaxBufferedRecords', '(', 'int', 'maxBufferedRecords', ')', '{', '}', '}']",22,12,10,10,83.33333333333334
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,addSessionTrackingMode_1.txt,0.4526,1.0878,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.605285,class T { public void addSessionTrackingMode(String sessionTrackingMode) { sessionTrackingModes.add(SessionTrackingMode.valueOf(sessionTrackingMode)); } },class T { void addSessionTrackingMode(String sessionTrackingMode) { sessionTrackingModes.add( ); } },154,100,42,54,48.21428571428572,"['class', 'T', '{', 'public', 'void', 'addSessionTrackingMode', '(', 'String', 'sessionTrackingMode', ')', '{', 'sessionTrackingModes', '.', 'add', '(', 'SessionTrackingMode', '.', 'valueOf', '(', 'sessionTrackingMode', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'addSessionTrackingMode', '(', 'String', 'sessionTrackingMode', ')', '{', 'sessionTrackingModes', '.', 'add', '(', ')', ';', '}', '}']",25,18,10,7,46.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,rare,perses_fixpoint_rare_methods,invalidRequest_1.txt,0.3425,1.4721,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",156.753624,"class T { static Response invalidRequest(String message) { return addMessage(empty(), INVALID_REQUEST, message); } }","class T { Response invalidRequest(String message) { return addMessage(empty , INVALID_REQUEST ); } }",116,100,34,16,19.51219512195122,"['class', 'T', '{', 'static', 'Response', 'invalidRequest', '(', 'String', 'message', ')', '{', 'return', 'addMessage', '(', 'empty', '(', ')', ',', 'INVALID_REQUEST', ',', 'message', ')', ';', '}', '}']","['class', 'T', '{', 'Response', 'invalidRequest', '(', 'String', 'message', ')', '{', 'return', 'addMessage', '(', 'empty', ',', 'INVALID_REQUEST', ')', ';', '}', '}']",25,20,10,5,33.33333333333333
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_2.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.908432,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.onboarding); } },class T { void onCreate( ) { super.onCreate( ); } },146,51,28,95,80.50847457627118,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'onboarding', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_4.txt,0.9817,0.022,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",164.797122,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }","class T { @Override String toString() { if (filterConfig == null) return ""TimingFilter()"" ; } }",223,95,28,128,65.64102564102564,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '""TimingFilter()""', ';', '}', '}']",56,21,10,35,76.08695652173914
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_5.txt,0.9986,0.0023,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",118.75661,"class T { @Override public String toString() { if (resource == null) return ""BaseModelMbean["" + resourceType + ""]""; return resource.toString(); } }","class T { String toString() { return ""BaseModelMbean["" + resourceType + ""]""; } }",147,80,28,67,56.30252100840336,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'resource', '==', 'null', ')', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', 'return', 'resource', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', '""BaseModelMbean[""', '+', 'resourceType', '+', '""]""', ';', '}', '}']",33,17,10,16,69.56521739130434
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_1.txt,0.9912,0.0115,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.613198,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { } },158,44,26,114,86.36363636363636,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_3.txt,0.9912,0.0115,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.577035,class T { @Override public boolean equals(Object other) { if (other instanceof Stock) { return this.symbol.equals(((Stock) other).symbol); } return false; } },class T { boolean equals(Object other) { } },158,44,26,114,86.36363636363636,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Stock', ')', '{', 'return', 'this', '.', 'symbol', '.', 'equals', '(', '(', '(', 'Stock', ')', 'other', ')', '.', 'symbol', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_1.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.634922,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.settings_fragment); } },class T { void onCreate( ) { super.onCreate( ); } },156,51,28,105,82.03125,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'settings_fragment', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_6.txt,0.9987,0.0017,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",132.44678,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""FilterDef[""); sb.append(""filterName=""); sb.append(this.filterName); sb.append("", filterClass=""); sb.append(this.filterClass); sb.append(""]""); return (sb.toString()); } }",class T { String toString() { sb.append( ); } },254,47,28,207,91.5929203539823,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""FilterDef[""', ')', ';', 'sb', '.', 'append', '(', '""filterName=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterName', ')', ';', 'sb', '.', 'append', '(', '"", filterClass=""', ')', ';', 'sb', '.', 'append', '(', 'this', '.', 'filterClass', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'sb', '.', 'append', '(', ')', ';', '}', '}']",70,16,10,54,90.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_2.txt,0.9977,0.0027,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",149.345503,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } TldResourcePath other = (TldResourcePath) o; return url.equals(other.url) && Objects.equals(webappPath, other.webappPath) && Objects.equals(entryName, other.entryName); } }",class T { @Override boolean equals(Object o) { if ( o) return true; } },321,71,26,250,84.7457627118644,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'TldResourcePath', 'other', '=', '(', 'TldResourcePath', ')', 'o', ';', 'return', 'url', '.', 'equals', '(', 'other', '.', 'url', ')', '&&', 'Objects', '.', 'equals', '(', 'webappPath', ',', 'other', '.', 'webappPath', ')', '&&', 'Objects', '.', 'equals', '(', 'entryName', ',', 'other', '.', 'entryName', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",87,21,10,66,85.71428571428571
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_6.txt,0.9896,0.0138,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",69.111075,class T { @Override public boolean equals(Object obj) { if (obj instanceof CharEntry) { return value.equals(((CharEntry) obj).value); } return false; } },class T { @Override boolean equals(Object obj) { } },153,52,26,101,79.52755905511812,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'CharEntry', ')', '{', 'return', 'value', '.', 'equals', '(', '(', '(', 'CharEntry', ')', 'obj', ')', '.', 'value', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",41,14,10,27,87.09677419354838
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_10.txt,0.9936,0.0076,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.495679,class T { @Override public void init() throws ServletException { super.init(); callCount.incrementAndGet(); } },class T { void init() { super.init(); } },111,41,24,70,80.45977011494253,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', ')', ';', 'callCount', '.', 'incrementAndGet', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",27,16,10,11,64.70588235294117
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_2.txt,0.9511,0.063,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",202.688436,"class T { @Override public String toString() { StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); pw.println(""=== Cookies ===""); int count = getCookieCount(); for (int i = 0; i < count; ++i) { pw.println(getCookie(i).toString()); } return sw.toString(); } }",class T { String toString() { pw.println(getCookie( ).toString()); } },282,70,28,212,83.46456692913385,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'sw', ')', ';', 'pw', '.', 'println', '(', '""=== Cookies ===""', ')', ';', 'int', 'count', '=', 'getCookieCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', 'i', ')', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'sw', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'pw', '.', 'println', '(', 'getCookie', '(', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']",81,23,10,58,81.69014084507043
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_4.txt,1.0,0.0,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",211.718716,class T { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); InitTabViews(); InitViewPager(); } },class T { void onCreate( ) { super.onCreate( ); } },184,51,28,133,85.25641025641025,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'init', '(', ')', ';', 'InitTabViews', '(', ')', ';', 'InitViewPager', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",43,16,10,27,81.81818181818183
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_5.txt,0.9976,0.0025,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",133.944192,"class T { @Override public void onCreate() { Log.i(LOG_TAG, ""onCreate""); super.onCreate(); memoryInfo = new MemoryInfo(); fomart = new DecimalFormat(); fomart.setMaximumFractionDigits(2); fomart.setMinimumFractionDigits(0); } }","class T { void onCreate() { Log.i(LOG_TAG, ""onCreate""); } }",227,59,28,168,84.42211055276381,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', 'super', '.', 'onCreate', '(', ')', ';', 'memoryInfo', '=', 'new', 'MemoryInfo', '(', ')', ';', 'fomart', '=', 'new', 'DecimalFormat', '(', ')', ';', 'fomart', '.', 'setMaximumFractionDigits', '(', '2', ')', ';', 'fomart', '.', 'setMinimumFractionDigits', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""onCreate""', ')', ';', '}', '}']",56,19,10,37,80.43478260869566
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_3.txt,0.8737,0.1919,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",123.158116,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { return StringCache.toString( ); } },162,65,28,97,72.38805970149254,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', 'StringCache', '.', 'toString', '(', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_7.txt,0.9963,0.005,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",69.051752,class T { @Override public boolean equals(Object obj) { if (obj instanceof Function) { return this.hashCode() == obj.hashCode(); } return false; } },class T { @Override boolean equals(Object obj) { } },148,52,26,96,78.68852459016394,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'Function', ')', '{', 'return', 'this', '.', 'hashCode', '(', ')', '==', 'obj', '.', 'hashCode', '(', ')', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",39,14,10,25,86.20689655172413
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_5.txt,0.9996,0.0005,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",121.756991,class T { @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Column)) return false; Column column = (Column) o; return name.equalsIgnoreCase(column.name); } },class T { @Override boolean equals(Object o) { if ( o) return true; } },198,71,26,127,73.83720930232558,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', 'return', 'true', ';', 'if', '(', '!', '(', 'o', 'instanceof', 'Column', ')', ')', 'return', 'false', ';', 'Column', 'column', '=', '(', 'Column', ')', 'o', ';', 'return', 'name', '.', 'equalsIgnoreCase', '(', 'column', '.', 'name', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",54,21,10,33,75.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_10.txt,0.999,0.0012,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",136.574537,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); } }",class T { void setUp() throws Exception { if ( TesterSupport.RFC_5746_SUPPORTED) System.setProperty( ); } },193,107,25,86,51.19047619047619,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",39,24,10,15,51.72413793103448
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_10.txt,0.995,0.0057,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",58.581873,class T { @Override public boolean equals(Object other) { if (other instanceof Mark) { Mark m = (Mark) other; return this.reader == m.reader && this.fileId == m.fileId && this.cursor == m.cursor && this.line == m.line && this.col == m.col; } return false; } },class T { boolean equals(Object other) { } },259,44,26,215,92.274678111588,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', 'if', '(', 'other', 'instanceof', 'Mark', ')', '{', 'Mark', 'm', '=', '(', 'Mark', ')', 'other', ';', 'return', 'this', '.', 'reader', '==', 'm', '.', 'reader', '&&', 'this', '.', 'fileId', '==', 'm', '.', 'fileId', '&&', 'this', '.', 'cursor', '==', 'm', '.', 'cursor', '&&', 'this', '.', 'line', '==', 'm', '.', 'line', '&&', 'this', '.', 'col', '==', 'm', '.', 'col', ';', '}', 'return', 'false', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'other', ')', '{', '}', '}']",75,12,10,63,96.92307692307692
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_1.txt,0.9938,0.0091,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",111.192526,"class T { @Override public String toString() { StringBuilder sb = new StringBuilder(""Transaction[""); sb.append(""]""); return (sb.toString()); } }",class T { String toString() { sb.append( ); } },144,47,28,97,83.62068965517241,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""Transaction[""', ')', ';', 'sb', '.', 'append', '(', '""]""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'sb', '.', 'append', '(', ')', ';', '}', '}']",38,16,10,22,78.57142857142857
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_6.txt,0.5593,0.7471,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",154.740386,class T { @Override public boolean onCreate() { Context context = getContext(); mContentResolver = context.getContentResolver(); mOpenHelper = new VideoDbHelper(context); return true; } },class T { boolean onCreate() { mContentResolver = context.getContentResolver(); return true; } },187,96,28,91,57.23270440251572,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'onCreate', '(', ')', '{', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'mOpenHelper', '=', 'new', 'VideoDbHelper', '(', 'context', ')', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'onCreate', '(', ')', '{', 'mContentResolver', '=', 'context', '.', 'getContentResolver', '(', ')', ';', 'return', 'true', ';', '}', '}']",39,21,10,18,62.06896551724138
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_4.txt,0.9695,0.0356,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.47265,"class T { @Override public boolean equals(Object obj) { if (!(obj instanceof URL)) return (false); URL other = (URL) obj; if (!sameFile(other)) return (false); return (compare(ref, other.getRef())); } }",class T { @Override boolean equals(Object obj) { } },202,52,26,150,85.22727272727273,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', '!', '(', 'obj', 'instanceof', 'URL', ')', ')', 'return', '(', 'false', ')', ';', 'URL', 'other', '=', '(', 'URL', ')', 'obj', ';', 'if', '(', '!', 'sameFile', '(', 'other', ')', ')', 'return', '(', 'false', ')', ';', 'return', '(', 'compare', '(', 'ref', ',', 'other', '.', 'getRef', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",64,14,10,50,92.5925925925926
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_3.txt,0.9955,0.0093,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",83.256232,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { } },176,36,23,140,91.5032679738562,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",51,12,10,39,95.1219512195122
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_7.txt,0.9935,0.0094,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",100.526446,"class T { @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); } }",class T { void execute() { super.execute(); } },177,47,27,130,86.66666666666667,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'checkParameter', '(', ')', ';', 'StringBuilder', 'sb', '=', 'createLink', '(', ')', ';', 'execute', '(', 'sb', '.', 'toString', '(', ')', ',', 'null', ',', 'null', ',', '-', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",48,16,10,32,84.21052631578947
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_3.txt,0.9996,0.0005,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.324035,class T { @Override protected void setUp() throws Exception { super.setUp(); resolver = getContext().getContentResolver(); } },class T { void setUp() { super.setUp(); } },126,43,25,83,82.17821782178217,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'resolver', '=', 'getContext', '(', ')', '.', 'getContentResolver', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_6.txt,0.9975,0.0034,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.435825,"class T { public static void main(String[] args) throws Exception { System.out.println(Arrays.toString(""TRIBES-B"".getBytes())); System.out.println(Arrays.toString(""TRIBES-E"".getBytes())); } }",class T { void main(String args) { } },191,38,24,153,91.61676646706589,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-B""', '.', 'getBytes', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'Arrays', '.', 'toString', '(', '""TRIBES-E""', '.', 'getBytes', '(', ')', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",54,12,10,42,95.45454545454544
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_7.txt,0.9999,0.0002,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",82.346188,class T { public static void main(String[] args) { try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { } new GUI(); } },class T { void main(String args) { } },166,38,24,128,90.14084507042254,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'UIManager', '.', 'setLookAndFeel', '(', 'UIManager', '.', 'getSystemLookAndFeelClassName', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'new', 'GUI', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",42,12,10,30,93.75
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_7.txt,0.9184,0.6657,"{'n_total': 2, 'n_valid': -1, 'n_correct': -1}",47.805877,"class T { public T get() { if (value == null) { throw new NoSuchElementException(""No value present""); } return value; } }",class T { public T get() { } },121,30,23,91,92.85714285714286,"['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'throw', 'new', 'NoSuchElementException', '(', '""No value present""', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'public', 'T', 'get', '(', ')', '{', '}', '}']",29,11,10,18,94.73684210526316
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_2.txt,0.6618,0.4189,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.380448,class T { @Before public void setUp() { session = mock(Session.class); processor = new HibernateProcessor(session); } },class T { @Before void setUp() { } },119,36,25,83,88.29787234042553,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'session', '=', 'mock', '(', 'Session', '.', 'class', ')', ';', 'processor', '=', 'new', 'HibernateProcessor', '(', 'session', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', '}', '}']",30,12,10,18,90.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_2.txt,0.7925,0.3628,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.03286,class T { @Override public void run() { try { TestClient client = new TestClient(); client.doHttp10Request(); } catch (Exception x) { } } },class T { @Override void run() { } },139,36,23,103,88.79310344827587,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'TestClient', 'client', '=', 'new', 'TestClient', '(', ')', ';', 'client', '.', 'doHttp10Request', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",37,12,10,25,92.5925925925926
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_5.txt,0.9244,0.6848,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",171.689063,"class T { public static Object get(Map<String, Object> context, Object key, Object defaultv) { Object res = context.get(key); if (res == null) { res = defaultv; } return res; } }","class T { Object get(Map context , Object defaultv) { Object get ; } }",178,70,23,108,69.6774193548387,"['class', 'T', '{', 'public', 'static', 'Object', 'get', '(', 'Map', '<', 'String', ',', 'Object', '>', 'context', ',', 'Object', 'key', ',', 'Object', 'defaultv', ')', '{', 'Object', 'res', '=', 'context', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'res', '==', 'null', ')', '{', 'res', '=', 'defaultv', ';', '}', 'return', 'res', ';', '}', '}']","['class', 'T', '{', 'Object', 'get', '(', 'Map', 'context', ',', 'Object', 'defaultv', ')', '{', 'Object', 'get', ';', '}', '}']",50,18,10,32,80.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_5.txt,0.9993,0.001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.458881,"class T { public static void main(String[] args) throws IOException { final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(BASE_URI, new JerseyApplication()); System.out.println(""Press any key to close""); System.in.read(); server.shutdownNow(); } }",class T { void main(String args) { } },263,38,24,225,94.14225941422592,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'final', 'HttpServer', 'server', '=', 'GrizzlyHttpServerFactory', '.', 'createHttpServer', '(', 'BASE_URI', ',', 'new', 'JerseyApplication', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press any key to close""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'server', '.', 'shutdownNow', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",57,12,10,45,95.74468085106383
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_4.txt,0.9995,0.0007,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.440501,class T { public static void main(String[] args) throws Exception { NioSenderTest sender = new NioSenderTest(); sender.init(); sender.run(); } },class T { void main(String args) { } },144,38,24,106,88.33333333333333,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'NioSenderTest', 'sender', '=', 'new', 'NioSenderTest', '(', ')', ';', 'sender', '.', 'init', '(', ')', ';', 'sender', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",38,12,10,26,92.85714285714286
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_1.txt,1.0,0.0001,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.580634,"class T { @Override protected void setUp() throws Exception { super.setUp(); solo = new Solo(getInstrumentation(), getActivity()); } }",class T { void setUp() { super.setUp(); } },134,43,25,91,83.4862385321101,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'solo', '=', 'new', 'Solo', '(', 'getInstrumentation', '(', ')', ',', 'getActivity', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",35,16,10,19,76.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_5.txt,0.4057,1.0315,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.428971,"class T { @Override public void execute(Tuple tuple) { String url = tuple.getStringByField(""url""); Metadata metadata = (Metadata) tuple.getValueByField(""metadata""); _collector.emit(com.digitalpebble.stormcrawler.Constants.StatusStreamName, tuple, new Values(url, metadata, Status.FETCHED)); _collector.ack(tuple); } }",class T { @Override void execute(Tuple tuple) { } },317,51,27,266,91.72413793103448,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', 'String', 'url', '=', 'tuple', '.', 'getStringByField', '(', '""url""', ')', ';', 'Metadata', 'metadata', '=', '(', 'Metadata', ')', 'tuple', '.', 'getValueByField', '(', '""metadata""', ')', ';', '_collector', '.', 'emit', '(', 'com', '.', 'digitalpebble', '.', 'stormcrawler', '.', 'Constants', '.', 'StatusStreamName', ',', 'tuple', ',', 'new', 'Values', '(', 'url', ',', 'metadata', ',', 'Status', '.', 'FETCHED', ')', ')', ';', '_collector', '.', 'ack', '(', 'tuple', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'execute', '(', 'Tuple', 'tuple', ')', '{', '}', '}']",74,14,10,60,93.75
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_1.txt,0.9883,0.0237,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.476742,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { } },133,36,23,97,88.18181818181819,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_5.txt,0.8132,0.4089,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",91.515797,"class T { public void run() { try { draw(); } catch (Throwable t) { logger.error(""Unexpected error occur at draw stat chart, cause: "" + t.getMessage(), t); } } }",class T { void run() { try { } catch (Throwable t) { } } },161,58,23,103,74.63768115942028,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'draw', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'error', '(', '""Unexpected error occur at draw stat chart, cause: ""', '+', 't', '.', 'getMessage', '(', ')', ',', 't', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 't', ')', '{', '}', '}', '}']",40,20,10,20,66.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_8.txt,0.9989,0.0015,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",122.379737,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + multiFields.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },186,53,28,133,84.17721518987342,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'multiFields', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_1.txt,0.9991,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.578297,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/start"").toString()); } }",class T { void execute() { super.execute(); } },135,47,27,88,81.48148148148148,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/start""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_5.txt,0.9989,0.0013,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",89.997016,"class T { @Override public void setUp() throws Exception { System.setProperty(""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE"", ""false""); super.setUp(); } }",class T { @Override void setUp() throws Exception { System.setProperty( ); } },161,78,25,83,61.02941176470589,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', '""org.apache.jasper.compiler.Parser.STRICT_WHITESPACE""', ',', '""false""', ')', ';', 'super', '.', 'setUp', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",30,20,10,10,50.0
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_1.txt,0.9966,0.0043,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.894767,"class T { public static void main(String[] args) { System.out.println(""Server version: "" + getServerInfo()); System.out.println(""Server built: "" + getServerBuilt()); System.out.println(""Server number: "" + getServerNumber()); System.out.println(""OS Name: "" + System.getProperty(""os.name"")); System.out.println(""OS Version: "" + System.getProperty(""os.version"")); System.out.println(""Architecture: "" + System.getProperty(""os.arch"")); System.out.println(""JVM Version: "" + System.getProperty(""java.runtime.version"")); System.out.println(""JVM Vendor: "" + System.getProperty(""java.vm.vendor"")); } }",class T { void main(String args) { } },591,38,24,553,97.53086419753086,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Server version: ""', '+', 'getServerInfo', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server built: ""', '+', 'getServerBuilt', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server number: ""', '+', 'getServerNumber', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Name: ""', '+', 'System', '.', 'getProperty', '(', '""os.name""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OS Version: ""', '+', 'System', '.', 'getProperty', '(', '""os.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Architecture: ""', '+', 'System', '.', 'getProperty', '(', '""os.arch""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Version: ""', '+', 'System', '.', 'getProperty', '(', '""java.runtime.version""', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""JVM Vendor: ""', '+', 'System', '.', 'getProperty', '(', '""java.vm.vendor""', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",135,12,10,123,98.4
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_1.txt,0.8329,0.3532,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",90.763492,"class T { @Override public V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException { if (!sync.tryAcquireSharedNanos(0, unit.toNanos(timeout))) { throw new TimeoutException(""Waiting "" + timeout); } return value; } }","class T { V get(long timeout, TimeUnit unit) { } }",260,50,23,210,88.60759493670885,"['class', 'T', '{', '@', 'Override', 'public', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', ',', 'ExecutionException', ',', 'TimeoutException', '{', 'if', '(', '!', 'sync', '.', 'tryAcquireSharedNanos', '(', '0', ',', 'unit', '.', 'toNanos', '(', 'timeout', ')', ')', ')', '{', 'throw', 'new', 'TimeoutException', '(', '""Waiting ""', '+', 'timeout', ')', ';', '}', 'return', 'value', ';', '}', '}']","['class', 'T', '{', 'V', 'get', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', '{', '}', '}']",55,15,10,40,88.88888888888889
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_9.txt,0.9993,0.0009,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",120.121094,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + code; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; } },class T { int hashCode() { result = prime * result + code; } },274,62,28,212,86.1788617886179,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'message', '==', 'null', ')', '?', '0', ':', 'message', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'status', '==', 'null', ')', '?', '0', ':', 'status', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'code', ';', '}', '}']",79,18,10,61,88.40579710144928
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_4.txt,0.9986,0.0019,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.503115,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { @Override void run() { } },183,36,23,147,91.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_6.txt,0.9883,0.0237,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.702624,class T { @Override public void run() { try { Thread.sleep(delay); } catch (Exception x) { x.printStackTrace(); } System.exit(0); } },class T { @Override void run() { } },133,36,23,97,88.18181818181819,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",43,12,10,31,93.93939393939394
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_2.txt,0.9993,0.0012,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.478237,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/findleaks?statusLine="" + Boolean.toString(statusLine)); } }",class T { void execute() { super.execute(); } },152,47,27,105,84.0,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/findleaks?statusLine=""', '+', 'Boolean', '.', 'toString', '(', 'statusLine', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_6.txt,0.9991,0.0009,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",100.662963,class T { @Override public void setUp() throws Exception { super.setUp(); Tomcat tomcat = getTomcatInstance(); tomcat.getServer().addLifecycleListener(new JreMemoryLeakPreventionListener()); } },class T { void setUp() { super.setUp(); } },194,43,25,151,89.3491124260355,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'tomcat', '.', 'getServer', '(', ')', '.', 'addLifecycleListener', '(', 'new', 'JreMemoryLeakPreventionListener', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', '{', 'super', '.', 'setUp', '(', ')', ';', '}', '}']",42,16,10,26,81.25
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_7.txt,0.9973,0.0032,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",132.320862,class T { @Override public synchronized void init(ProcessingEnvironment env) { super.init(env); messenger.init(env); helper = new Helper(); filer = env.getFiler(); elementUtils = env.getElementUtils(); } },class T { void init( ) { super.init( ); } },205,43,24,162,89.50276243093923,"['class', 'T', '{', '@', 'Override', 'public', 'synchronized', 'void', 'init', '(', 'ProcessingEnvironment', 'env', ')', '{', 'super', '.', 'init', '(', 'env', ')', ';', 'messenger', '.', 'init', '(', 'env', ')', ';', 'helper', '=', 'new', 'Helper', '(', ')', ';', 'filer', '=', 'env', '.', 'getFiler', '(', ')', ';', 'elementUtils', '=', 'env', '.', 'getElementUtils', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'super', '.', 'init', '(', ')', ';', '}', '}']",53,16,10,37,86.04651162790698
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_3.txt,0.9999,0.0001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.324508,class T { public static void main(String[] args) throws Exception { recreate = true; CreateTestTable test = new CreateTestTable(); test.testPopulateData(); } },class T { void main(String args) { } },159,38,24,121,89.62962962962962,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'recreate', '=', 'true', ';', 'CreateTestTable', 'test', '=', 'new', 'CreateTestTable', '(', ')', ';', 'test', '.', 'testPopulateData', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",36,12,10,24,92.3076923076923
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_10.txt,0.9948,0.009,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.97014,"class T { public static void main(String[] args) { System.setProperty(Constants.DUBBO_PROPERTIES_KEY, ""conf/dubbo.properties""); Main.main(args); } }",class T { void main(String args) { } },148,38,24,110,88.70967741935483,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'setProperty', '(', 'Constants', '.', 'DUBBO_PROPERTIES_KEY', ',', '""conf/dubbo.properties""', ')', ';', 'Main', '.', 'main', '(', 'args', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",34,12,10,22,91.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_2.txt,0.999,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.477066,"class T { public static void main(String[] args) throws Exception { LOG.info(""Starting postgres""); PostgresProcess process = PostgresStarter.getDefaultInstance().prepare(new PostgresConfig(Version.Main.PRODUCTION, ""test-db"")).start(); LOG.info(""Stopping postgres""); process.stop(); } }",class T { void main(String args) { } },285,38,24,247,94.6360153256705,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'LOG', '.', 'info', '(', '""Starting postgres""', ')', ';', 'PostgresProcess', 'process', '=', 'PostgresStarter', '.', 'getDefaultInstance', '(', ')', '.', 'prepare', '(', 'new', 'PostgresConfig', '(', 'Version', '.', 'Main', '.', 'PRODUCTION', ',', '""test-db""', ')', ')', '.', 'start', '(', ')', ';', 'LOG', '.', 'info', '(', '""Stopping postgres""', ')', ';', 'process', '.', 'stop', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_3.txt,0.9984,0.0018,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.519894,"class T { @Override public void execute() throws BuildException { super.execute(); execute(""/serverinfo""); } }",class T { void execute() { super.execute(); } },110,47,27,63,75.90361445783132,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', '""/serverinfo""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",26,16,10,10,62.5
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_7.txt,0.978,0.0374,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",69.459668,class T { @Override public void run() { try { latch.countUpOrAwait(); Thread.sleep(holdTime); latch.countDown(); } catch (InterruptedException x) { x.printStackTrace(); } } },class T { @Override void run() { } },174,36,23,138,91.3907284768212,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'latch', '.', 'countUpOrAwait', '(', ')', ';', 'Thread', '.', 'sleep', '(', 'holdTime', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'x', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",48,12,10,36,94.73684210526316
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_7.txt,0.9989,0.0013,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",138.125689,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + Arrays.hashCode(children); result = prime * result + id; result = prime * result + ((image == null) ? 0 : image.hashCode()); return result; } },class T { int hashCode() { result = prime * result + Arrays ; } },251,65,28,186,83.40807174887892,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', '.', 'hashCode', '(', 'children', ')', ';', 'result', '=', 'prime', '*', 'result', '+', 'id', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'image', '==', 'null', ')', '?', '0', ':', 'image', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'Arrays', ';', '}', '}']",70,18,10,52,86.66666666666667
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_10.txt,0.6192,0.8244,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",135.681663,"class T { public void run() { dataRefresh(); handler.postDelayed(this, delaytime); if (isFloating) windowManager.updateViewLayout(viFloatingWindow, wmParams); } }",class T { void run() { dataRefresh(); if (isFloating) windowManager.updateViewLayout(viFloatingWindow ); } },162,108,23,54,38.84892086330935,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'handler', '.', 'postDelayed', '(', 'this', ',', 'delaytime', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ',', 'wmParams', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'dataRefresh', '(', ')', ';', 'if', '(', 'isFloating', ')', 'windowManager', '.', 'updateViewLayout', '(', 'viFloatingWindow', ')', ';', '}', '}']",37,25,10,12,44.44444444444444
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_6.txt,0.9996,0.0006,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",163.075659,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); return result; } },class T { int hashCode() { result = prime * result + ( name == null ); } },166,74,28,92,66.66666666666666,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'name', '==', 'null', ')', '?', '0', ':', 'name', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', '(', 'name', '==', 'null', ')', ';', '}', '}']",49,22,10,27,69.23076923076923
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_10.txt,0.9817,0.022,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",164.454251,"class T { @Override public String toString() { if (filterConfig == null) return (""TimingFilter()""); StringBuilder sb = new StringBuilder(""TimingFilter(""); sb.append(filterConfig); sb.append("")""); return (sb.toString()); } }","class T { @Override String toString() { if (filterConfig == null) return ""TimingFilter()"" ; } }",223,95,28,128,65.64102564102564,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '(', '""TimingFilter()""', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', '""TimingFilter(""', ')', ';', 'sb', '.', 'append', '(', 'filterConfig', ')', ';', 'sb', '.', 'append', '(', '"")""', ')', ';', 'return', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'if', '(', 'filterConfig', '==', 'null', ')', 'return', '""TimingFilter()""', ';', '}', '}']",56,21,10,35,76.08695652173914
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_9.txt,0.9955,0.0093,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",86.333606,class T { @Override public void run() { Thread me = Thread.currentThread(); while (timer == me) { try { Thread.sleep(100); } catch (InterruptedException e) { } repaint(); } } },class T { @Override void run() { } },176,36,23,140,91.5032679738562,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'Thread', 'me', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'while', '(', 'timer', '==', 'me', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', 'repaint', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",51,12,10,39,95.1219512195122
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_4.txt,0.9967,0.0042,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",134.333058,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_10.txt,0.9995,0.0006,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",144.265334,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((key == null) ? 0 : key.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; } },class T { int hashCode() { result = prime * result + key.hashCode() ; } },232,73,28,159,77.94117647058823,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'key', '==', 'null', ')', '?', '0', ':', 'key', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'value', '==', 'null', ')', '?', '0', ':', 'value', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', 'key', '.', 'hashCode', '(', ')', ';', '}', '}']",71,22,10,49,80.32786885245902
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_9.txt,0.7702,0.2709,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.348883,"class T { @Before public void setUp() throws Exception { channel1 = new GroupChannel(); channel2 = new GroupChannel(); listener1 = new Listener(); channel2.addChannelListener(listener1); TesterUtil.addRandomDomain(new ManagedChannel[] { channel1, channel2 }); channel1.start(Channel.DEFAULT); channel2.start(Channel.DEFAULT); } }",class T { @Before void setUp() { } },329,36,25,293,96.38157894736842,"['class', 'T', '{', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'channel1', '=', 'new', 'GroupChannel', '(', ')', ';', 'channel2', '=', 'new', 'GroupChannel', '(', ')', ';', 'listener1', '=', 'new', 'Listener', '(', ')', ';', 'channel2', '.', 'addChannelListener', '(', 'listener1', ')', ';', 'TesterUtil', '.', 'addRandomDomain', '(', 'new', 'ManagedChannel', '[', ']', '{', 'channel1', ',', 'channel2', '}', ')', ';', 'channel1', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'channel2', '.', 'start', '(', 'Channel', '.', 'DEFAULT', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Before', 'void', 'setUp', '(', ')', '{', '}', '}']",76,12,10,64,96.96969696969695
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_8.txt,0.9989,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",68.979775,class T { @Override public void init(ServletConfig config) throws ServletException { super.init(config); data = 10; } },class T { void init(ServletConfig config) { } },119,47,24,72,75.78947368421053,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', 'ServletConfig', 'config', ')', 'throws', 'ServletException', '{', 'super', '.', 'init', '(', 'config', ')', ';', 'data', '=', '10', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', 'ServletConfig', 'config', ')', '{', '}', '}']",28,12,10,16,88.88888888888889
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,init_9.txt,0.7372,0.4157,"{'n_total': 9, 'n_valid': -1, 'n_correct': -1}",427.104029,class T { @Override public void init() throws ServletException { failOnBegin = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_BEGIN)).booleanValue(); failOnRead = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_READ)).booleanValue(); failOnEnd = Boolean.valueOf(getServletConfig().getInitParameter(FAIL_ON_END)).booleanValue(); } },class T { void init() { failOnBegin = Boolean.valueOf(getServletConfig ) ; } },356,78,24,278,83.73493975903614,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'ServletException', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_BEGIN', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnRead', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_READ', ')', ')', '.', 'booleanValue', '(', ')', ';', 'failOnEnd', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', '(', ')', '.', 'getInitParameter', '(', 'FAIL_ON_END', ')', ')', '.', 'booleanValue', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'init', '(', ')', '{', 'failOnBegin', '=', 'Boolean', '.', 'valueOf', '(', 'getServletConfig', ')', ';', '}', '}']",75,19,10,56,86.15384615384616
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,setUp_8.txt,0.9984,0.0018,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",180.430339,"class T { @Override public void setUp() throws Exception { if (!TesterSupport.RFC_5746_SUPPORTED) { System.setProperty(""sun.security.ssl.allowUnsafeRenegotiation"", ""true""); } super.setUp(); Tomcat tomcat = getTomcatInstance(); TesterSupport.configureClientCertContext(tomcat); tomcat.start(); TesterSupport.configureClientSsl(); } }",class T { void setUp() throws Exception { if ( TesterSupport.RFC_5746_SUPPORTED) System.setProperty( ); } },332,107,25,225,73.28990228013029,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', '{', 'System', '.', 'setProperty', '(', '""sun.security.ssl.allowUnsafeRenegotiation""', ',', '""true""', ')', ';', '}', 'super', '.', 'setUp', '(', ')', ';', 'Tomcat', 'tomcat', '=', 'getTomcatInstance', '(', ')', ';', 'TesterSupport', '.', 'configureClientCertContext', '(', 'tomcat', ')', ';', 'tomcat', '.', 'start', '(', ')', ';', 'TesterSupport', '.', 'configureClientSsl', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'if', '(', 'TesterSupport', '.', 'RFC_5746_SUPPORTED', ')', 'System', '.', 'setProperty', '(', ')', ';', '}', '}']",65,24,10,41,74.54545454545455
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_5.txt,0.9967,0.0042,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",138.805215,class T { @Override public int hashCode() { int result = x; result = 31 * result + y; return result; } },class T { @Override int hashCode() { int result ; } },104,53,28,51,67.10526315789474,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'x', ';', 'result', '=', '31', '*', 'result', '+', 'y', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",29,15,10,14,73.68421052631578
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,run_8.txt,0.9986,0.0019,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.624877,class T { @Override public void run() { for (int i = 0; i < ITERATIONS; i++) { Object obj = QUEUE.poll(); if (obj == null) { obj = new Object(); } QUEUE.offer(obj); } super.run(); } },class T { @Override void run() { } },183,36,23,147,91.875,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'Object', 'obj', '=', 'QUEUE', '.', 'poll', '(', ')', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'obj', '=', 'new', 'Object', '(', ')', ';', '}', 'QUEUE', '.', 'offer', '(', 'obj', ')', ';', '}', 'super', '.', 'run', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",66,12,10,54,96.42857142857144
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_10.txt,0.9991,0.0014,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.577621,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/stop"").toString()); } }",class T { void execute() { super.execute(); } },134,47,27,87,81.30841121495327,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/stop""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_8.txt,0.999,0.0015,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.561331,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/undeploy"").toString()); } }",class T { void execute() { super.execute(); } },138,47,27,91,81.98198198198197,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/undeploy""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_1.txt,0.9988,0.0015,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",125.603314,class T { @Override public int hashCode() { int result = method.hashCode(); result = 31 * result + field.hashCode(); result = 31 * result + fieldName.hashCode(); return result; } },class T { @Override int hashCode() { int result ; } },180,53,28,127,83.55263157894737,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'method', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'field', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'fieldName', '.', 'hashCode', '(', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",49,15,10,34,87.17948717948718
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,get_9.txt,0.9517,0.1997,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",58.503545,class T { public CBuffer get(CharSequence key) { Entry entry = getEntry(key); return (entry == null) ? null : entry.value; } },class T { CBuffer get(CharSequence key) { } },126,45,23,81,78.64077669902912,"['class', 'T', '{', 'public', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', 'Entry', 'entry', '=', 'getEntry', '(', 'key', ')', ';', 'return', '(', 'entry', '==', 'null', ')', '?', 'null', ':', 'entry', '.', 'value', ';', '}', '}']","['class', 'T', '{', 'CBuffer', 'get', '(', 'CharSequence', 'key', ')', '{', '}', '}']",34,12,10,22,91.66666666666666
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_9.txt,0.9947,0.0068,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",80.95606,"class T { public static void main(String[] args) { try { ClassLoader langTools = LangTools.createLangToolsClassLoader(); Class<?> main = Class.forName(""org.javacs.Main"", true, langTools); Method run = main.getMethod(""run""); run.invoke(null); } catch (Exception e) { LOG.log(Level.SEVERE, ""Failed"", e); } } }",class T { void main(String args) { } },307,38,24,269,95.0530035335689,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'ClassLoader', 'langTools', '=', 'LangTools', '.', 'createLangToolsClassLoader', '(', ')', ';', 'Class', '<', '?', '>', 'main', '=', 'Class', '.', 'forName', '(', '""org.javacs.Main""', ',', 'true', ',', 'langTools', ')', ';', 'Method', 'run', '=', 'main', '.', 'getMethod', '(', '""run""', ')', ';', 'run', '.', 'invoke', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""Failed""', ',', 'e', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",82,12,10,70,97.2222222222222
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,main_8.txt,0.9981,0.0022,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",79.543891,"class T { public static void main(String[] args) throws Exception { CoordinationDemo demo = new CoordinationDemo(); run(args, demo); } }",class T { void main(String args) { } },136,38,24,98,87.5,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'CoordinationDemo', 'demo', '=', 'new', 'CoordinationDemo', '(', ')', ';', 'run', '(', 'args', ',', 'demo', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",33,12,10,21,91.30434782608695
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,execute_9.txt,0.9993,0.0011,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.511768,"class T { @Override public void execute() throws BuildException { super.execute(); execute(createQueryString(""/sessions"").toString()); } }",class T { void execute() { super.execute(); } },138,47,27,91,81.98198198198197,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'super', '.', 'execute', '(', ')', ';', 'execute', '(', 'createQueryString', '(', '""/sessions""', ')', '.', 'toString', '(', ')', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', ')', '{', 'super', '.', 'execute', '(', ')', ';', '}', '}']",33,16,10,17,73.91304347826086
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_2.txt,0.9993,0.001,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",133.856391,class T { @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((matches == null) ? 0 : matches.hashCode()); result = prime * result + ((unmatches == null) ? 0 : unmatches.hashCode()); return result; } },class T { int hashCode() { result = prime * result + 0 ; } },248,60,28,188,85.45454545454545,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'final', 'int', 'prime', '=', '31', ';', 'int', 'result', '=', '1', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'matches', '==', 'null', ')', '?', '0', ':', 'matches', '.', 'hashCode', '(', ')', ')', ';', 'result', '=', 'prime', '*', 'result', '+', '(', '(', 'unmatches', '==', 'null', ')', '?', '0', ':', 'unmatches', '.', 'hashCode', '(', ')', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', 'int', 'hashCode', '(', ')', '{', 'result', '=', 'prime', '*', 'result', '+', '0', ';', '}', '}']",71,18,10,53,86.88524590163934
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,hashCode_3.txt,0.9999,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",143.920139,class T { @Override public int hashCode() { int result = super.hashCode(); result = 31 * result + label.hashCode(); result = 31 * result + description.hashCode(); result = 31 * result + (completed ? 1 : 0); return result; } },class T { @Override int hashCode() { int result ; } },225,53,28,172,87.30964467005076,"['class', 'T', '{', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'super', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'label', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', 'description', '.', 'hashCode', '(', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'completed', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",63,15,10,48,90.56603773584906
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_9.txt,0.9989,0.0013,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",143.029426,"class T { @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } Key that = (Key) o; return Objects.equals(index, that.index) && Objects.equals(type, that.type) && Objects.equals(id, that.id); } }",class T { @Override boolean equals(Object o) { if ( o) return true; } },280,71,26,209,82.28346456692913,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'this', '==', 'o', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'o', '==', 'null', '||', 'getClass', '(', ')', '!=', 'o', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'Key', 'that', '=', '(', 'Key', ')', 'o', ';', 'return', 'Objects', '.', 'equals', '(', 'index', ',', 'that', '.', 'index', ')', '&&', 'Objects', '.', 'equals', '(', 'type', ',', 'that', '.', 'type', ')', '&&', 'Objects', '.', 'equals', '(', 'id', ',', 'that', '.', 'id', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'o', ')', '{', 'if', '(', 'o', ')', 'return', 'true', ';', '}', '}']",89,21,10,68,86.07594936708861
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,equals_8.txt,0.9939,0.008,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",68.798102,class T { @Override public boolean equals(Object obj) { if (obj instanceof NamingEntry) { return name.equals(((NamingEntry) obj).name); } else { return false; } } },class T { @Override boolean equals(Object obj) { } },164,52,26,112,81.15942028985508,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'obj', 'instanceof', 'NamingEntry', ')', '{', 'return', 'name', '.', 'equals', '(', '(', '(', 'NamingEntry', ')', 'obj', ')', '.', 'name', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",44,14,10,30,88.23529411764706
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_8.txt,1.0,0.0001,"{'n_total': 8, 'n_valid': -1, 'n_correct': -1}",222.807759,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mVideoCursorAdapter.setMapper(new VideoCursorMapper()); setAdapter(mVideoCursorAdapter); setTitle(getString(R.string.vertical_grid_title)); if (savedInstanceState == null) { prepareEntranceTransition(); } setupFragment(); } },class T { void onCreate( ) { super.onCreate( ); } },331,51,28,280,92.4092409240924,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'mVideoCursorAdapter', '.', 'setMapper', '(', 'new', 'VideoCursorMapper', '(', ')', ')', ';', 'setAdapter', '(', 'mVideoCursorAdapter', ')', ';', 'setTitle', '(', 'getString', '(', 'R', '.', 'string', '.', 'vertical_grid_title', ')', ')', ';', 'if', '(', 'savedInstanceState', '==', 'null', ')', '{', 'prepareEntranceTransition', '(', ')', ';', '}', 'setupFragment', '(', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",65,16,10,49,89.0909090909091
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_9.txt,0.9996,0.0006,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",79.485042,class T { @Override public void onCreate() { super.onCreate(); if (mNotifManager == null) { mNotifManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE); } } },class T { void onCreate() { super.onCreate(); } },183,49,28,134,86.45161290322581,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', 'if', '(', 'mNotifManager', '==', 'null', ')', '{', 'mNotifManager', '=', '(', 'NotificationManager', ')', 'getSystemService', '(', 'Context', '.', 'NOTIFICATION_SERVICE', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",39,16,10,23,79.3103448275862
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,onCreate_10.txt,1.0,0.0001,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",169.852304,class T { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.fragment_details); } },class T { void onCreate( ) { super.onCreate( ); } },152,51,28,101,81.45161290322581,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'fragment_details', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'onCreate', '(', ')', '{', 'super', '.', 'onCreate', '(', ')', ';', '}', '}']",31,16,10,15,71.42857142857143
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_8.txt,0.9971,0.0045,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",79.703981,class T { @Override public String toString() { StringBuilder result = new StringBuilder(); for (Node n : children) { result.append(n.toString()); } return result.toString(); } },class T { @Override String toString() { result.append( ); } },177,61,28,116,77.85234899328859,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'Node', 'n', ':', 'children', ')', '{', 'result', '.', 'append', '(', 'n', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'String', 'toString', '(', ')', '{', 'result', '.', 'append', '(', ')', ';', '}', '}']",48,18,10,30,78.94736842105263
code2seq,METHOD_NAME,perses_fixpoint,small,perses_fixpoint_freq_methods,toString_9.txt,0.8737,0.1919,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",123.084594,"class T { @Override public String toString() { if (null == buff) { return null; } else if (end - start == 0) { return """"; } return StringCache.toString(this); } }",class T { String toString() { return StringCache.toString( ); } },162,65,28,97,72.38805970149254,"['class', 'T', '{', '@', 'Override', 'public', 'String', 'toString', '(', ')', '{', 'if', '(', 'null', '==', 'buff', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'end', '-', 'start', '==', '0', ')', '{', 'return', '""""', ';', '}', 'return', 'StringCache', '.', 'toString', '(', 'this', ')', ';', '}', '}']","['class', 'T', '{', 'String', 'toString', '(', ')', '{', 'return', 'StringCache', '.', 'toString', '(', ')', ';', '}', '}']",46,17,10,29,80.55555555555556
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_1.txt,0.9977,0.0032,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",71.435502,class T { @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; GradingAttachmentData other = (GradingAttachmentData) obj; if (attachmentId == null) { if (other.attachmentId != null) return false; } else if (!attachmentId.equals(other.attachmentId)) return false; if (attachmentType == null) { if (other.attachmentType != null) return false; } else if (!attachmentType.equals(other.attachmentType)) return false; if (createdBy == null) { if (other.createdBy != null) return false; } else if (!createdBy.equals(other.createdBy)) return false; if (createdDate == null) { if (other.createdDate != null) return false; } else if (!createdDate.equals(other.createdDate)) return false; if (description == null) { if (other.description != null) return false; } else if (!description.equals(other.description)) return false; if (fileSize == null) { if (other.fileSize != null) return false; } else if (!fileSize.equals(other.fileSize)) return false; if (filename == null) { if (other.filename != null) return false; } else if (!filename.equals(other.filename)) return false; if (isLink == null) { if (other.isLink != null) return false; } else if (!isLink.equals(other.isLink)) return false; if (lastModifiedBy == null) { if (other.lastModifiedBy != null) return false; } else if (!lastModifiedBy.equals(other.lastModifiedBy)) return false; if (lastModifiedDate == null) { if (other.lastModifiedDate != null) return false; } else if (!lastModifiedDate.equals(other.lastModifiedDate)) return false; if (location == null) { if (other.location != null) return false; } else if (!location.equals(other.location)) return false; if (mimeType == null) { if (other.mimeType != null) return false; } else if (!mimeType.equals(other.mimeType)) return false; if (resourceId == null) { if (other.resourceId != null) return false; } else if (!resourceId.equals(other.resourceId)) return false; if (status == null) { if (other.status != null) return false; } else if (!status.equals(other.status)) return false; return true; } },class T { @Override boolean equals(Object obj) { } },2106,52,26,2054,98.75,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', 'return', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', 'return', 'false', ';', 'GradingAttachmentData', 'other', '=', '(', 'GradingAttachmentData', ')', 'obj', ';', 'if', '(', 'attachmentId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentId', '.', 'equals', '(', 'other', '.', 'attachmentId', ')', ')', 'return', 'false', ';', 'if', '(', 'attachmentType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'attachmentType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attachmentType', '.', 'equals', '(', 'other', '.', 'attachmentType', ')', ')', 'return', 'false', ';', 'if', '(', 'createdBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdBy', '.', 'equals', '(', 'other', '.', 'createdBy', ')', ')', 'return', 'false', ';', 'if', '(', 'createdDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'createdDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'createdDate', '.', 'equals', '(', 'other', '.', 'createdDate', ')', ')', 'return', 'false', ';', 'if', '(', 'description', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'description', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'description', '.', 'equals', '(', 'other', '.', 'description', ')', ')', 'return', 'false', ';', 'if', '(', 'fileSize', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'fileSize', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'fileSize', '.', 'equals', '(', 'other', '.', 'fileSize', ')', ')', 'return', 'false', ';', 'if', '(', 'filename', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'filename', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'filename', '.', 'equals', '(', 'other', '.', 'filename', ')', ')', 'return', 'false', ';', 'if', '(', 'isLink', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'isLink', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'isLink', '.', 'equals', '(', 'other', '.', 'isLink', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedBy', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedBy', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedBy', '.', 'equals', '(', 'other', '.', 'lastModifiedBy', ')', ')', 'return', 'false', ';', 'if', '(', 'lastModifiedDate', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'lastModifiedDate', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'lastModifiedDate', '.', 'equals', '(', 'other', '.', 'lastModifiedDate', ')', ')', 'return', 'false', ';', 'if', '(', 'location', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'location', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'location', '.', 'equals', '(', 'other', '.', 'location', ')', ')', 'return', 'false', ';', 'if', '(', 'mimeType', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'mimeType', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'mimeType', '.', 'equals', '(', 'other', '.', 'mimeType', ')', ')', 'return', 'false', ';', 'if', '(', 'resourceId', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'resourceId', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceId', '.', 'equals', '(', 'other', '.', 'resourceId', ')', ')', 'return', 'false', ';', 'if', '(', 'status', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'status', '!=', 'null', ')', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'status', '.', 'equals', '(', 'other', '.', 'status', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",549,14,10,535,99.25788497217069
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_3.txt,0.997,0.0048,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",54.08523,class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (!(obj instanceof NTRUSigningKeyGenerationParameters)) { return false; } NTRUSigningKeyGenerationParameters other = (NTRUSigningKeyGenerationParameters) obj; if (B != other.B) { return false; } if (N != other.N) { return false; } if (basisType != other.basisType) { return false; } if (Double.doubleToLongBits(beta) != Double.doubleToLongBits(other.beta)) { return false; } if (Double.doubleToLongBits(betaSq) != Double.doubleToLongBits(other.betaSq)) { return false; } if (bitsF != other.bitsF) { return false; } if (d != other.d) { return false; } if (d1 != other.d1) { return false; } if (d2 != other.d2) { return false; } if (d3 != other.d3) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (keyGenAlg != other.keyGenAlg) { return false; } if (Double.doubleToLongBits(keyNormBound) != Double.doubleToLongBits(other.keyNormBound)) { return false; } if (Double.doubleToLongBits(keyNormBoundSq) != Double.doubleToLongBits(other.keyNormBoundSq)) { return false; } if (Double.doubleToLongBits(normBound) != Double.doubleToLongBits(other.normBound)) { return false; } if (Double.doubleToLongBits(normBoundSq) != Double.doubleToLongBits(other.normBoundSq)) { return false; } if (polyType != other.polyType) { return false; } if (primeCheck != other.primeCheck) { return false; } if (q != other.q) { return false; } if (signFailTolerance != other.signFailTolerance) { return false; } if (sparse != other.sparse) { return false; } return true; } },class T { public boolean equals(Object obj) { return true; } },1699,62,26,1637,97.84817692767484,"['class', 'T', '{', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', '(', 'obj', 'instanceof', 'NTRUSigningKeyGenerationParameters', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUSigningKeyGenerationParameters', 'other', '=', '(', 'NTRUSigningKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'B', '!=', 'other', '.', 'B', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'basisType', '!=', 'other', '.', 'basisType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'beta', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'beta', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'betaSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'betaSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bitsF', '!=', 'other', '.', 'bitsF', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd', '!=', 'other', '.', 'd', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd1', '!=', 'other', '.', 'd1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd2', '!=', 'other', '.', 'd2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'd3', '!=', 'other', '.', 'd3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'keyGenAlg', '!=', 'other', '.', 'keyGenAlg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'keyNormBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'keyNormBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBound', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBound', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'Double', '.', 'doubleToLongBits', '(', 'normBoundSq', ')', '!=', 'Double', '.', 'doubleToLongBits', '(', 'other', '.', 'normBoundSq', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'primeCheck', '!=', 'other', '.', 'primeCheck', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'signFailTolerance', '!=', 'other', '.', 'signFailTolerance', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', 'true', ';', '}', '}']",427,16,10,411,98.56115107913668
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,onCreate_1.txt,0.9873,0.0477,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",156.101027,"class T { @Override protected void onCreate(Bundle savedInstanceState) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy); super.onCreate(savedInstanceState); setContentView(R.layout.main); map = (MapView) findViewById(R.id.map); map.setBuiltInZoomControls(true); map.setMultiTouchControls(true); GeoPoint startPoint = new GeoPoint(48.13, -1.63); IMapController mapController = map.getController(); mapController.setZoom(10.0); mapController.setCenter(startPoint); Marker startMarker = new Marker(map); startMarker.setPosition(startPoint); startMarker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_BOTTOM); startMarker.setTitle(""Start point""); startMarker.setDraggable(true); startMarker.setOnMarkerDragListener(new OnMarkerDragListenerDrawer()); map.getOverlays().add(startMarker); RoadManager roadManager = new OSRMRoadManager(this); ArrayList<GeoPoint> waypoints = new ArrayList<GeoPoint>(); waypoints.add(startPoint); GeoPoint endPoint = new GeoPoint(48.4, -1.9); waypoints.add(endPoint); Road road = roadManager.getRoad(waypoints); if (road.mStatus != Road.STATUS_OK) Toast.makeText(this, ""Error when loading the road - status="" + road.mStatus, Toast.LENGTH_SHORT).show(); Polyline roadOverlay = RoadManager.buildRoadOverlay(road); map.getOverlays().add(roadOverlay); FolderOverlay roadMarkers = new FolderOverlay(); map.getOverlays().add(roadMarkers); Drawable nodeIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_node, null); for (int i = 0; i < road.mNodes.size(); i++) { RoadNode node = road.mNodes.get(i); Marker nodeMarker = new Marker(map); nodeMarker.setPosition(node.mLocation); nodeMarker.setIcon(nodeIcon); nodeMarker.setTitle(""Step "" + i); nodeMarker.setSnippet(node.mInstructions); nodeMarker.setSubDescription(Road.getLengthDurationText(this, node.mLength, node.mDuration)); Drawable iconContinue = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_continue, null); nodeMarker.setImage(iconContinue); roadMarkers.add(nodeMarker); } NominatimPOIProvider poiProvider = new NominatimPOIProvider(""OsmNavigator/1.0""); ArrayList<POI> pois = poiProvider.getPOICloseTo(startPoint, ""cinema"", 50, 0.1); RadiusMarkerClusterer poiMarkers = new RadiusMarkerClusterer(this); Drawable clusterIconD = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_cluster, null); Bitmap clusterIcon = ((BitmapDrawable) clusterIconD).getBitmap(); poiMarkers.setIcon(clusterIcon); poiMarkers.getTextPaint().setTextSize(12 * getResources().getDisplayMetrics().density); poiMarkers.mAnchorV = Marker.ANCHOR_BOTTOM; poiMarkers.mTextAnchorU = 0.70f; poiMarkers.mTextAnchorV = 0.27f; map.getOverlays().add(poiMarkers); Drawable poiIcon = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_poi_default, null); if (pois != null) { for (POI poi : pois) { Marker poiMarker = new Marker(map); poiMarker.setTitle(poi.mType); poiMarker.setSnippet(poi.mDescription); poiMarker.setPosition(poi.mLocation); poiMarker.setIcon(poiIcon); if (poi.mThumbnail != null) { poiMarker.setImage(new BitmapDrawable(getResources(), poi.mThumbnail)); } poiMarker.setInfoWindow(new CustomInfoWindow(map)); poiMarker.setRelatedObject(poi); poiMarkers.add(poiMarker); } } mKmlDocument = new KmlDocument(); OverpassAPIProvider overpassProvider = new OverpassAPIProvider(); BoundingBox oBB = new BoundingBox(startPoint.getLatitude() + 0.25, startPoint.getLongitude() + 0.25, startPoint.getLatitude() - 0.25, startPoint.getLongitude() - 0.25); String oUrl = overpassProvider.urlForTagSearchKml(""highway=speed_camera"", oBB, 500, 30); boolean ok = overpassProvider.addInKmlFolder(mKmlDocument.mKmlRoot, oUrl); if (ok) { Drawable defaultMarker = ResourcesCompat.getDrawable(getResources(), R.drawable.marker_kml_point, null); Bitmap defaultBitmap = ((BitmapDrawable) defaultMarker).getBitmap(); Style defaultStyle = new Style(defaultBitmap, 0x901010AA, 3.0f, 0x20AA1010); KmlFeature.Styler styler = new MyKmlStyler(defaultStyle); FolderOverlay kmlOverlay = (FolderOverlay) mKmlDocument.mKmlRoot.buildOverlay(map, defaultStyle, styler, mKmlDocument); map.getOverlays().add(kmlOverlay); BoundingBox bb = mKmlDocument.mKmlRoot.getBoundingBox(); if (bb != null) { setInitialViewOn(bb); } } else Toast.makeText(this, ""Error when loading KML"", Toast.LENGTH_SHORT).show(); if (mKmlDocument.mKmlRoot != null) { KmlFolder root = mKmlDocument.mKmlRoot; root.addOverlay(roadOverlay, mKmlDocument); root.addOverlay(roadMarkers, mKmlDocument); mKmlDocument.saveAsKML(mKmlDocument.getDefaultPathForAndroid(""my_route.kml"")); mKmlDocument.saveAsGeoJSON(mKmlDocument.getDefaultPathForAndroid(""my_route.json"")); } MapEventsOverlay mapEventsOverlay = new MapEventsOverlay(this); map.getOverlays().add(0, mapEventsOverlay); } }","class T { @Override void onCreate(Bundle savedInstanceState) { root.addOverlay(roadMarkers, mKmlDocument); } }",4790,110,28,4680,98.2780344393112,"['class', 'T', '{', '@', 'Override', 'protected', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'StrictMode', '.', 'ThreadPolicy', 'policy', '=', 'new', 'StrictMode', '.', 'ThreadPolicy', '.', 'Builder', '(', ')', '.', 'permitAll', '(', ')', '.', 'build', '(', ')', ';', 'StrictMode', '.', 'setThreadPolicy', '(', 'policy', ')', ';', 'super', '.', 'onCreate', '(', 'savedInstanceState', ')', ';', 'setContentView', '(', 'R', '.', 'layout', '.', 'main', ')', ';', 'map', '=', '(', 'MapView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'map', ')', ';', 'map', '.', 'setBuiltInZoomControls', '(', 'true', ')', ';', 'map', '.', 'setMultiTouchControls', '(', 'true', ')', ';', 'GeoPoint', 'startPoint', '=', 'new', 'GeoPoint', '(', '48.13', ',', '-', '1.63', ')', ';', 'IMapController', 'mapController', '=', 'map', '.', 'getController', '(', ')', ';', 'mapController', '.', 'setZoom', '(', '10.0', ')', ';', 'mapController', '.', 'setCenter', '(', 'startPoint', ')', ';', 'Marker', 'startMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'startMarker', '.', 'setPosition', '(', 'startPoint', ')', ';', 'startMarker', '.', 'setAnchor', '(', 'Marker', '.', 'ANCHOR_CENTER', ',', 'Marker', '.', 'ANCHOR_BOTTOM', ')', ';', 'startMarker', '.', 'setTitle', '(', '""Start point""', ')', ';', 'startMarker', '.', 'setDraggable', '(', 'true', ')', ';', 'startMarker', '.', 'setOnMarkerDragListener', '(', 'new', 'OnMarkerDragListenerDrawer', '(', ')', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'startMarker', ')', ';', 'RoadManager', 'roadManager', '=', 'new', 'OSRMRoadManager', '(', 'this', ')', ';', 'ArrayList', '<', 'GeoPoint', '>', 'waypoints', '=', 'new', 'ArrayList', '<', 'GeoPoint', '>', '(', ')', ';', 'waypoints', '.', 'add', '(', 'startPoint', ')', ';', 'GeoPoint', 'endPoint', '=', 'new', 'GeoPoint', '(', '48.4', ',', '-', '1.9', ')', ';', 'waypoints', '.', 'add', '(', 'endPoint', ')', ';', 'Road', 'road', '=', 'roadManager', '.', 'getRoad', '(', 'waypoints', ')', ';', 'if', '(', 'road', '.', 'mStatus', '!=', 'Road', '.', 'STATUS_OK', ')', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading the road - status=""', '+', 'road', '.', 'mStatus', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'Polyline', 'roadOverlay', '=', 'RoadManager', '.', 'buildRoadOverlay', '(', 'road', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadOverlay', ')', ';', 'FolderOverlay', 'roadMarkers', '=', 'new', 'FolderOverlay', '(', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'roadMarkers', ')', ';', 'Drawable', 'nodeIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_node', ',', 'null', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'road', '.', 'mNodes', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'RoadNode', 'node', '=', 'road', '.', 'mNodes', '.', 'get', '(', 'i', ')', ';', 'Marker', 'nodeMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'nodeMarker', '.', 'setPosition', '(', 'node', '.', 'mLocation', ')', ';', 'nodeMarker', '.', 'setIcon', '(', 'nodeIcon', ')', ';', 'nodeMarker', '.', 'setTitle', '(', '""Step ""', '+', 'i', ')', ';', 'nodeMarker', '.', 'setSnippet', '(', 'node', '.', 'mInstructions', ')', ';', 'nodeMarker', '.', 'setSubDescription', '(', 'Road', '.', 'getLengthDurationText', '(', 'this', ',', 'node', '.', 'mLength', ',', 'node', '.', 'mDuration', ')', ')', ';', 'Drawable', 'iconContinue', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'ic_continue', ',', 'null', ')', ';', 'nodeMarker', '.', 'setImage', '(', 'iconContinue', ')', ';', 'roadMarkers', '.', 'add', '(', 'nodeMarker', ')', ';', '}', 'NominatimPOIProvider', 'poiProvider', '=', 'new', 'NominatimPOIProvider', '(', '""OsmNavigator/1.0""', ')', ';', 'ArrayList', '<', 'POI', '>', 'pois', '=', 'poiProvider', '.', 'getPOICloseTo', '(', 'startPoint', ',', '""cinema""', ',', '50', ',', '0.1', ')', ';', 'RadiusMarkerClusterer', 'poiMarkers', '=', 'new', 'RadiusMarkerClusterer', '(', 'this', ')', ';', 'Drawable', 'clusterIconD', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_cluster', ',', 'null', ')', ';', 'Bitmap', 'clusterIcon', '=', '(', '(', 'BitmapDrawable', ')', 'clusterIconD', ')', '.', 'getBitmap', '(', ')', ';', 'poiMarkers', '.', 'setIcon', '(', 'clusterIcon', ')', ';', 'poiMarkers', '.', 'getTextPaint', '(', ')', '.', 'setTextSize', '(', '12', '*', 'getResources', '(', ')', '.', 'getDisplayMetrics', '(', ')', '.', 'density', ')', ';', 'poiMarkers', '.', 'mAnchorV', '=', 'Marker', '.', 'ANCHOR_BOTTOM', ';', 'poiMarkers', '.', 'mTextAnchorU', '=', '0.70f', ';', 'poiMarkers', '.', 'mTextAnchorV', '=', '0.27f', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'poiMarkers', ')', ';', 'Drawable', 'poiIcon', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_poi_default', ',', 'null', ')', ';', 'if', '(', 'pois', '!=', 'null', ')', '{', 'for', '(', 'POI', 'poi', ':', 'pois', ')', '{', 'Marker', 'poiMarker', '=', 'new', 'Marker', '(', 'map', ')', ';', 'poiMarker', '.', 'setTitle', '(', 'poi', '.', 'mType', ')', ';', 'poiMarker', '.', 'setSnippet', '(', 'poi', '.', 'mDescription', ')', ';', 'poiMarker', '.', 'setPosition', '(', 'poi', '.', 'mLocation', ')', ';', 'poiMarker', '.', 'setIcon', '(', 'poiIcon', ')', ';', 'if', '(', 'poi', '.', 'mThumbnail', '!=', 'null', ')', '{', 'poiMarker', '.', 'setImage', '(', 'new', 'BitmapDrawable', '(', 'getResources', '(', ')', ',', 'poi', '.', 'mThumbnail', ')', ')', ';', '}', 'poiMarker', '.', 'setInfoWindow', '(', 'new', 'CustomInfoWindow', '(', 'map', ')', ')', ';', 'poiMarker', '.', 'setRelatedObject', '(', 'poi', ')', ';', 'poiMarkers', '.', 'add', '(', 'poiMarker', ')', ';', '}', '}', 'mKmlDocument', '=', 'new', 'KmlDocument', '(', ')', ';', 'OverpassAPIProvider', 'overpassProvider', '=', 'new', 'OverpassAPIProvider', '(', ')', ';', 'BoundingBox', 'oBB', '=', 'new', 'BoundingBox', '(', 'startPoint', '.', 'getLatitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '+', '0.25', ',', 'startPoint', '.', 'getLatitude', '(', ')', '-', '0.25', ',', 'startPoint', '.', 'getLongitude', '(', ')', '-', '0.25', ')', ';', 'String', 'oUrl', '=', 'overpassProvider', '.', 'urlForTagSearchKml', '(', '""highway=speed_camera""', ',', 'oBB', ',', '500', ',', '30', ')', ';', 'boolean', 'ok', '=', 'overpassProvider', '.', 'addInKmlFolder', '(', 'mKmlDocument', '.', 'mKmlRoot', ',', 'oUrl', ')', ';', 'if', '(', 'ok', ')', '{', 'Drawable', 'defaultMarker', '=', 'ResourcesCompat', '.', 'getDrawable', '(', 'getResources', '(', ')', ',', 'R', '.', 'drawable', '.', 'marker_kml_point', ',', 'null', ')', ';', 'Bitmap', 'defaultBitmap', '=', '(', '(', 'BitmapDrawable', ')', 'defaultMarker', ')', '.', 'getBitmap', '(', ')', ';', 'Style', 'defaultStyle', '=', 'new', 'Style', '(', 'defaultBitmap', ',', '0x901010AA', ',', '3.0f', ',', '0x20AA1010', ')', ';', 'KmlFeature', '.', 'Styler', 'styler', '=', 'new', 'MyKmlStyler', '(', 'defaultStyle', ')', ';', 'FolderOverlay', 'kmlOverlay', '=', '(', 'FolderOverlay', ')', 'mKmlDocument', '.', 'mKmlRoot', '.', 'buildOverlay', '(', 'map', ',', 'defaultStyle', ',', 'styler', ',', 'mKmlDocument', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', 'kmlOverlay', ')', ';', 'BoundingBox', 'bb', '=', 'mKmlDocument', '.', 'mKmlRoot', '.', 'getBoundingBox', '(', ')', ';', 'if', '(', 'bb', '!=', 'null', ')', '{', 'setInitialViewOn', '(', 'bb', ')', ';', '}', '}', 'else', 'Toast', '.', 'makeText', '(', 'this', ',', '""Error when loading KML""', ',', 'Toast', '.', 'LENGTH_SHORT', ')', '.', 'show', '(', ')', ';', 'if', '(', 'mKmlDocument', '.', 'mKmlRoot', '!=', 'null', ')', '{', 'KmlFolder', 'root', '=', 'mKmlDocument', '.', 'mKmlRoot', ';', 'root', '.', 'addOverlay', '(', 'roadOverlay', ',', 'mKmlDocument', ')', ';', 'root', '.', 'addOverlay', '(', 'roadMarkers', ',', 'mKmlDocument', ')', ';', 'mKmlDocument', '.', 'saveAsKML', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.kml""', ')', ')', ';', 'mKmlDocument', '.', 'saveAsGeoJSON', '(', 'mKmlDocument', '.', 'getDefaultPathForAndroid', '(', '""my_route.json""', ')', ')', ';', '}', 'MapEventsOverlay', 'mapEventsOverlay', '=', 'new', 'MapEventsOverlay', '(', 'this', ')', ';', 'map', '.', 'getOverlays', '(', ')', '.', 'add', '(', '0', ',', 'mapEventsOverlay', ')', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'onCreate', '(', 'Bundle', 'savedInstanceState', ')', '{', 'root', '.', 'addOverlay', '(', 'roadMarkers', ',', 'mKmlDocument', ')', ';', '}', '}']",1035,23,10,1012,98.73170731707316
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_2.txt,0.7444,0.3571,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",71.067332,class T { @Override public boolean equals(Object obj) { boolean equalled = true; if (obj == null) { return false; } if (!getClass().equals(obj.getClass())) { return false; } Entitlement object = (Entitlement) obj; if (name == null) { if (object.getName() != null) { return false; } } else { if ((object.getName()) == null) { return false; } else if (!name.equals(object.getName())) { return false; } } if (applicationName == null) { if (object.getApplicationName() != null) { return false; } } else { if ((object.getApplicationName()) == null) { return false; } else if (!applicationName.equals(object.getApplicationName())) { return false; } } if (resourceNames == null) { if (object.getResourceNames() != null) { return false; } } else { if ((object.getResourceNames()) == null) { return false; } else if (!resourceNames.equals(object.getResourceNames())) { return false; } } if (actionValues == null) { if ((object.getActionValues() != null) && !object.getActionValues().isEmpty()) { return false; } } else { if ((object.getActionValues()) == null) { return false; } else if (!actionValues.equals(object.getActionValues())) { return false; } } if (advices == null) { if ((object.getAdvices() != null) && !object.getAdvices().isEmpty()) { return false; } } else { if ((object.getAdvices()) == null) { return false; } else if (!advices.equals(object.getAdvices())) { return false; } } if (attributes == null) { if ((object.getAttributes() != null) && !object.getAttributes().isEmpty()) { return false; } } else { if ((object.getAttributes()) == null) { return false; } else if (!attributes.equals(object.getAttributes())) { return false; } } return equalled; } },class T { @Override boolean equals(Object obj) { } },1663,52,26,1611,98.41172877214416,"['class', 'T', '{', '@', 'Override', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'boolean', 'equalled', '=', 'true', ';', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'getClass', '(', ')', '.', 'equals', '(', 'obj', '.', 'getClass', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'Entitlement', 'object', '=', '(', 'Entitlement', ')', 'obj', ';', 'if', '(', 'name', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getName', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getName', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'name', '.', 'equals', '(', 'object', '.', 'getName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'applicationName', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getApplicationName', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getApplicationName', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'applicationName', '.', 'equals', '(', 'object', '.', 'getApplicationName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'resourceNames', '==', 'null', ')', '{', 'if', '(', 'object', '.', 'getResourceNames', '(', ')', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getResourceNames', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'resourceNames', '.', 'equals', '(', 'object', '.', 'getResourceNames', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'actionValues', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getActionValues', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getActionValues', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getActionValues', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'actionValues', '.', 'equals', '(', 'object', '.', 'getActionValues', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'advices', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getAdvices', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getAdvices', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getAdvices', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'advices', '.', 'equals', '(', 'object', '.', 'getAdvices', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'if', '(', 'attributes', '==', 'null', ')', '{', 'if', '(', '(', 'object', '.', 'getAttributes', '(', ')', '!=', 'null', ')', '&&', '!', 'object', '.', 'getAttributes', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'false', ';', '}', '}', 'else', '{', 'if', '(', '(', 'object', '.', 'getAttributes', '(', ')', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', '!', 'attributes', '.', 'equals', '(', 'object', '.', 'getAttributes', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', '}', 'return', 'equalled', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', '}', '}']",480,14,10,466,99.14893617021276
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,equals_4.txt,0.9983,0.0039,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",98.229847,"class T { public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; } }",class T { boolean equals(Object obj) { return false; } },1607,56,26,1551,98.10246679316889,"['class', 'T', '{', 'public', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'if', '(', 'this', '==', 'obj', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'obj', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'getClass', '(', ')', '!=', 'obj', '.', 'getClass', '(', ')', ')', '{', 'return', 'false', ';', '}', 'NTRUEncryptionKeyGenerationParameters', 'other', '=', '(', 'NTRUEncryptionKeyGenerationParameters', ')', 'obj', ';', 'if', '(', 'N', '!=', 'other', '.', 'N', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenBits', '!=', 'other', '.', 'bufferLenBits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'bufferLenTrits', '!=', 'other', '.', 'bufferLenTrits', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'c', '!=', 'other', '.', 'c', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'db', '!=', 'other', '.', 'db', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df', '!=', 'other', '.', 'df', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df1', '!=', 'other', '.', 'df1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df2', '!=', 'other', '.', 'df2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'df3', '!=', 'other', '.', 'df3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dg', '!=', 'other', '.', 'dg', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dm0', '!=', 'other', '.', 'dm0', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr', '!=', 'other', '.', 'dr', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr1', '!=', 'other', '.', 'dr1', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr2', '!=', 'other', '.', 'dr2', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'dr3', '!=', 'other', '.', 'dr3', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'fastFp', '!=', 'other', '.', 'fastFp', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashAlg', '==', 'null', ')', '{', 'if', '(', 'other', '.', 'hashAlg', '!=', 'null', ')', '{', 'return', 'false', ';', '}', '}', 'else', 'if', '(', '!', 'hashAlg', '.', 'getAlgorithmName', '(', ')', '.', 'equals', '(', 'other', '.', 'hashAlg', '.', 'getAlgorithmName', '(', ')', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'hashSeed', '!=', 'other', '.', 'hashSeed', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'llen', '!=', 'other', '.', 'llen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'maxMsgLenBytes', '!=', 'other', '.', 'maxMsgLenBytes', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsMask', '!=', 'other', '.', 'minCallsMask', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'minCallsR', '!=', 'other', '.', 'minCallsR', ')', '{', 'return', 'false', ';', '}', 'if', '(', '!', 'Arrays', '.', 'equals', '(', 'oid', ',', 'other', '.', 'oid', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'pkLen', '!=', 'other', '.', 'pkLen', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'polyType', '!=', 'other', '.', 'polyType', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'q', '!=', 'other', '.', 'q', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'sparse', '!=', 'other', '.', 'sparse', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}', '}']","['class', 'T', '{', 'boolean', 'equals', '(', 'Object', 'obj', ')', '{', 'return', 'false', ';', '}', '}']",454,15,10,439,98.87387387387388
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_6.txt,0.9504,0.0606,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",84.878383,"class T { static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(""keystorefile"", ""mykeystore""); properties.setProperty(""keystoretype"", ""JKS""); properties.setProperty(""keystorepass"", ""22222222""); properties.setProperty(""privatekeyalias"", ""test""); properties.setProperty(""publickeyalias"", ""test""); properties.setProperty(""privatekeypass"", ""22222222""); properties.setProperty(""encryptionkeystrength"", ""56""); properties.setProperty(""encryptionalgorithm"", ""DES""); SecureAttrs.init(""testsym"", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(""testasym"", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(""TEST 1 START test encoded str ===========""); SecureAttrs secureattrs = SecureAttrs.getInstance(""testsym""); String s = ""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""; Map map = secureattrs.verifyEncodedString(s, ""secret""); if (map == null) System.out.println("" FAILED""); else System.out.println("" PASSED"" + map); System.out.println(""TEST 1 END ================""); System.out.println(""TEST 2 START : encode followed by decode ===""); HashMap hashmap = new HashMap(); hashmap.put(""branch"", ""bb""); hashmap.put(""mail"", ""mm""); hashmap.put(""sun.userid"", ""uu""); hashmap.put(""sun.spappurl"", ""apapp""); System.out.println("" TEST 2a START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); String s1 = ""secret""; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 2a PASSED "" + map1); else System.out.println("" 2a FAILED "" + map1); System.out.println("" TEST 2b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println(""Encoded string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 2b PASSED "" + map1); else System.out.println("" 2b FAILED "" + map1); System.out.println(""TEST 2 END ====================""); System.out.println(""TEST 3 START : decode with incorrect secret""); System.out.println("" TEST 3a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); map1 = secureattrs.verifyEncodedString(s2, ""junk""); if (map1 != null) System.out.println("" 3a FAILED "" + map1); else System.out.println("" 3a PASSED "" + map1); System.out.println("" TEST 3b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); map1 = secureattrs.verifyEncodedString(s3, ""junk""); if (map1 != null) System.out.println("" 3b FAILED "" + map1); else System.out.println("" 3b PASSED "" + map1); System.out.println(""TEST 3 END ====================""); System.out.println(""TEST 4 START : decode with correct secret""); System.out.println("" TEST 4a START : SYM KEY ===""); secureattrs = getInstance(""testsym""); s1 = ""secret""; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println("" TEST 4b START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println("" 4a PASSED "" + map1); else System.out.println("" 4a FAILED "" + map1); System.out.println(""TEST 4 END ====================""); System.out.println("" TEST 5a START : ASYM KEY ===""); secureattrs = getInstance(""testasym""); s1 = ""test""; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println("" 5a PASSED "" + map1); else System.out.println("" 5a FAILED "" + map1); System.out.println("" TEST 5b START : SYM KEY ===""); secureattrs = SecureAttrs.getInstance(""testsym""); s1 = ""secret""; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(""Encrypted string: "" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println("" 5b PASSED "" + map1); else System.out.println("" 5b FAILED "" + map1); System.out.println(""TEST 5 END ====================""); } catch (Exception exception) { exception.printStackTrace(); System.out.println(""TEST Exc : "" + exception); } } }",class T { void main(String args) { } },4363,38,24,4325,99.67734501037106,"['class', 'T', '{', 'static', 'public', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'SecureAttrs', '.', 'dbg', '=', 'true', ';', 'Properties', 'properties', '=', 'new', 'Properties', '(', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorefile""', ',', '""mykeystore""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystoretype""', ',', '""JKS""', ')', ';', 'properties', '.', 'setProperty', '(', '""keystorepass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""publickeyalias""', ',', '""test""', ')', ';', 'properties', '.', 'setProperty', '(', '""privatekeypass""', ',', '""22222222""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionkeystrength""', ',', '""56""', ')', ';', 'properties', '.', 'setProperty', '(', '""encryptionalgorithm""', ',', '""DES""', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testsym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_SYM', ',', 'properties', ')', ';', 'SecureAttrs', '.', 'init', '(', '""testasym""', ',', 'SecureAttrs', '.', 'SAE_CRYPTO_TYPE_ASYM', ',', 'properties', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 START test encoded str ===========""', ')', ';', 'SecureAttrs', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's', '=', '""YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==""', ';', 'Map', 'map', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's', ',', '""secret""', ')', ';', 'if', '(', 'map', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" FAILED""', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" PASSED""', '+', 'map', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 1 END ================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 START : encode followed by decode ===""', ')', ';', 'HashMap', 'hashmap', '=', 'new', 'HashMap', '(', ')', ';', 'hashmap', '.', 'put', '(', '""branch""', ',', '""bb""', ')', ';', 'hashmap', '.', 'put', '(', '""mail""', ',', '""mm""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.userid""', ',', '""uu""', ')', ';', 'hashmap', '.', 'put', '(', '""sun.spappurl""', ',', '""apapp""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 'String', 's1', '=', '""secret""', ';', 'String', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's2', ')', ';', 'Map', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 2b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'String', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encoded string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 2b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 2b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 2 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 START : decode with incorrect secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3a FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3a PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 3b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', '""junk""', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 3b FAILED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 3b PASSED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 3 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 START : decode with correct secret""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4a START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 4b START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 4a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 4a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 4 END ====================""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5a START : ASYM KEY ===""', ')', ';', 'secureattrs', '=', 'getInstance', '(', '""testasym""', ')', ';', 's1', '=', '""test""', ';', 's3', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's3', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's3', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5a PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5a FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" TEST 5b START : SYM KEY ===""', ')', ';', 'secureattrs', '=', 'SecureAttrs', '.', 'getInstance', '(', '""testsym""', ')', ';', 's1', '=', '""secret""', ';', 's2', '=', 'secureattrs', '.', 'getEncodedString', '(', 'hashmap', ',', 's1', ',', 's1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Encrypted string: ""', '+', 's2', ')', ';', 'map1', '=', 'secureattrs', '.', 'verifyEncodedString', '(', 's2', ',', 's1', ',', 's1', ')', ';', 'if', '(', 'map1', '!=', 'null', ')', 'System', '.', 'out', '.', 'println', '(', '"" 5b PASSED ""', '+', 'map1', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '"" 5b FAILED ""', '+', 'map1', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST 5 END ====================""', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'exception', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TEST Exc : ""', '+', 'exception', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",910,12,10,898,99.77777777777776
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_14.txt,0.9516,0.0719,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",83.852977,"class T { public static void main(String[] argv) { int start = 1; int end = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-s"")) { src = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dest = argv[++optind]; } else if (argv[optind].equals(""-x"")) { expunge = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""); System.out.println(""	[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""); System.out.println(""	 The -x option => EXPUNGE deleted messages""); System.out.println(""	 msgnum1 => start of message-range; msgnum2 => end of message-range""); System.exit(1); } else { break; } } if (optind < argv.length) start = Integer.parseInt(argv[optind++]); if (optind < argv.length) end = Integer.parseInt(argv[optind++]); try { Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getFolder(src); if (folder == null || !folder.exists()) { System.out.println(""Invalid folder: "" + src); System.exit(1); } folder.open(Folder.READ_WRITE); int count = folder.getMessageCount(); if (count == 0) { System.out.println(folder.getName() + "" is empty""); folder.close(false); store.close(); return; } Folder dfolder = store.getFolder(dest); if (!dfolder.exists()) dfolder.create(Folder.HOLDS_MESSAGES); if (end == -1) end = count; Message[] msgs = folder.getMessages(start, end); System.out.println(""Moving "" + msgs.length + "" messages""); if (msgs.length != 0) { folder.copyMessages(msgs, dfolder); folder.setFlags(msgs, new Flags(Flags.Flag.DELETED), true); for (int i = 0; i < msgs.length; i++) { if (!msgs[i].isSet(Flags.Flag.DELETED)) System.out.println(""Message # "" + msgs[i] + "" not deleted""); } } folder.close(expunge); store.close(); } catch (MessagingException mex) { Exception ex = mex; do { System.out.println(ex.getMessage()); if (ex instanceof MessagingException) ex = ((MessagingException) ex).getNextException(); else ex = null; } while (ex != null); } } }",class T { void main(String argv) { } },2791,38,24,2753,99.49403686302854,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'start', '=', '1', ';', 'int', 'end', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'src', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dest', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-x""', ')', ')', '{', 'expunge', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: mover [-T protocol] [-H host] [-U user] [-P password] [-L url] [-v]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t[-s source mbox] [-d destination mbox] [-x] [msgnum1] [msgnum2]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t The -x option => EXPUNGE deleted messages""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t msgnum1 => start of message-range; msgnum2 => end of message-range""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'start', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'end', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', '++', ']', ')', ';', 'try', '{', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getFolder', '(', 'src', ')', ';', 'if', '(', 'folder', '==', 'null', '||', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder: ""', '+', 'src', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'count', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'count', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'folder', '.', 'getName', '(', ')', '+', '"" is empty""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'return', ';', '}', 'Folder', 'dfolder', '=', 'store', '.', 'getFolder', '(', 'dest', ')', ';', 'if', '(', '!', 'dfolder', '.', 'exists', '(', ')', ')', 'dfolder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'if', '(', 'end', '==', '-', '1', ')', 'end', '=', 'count', ';', 'Message', '[', ']', 'msgs', '=', 'folder', '.', 'getMessages', '(', 'start', ',', 'end', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Moving ""', '+', 'msgs', '.', 'length', '+', '"" messages""', ')', ';', 'if', '(', 'msgs', '.', 'length', '!=', '0', ')', '{', 'folder', '.', 'copyMessages', '(', 'msgs', ',', 'dfolder', ')', ';', 'folder', '.', 'setFlags', '(', 'msgs', ',', 'new', 'Flags', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ',', 'true', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'msgs', '[', 'i', ']', '.', 'isSet', '(', 'Flags', '.', 'Flag', '.', 'DELETED', ')', ')', 'System', '.', 'out', '.', 'println', '(', '""Message # ""', '+', 'msgs', '[', 'i', ']', '+', '"" not deleted""', ')', ';', '}', '}', 'folder', '.', 'close', '(', 'expunge', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'Exception', 'ex', '=', 'mex', ';', 'do', '{', 'System', '.', 'out', '.', 'println', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'if', '(', 'ex', 'instanceof', 'MessagingException', ')', 'ex', '=', '(', '(', 'MessagingException', ')', 'ex', ')', '.', 'getNextException', '(', ')', ';', 'else', 'ex', '=', 'null', ';', '}', 'while', '(', 'ex', '!=', 'null', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', '}', '}']",799,12,10,787,99.74651457541192
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_15.txt,0.9983,0.0023,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",109.448523,"class T { public static void main(String[] argv) { int nummsg = 256; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""-p"")) { port = Integer.parseInt(argv[++optind]); } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""); System.out.println(""	[-P password] [-f mailbox] [msgnum] [-v] [-D]""); System.exit(1); } else { break; } } try { if (optind < argv.length) nummsg = Integer.parseInt(argv[optind]); Properties props = System.getProperties(); session = Session.getInstance(props, null); session.setDebug(debug); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, port, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } if (mbox == null) mbox = ""messagecachetest""; folder = folder.getFolder(mbox); if (folder == null) { System.out.println(""Invalid folder""); System.exit(1); } Message[] msgs = createMessages(nummsg); if (folder.exists()) folder.delete(false); folder.create(Folder.HOLDS_MESSAGES); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""fill folder""); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test message number""); testMessageNumber(folder); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge forward""); testExpungeForward(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge reverse""); testExpungeReverse(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge random""); testExpungeRandom(folder); folder.close(false); folder.open(Folder.READ_WRITE); folder.appendMessages(msgs); folder.close(false); folder.open(Folder.READ_WRITE); if (verbose) System.out.println(""test expunge other""); testExpungeOther(folder); folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); System.exit(1); } System.exit(0); } }",class T { void main(String argv) { } },3155,38,24,3117,99.55285851165762,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'int', 'nummsg', '=', '256', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-p""', ')', ')', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', '++', 'optind', ']', ')', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: messagecachetest [-L url] [-T protocol] [-H host] [-p port] [-U user]""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\t[-P password] [-f mailbox] [msgnum] [-v] [-D]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'nummsg', '=', 'Integer', '.', 'parseInt', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'port', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'mbox', '==', 'null', ')', 'mbox', '=', '""messagecachetest""', ';', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Invalid folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Message', '[', ']', 'msgs', '=', 'createMessages', '(', 'nummsg', ')', ';', 'if', '(', 'folder', '.', 'exists', '(', ')', ')', 'folder', '.', 'delete', '(', 'false', ')', ';', 'folder', '.', 'create', '(', 'Folder', '.', 'HOLDS_MESSAGES', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""fill folder""', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test message number""', ')', ';', 'testMessageNumber', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge forward""', ')', ';', 'testExpungeForward', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge reverse""', ')', ';', 'testExpungeReverse', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge random""', ')', ';', 'testExpungeRandom', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'folder', '.', 'appendMessages', '(', 'msgs', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '""test expunge other""', ')', ';', 'testExpungeOther', '(', 'folder', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', '}', '}']",890,12,10,878,99.77272727272728
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_7.txt,0.9053,0.1264,"{'n_total': 6, 'n_valid': -1, 'n_correct': -1}",93.439022,"class T { public static void main(String[] args) { final MBeanServer server; final ObjectName htmlObjName; final ObjectName snmpObjName; final ObjectName sunMibObjName; final ObjectName forgerockCtsMibObjName; final ObjectName forgerockPolicyMibObjName; final ObjectName forgerockSessionMibObjName; final ObjectName trapGeneratorObjName; int htmlPort = 8082; int snmpPort = 11161; if ((args.length != 0) && (args.length != 1)) { usage(); java.lang.System.exit(1); } else if (args.length == 1) { try { nbTraps = (new Integer(args[0])).intValue(); if (nbTraps < 0) { usage(); System.exit(1); } } catch (java.lang.NumberFormatException e) { usage(); System.exit(1); } } try { List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null); if ((servers != null) && !servers.isEmpty()) { server = servers.get(0); } else { server = MBeanServerFactory.createMBeanServer(); } String domain = server.getDefaultDomain(); htmlObjName = new ObjectName(domain + "":class=HtmlAdaptorServer,protocol=html,port="" + htmlPort); println(""Adding HTML adaptor to MBean server with name 
 "" + htmlObjName); println(""NOTE: HTML adaptor is bound on TCP port "" + htmlPort); HtmlAdaptorServer htmlAdaptor = new HtmlAdaptorServer(htmlPort); server.registerMBean(htmlAdaptor, htmlObjName); htmlAdaptor.start(); snmpPort = 11161; snmpObjName = new ObjectName(domain + "":class=SnmpAdaptorServer,protocol=snmp,port="" + snmpPort); println(""Adding SNMP adaptor to MBean server with name 
 "" + snmpObjName); println(""NOTE: SNMP Adaptor is bound on UDP port "" + snmpPort); snmpAdaptor = new SnmpAdaptorServer(snmpPort); server.registerMBean(snmpAdaptor, snmpObjName); snmpAdaptor.start(); print(""NOTE: Sending a coldStart SNMP trap"" + "" to each destination defined in the ACL file...""); snmpAdaptor.setTrapPort(new Integer(snmpPort + 1)); snmpAdaptor.snmpV1Trap(0, 0, null); println(""Done.""); try { JMXServiceURL url = new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://localhost:9999/server""); JMXConnectorServer cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, server); cs.start(); } catch (Exception ex) { println(""Error starting RMI : execute rmiregistry 9999; ex="" + ex); } sunMibObjName = new ObjectName(""snmp:class=SUN_OPENSSO_SERVER_MIB""); println(""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name"" + ""
 "" + sunMibObjName); SUN_OPENSSO_SERVER_MIB mib2 = new SUN_OPENSSO_SERVER_MIB(); server.registerMBean(mib2, sunMibObjName); forgerockCtsMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_CTS_MIB""); println(""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name"" + ""
 "" + forgerockCtsMibObjName); forgerockPolicyMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""); println(""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name"" + ""
 "" + forgerockPolicyMibObjName); forgerockSessionMibObjName = new ObjectName(""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""); println(""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name"" + ""
 "" + forgerockSessionMibObjName); FORGEROCK_OPENAM_CTS_MIB mib3 = new FORGEROCK_OPENAM_CTS_MIB(); server.registerMBean(mib3, forgerockCtsMibObjName); FORGEROCK_OPENAM_POLICY_MIB mib4 = new FORGEROCK_OPENAM_POLICY_MIB(); server.registerMBean(mib4, forgerockPolicyMibObjName); FORGEROCK_OPENAM_SESSION_MIB mib5 = new FORGEROCK_OPENAM_SESSION_MIB(); server.registerMBean(mib5, forgerockSessionMibObjName); mib2.setSnmpAdaptor(snmpAdaptor); int ifIndex = 1; trapGeneratorObjName = new ObjectName(""trapGenerator"" + "":class=LinkTrapGenerator,ifIndex="" + ifIndex); println(""Adding LinkTrapGenerator to MBean server with name"" + ""
 "" + trapGeneratorObjName); LinkTrapGenerator trapGenerator = new LinkTrapGenerator(nbTraps); server.registerMBean(trapGenerator, trapGeneratorObjName); println(""
>> Press <Enter> if you want to start sending traps.""); println("" -or-""); println("">> Press <Ctrl-C> if you want to stop this agent.""); System.in.read(); trapGenerator.start(); } catch (Exception e) { e.printStackTrace(); } } }",class T { void main(String args) { } },3995,38,24,3957,99.64744396877362,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'final', 'MBeanServer', 'server', ';', 'final', 'ObjectName', 'htmlObjName', ';', 'final', 'ObjectName', 'snmpObjName', ';', 'final', 'ObjectName', 'sunMibObjName', ';', 'final', 'ObjectName', 'forgerockCtsMibObjName', ';', 'final', 'ObjectName', 'forgerockPolicyMibObjName', ';', 'final', 'ObjectName', 'forgerockSessionMibObjName', ';', 'final', 'ObjectName', 'trapGeneratorObjName', ';', 'int', 'htmlPort', '=', '8082', ';', 'int', 'snmpPort', '=', '11161', ';', 'if', '(', '(', 'args', '.', 'length', '!=', '0', ')', '&&', '(', 'args', '.', 'length', '!=', '1', ')', ')', '{', 'usage', '(', ')', ';', 'java', '.', 'lang', '.', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', 'if', '(', 'args', '.', 'length', '==', '1', ')', '{', 'try', '{', 'nbTraps', '=', '(', 'new', 'Integer', '(', 'args', '[', '0', ']', ')', ')', '.', 'intValue', '(', ')', ';', 'if', '(', 'nbTraps', '<', '0', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'NumberFormatException', 'e', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'try', '{', 'List', '<', 'MBeanServer', '>', 'servers', '=', 'MBeanServerFactory', '.', 'findMBeanServer', '(', 'null', ')', ';', 'if', '(', '(', 'servers', '!=', 'null', ')', '&&', '!', 'servers', '.', 'isEmpty', '(', ')', ')', '{', 'server', '=', 'servers', '.', 'get', '(', '0', ')', ';', '}', 'else', '{', 'server', '=', 'MBeanServerFactory', '.', 'createMBeanServer', '(', ')', ';', '}', 'String', 'domain', '=', 'server', '.', 'getDefaultDomain', '(', ')', ';', 'htmlObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=HtmlAdaptorServer,protocol=html,port=""', '+', 'htmlPort', ')', ';', 'println', '(', '""Adding HTML adaptor to MBean server with name \n ""', '+', 'htmlObjName', ')', ';', 'println', '(', '""NOTE: HTML adaptor is bound on TCP port ""', '+', 'htmlPort', ')', ';', 'HtmlAdaptorServer', 'htmlAdaptor', '=', 'new', 'HtmlAdaptorServer', '(', 'htmlPort', ')', ';', 'server', '.', 'registerMBean', '(', 'htmlAdaptor', ',', 'htmlObjName', ')', ';', 'htmlAdaptor', '.', 'start', '(', ')', ';', 'snmpPort', '=', '11161', ';', 'snmpObjName', '=', 'new', 'ObjectName', '(', 'domain', '+', '"":class=SnmpAdaptorServer,protocol=snmp,port=""', '+', 'snmpPort', ')', ';', 'println', '(', '""Adding SNMP adaptor to MBean server with name \n ""', '+', 'snmpObjName', ')', ';', 'println', '(', '""NOTE: SNMP Adaptor is bound on UDP port ""', '+', 'snmpPort', ')', ';', 'snmpAdaptor', '=', 'new', 'SnmpAdaptorServer', '(', 'snmpPort', ')', ';', 'server', '.', 'registerMBean', '(', 'snmpAdaptor', ',', 'snmpObjName', ')', ';', 'snmpAdaptor', '.', 'start', '(', ')', ';', 'print', '(', '""NOTE: Sending a coldStart SNMP trap""', '+', '"" to each destination defined in the ACL file...""', ')', ';', 'snmpAdaptor', '.', 'setTrapPort', '(', 'new', 'Integer', '(', 'snmpPort', '+', '1', ')', ')', ';', 'snmpAdaptor', '.', 'snmpV1Trap', '(', '0', ',', '0', ',', 'null', ')', ';', 'println', '(', '""Done.""', ')', ';', 'try', '{', 'JMXServiceURL', 'url', '=', 'new', 'JMXServiceURL', '(', '""service:jmx:rmi:///jndi/rmi://localhost:9999/server""', ')', ';', 'JMXConnectorServer', 'cs', '=', 'JMXConnectorServerFactory', '.', 'newJMXConnectorServer', '(', 'url', ',', 'null', ',', 'server', ')', ';', 'cs', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'println', '(', '""Error starting RMI : execute rmiregistry 9999; ex=""', '+', 'ex', ')', ';', '}', 'sunMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=SUN_OPENSSO_SERVER_MIB""', ')', ';', 'println', '(', '""Adding SUN_OPENSSO_SERVER_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'sunMibObjName', ')', ';', 'SUN_OPENSSO_SERVER_MIB', 'mib2', '=', 'new', 'SUN_OPENSSO_SERVER_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib2', ',', 'sunMibObjName', ')', ';', 'forgerockCtsMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_CTS_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_CTS_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockCtsMibObjName', ')', ';', 'forgerockPolicyMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_POLICY_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_POLICY_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockPolicyMibObjName', ')', ';', 'forgerockSessionMibObjName', '=', 'new', 'ObjectName', '(', '""snmp:class=FORGEROCK_OPENAM_SESSION_MIB""', ')', ';', 'println', '(', '""Adding FORGEROCK_OPENAM_SESSION_MIB-MIB to MBean server with name""', '+', '""\n ""', '+', 'forgerockSessionMibObjName', ')', ';', 'FORGEROCK_OPENAM_CTS_MIB', 'mib3', '=', 'new', 'FORGEROCK_OPENAM_CTS_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib3', ',', 'forgerockCtsMibObjName', ')', ';', 'FORGEROCK_OPENAM_POLICY_MIB', 'mib4', '=', 'new', 'FORGEROCK_OPENAM_POLICY_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib4', ',', 'forgerockPolicyMibObjName', ')', ';', 'FORGEROCK_OPENAM_SESSION_MIB', 'mib5', '=', 'new', 'FORGEROCK_OPENAM_SESSION_MIB', '(', ')', ';', 'server', '.', 'registerMBean', '(', 'mib5', ',', 'forgerockSessionMibObjName', ')', ';', 'mib2', '.', 'setSnmpAdaptor', '(', 'snmpAdaptor', ')', ';', 'int', 'ifIndex', '=', '1', ';', 'trapGeneratorObjName', '=', 'new', 'ObjectName', '(', '""trapGenerator""', '+', '"":class=LinkTrapGenerator,ifIndex=""', '+', 'ifIndex', ')', ';', 'println', '(', '""Adding LinkTrapGenerator to MBean server with name""', '+', '""\n ""', '+', 'trapGeneratorObjName', ')', ';', 'LinkTrapGenerator', 'trapGenerator', '=', 'new', 'LinkTrapGenerator', '(', 'nbTraps', ')', ';', 'server', '.', 'registerMBean', '(', 'trapGenerator', ',', 'trapGeneratorObjName', ')', ';', 'println', '(', '""\n>> Press <Enter> if you want to start sending traps.""', ')', ';', 'println', '(', '"" -or-""', ')', ';', 'println', '(', '"">> Press <Ctrl-C> if you want to stop this agent.""', ')', ';', 'System', '.', 'in', '.', 'read', '(', ')', ';', 'trapGenerator', '.', 'start', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",641,12,10,629,99.68304278922344
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_2.txt,0.8298,0.3373,"{'n_total': 11, 'n_valid': -1, 'n_correct': -1}",262.865865,"class T { public void run() { int sloops = 0; if (debug) { log.info(""Start NIO thread, daemon="" + daemon); } while (running) { try { loops.incrementAndGet(); processPending(); long now = System.currentTimeMillis(); if (nextWakeup < now) { updateSleepTimeAndProcessTimeouts(now); } int selected = selector.select(sleepTime); lastWakeup = System.currentTimeMillis(); long slept = lastWakeup - now; if (debugWakeup && selected == 0) { if (sleepTime < maxSleep - 1000) { log.info(""Wakeup "" + selected + "" "" + slept + "" "" + sleepTime); } } if (slept < 10 && selected == 0) { if (sloops > 50) { sloops = 0; log.severe(""Looping !""); resetSelector(); } sloops++; } if (selected != 0) { sloops = 0; int callbackCnt = 0; Set<SelectionKey> sel = selector.selectedKeys(); Iterator<SelectionKey> i = sel.iterator(); while (i.hasNext()) { callbackCnt++; long beforeCallback = System.currentTimeMillis(); SelectionKey sk = i.next(); i.remove(); boolean valid = sk.isValid(); int readyOps = (valid) ? sk.readyOps() : 0; NioChannel ch = (NioChannel) sk.attachment(); if (debugWakeup) { log.info(""Wakeup selCnt="" + selected + "" slept="" + (lastWakeup - now) + "" ready: "" + readyOps + "" v="" + sk.isValid() + "" ch="" + ch); } if (ch == null) { log.severe(""Missing channel""); sk.cancel(); continue; } if (ch.selKey != sk) { log.severe(""Invalid state, selKey doesn't match ""); ch.selKey = sk; } if (ch.channel != sk.channel()) { ch.channel = sk.channel(); log.severe(""Invalid state, channel doesn't match ""); } if (!sk.isValid()) { if (debug) { log.info(""!isValid, closed socket "" + ch); } ch.close(); continue; } try { int ready = sk.readyOps(); if (sk.isValid() && sk.isAcceptable()) { handleAccept(ch, sk); } if (sk.isValid() && sk.isConnectable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_CONNECT); SocketChannel sc = (SocketChannel) sk.channel(); handleConnect(ch, sc); } if (sk.isValid() && sk.isWritable()) { sk.interestOps(sk.interestOps() & ~SelectionKey.OP_WRITE); ch.writeInterest = false; handleDataWriteable(ch); } if (sk.isValid() && sk.isReadable()) { handleReadable(ch); } long callbackTime = System.currentTimeMillis() - beforeCallback; if (callbackTime > 250) { log.warning(""Callback too long ! ops="" + ready + "" time="" + callbackTime + "" ch="" + ch + "" "" + callbackCnt); } if (callbackTime > maxCallbackTime) { maxCallbackTime = callbackTime; } callbackCount.incrementAndGet(); this.callbackTotalTime.addAndGet(callbackTime); } catch (Throwable t) { log.log(Level.SEVERE, ""SelectorThread: Channel error, closing"", t); ch.lastException = t; ch.close(); } } sel.clear(); } } catch (Throwable e) { log.log(Level.SEVERE, ""SelectorThread: Error in select"", e); } } log.info(""SelectorThread done""); } }",class T { void run() { try { } catch (Throwable e) { } } },2702,58,23,2644,98.69354236655468,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'int', 'sloops', '=', '0', ';', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""Start NIO thread, daemon=""', '+', 'daemon', ')', ';', '}', 'while', '(', 'running', ')', '{', 'try', '{', 'loops', '.', 'incrementAndGet', '(', ')', ';', 'processPending', '(', ')', ';', 'long', 'now', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'if', '(', 'nextWakeup', '<', 'now', ')', '{', 'updateSleepTimeAndProcessTimeouts', '(', 'now', ')', ';', '}', 'int', 'selected', '=', 'selector', '.', 'select', '(', 'sleepTime', ')', ';', 'lastWakeup', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'slept', '=', 'lastWakeup', '-', 'now', ';', 'if', '(', 'debugWakeup', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sleepTime', '<', 'maxSleep', '-', '1000', ')', '{', 'log', '.', 'info', '(', '""Wakeup ""', '+', 'selected', '+', '"" ""', '+', 'slept', '+', '"" ""', '+', 'sleepTime', ')', ';', '}', '}', 'if', '(', 'slept', '<', '10', '&&', 'selected', '==', '0', ')', '{', 'if', '(', 'sloops', '>', '50', ')', '{', 'sloops', '=', '0', ';', 'log', '.', 'severe', '(', '""Looping !""', ')', ';', 'resetSelector', '(', ')', ';', '}', 'sloops', '++', ';', '}', 'if', '(', 'selected', '!=', '0', ')', '{', 'sloops', '=', '0', ';', 'int', 'callbackCnt', '=', '0', ';', 'Set', '<', 'SelectionKey', '>', 'sel', '=', 'selector', '.', 'selectedKeys', '(', ')', ';', 'Iterator', '<', 'SelectionKey', '>', 'i', '=', 'sel', '.', 'iterator', '(', ')', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'callbackCnt', '++', ';', 'long', 'beforeCallback', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'SelectionKey', 'sk', '=', 'i', '.', 'next', '(', ')', ';', 'i', '.', 'remove', '(', ')', ';', 'boolean', 'valid', '=', 'sk', '.', 'isValid', '(', ')', ';', 'int', 'readyOps', '=', '(', 'valid', ')', '?', 'sk', '.', 'readyOps', '(', ')', ':', '0', ';', 'NioChannel', 'ch', '=', '(', 'NioChannel', ')', 'sk', '.', 'attachment', '(', ')', ';', 'if', '(', 'debugWakeup', ')', '{', 'log', '.', 'info', '(', '""Wakeup selCnt=""', '+', 'selected', '+', '"" slept=""', '+', '(', 'lastWakeup', '-', 'now', ')', '+', '"" ready: ""', '+', 'readyOps', '+', '"" v=""', '+', 'sk', '.', 'isValid', '(', ')', '+', '"" ch=""', '+', 'ch', ')', ';', '}', 'if', '(', 'ch', '==', 'null', ')', '{', 'log', '.', 'severe', '(', '""Missing channel""', ')', ';', 'sk', '.', 'cancel', '(', ')', ';', 'continue', ';', '}', 'if', '(', 'ch', '.', 'selKey', '!=', 'sk', ')', '{', 'log', '.', 'severe', '(', '""Invalid state, selKey doesn\'t match ""', ')', ';', 'ch', '.', 'selKey', '=', 'sk', ';', '}', 'if', '(', 'ch', '.', 'channel', '!=', 'sk', '.', 'channel', '(', ')', ')', '{', 'ch', '.', 'channel', '=', 'sk', '.', 'channel', '(', ')', ';', 'log', '.', 'severe', '(', '""Invalid state, channel doesn\'t match ""', ')', ';', '}', 'if', '(', '!', 'sk', '.', 'isValid', '(', ')', ')', '{', 'if', '(', 'debug', ')', '{', 'log', '.', 'info', '(', '""!isValid, closed socket ""', '+', 'ch', ')', ';', '}', 'ch', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'try', '{', 'int', 'ready', '=', 'sk', '.', 'readyOps', '(', ')', ';', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isAcceptable', '(', ')', ')', '{', 'handleAccept', '(', 'ch', ',', 'sk', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isConnectable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_CONNECT', ')', ';', 'SocketChannel', 'sc', '=', '(', 'SocketChannel', ')', 'sk', '.', 'channel', '(', ')', ';', 'handleConnect', '(', 'ch', ',', 'sc', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isWritable', '(', ')', ')', '{', 'sk', '.', 'interestOps', '(', 'sk', '.', 'interestOps', '(', ')', '&', '~', 'SelectionKey', '.', 'OP_WRITE', ')', ';', 'ch', '.', 'writeInterest', '=', 'false', ';', 'handleDataWriteable', '(', 'ch', ')', ';', '}', 'if', '(', 'sk', '.', 'isValid', '(', ')', '&&', 'sk', '.', 'isReadable', '(', ')', ')', '{', 'handleReadable', '(', 'ch', ')', ';', '}', 'long', 'callbackTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'beforeCallback', ';', 'if', '(', 'callbackTime', '>', '250', ')', '{', 'log', '.', 'warning', '(', '""Callback too long ! ops=""', '+', 'ready', '+', '"" time=""', '+', 'callbackTime', '+', '"" ch=""', '+', 'ch', '+', '"" ""', '+', 'callbackCnt', ')', ';', '}', 'if', '(', 'callbackTime', '>', 'maxCallbackTime', ')', '{', 'maxCallbackTime', '=', 'callbackTime', ';', '}', 'callbackCount', '.', 'incrementAndGet', '(', ')', ';', 'this', '.', 'callbackTotalTime', '.', 'addAndGet', '(', 'callbackTime', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Channel error, closing""', ',', 't', ')', ';', 'ch', '.', 'lastException', '=', 't', ';', 'ch', '.', 'close', '(', ')', ';', '}', '}', 'sel', '.', 'clear', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '""SelectorThread: Error in select""', ',', 'e', ')', ';', '}', '}', 'log', '.', 'info', '(', '""SelectorThread done""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 'e', ')', '{', '}', '}', '}']",718,20,10,698,98.58757062146891
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_5.txt,0.9992,0.0009,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",103.540344,"class T { public static void main(String[] args) throws Exception { String host; int port; char[] passphrase; if ((args.length == 1) || (args.length == 2)) { String[] c = args[0].split("":""); host = c[0]; port = (c.length == 1) ? 443 : Integer.parseInt(c[1]); String p = (args.length == 1) ? ""changeit"" : args[1]; passphrase = p.toCharArray(); } else { System.out.println(""Usage: java InstallCert <host>[:port] [passphrase]""); return; } File file = new File(""jssecacerts""); if (file.isFile() == false) { char SEP = File.separatorChar; File dir = new File(System.getProperty(""java.home"") + SEP + ""lib"" + SEP + ""security""); file = new File(dir, ""jssecacerts""); if (file.isFile() == false) { file = new File(dir, ""cacerts""); } } System.out.println(""Loading KeyStore "" + file + ""...""); InputStream in = new FileInputStream(file); KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()); ks.load(in, passphrase); in.close(); SSLContext context = SSLContext.getInstance(""TLS""); TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()); tmf.init(ks); X509TrustManager defaultTrustManager = (X509TrustManager) tmf.getTrustManagers()[0]; SavingTrustManager tm = new SavingTrustManager(defaultTrustManager); context.init(null, new TrustManager[] { tm }, null); SSLSocketFactory factory = context.getSocketFactory(); System.out.println(""Opening connection to "" + host + "":"" + port + ""...""); SSLSocket socket = (SSLSocket) factory.createSocket(host, port); socket.setSoTimeout(10000); try { System.out.println(""Starting SSL handshake...""); socket.startHandshake(); socket.close(); System.out.println(); System.out.println(""No errors, certificate is already trusted""); } catch (SSLException e) { System.out.println(); e.printStackTrace(System.out); } X509Certificate[] chain = tm.chain; if (chain == null) { System.out.println(""Could not obtain server certificate chain""); return; } BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(); System.out.println(""Server sent "" + chain.length + "" certificate(s):""); System.out.println(); MessageDigest sha1 = MessageDigest.getInstance(""SHA1""); MessageDigest md5 = MessageDigest.getInstance(""MD5""); for (int i = 0; i < chain.length; i++) { X509Certificate cert = chain[i]; System.out.println("" "" + (i + 1) + "" Subject "" + cert.getSubjectDN()); System.out.println("" Issuer "" + cert.getIssuerDN()); sha1.update(cert.getEncoded()); System.out.println("" sha1 "" + toHexString(sha1.digest())); md5.update(cert.getEncoded()); System.out.println("" md5 "" + toHexString(md5.digest())); System.out.println(); } System.out.println(""Enter certificate to add to trusted keystore or 'q' to quit: [1]""); String line = reader.readLine().trim(); int k; try { k = (line.length() == 0) ? 0 : Integer.parseInt(line) - 1; } catch (NumberFormatException e) { System.out.println(""KeyStore not changed""); return; } X509Certificate cert = chain[k]; String alias = host + ""-"" + (k + 1); ks.setCertificateEntry(alias, cert); OutputStream out = new FileOutputStream(""jssecacerts""); ks.store(out, passphrase); out.close(); System.out.println(); System.out.println(cert); System.out.println(); System.out.println(""Added certificate to keystore 'jssecacerts' using alias '"" + alias + ""'""); } }",class T { void main(String args) { } },3285,38,24,3247,99.57068383931308,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'host', ';', 'int', 'port', ';', 'char', '[', ']', 'passphrase', ';', 'if', '(', '(', 'args', '.', 'length', '==', '1', ')', '||', '(', 'args', '.', 'length', '==', '2', ')', ')', '{', 'String', '[', ']', 'c', '=', 'args', '[', '0', ']', '.', 'split', '(', '"":""', ')', ';', 'host', '=', 'c', '[', '0', ']', ';', 'port', '=', '(', 'c', '.', 'length', '==', '1', ')', '?', '443', ':', 'Integer', '.', 'parseInt', '(', 'c', '[', '1', ']', ')', ';', 'String', 'p', '=', '(', 'args', '.', 'length', '==', '1', ')', '?', '""changeit""', ':', 'args', '[', '1', ']', ';', 'passphrase', '=', 'p', '.', 'toCharArray', '(', ')', ';', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: java InstallCert <host>[:port] [passphrase]""', ')', ';', 'return', ';', '}', 'File', 'file', '=', 'new', 'File', '(', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'char', 'SEP', '=', 'File', '.', 'separatorChar', ';', 'File', 'dir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '""java.home""', ')', '+', 'SEP', '+', '""lib""', '+', 'SEP', '+', '""security""', ')', ';', 'file', '=', 'new', 'File', '(', 'dir', ',', '""jssecacerts""', ')', ';', 'if', '(', 'file', '.', 'isFile', '(', ')', '==', 'false', ')', '{', 'file', '=', 'new', 'File', '(', 'dir', ',', '""cacerts""', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '""Loading KeyStore ""', '+', 'file', '+', '""...""', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'KeyStore', 'ks', '=', 'KeyStore', '.', 'getInstance', '(', 'KeyStore', '.', 'getDefaultType', '(', ')', ')', ';', 'ks', '.', 'load', '(', 'in', ',', 'passphrase', ')', ';', 'in', '.', 'close', '(', ')', ';', 'SSLContext', 'context', '=', 'SSLContext', '.', 'getInstance', '(', '""TLS""', ')', ';', 'TrustManagerFactory', 'tmf', '=', 'TrustManagerFactory', '.', 'getInstance', '(', 'TrustManagerFactory', '.', 'getDefaultAlgorithm', '(', ')', ')', ';', 'tmf', '.', 'init', '(', 'ks', ')', ';', 'X509TrustManager', 'defaultTrustManager', '=', '(', 'X509TrustManager', ')', 'tmf', '.', 'getTrustManagers', '(', ')', '[', '0', ']', ';', 'SavingTrustManager', 'tm', '=', 'new', 'SavingTrustManager', '(', 'defaultTrustManager', ')', ';', 'context', '.', 'init', '(', 'null', ',', 'new', 'TrustManager', '[', ']', '{', 'tm', '}', ',', 'null', ')', ';', 'SSLSocketFactory', 'factory', '=', 'context', '.', 'getSocketFactory', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Opening connection to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '""...""', ')', ';', 'SSLSocket', 'socket', '=', '(', 'SSLSocket', ')', 'factory', '.', 'createSocket', '(', 'host', ',', 'port', ')', ';', 'socket', '.', 'setSoTimeout', '(', '10000', ')', ';', 'try', '{', 'System', '.', 'out', '.', 'println', '(', '""Starting SSL handshake...""', ')', ';', 'socket', '.', 'startHandshake', '(', ')', ';', 'socket', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""No errors, certificate is already trusted""', ')', ';', '}', 'catch', '(', 'SSLException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'out', ')', ';', '}', 'X509Certificate', '[', ']', 'chain', '=', 'tm', '.', 'chain', ';', 'if', '(', 'chain', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Could not obtain server certificate chain""', ')', ';', 'return', ';', '}', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'System', '.', 'in', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Server sent ""', '+', 'chain', '.', 'length', '+', '"" certificate(s):""', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', '""SHA1""', ')', ';', 'MessageDigest', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '""MD5""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'chain', '.', 'length', ';', 'i', '++', ')', '{', 'X509Certificate', 'cert', '=', 'chain', '[', 'i', ']', ';', 'System', '.', 'out', '.', 'println', '(', '"" ""', '+', '(', 'i', '+', '1', ')', '+', '"" Subject ""', '+', 'cert', '.', 'getSubjectDN', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" Issuer ""', '+', 'cert', '.', 'getIssuerDN', '(', ')', ')', ';', 'sha1', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" sha1 ""', '+', 'toHexString', '(', 'sha1', '.', 'digest', '(', ')', ')', ')', ';', 'md5', '.', 'update', '(', 'cert', '.', 'getEncoded', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"" md5 ""', '+', 'toHexString', '(', 'md5', '.', 'digest', '(', ')', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '""Enter certificate to add to trusted keystore or \'q\' to quit: [1]""', ')', ';', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ';', 'int', 'k', ';', 'try', '{', 'k', '=', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', '?', '0', ':', 'Integer', '.', 'parseInt', '(', 'line', ')', '-', '1', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""KeyStore not changed""', ')', ';', 'return', ';', '}', 'X509Certificate', 'cert', '=', 'chain', '[', 'k', ']', ';', 'String', 'alias', '=', 'host', '+', '""-""', '+', '(', 'k', '+', '1', ')', ';', 'ks', '.', 'setCertificateEntry', '(', 'alias', ',', 'cert', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', '""jssecacerts""', ')', ';', 'ks', '.', 'store', '(', 'out', ',', 'passphrase', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'cert', ')', ';', 'System', '.', 'out', '.', 'println', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Added certificate to keystore \'jssecacerts\' using alias \'""', '+', 'alias', '+', '""\'""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",836,12,10,824,99.75786924939467
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_5.txt,0.3721,1.5444,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",227.442205,"class T { @Override @SuppressWarnings({ ""SleepWhileInLoop"", ""ResultOfObjectAllocationIgnored"" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop, 0, 1024 * 1024, 8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(""Buffer server started: {}"", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(""Container {} restart."", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(""Stopping on exit condition""); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(""Sleep interrupted"", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(""Wait for {} to terminate interrupted"", thread, e); } if (thread.isAlive()) { LOG.warn(""Container thread {} is still alive"", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(""Exception during StreamingContainerManager teardown"", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(""Exception during BufferServer stop"", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(""Wait for {} to terminate interrupted"", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(""Exception during {} stop"", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(""Event loop {} is still active"", StreamingContainer.eventloop); } } } LOG.info(""Application finished.""); } }",class T { void run(long runMillis) { List containerThreads = new LinkedList (); } },3122,83,23,3039,98.06389157792836,"['class', 'T', '{', '@', 'Override', '@', 'SuppressWarnings', '(', '{', '""SleepWhileInLoop""', ',', '""ResultOfObjectAllocationIgnored""', '}', ')', 'public', 'void', 'run', '(', 'long', 'runMillis', ')', '{', 'Thread', 'eventLoopThread', '=', 'null', ';', 'List', '<', 'Thread', '>', 'containerThreads', '=', 'new', 'LinkedList', '<', '>', '(', ')', ';', 'try', '{', 'if', '(', '!', 'perContainerBufferServer', ')', '{', 'eventLoopThread', '=', 'StreamingContainer', '.', 'eventloop', '.', 'start', '(', ')', ';', 'bufferServer', '=', 'new', 'Server', '(', 'StreamingContainer', '.', 'eventloop', ',', '0', ',', '1024', '*', '1024', ',', '8', ')', ';', 'try', '{', 'bufferServer', '.', 'setSpoolStorage', '(', 'new', 'DiskStorage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'bufferServerAddress', '=', 'InetSocketAddress', '.', 'createUnresolved', '(', 'LOCALHOST', ',', 'bufferServer', '.', 'run', '(', ')', '.', 'getPort', '(', ')', ')', ';', 'LOG', '.', 'info', '(', '""Buffer server started: {}""', ',', 'bufferServerAddress', ')', ';', '}', 'long', 'endMillis', '=', 'System', '.', 'currentTimeMillis', '(', ')', '+', 'runMillis', ';', 'while', '(', '!', 'appDone', ')', '{', 'for', '(', 'String', 'containerIdStr', ':', 'dnmgr', '.', 'containerStopRequests', '.', 'values', '(', ')', ')', '{', 'StreamingContainer', 'c', '=', 'childContainers', '.', 'get', '(', 'containerIdStr', ')', ';', 'if', '(', 'c', '!=', 'null', ')', '{', 'ContainerHeartbeatResponse', 'r', '=', 'new', 'ContainerHeartbeatResponse', '(', ')', ';', 'r', '.', 'shutdown', '=', 'StreamingContainerUmbilicalProtocol', '.', 'ShutdownType', '.', 'ABORT', ';', 'c', '.', 'processHeartbeatResponse', '(', 'r', ')', ';', '}', 'dnmgr', '.', 'containerStopRequests', '.', 'remove', '(', 'containerIdStr', ')', ';', 'LOG', '.', 'info', '(', '""Container {} restart.""', ',', 'containerIdStr', ')', ';', 'dnmgr', '.', 'scheduleContainerRestart', '(', 'containerIdStr', ')', ';', '}', 'while', '(', '!', 'dnmgr', '.', 'containerStartRequests', '.', 'isEmpty', '(', ')', ')', '{', 'ContainerStartRequest', 'cdr', '=', 'dnmgr', '.', 'containerStartRequests', '.', 'poll', '(', ')', ';', 'if', '(', 'cdr', '!=', 'null', ')', '{', 'new', 'LocalStreamingContainerLauncher', '(', 'cdr', ',', 'containerThreads', ')', ';', '}', '}', 'if', '(', 'heartbeatMonitoringEnabled', ')', '{', 'dnmgr', '.', 'monitorHeartbeat', '(', 'false', ')', ';', '}', 'if', '(', 'childContainers', '.', 'isEmpty', '(', ')', '&&', 'dnmgr', '.', 'containerStartRequests', '.', 'isEmpty', '(', ')', ')', '{', 'appDone', '=', 'true', ';', '}', 'if', '(', 'runMillis', '>', '0', '&&', 'System', '.', 'currentTimeMillis', '(', ')', '>', 'endMillis', ')', '{', 'appDone', '=', 'true', ';', '}', 'try', '{', 'if', '(', 'exitCondition', '!=', 'null', '&&', 'exitCondition', '.', 'call', '(', ')', ')', '{', 'LOG', '.', 'info', '(', '""Stopping on exit condition""', ')', ';', 'appDone', '=', 'true', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'break', ';', '}', 'if', '(', 'Thread', '.', 'interrupted', '(', ')', ')', '{', 'break', ';', '}', 'if', '(', '!', 'appDone', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '.', 'debug', '(', '""Sleep interrupted""', ',', 'e', ')', ';', 'break', ';', '}', '}', '}', '}', 'finally', '{', 'for', '(', 'LocalStreamingContainer', 'lsc', ':', 'childContainers', '.', 'values', '(', ')', ')', '{', 'injectShutdown', '.', 'put', '(', 'lsc', '.', 'getContainerId', '(', ')', ',', 'lsc', ')', ';', 'lsc', '.', 'triggerHeartbeat', '(', ')', ';', '}', 'for', '(', 'Thread', 'thread', ':', 'containerThreads', ')', '{', 'try', '{', 'thread', '.', 'join', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '.', 'debug', '(', '""Wait for {} to terminate interrupted""', ',', 'thread', ',', 'e', ')', ';', '}', 'if', '(', 'thread', '.', 'isAlive', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Container thread {} is still alive""', ',', 'thread', '.', 'getName', '(', ')', ')', ';', '}', '}', 'try', '{', 'dnmgr', '.', 'teardown', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during StreamingContainerManager teardown""', ',', 'e', ')', ';', '}', 'if', '(', 'bufferServerAddress', '!=', 'null', ')', '{', 'try', '{', 'bufferServer', '.', 'stop', '(', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during BufferServer stop""', ',', 'e', ')', ';', '}', '}', 'if', '(', 'eventLoopThread', '!=', 'null', ')', '{', 'try', '{', 'StreamingContainer', '.', 'eventloop', '.', 'stop', '(', ')', ';', 'eventLoopThread', '.', 'join', '(', '1000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', 'LOG', '.', 'debug', '(', '""Wait for {} to terminate interrupted""', ',', 'eventLoopThread', '.', 'getName', '(', ')', ',', 'ie', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '""Exception during {} stop""', ',', 'StreamingContainer', '.', 'eventloop', ',', 'e', ')', ';', '}', 'if', '(', 'StreamingContainer', '.', 'eventloop', '.', 'isActive', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Event loop {} is still active""', ',', 'StreamingContainer', '.', 'eventloop', ')', ';', '}', '}', '}', 'LOG', '.', 'info', '(', '""Application finished.""', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', 'long', 'runMillis', ')', '{', 'List', 'containerThreads', '=', 'new', 'LinkedList', '(', ')', ';', '}', '}']",666,20,10,646,98.47560975609755
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_12.txt,0.9818,0.0261,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",81.570395,"class T { public static void main(String[] argv) { String srcURL = null; String dstURL = null; boolean debug = false; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-s"")) { srcURL = argv[++optind]; } else if (argv[optind].equals(""-d"")) { dstURL = argv[++optind]; } else if (argv[optind].equals(""-D"")) { debug = true; } else if (argv[optind].equals(""-f"")) { force = true; } else if (argv[optind].equals(""-S"")) { skipSpecial = true; } else if (argv[optind].equals(""-c"")) { clear = true; } else if (argv[optind].equals(""-P"")) { dontPreserveFlags = true; } else if (argv[optind].equals(""-W"")) { warn = true; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { printUsage(); System.exit(1); } else { break; } } try { if (srcURL == null || dstURL == null) { printUsage(); System.exit(1); } Session session = Session.getInstance(System.getProperties(), null); session.setDebug(debug); URLName srcURLName = new URLName(srcURL); Folder srcFolder; if (srcURLName.getFile() == null) { Store s = session.getStore(srcURLName); s.connect(); srcFolder = s.getDefaultFolder(); } else { srcFolder = session.getFolder(new URLName(srcURL)); if (!srcFolder.exists()) { System.out.println(""source folder does not exist""); srcFolder.getStore().close(); System.exit(1); } } URLName dstURLName = new URLName(dstURL); Folder dstFolder; if (dstURLName.getFile() == null) { Store s = session.getStore(dstURLName); s.connect(); dstFolder = s.getFolder(srcFolder.getName()); } else dstFolder = session.getFolder(dstURLName); if (clear && dstFolder.exists()) { if (!dstFolder.delete(true)) { System.out.println(""couldn't delete "" + dstFolder.getFullName()); return; } } copy(srcFolder, dstFolder); srcFolder.getStore().close(); dstFolder.getStore().close(); } catch (MessagingException mex) { System.out.println(mex.getMessage()); mex.printStackTrace(); } } }",class T { void main(String argv) { } },1918,38,24,1880,99.26082365364309,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'String', 'srcURL', '=', 'null', ';', 'String', 'dstURL', '=', 'null', ';', 'boolean', 'debug', '=', 'false', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-s""', ')', ')', '{', 'srcURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-d""', ')', ')', '{', 'dstURL', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-D""', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'force', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-S""', ')', ')', '{', 'skipSpecial', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-c""', ')', ')', '{', 'clear', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'dontPreserveFlags', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-W""', ')', ')', '{', 'warn', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'srcURL', '==', 'null', '||', 'dstURL', '==', 'null', ')', '{', 'printUsage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'System', '.', 'getProperties', '(', ')', ',', 'null', ')', ';', 'session', '.', 'setDebug', '(', 'debug', ')', ';', 'URLName', 'srcURLName', '=', 'new', 'URLName', '(', 'srcURL', ')', ';', 'Folder', 'srcFolder', ';', 'if', '(', 'srcURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'srcURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'srcFolder', '=', 's', '.', 'getDefaultFolder', '(', ')', ';', '}', 'else', '{', 'srcFolder', '=', 'session', '.', 'getFolder', '(', 'new', 'URLName', '(', 'srcURL', ')', ')', ';', 'if', '(', '!', 'srcFolder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""source folder does not exist""', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'URLName', 'dstURLName', '=', 'new', 'URLName', '(', 'dstURL', ')', ';', 'Folder', 'dstFolder', ';', 'if', '(', 'dstURLName', '.', 'getFile', '(', ')', '==', 'null', ')', '{', 'Store', 's', '=', 'session', '.', 'getStore', '(', 'dstURLName', ')', ';', 's', '.', 'connect', '(', ')', ';', 'dstFolder', '=', 's', '.', 'getFolder', '(', 'srcFolder', '.', 'getName', '(', ')', ')', ';', '}', 'else', 'dstFolder', '=', 'session', '.', 'getFolder', '(', 'dstURLName', ')', ';', 'if', '(', 'clear', '&&', 'dstFolder', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'dstFolder', '.', 'delete', '(', 'true', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""couldn\'t delete ""', '+', 'dstFolder', '.', 'getFullName', '(', ')', ')', ';', 'return', ';', '}', '}', 'copy', '(', 'srcFolder', ',', 'dstFolder', ')', ';', 'srcFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', 'dstFolder', '.', 'getStore', '(', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MessagingException', 'mex', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mex', '.', 'getMessage', '(', ')', ')', ';', 'mex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', '}', '}']",568,12,10,556,99.6415770609319
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_13.txt,0.9985,0.0021,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",80.292176,"class T { public static void main(String[] argv) { long uid = -1; int optind; for (optind = 0; optind < argv.length; optind++) { if (argv[optind].equals(""-T"")) { protocol = argv[++optind]; } else if (argv[optind].equals(""-H"")) { host = argv[++optind]; } else if (argv[optind].equals(""-U"")) { user = argv[++optind]; } else if (argv[optind].equals(""-P"")) { password = argv[++optind]; } else if (argv[optind].equals(""-v"")) { verbose = true; } else if (argv[optind].equals(""-f"")) { mbox = argv[++optind]; } else if (argv[optind].equals(""-L"")) { url = argv[++optind]; } else if (argv[optind].equals(""--"")) { optind++; break; } else if (argv[optind].startsWith(""-"")) { System.out.println(""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""); System.exit(1); } else { break; } } try { if (optind < argv.length) uid = Long.parseLong(argv[optind]); Properties props = System.getProperties(); Session session = Session.getInstance(props, null); Store store = null; if (url != null) { URLName urln = new URLName(url); store = session.getStore(urln); store.connect(); } else { if (protocol != null) store = session.getStore(protocol); else store = session.getStore(); if (host != null || user != null || password != null) store.connect(host, user, password); else store.connect(); } Folder folder = store.getDefaultFolder(); if (folder == null) { System.out.println(""No default folder""); System.exit(1); } folder = folder.getFolder(mbox); if (!folder.exists()) { System.out.println(mbox + "" does not exist""); System.exit(1); } if (!(folder instanceof UIDFolder)) { System.out.println(""This Provider or this folder does not support UIDs""); System.exit(1); } UIDFolder ufolder = (UIDFolder) folder; folder.open(Folder.READ_WRITE); int totalMessages = folder.getMessageCount(); if (totalMessages == 0) { System.out.println(""Empty folder""); folder.close(false); store.close(); System.exit(1); } if (verbose) { int newMessages = folder.getNewMessageCount(); System.out.println(""Total messages = "" + totalMessages); System.out.println(""New messages = "" + newMessages); System.out.println(""-------------------------------""); } if (uid == -1) { Message[] msgs = ufolder.getMessagesByUID(1, UIDFolder.LASTUID); FetchProfile fp = new FetchProfile(); fp.add(FetchProfile.Item.ENVELOPE); fp.add(FetchProfile.Item.FLAGS); fp.add(""X-Mailer""); folder.fetch(msgs, fp); for (int i = 0; i < msgs.length; i++) { System.out.println(""--------------------------""); System.out.println(""MESSAGE UID #"" + ufolder.getUID(msgs[i]) + "":""); dumpEnvelope(msgs[i]); } } else { System.out.println(""Getting message UID: "" + uid); Message m = ufolder.getMessageByUID(uid); if (m != null) dumpPart(m); else System.out.println(""This Message does not exist on this folder""); } folder.close(false); store.close(); } catch (Exception ex) { System.out.println(""Oops, got exception! "" + ex.getMessage()); ex.printStackTrace(); } System.exit(1); } }",class T { void main(String argv) { } },2944,38,24,2906,99.52054794520548,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'argv', ')', '{', 'long', 'uid', '=', '-', '1', ';', 'int', 'optind', ';', 'for', '(', 'optind', '=', '0', ';', 'optind', '<', 'argv', '.', 'length', ';', 'optind', '++', ')', '{', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-T""', ')', ')', '{', 'protocol', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-H""', ')', ')', '{', 'host', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-U""', ')', ')', '{', 'user', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-P""', ')', ')', '{', 'password', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-v""', ')', ')', '{', 'verbose', '=', 'true', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-f""', ')', ')', '{', 'mbox', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""-L""', ')', ')', '{', 'url', '=', 'argv', '[', '++', 'optind', ']', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'equals', '(', '""--""', ')', ')', '{', 'optind', '++', ';', 'break', ';', '}', 'else', 'if', '(', 'argv', '[', 'optind', ']', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Usage: uidmsgshow [-L url] [-T protocol] [-H host] [-U user] [-P password] [-f mailbox] [uid] [-v]""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'try', '{', 'if', '(', 'optind', '<', 'argv', '.', 'length', ')', 'uid', '=', 'Long', '.', 'parseLong', '(', 'argv', '[', 'optind', ']', ')', ';', 'Properties', 'props', '=', 'System', '.', 'getProperties', '(', ')', ';', 'Session', 'session', '=', 'Session', '.', 'getInstance', '(', 'props', ',', 'null', ')', ';', 'Store', 'store', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'URLName', 'urln', '=', 'new', 'URLName', '(', 'url', ')', ';', 'store', '=', 'session', '.', 'getStore', '(', 'urln', ')', ';', 'store', '.', 'connect', '(', ')', ';', '}', 'else', '{', 'if', '(', 'protocol', '!=', 'null', ')', 'store', '=', 'session', '.', 'getStore', '(', 'protocol', ')', ';', 'else', 'store', '=', 'session', '.', 'getStore', '(', ')', ';', 'if', '(', 'host', '!=', 'null', '||', 'user', '!=', 'null', '||', 'password', '!=', 'null', ')', 'store', '.', 'connect', '(', 'host', ',', 'user', ',', 'password', ')', ';', 'else', 'store', '.', 'connect', '(', ')', ';', '}', 'Folder', 'folder', '=', 'store', '.', 'getDefaultFolder', '(', ')', ';', 'if', '(', 'folder', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""No default folder""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'folder', '=', 'folder', '.', 'getFolder', '(', 'mbox', ')', ';', 'if', '(', '!', 'folder', '.', 'exists', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'mbox', '+', '"" does not exist""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '!', '(', 'folder', 'instanceof', 'UIDFolder', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""This Provider or this folder does not support UIDs""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'UIDFolder', 'ufolder', '=', '(', 'UIDFolder', ')', 'folder', ';', 'folder', '.', 'open', '(', 'Folder', '.', 'READ_WRITE', ')', ';', 'int', 'totalMessages', '=', 'folder', '.', 'getMessageCount', '(', ')', ';', 'if', '(', 'totalMessages', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Empty folder""', ')', ';', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'verbose', ')', '{', 'int', 'newMessages', '=', 'folder', '.', 'getNewMessageCount', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Total messages = ""', '+', 'totalMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""New messages = ""', '+', 'newMessages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""-------------------------------""', ')', ';', '}', 'if', '(', 'uid', '==', '-', '1', ')', '{', 'Message', '[', ']', 'msgs', '=', 'ufolder', '.', 'getMessagesByUID', '(', '1', ',', 'UIDFolder', '.', 'LASTUID', ')', ';', 'FetchProfile', 'fp', '=', 'new', 'FetchProfile', '(', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'ENVELOPE', ')', ';', 'fp', '.', 'add', '(', 'FetchProfile', '.', 'Item', '.', 'FLAGS', ')', ';', 'fp', '.', 'add', '(', '""X-Mailer""', ')', ';', 'folder', '.', 'fetch', '(', 'msgs', ',', 'fp', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'msgs', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""--------------------------""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""MESSAGE UID #""', '+', 'ufolder', '.', 'getUID', '(', 'msgs', '[', 'i', ']', ')', '+', '"":""', ')', ';', 'dumpEnvelope', '(', 'msgs', '[', 'i', ']', ')', ';', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '""Getting message UID: ""', '+', 'uid', ')', ';', 'Message', 'm', '=', 'ufolder', '.', 'getMessageByUID', '(', 'uid', ')', ';', 'if', '(', 'm', '!=', 'null', ')', 'dumpPart', '(', 'm', ')', ';', 'else', 'System', '.', 'out', '.', 'println', '(', '""This Message does not exist on this folder""', ')', ';', '}', 'folder', '.', 'close', '(', 'false', ')', ';', 'store', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Oops, got exception! ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'argv', ')', '{', '}', '}']",821,12,10,809,99.7533908754624
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_1.txt,0.9076,0.1127,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",91.0899,"class T { public static void main(String[] args) throws Exception { boolean send = true; boolean debug = false; long pause = 0; int count = 1000000; int stats = 10000; boolean breakOnEx = false; int threads = 1; boolean shutdown = false; int startoptions = Channel.DEFAULT; int channelOptions = Channel.SEND_OPTIONS_DEFAULT; if (args.length == 0) { args = new String[] { ""-help"" }; } for (int i = 0; i < args.length; i++) { if (""-threads"".equals(args[i])) { threads = Integer.parseInt(args[++i]); } else if (""-count"".equals(args[i])) { count = Integer.parseInt(args[++i]); System.out.println(""Sending "" + count + "" messages.""); } else if (""-pause"".equals(args[i])) { pause = Long.parseLong(args[++i]) * 1000; } else if (""-break"".equals(args[i])) { breakOnEx = true; } else if (""-shutdown"".equals(args[i])) { shutdown = true; } else if (""-stats"".equals(args[i])) { stats = Integer.parseInt(args[++i]); System.out.println(""Stats every "" + stats + "" message""); } else if (""-sendoptions"".equals(args[i])) { channelOptions = Integer.parseInt(args[++i]); System.out.println(""Setting send options to "" + channelOptions); } else if (""-startoptions"".equals(args[i])) { startoptions = Integer.parseInt(args[++i]); System.out.println(""Setting start options to "" + startoptions); } else if (""-size"".equals(args[i])) { size = Integer.parseInt(args[++i]) - 4; System.out.println(""Message size will be:"" + (size + 4) + "" bytes""); } else if (""-mode"".equals(args[i])) { if (""receive"".equals(args[++i])) send = false; } else if (""-debug"".equals(args[i])) { debug = true; } else if (""-help"".equals(args[i])) { usage(); System.exit(1); } } ManagedChannel channel = (ManagedChannel) ChannelCreator.createChannel(args); LoadTest test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; LoadMessage msg = new LoadMessage(); messageSize = LoadMessage.getMessageSize(msg); channel.addChannelListener(test); channel.addMembershipListener(test); channel.start(startoptions); Runtime.getRuntime().addShutdownHook(new Shutdown(channel)); while (threads > 1) { Thread t = new Thread(test); t.setDaemon(true); t.start(); threads--; test = new LoadTest(channel, send, count, debug, pause, stats, breakOnEx); test.channelOptions = channelOptions; } test.run(); if (shutdown && send) channel.stop(Channel.DEFAULT); System.out.println(""System test complete, sleeping to let threads finish.""); Thread.sleep(60 * 1000 * 60); } }",class T { void main(String args) { } },2447,38,24,2409,99.42220387948824,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'boolean', 'send', '=', 'true', ';', 'boolean', 'debug', '=', 'false', ';', 'long', 'pause', '=', '0', ';', 'int', 'count', '=', '1000000', ';', 'int', 'stats', '=', '10000', ';', 'boolean', 'breakOnEx', '=', 'false', ';', 'int', 'threads', '=', '1', ';', 'boolean', 'shutdown', '=', 'false', ';', 'int', 'startoptions', '=', 'Channel', '.', 'DEFAULT', ';', 'int', 'channelOptions', '=', 'Channel', '.', 'SEND_OPTIONS_DEFAULT', ';', 'if', '(', 'args', '.', 'length', '==', '0', ')', '{', 'args', '=', 'new', 'String', '[', ']', '{', '""-help""', '}', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '""-threads""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'threads', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', '}', 'else', 'if', '(', '""-count""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'count', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Sending ""', '+', 'count', '+', '"" messages.""', ')', ';', '}', 'else', 'if', '(', '""-pause""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'pause', '=', 'Long', '.', 'parseLong', '(', 'args', '[', '++', 'i', ']', ')', '*', '1000', ';', '}', 'else', 'if', '(', '""-break""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'breakOnEx', '=', 'true', ';', '}', 'else', 'if', '(', '""-shutdown""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'shutdown', '=', 'true', ';', '}', 'else', 'if', '(', '""-stats""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'stats', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Stats every ""', '+', 'stats', '+', '"" message""', ')', ';', '}', 'else', 'if', '(', '""-sendoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'channelOptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting send options to ""', '+', 'channelOptions', ')', ';', '}', 'else', 'if', '(', '""-startoptions""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'startoptions', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Setting start options to ""', '+', 'startoptions', ')', ';', '}', 'else', 'if', '(', '""-size""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'size', '=', 'Integer', '.', 'parseInt', '(', 'args', '[', '++', 'i', ']', ')', '-', '4', ';', 'System', '.', 'out', '.', 'println', '(', '""Message size will be:""', '+', '(', 'size', '+', '4', ')', '+', '"" bytes""', ')', ';', '}', 'else', 'if', '(', '""-mode""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'if', '(', '""receive""', '.', 'equals', '(', 'args', '[', '++', 'i', ']', ')', ')', 'send', '=', 'false', ';', '}', 'else', 'if', '(', '""-debug""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'debug', '=', 'true', ';', '}', 'else', 'if', '(', '""-help""', '.', 'equals', '(', 'args', '[', 'i', ']', ')', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', 'ManagedChannel', 'channel', '=', '(', 'ManagedChannel', ')', 'ChannelCreator', '.', 'createChannel', '(', 'args', ')', ';', 'LoadTest', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', 'LoadMessage', 'msg', '=', 'new', 'LoadMessage', '(', ')', ';', 'messageSize', '=', 'LoadMessage', '.', 'getMessageSize', '(', 'msg', ')', ';', 'channel', '.', 'addChannelListener', '(', 'test', ')', ';', 'channel', '.', 'addMembershipListener', '(', 'test', ')', ';', 'channel', '.', 'start', '(', 'startoptions', ')', ';', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'addShutdownHook', '(', 'new', 'Shutdown', '(', 'channel', ')', ')', ';', 'while', '(', 'threads', '>', '1', ')', '{', 'Thread', 't', '=', 'new', 'Thread', '(', 'test', ')', ';', 't', '.', 'setDaemon', '(', 'true', ')', ';', 't', '.', 'start', '(', ')', ';', 'threads', '--', ';', 'test', '=', 'new', 'LoadTest', '(', 'channel', ',', 'send', ',', 'count', ',', 'debug', ',', 'pause', ',', 'stats', ',', 'breakOnEx', ')', ';', 'test', '.', 'channelOptions', '=', 'channelOptions', ';', '}', 'test', '.', 'run', '(', ')', ';', 'if', '(', 'shutdown', '&&', 'send', ')', 'channel', '.', 'stop', '(', 'Channel', '.', 'DEFAULT', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""System test complete, sleeping to let threads finish.""', ')', ';', 'Thread', '.', 'sleep', '(', '60', '*', '1000', '*', '60', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",682,12,10,670,99.70238095238096
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_6.txt,0.7762,0.5234,"{'n_total': 10, 'n_valid': -1, 'n_correct': -1}",361.934994,"class T { public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(""JSSProxySessionRunnable: Unable to open input stream on "" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(""JSSProxySessionRunnable: "" + ""Unable to connect to "" + host + "":"" + port + "". "", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = ""CONNECT "" + desthost + "":"" + destport + "" HTTP/1.0
"" + ""User-Agent: "" + sun.net.www.protocol.http.HttpURLConnection.userAgent + ""

""; debug.message(msg); byte[] b; try { b = msg.getBytes(""ASCII7""); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(""JSSProxySessionRunnable: "" + ""Unexpected EOF from proxy""); closeSockets(); return; } if (i == '
') { headerDone = true; ++newlinesSeen; } else if (i != '') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to get OutputStream"", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, ""ASCII7""); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(""HTTP/1.0 200"")) { debug.error(""JSSProxySessionRunnable: Unable to tunnel through ""); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(""JSSProxySessionRunnable: "" + ""Unable to write prebuffer."", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); } }",class T { void run() { String host = st.nextToken(); } },2602,56,23,2546,98.72043427685148,"['class', 'T', '{', 'public', 'void', 'run', '(', ')', '{', 'Integer', 'remotePort', '=', 'new', 'Integer', '(', 'inconnection', '.', 'getPort', '(', ')', ')', ';', 'byte', '[', ']', 'prebuffer', '=', 'new', 'byte', '[', '1', ']', ';', 'DataInputStream', 'inFrom', ';', 'try', '{', 'inFrom', '=', 'new', 'DataInputStream', '(', 'inconnection', '.', 'getInputStream', '(', ')', ')', ';', 'inFrom', '.', 'readFully', '(', 'prebuffer', ',', '0', ',', '1', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to open input stream on ""', '+', 'inconnection', ',', 'e', ')', ';', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'info', '=', '(', 'String', ')', 'connectHashMap', '.', 'remove', '(', 'remotePort', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'info', ')', ';', 'String', 'host', '=', 'st', '.', 'nextToken', '(', ')', ';', 'int', 'port', ';', 'try', '{', 'port', '=', 'Integer', '.', 'parseInt', '(', 'st', '.', 'nextToken', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'port', '=', '8080', ';', '}', 'try', '{', 'toProxySocket', '=', 'new', 'Socket', '(', 'host', ',', 'port', ')', ';', 'toProxySocket', '.', 'setTcpNoDelay', '(', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'toProxySocket', '=', 'null', ';', 'if', '(', 'debug', '.', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to connect to ""', '+', 'host', '+', '"":""', '+', 'port', '+', '"". ""', ',', 'ex', ')', ';', '}', '}', 'if', '(', 'toProxySocket', '==', 'null', ')', '{', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'desthost', '=', 'st', '.', 'nextToken', '(', ')', ';', 'String', 'destport', '=', 'st', '.', 'nextToken', '(', ')', ';', 'OutputStream', 'out', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '200', ']', ';', 'int', 'replyLen', '=', '0', ';', 'int', 'newlinesSeen', '=', '0', ';', 'boolean', 'headerDone', '=', 'false', ';', 'try', '{', 'out', '=', 'toProxySocket', '.', 'getOutputStream', '(', ')', ';', 'String', 'msg', '=', '""CONNECT ""', '+', 'desthost', '+', '"":""', '+', 'destport', '+', '"" HTTP/1.0\n""', '+', '""User-Agent: ""', '+', 'sun', '.', 'net', '.', 'www', '.', 'protocol', '.', 'http', '.', 'HttpURLConnection', '.', 'userAgent', '+', '""\r\n\r\n""', ';', 'debug', '.', 'message', '(', 'msg', ')', ';', 'byte', '[', ']', 'b', ';', 'try', '{', 'b', '=', 'msg', '.', 'getBytes', '(', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'b', '=', 'msg', '.', 'getBytes', '(', ')', ';', '}', 'out', '.', 'write', '(', 'b', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'in', '=', 'toProxySocket', '.', 'getInputStream', '(', ')', ';', 'boolean', 'error', '=', 'false', ';', 'while', '(', 'newlinesSeen', '<', '2', ')', '{', 'int', 'i', '=', 'in', '.', 'read', '(', ')', ';', 'if', '(', 'i', '<', '0', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unexpected EOF from proxy""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'if', '(', 'i', '==', ""'\n'"", ')', '{', 'headerDone', '=', 'true', ';', '++', 'newlinesSeen', ';', '}', 'else', 'if', '(', 'i', '!=', ""'\r'"", ')', '{', 'newlinesSeen', '=', '0', ';', 'if', '(', '!', 'headerDone', '&&', 'replyLen', '<', 'reply', '.', 'length', ')', '{', 'reply', '[', 'replyLen', '++', ']', '=', '(', 'byte', ')', 'i', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to get OutputStream""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'String', 'replyStr', ';', 'try', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ',', '""ASCII7""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ignored', ')', '{', 'replyStr', '=', 'new', 'String', '(', 'reply', ',', '0', ',', 'replyLen', ')', ';', '}', 'if', '(', '!', 'replyStr', '.', 'startsWith', '(', '""HTTP/1.0 200""', ')', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: Unable to tunnel through ""', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'try', '{', 'out', '.', 'write', '(', 'prebuffer', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'debug', '.', 'error', '(', '""JSSProxySessionRunnable: ""', '+', '""Unable to write prebuffer.""', ',', 'ioe', ')', ';', 'closeSockets', '(', ')', ';', 'return', ';', '}', 'new', 'RWGroupJSSProxy', '(', 'inconnection', ',', 'toProxySocket', ')', ';', '}', '}']","['class', 'T', '{', 'void', 'run', '(', ')', '{', 'String', 'host', '=', 'st', '.', 'nextToken', '(', ')', ';', '}', '}']",619,19,10,600,98.52216748768473
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_3.txt,0.9964,0.0043,"{'n_total': 7, 'n_valid': -1, 'n_correct': -1}",138.213411,"class T { public static void main(String[] args) throws Exception { SimpleJSAP jsap = new SimpleJSAP(Word2VecCompress.class.getName(), ""Creates a compressed representation of quantized word2vec vectors"", new Parameter[] { new UnflaggedOption(""input"", JSAP.STRING_PARSER, true, ""Input file""), new UnflaggedOption(""output"", JSAP.STRING_PARSER, false, ""Compressed version""), new Switch(""check"", JSAP.NO_SHORTFLAG, ""check"", ""Check correctness of output"") }); JSAPResult jsapResult = jsap.parse(args); if (jsap.messagePrinted()) return; String input_filename = jsapResult.getString(""input""); String output_filename = jsapResult.getString(""output"", null); int numWords, vectorSize; float quantizationFactor; List<String> indexToWord; int[] entries; long[] columnAbsSum; ProgressLogger pl = new ProgressLogger(logger); try (final BufferedReader lines = new BufferedReader(new FileReader(input_filename))) { String[] header = lines.readLine().split(""	""); numWords = Integer.parseInt(header[0]); vectorSize = Integer.parseInt(header[1]); quantizationFactor = Float.parseFloat(header[2]); pl.expectedUpdates = numWords; pl.start(""Reading the dictionary""); indexToWord = new ArrayList<>(); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); indexToWord.add(lines.readLine().trim()); } pl.done(); entries = new int[numWords * vectorSize]; columnAbsSum = new long[vectorSize]; pl.expectedUpdates = numWords; pl.start(""Reading the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); String[] lineEntries = lines.readLine().split("" ""); for (int col = 0; col < vectorSize; ++col) { int entry = Integer.parseInt(lineEntries[col]); entries[i * vectorSize + col] = entry; columnAbsSum[col] += Fast.int2nat(entry) + 1; } } pl.done(); } int[] golombModuli = new int[vectorSize]; for (int col = 0; col < vectorSize; ++col) { int m = 0; if (columnAbsSum[col] > numWords) { double f = ((double) numWords) / columnAbsSum[col]; m = (int) Math.ceil(Math.log(2.0 - f) / -Math.log(1.0 - f)); } golombModuli[col] = m; } ShiftAddXorSignedStringMap dictionaryHash = new ShiftAddXorSignedStringMap(indexToWord.iterator(), new MinimalPerfectHashFunction.Builder<CharSequence>().keys(indexToWord).transform(TransformationStrategies.utf16()).build()); int[] permutation = new int[numWords]; for (int i = 0; i < numWords; ++i) { int newPos = dictionaryHash.get(indexToWord.get(i)).intValue(); permutation[newPos] = i; } FastByteArrayOutputStream oa = new FastByteArrayOutputStream(); OutputBitStream obs = new OutputBitStream(oa, 0); final LongArrayList endpoints = new LongArrayList(); pl.expectedUpdates = numWords; pl.start(""Compressing the vectors""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); endpoints.add(obs.writtenBits()); int rowStart = permutation[i] * vectorSize; for (int col = 0; col < vectorSize; ++col) { int entry = entries[rowStart + col]; obs.writeGolomb(Fast.int2nat(entry), golombModuli[col]); } } pl.done(); obs.close(); while (oa.length() % 4 != 0) { oa.write(0); } oa.trim(); double bps = 8.0 * oa.array.length / entries.length; logger.info(""Overall vector bit streams: {} bytes, {} bps"", oa.array.length, bps); System.out.println(bps); EliasFanoMonotoneLongBigList efEndpoints = new EliasFanoMonotoneLongBigList(endpoints); Word2VecCompress word2vec = new Word2VecCompress(numWords, vectorSize, quantizationFactor, oa.array, efEndpoints, dictionaryHash, golombModuli); if (output_filename != null) { BinIO.storeObject(word2vec, output_filename); } if (jsapResult.getBoolean(""check"")) { pl.expectedUpdates = numWords; pl.start(""Checking the output""); for (int i = 0; i < numWords; ++i) { pl.lightUpdate(); int[] vec = word2vec.getInt(indexToWord.get(i)); for (int col = 0; col < vectorSize; ++col) { int expected = entries[i * vectorSize + col]; int got = vec[col]; if (expected != got) { logger.error(""Row {}, Column {}: Expected {}, got {}"", i, col, expected, got); System.exit(1); } } } pl.done(); } } }",class T { void main(String args) { } },3923,38,24,3885,99.64093357271096,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'SimpleJSAP', 'jsap', '=', 'new', 'SimpleJSAP', '(', 'Word2VecCompress', '.', 'class', '.', 'getName', '(', ')', ',', '""Creates a compressed representation of quantized word2vec vectors""', ',', 'new', 'Parameter', '[', ']', '{', 'new', 'UnflaggedOption', '(', '""input""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'true', ',', '""Input file""', ')', ',', 'new', 'UnflaggedOption', '(', '""output""', ',', 'JSAP', '.', 'STRING_PARSER', ',', 'false', ',', '""Compressed version""', ')', ',', 'new', 'Switch', '(', '""check""', ',', 'JSAP', '.', 'NO_SHORTFLAG', ',', '""check""', ',', '""Check correctness of output""', ')', '}', ')', ';', 'JSAPResult', 'jsapResult', '=', 'jsap', '.', 'parse', '(', 'args', ')', ';', 'if', '(', 'jsap', '.', 'messagePrinted', '(', ')', ')', 'return', ';', 'String', 'input_filename', '=', 'jsapResult', '.', 'getString', '(', '""input""', ')', ';', 'String', 'output_filename', '=', 'jsapResult', '.', 'getString', '(', '""output""', ',', 'null', ')', ';', 'int', 'numWords', ',', 'vectorSize', ';', 'float', 'quantizationFactor', ';', 'List', '<', 'String', '>', 'indexToWord', ';', 'int', '[', ']', 'entries', ';', 'long', '[', ']', 'columnAbsSum', ';', 'ProgressLogger', 'pl', '=', 'new', 'ProgressLogger', '(', 'logger', ')', ';', 'try', '(', 'final', 'BufferedReader', 'lines', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'input_filename', ')', ')', ')', '{', 'String', '[', ']', 'header', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '""\t""', ')', ';', 'numWords', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '0', ']', ')', ';', 'vectorSize', '=', 'Integer', '.', 'parseInt', '(', 'header', '[', '1', ']', ')', ';', 'quantizationFactor', '=', 'Float', '.', 'parseFloat', '(', 'header', '[', '2', ']', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the dictionary""', ')', ';', 'indexToWord', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'indexToWord', '.', 'add', '(', 'lines', '.', 'readLine', '(', ')', '.', 'trim', '(', ')', ')', ';', '}', 'pl', '.', 'done', '(', ')', ';', 'entries', '=', 'new', 'int', '[', 'numWords', '*', 'vectorSize', ']', ';', 'columnAbsSum', '=', 'new', 'long', '[', 'vectorSize', ']', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Reading the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'String', '[', ']', 'lineEntries', '=', 'lines', '.', 'readLine', '(', ')', '.', 'split', '(', '"" ""', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'Integer', '.', 'parseInt', '(', 'lineEntries', '[', 'col', ']', ')', ';', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', '=', 'entry', ';', 'columnAbsSum', '[', 'col', ']', '+=', 'Fast', '.', 'int2nat', '(', 'entry', ')', '+', '1', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', 'int', '[', ']', 'golombModuli', '=', 'new', 'int', '[', 'vectorSize', ']', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'm', '=', '0', ';', 'if', '(', 'columnAbsSum', '[', 'col', ']', '>', 'numWords', ')', '{', 'double', 'f', '=', '(', '(', 'double', ')', 'numWords', ')', '/', 'columnAbsSum', '[', 'col', ']', ';', 'm', '=', '(', 'int', ')', 'Math', '.', 'ceil', '(', 'Math', '.', 'log', '(', '2.0', '-', 'f', ')', '/', '-', 'Math', '.', 'log', '(', '1.0', '-', 'f', ')', ')', ';', '}', 'golombModuli', '[', 'col', ']', '=', 'm', ';', '}', 'ShiftAddXorSignedStringMap', 'dictionaryHash', '=', 'new', 'ShiftAddXorSignedStringMap', '(', 'indexToWord', '.', 'iterator', '(', ')', ',', 'new', 'MinimalPerfectHashFunction', '.', 'Builder', '<', 'CharSequence', '>', '(', ')', '.', 'keys', '(', 'indexToWord', ')', '.', 'transform', '(', 'TransformationStrategies', '.', 'utf16', '(', ')', ')', '.', 'build', '(', ')', ')', ';', 'int', '[', ']', 'permutation', '=', 'new', 'int', '[', 'numWords', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'int', 'newPos', '=', 'dictionaryHash', '.', 'get', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', '.', 'intValue', '(', ')', ';', 'permutation', '[', 'newPos', ']', '=', 'i', ';', '}', 'FastByteArrayOutputStream', 'oa', '=', 'new', 'FastByteArrayOutputStream', '(', ')', ';', 'OutputBitStream', 'obs', '=', 'new', 'OutputBitStream', '(', 'oa', ',', '0', ')', ';', 'final', 'LongArrayList', 'endpoints', '=', 'new', 'LongArrayList', '(', ')', ';', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Compressing the vectors""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'endpoints', '.', 'add', '(', 'obs', '.', 'writtenBits', '(', ')', ')', ';', 'int', 'rowStart', '=', 'permutation', '[', 'i', ']', '*', 'vectorSize', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'entry', '=', 'entries', '[', 'rowStart', '+', 'col', ']', ';', 'obs', '.', 'writeGolomb', '(', 'Fast', '.', 'int2nat', '(', 'entry', ')', ',', 'golombModuli', '[', 'col', ']', ')', ';', '}', '}', 'pl', '.', 'done', '(', ')', ';', 'obs', '.', 'close', '(', ')', ';', 'while', '(', 'oa', '.', 'length', '(', ')', '%', '4', '!=', '0', ')', '{', 'oa', '.', 'write', '(', '0', ')', ';', '}', 'oa', '.', 'trim', '(', ')', ';', 'double', 'bps', '=', '8.0', '*', 'oa', '.', 'array', '.', 'length', '/', 'entries', '.', 'length', ';', 'logger', '.', 'info', '(', '""Overall vector bit streams: {} bytes, {} bps""', ',', 'oa', '.', 'array', '.', 'length', ',', 'bps', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'bps', ')', ';', 'EliasFanoMonotoneLongBigList', 'efEndpoints', '=', 'new', 'EliasFanoMonotoneLongBigList', '(', 'endpoints', ')', ';', 'Word2VecCompress', 'word2vec', '=', 'new', 'Word2VecCompress', '(', 'numWords', ',', 'vectorSize', ',', 'quantizationFactor', ',', 'oa', '.', 'array', ',', 'efEndpoints', ',', 'dictionaryHash', ',', 'golombModuli', ')', ';', 'if', '(', 'output_filename', '!=', 'null', ')', '{', 'BinIO', '.', 'storeObject', '(', 'word2vec', ',', 'output_filename', ')', ';', '}', 'if', '(', 'jsapResult', '.', 'getBoolean', '(', '""check""', ')', ')', '{', 'pl', '.', 'expectedUpdates', '=', 'numWords', ';', 'pl', '.', 'start', '(', '""Checking the output""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numWords', ';', '++', 'i', ')', '{', 'pl', '.', 'lightUpdate', '(', ')', ';', 'int', '[', ']', 'vec', '=', 'word2vec', '.', 'getInt', '(', 'indexToWord', '.', 'get', '(', 'i', ')', ')', ';', 'for', '(', 'int', 'col', '=', '0', ';', 'col', '<', 'vectorSize', ';', '++', 'col', ')', '{', 'int', 'expected', '=', 'entries', '[', 'i', '*', 'vectorSize', '+', 'col', ']', ';', 'int', 'got', '=', 'vec', '[', 'col', ']', ';', 'if', '(', 'expected', '!=', 'got', ')', '{', 'logger', '.', 'error', '(', '""Row {}, Column {}: Expected {}, got {}""', ',', 'i', ',', 'col', ',', 'expected', ',', 'got', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}', 'pl', '.', 'done', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",999,12,10,987,99.79777553083925
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_2.txt,0.96,0.0621,"{'n_total': 5, 'n_valid': -1, 'n_correct': -1}",130.301998,"class T { @SuppressWarnings(""null"") public static void main(String[] args) { if (catalinaHome == null) { log.error(""Must set '"" + Globals.CATALINA_HOME_PROP + ""' system property""); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (""-ant"".equals(args[index])) ant = true; else if (""-common"".equals(args[index])) common = true; else if (""-server"".equals(args[index])) server = true; else if (""-shared"".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(""ant.home"", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, ""classes"")); packed.add(new File(catalinaHome, ""lib"")); if (common) { unpacked.add(new File(catalinaHome, ""common"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""common"" + File.separator + ""lib"")); } if (server) { unpacked.add(new File(catalinaHome, ""server"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""server"" + File.separator + ""lib"")); } if (shared) { unpacked.add(new File(catalinaHome, ""shared"" + File.separator + ""classes"")); packed.add(new File(catalinaHome, ""shared"" + File.separator + ""lib"")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Class loader creation threw exception"", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(""Loading application class "" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception creating instance of "" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(""Identifying main() method""); String methodName = ""main""; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(""Exception locating main() method"", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(""Calling main() method""); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(""Exception calling main() method"", t); System.exit(1); } } }",class T { void main(String args) { } },2797,38,24,2759,99.4951316263974,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""null""', ')', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'catalinaHome', '==', 'null', ')', '{', 'log', '.', 'error', '(', '""Must set \'""', '+', 'Globals', '.', 'CATALINA_HOME_PROP', '+', '""\' system property""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'int', 'index', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'index', '==', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', '""-ant""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'ant', '=', 'true', ';', 'else', 'if', '(', '""-common""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'common', '=', 'true', ';', 'else', 'if', '(', '""-server""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'server', '=', 'true', ';', 'else', 'if', '(', '""-shared""', '.', 'equals', '(', 'args', '[', 'index', ']', ')', ')', 'shared', '=', 'true', ';', 'else', 'break', ';', 'index', '++', ';', '}', 'if', '(', 'index', '>', 'args', '.', 'length', ')', '{', 'usage', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'if', '(', 'ant', ')', 'System', '.', 'setProperty', '(', '""ant.home""', ',', 'catalinaHome', ')', ';', 'ClassLoader', 'classLoader', '=', 'null', ';', 'try', '{', 'ArrayList', '<', 'File', '>', 'packed', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'unpacked', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""lib""', ')', ')', ';', 'if', '(', 'common', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""common""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'server', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""server""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'if', '(', 'shared', ')', '{', 'unpacked', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""classes""', ')', ')', ';', 'packed', '.', 'add', '(', 'new', 'File', '(', 'catalinaHome', ',', '""shared""', '+', 'File', '.', 'separator', '+', '""lib""', ')', ')', ';', '}', 'classLoader', '=', 'ClassLoaderFactory', '.', 'createClassLoader', '(', 'unpacked', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'packed', '.', 'toArray', '(', 'new', 'File', '[', '0', ']', ')', ',', 'null', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Class loader creation threw exception""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Thread', '.', 'currentThread', '(', ')', '.', 'setContextClassLoader', '(', 'classLoader', ')', ';', 'Class', '<', '?', '>', 'clazz', '=', 'null', ';', 'String', 'className', '=', 'args', '[', 'index', '++', ']', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Loading application class ""', '+', 'className', ')', ';', 'clazz', '=', 'classLoader', '.', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception creating instance of ""', '+', 'className', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Method', 'method', '=', 'null', ';', 'String', '[', ']', 'params', '=', 'new', 'String', '[', 'args', '.', 'length', '-', 'index', ']', ';', 'System', '.', 'arraycopy', '(', 'args', ',', 'index', ',', 'params', ',', '0', ',', 'params', '.', 'length', ')', ';', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Identifying main() method""', ')', ';', 'String', 'methodName', '=', '""main""', ';', 'Class', '<', '?', '>', '[', ']', 'paramTypes', '=', 'new', 'Class', '[', '1', ']', ';', 'paramTypes', '[', '0', ']', '=', 'params', '.', 'getClass', '(', ')', ';', 'method', '=', 'clazz', '.', 'getMethod', '(', 'methodName', ',', 'paramTypes', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception locating main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Calling main() method""', ')', ';', 'Object', '[', ']', 'paramValues', '=', 'new', 'Object', '[', '1', ']', ';', 'paramValues', '[', '0', ']', '=', 'params', ';', 'method', '.', 'invoke', '(', 'null', ',', 'paramValues', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '=', 'ExceptionUtils', '.', 'unwrapInvocationTargetException', '(', 't', ')', ';', 'ExceptionUtils', '.', 'handleThrowable', '(', 't', ')', ';', 'log', '.', 'error', '(', '""Exception calling main() method""', ',', 't', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",740,12,10,728,99.72602739726028
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,execute_3.txt,0.7371,0.6557,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",85.710514,"class T { public void execute(JobExecutionContext arg0) throws JobExecutionException { Session sakaiSession = sessionManager.getCurrentSession(); sakaiSession.setUserId(""admin""); sakaiSession.setUserEid(""admin""); Calendar cal = new GregorianCalendar(); String maxDaysLocalStr = serverConfigurationService.getString(""accountValidator.maxDays"", null); if (maxDaysLocalStr == null) { log.warn(""accountValidator.maxDays was found. The new property is accountValidator.maxReminderDays""); } maxDaysLocalStr = serverConfigurationService.getString(""accountValidator.maxReminderDays"", maxDaysLocalStr); if (maxDaysLocalStr == null) { maxDaysLocalStr = """" + maxDays; } try { maxDays = Integer.parseInt(maxDaysLocalStr); } catch (Exception e) { } cal.add(Calendar.DAY_OF_MONTH, (maxDays * -1)); Date maxAge = cal.getTime(); int maxAttempts = 10; String maxAttemptsStr = serverConfigurationService.getString(""accountValidator.maxResendAttempts"", """" + maxAttempts); try { maxAttempts = Integer.parseInt(maxAttemptsStr); } catch (Exception e) { } StringBuilder usedAccounts = new StringBuilder(); List<String> oldAccounts = new ArrayList<String>(); List<ValidationAccount> list = validationLogic.getValidationAccountsByStatus(ValidationAccount.STATUS_SENT); List<ValidationAccount> list2 = validationLogic.getValidationAccountsByStatus(ValidationAccount.STATUS_RESENT); if (list2 != null) { list.addAll(list2); } int loggedInAccounts = 0; int notLogedIn = 0; for (int i = 0; i < list.size(); i++) { ValidationAccount account = list.get(i); log.debug(""account "" + account.getUserId() + "" created on "" + account.getValidationSent()); String userSiteId = siteService.getUserSiteId(account.getUserId()); if (siteService.siteExists(userSiteId)) { log.info(""looks like this user logged in!""); loggedInAccounts++; if (account.getValidationsSent().intValue() < maxAttempts && serverConfigurationService.getBoolean(""accountValidator.resendValidations"", true)) { validationLogic.resendValidation(account.getValidationToken()); } else if (account.getValidationSent().before(maxAge) || account.getValidationsSent().intValue() >= maxAttempts) { account.setStatus(ValidationAccount.STATUS_EXPIRED); cal = new GregorianCalendar(); account.setvalidationReceived(cal.getTime()); validationLogic.save(account); } else if (validationLogic.isTokenExpired(account)) { } else { } usedAccounts.append(account.getUserId() + ""
""); } else { log.debug(""realm: "" + ""/site/~"" + account.getUserId() + "" does not seem to exist""); notLogedIn++; if (account.getValidationSent().before(maxAge)) { oldAccounts.add(account.getUserId()); } } } log.info(""users have logged in: "" + loggedInAccounts + "" not logged in: "" + notLogedIn); log.info(""we would delete: "" + oldAccounts.size() + "" accounts""); if (log.isDebugEnabled()) { log.debug(""users:"" + usedAccounts.toString()); } Map<String, List<String>> addedMap = buildAddedMap(oldAccounts); Set<Entry<String, List<String>>> entrySet = addedMap.entrySet(); Iterator<Entry<String, List<String>>> it = entrySet.iterator(); while (it.hasNext()) { Entry<String, List<String>> entry = it.next(); String creatorId = entry.getKey(); try { User creator = userDirectoryService.getUser(creatorId); Locale locale = getUserLocale(creatorId); List<String> users = entry.getValue(); StringBuilder userText = new StringBuilder(); for (int i = 0; i < users.size(); i++) { try { User u = userDirectoryService.getUser(users.get(i)); DateTime dt = new DateTime(u.getCreatedDate()); DateTimeFormatter fmt = DateTimeFormat.longDate(); String str = fmt.withLocale(locale).print(dt); userText.append(u.getEid() + "" ("" + str + "")
""); removeCleaUpUser(u.getId()); } catch (UserNotDefinedException e) { ValidationAccount va = validationLogic.getVaLidationAcountByUserId(users.get(i)); validationLogic.deleteValidationAccount(va); } } List<String> userReferences = new ArrayList<String>(); userReferences.add(creator.getReference()); Map<String, String> replacementValues = new HashMap<String, String>(); replacementValues.put(""userList"", userText.toString()); replacementValues.put(""creatorName"", creator.getDisplayName()); replacementValues.put(""deleteDays"", Integer.valueOf(maxDays).toString()); replacementValues.put(""institution"", serverConfigurationService.getString(""ui.institution"")); String fromEmail = serverConfigurationService.getString(""accountValidator.checkValidations.fromEmailAddress"", serverConfigurationService.getString(""mail.support"")); String fromName = serverConfigurationService.getString(""accountValidator.checkValidations.fromEmailName"", serverConfigurationService.getString(""mail.support"")); emailTemplateService.sendRenderedMessages(""validate.deleted"", userReferences, replacementValues, fromEmail, fromName); } catch (UserNotDefinedException e) { log.error(e.getMessage(), e); } } } }",class T { void execute(JobExecutionContext arg0) { } },4784,54,27,4730,99.43241538784947,"['class', 'T', '{', 'public', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', 'throws', 'JobExecutionException', '{', 'Session', 'sakaiSession', '=', 'sessionManager', '.', 'getCurrentSession', '(', ')', ';', 'sakaiSession', '.', 'setUserId', '(', '""admin""', ')', ';', 'sakaiSession', '.', 'setUserEid', '(', '""admin""', ')', ';', 'Calendar', 'cal', '=', 'new', 'GregorianCalendar', '(', ')', ';', 'String', 'maxDaysLocalStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxDays""', ',', 'null', ')', ';', 'if', '(', 'maxDaysLocalStr', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""accountValidator.maxDays was found. The new property is accountValidator.maxReminderDays""', ')', ';', '}', 'maxDaysLocalStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxReminderDays""', ',', 'maxDaysLocalStr', ')', ';', 'if', '(', 'maxDaysLocalStr', '==', 'null', ')', '{', 'maxDaysLocalStr', '=', '""""', '+', 'maxDays', ';', '}', 'try', '{', 'maxDays', '=', 'Integer', '.', 'parseInt', '(', 'maxDaysLocalStr', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'cal', '.', 'add', '(', 'Calendar', '.', 'DAY_OF_MONTH', ',', '(', 'maxDays', '*', '-', '1', ')', ')', ';', 'Date', 'maxAge', '=', 'cal', '.', 'getTime', '(', ')', ';', 'int', 'maxAttempts', '=', '10', ';', 'String', 'maxAttemptsStr', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.maxResendAttempts""', ',', '""""', '+', 'maxAttempts', ')', ';', 'try', '{', 'maxAttempts', '=', 'Integer', '.', 'parseInt', '(', 'maxAttemptsStr', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'StringBuilder', 'usedAccounts', '=', 'new', 'StringBuilder', '(', ')', ';', 'List', '<', 'String', '>', 'oldAccounts', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'List', '<', 'ValidationAccount', '>', 'list', '=', 'validationLogic', '.', 'getValidationAccountsByStatus', '(', 'ValidationAccount', '.', 'STATUS_SENT', ')', ';', 'List', '<', 'ValidationAccount', '>', 'list2', '=', 'validationLogic', '.', 'getValidationAccountsByStatus', '(', 'ValidationAccount', '.', 'STATUS_RESENT', ')', ';', 'if', '(', 'list2', '!=', 'null', ')', '{', 'list', '.', 'addAll', '(', 'list2', ')', ';', '}', 'int', 'loggedInAccounts', '=', '0', ';', 'int', 'notLogedIn', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'list', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'ValidationAccount', 'account', '=', 'list', '.', 'get', '(', 'i', ')', ';', 'log', '.', 'debug', '(', '""account ""', '+', 'account', '.', 'getUserId', '(', ')', '+', '"" created on ""', '+', 'account', '.', 'getValidationSent', '(', ')', ')', ';', 'String', 'userSiteId', '=', 'siteService', '.', 'getUserSiteId', '(', 'account', '.', 'getUserId', '(', ')', ')', ';', 'if', '(', 'siteService', '.', 'siteExists', '(', 'userSiteId', ')', ')', '{', 'log', '.', 'info', '(', '""looks like this user logged in!""', ')', ';', 'loggedInAccounts', '++', ';', 'if', '(', 'account', '.', 'getValidationsSent', '(', ')', '.', 'intValue', '(', ')', '<', 'maxAttempts', '&&', 'serverConfigurationService', '.', 'getBoolean', '(', '""accountValidator.resendValidations""', ',', 'true', ')', ')', '{', 'validationLogic', '.', 'resendValidation', '(', 'account', '.', 'getValidationToken', '(', ')', ')', ';', '}', 'else', 'if', '(', 'account', '.', 'getValidationSent', '(', ')', '.', 'before', '(', 'maxAge', ')', '||', 'account', '.', 'getValidationsSent', '(', ')', '.', 'intValue', '(', ')', '>=', 'maxAttempts', ')', '{', 'account', '.', 'setStatus', '(', 'ValidationAccount', '.', 'STATUS_EXPIRED', ')', ';', 'cal', '=', 'new', 'GregorianCalendar', '(', ')', ';', 'account', '.', 'setvalidationReceived', '(', 'cal', '.', 'getTime', '(', ')', ')', ';', 'validationLogic', '.', 'save', '(', 'account', ')', ';', '}', 'else', 'if', '(', 'validationLogic', '.', 'isTokenExpired', '(', 'account', ')', ')', '{', '}', 'else', '{', '}', 'usedAccounts', '.', 'append', '(', 'account', '.', 'getUserId', '(', ')', '+', '""\n""', ')', ';', '}', 'else', '{', 'log', '.', 'debug', '(', '""realm: ""', '+', '""/site/~""', '+', 'account', '.', 'getUserId', '(', ')', '+', '"" does not seem to exist""', ')', ';', 'notLogedIn', '++', ';', 'if', '(', 'account', '.', 'getValidationSent', '(', ')', '.', 'before', '(', 'maxAge', ')', ')', '{', 'oldAccounts', '.', 'add', '(', 'account', '.', 'getUserId', '(', ')', ')', ';', '}', '}', '}', 'log', '.', 'info', '(', '""users have logged in: ""', '+', 'loggedInAccounts', '+', '"" not logged in: ""', '+', 'notLogedIn', ')', ';', 'log', '.', 'info', '(', '""we would delete: ""', '+', 'oldAccounts', '.', 'size', '(', ')', '+', '"" accounts""', ')', ';', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""users:""', '+', 'usedAccounts', '.', 'toString', '(', ')', ')', ';', '}', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'addedMap', '=', 'buildAddedMap', '(', 'oldAccounts', ')', ';', 'Set', '<', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', '>', 'entrySet', '=', 'addedMap', '.', 'entrySet', '(', ')', ';', 'Iterator', '<', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', '>', 'it', '=', 'entrySet', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'entry', '=', 'it', '.', 'next', '(', ')', ';', 'String', 'creatorId', '=', 'entry', '.', 'getKey', '(', ')', ';', 'try', '{', 'User', 'creator', '=', 'userDirectoryService', '.', 'getUser', '(', 'creatorId', ')', ';', 'Locale', 'locale', '=', 'getUserLocale', '(', 'creatorId', ')', ';', 'List', '<', 'String', '>', 'users', '=', 'entry', '.', 'getValue', '(', ')', ';', 'StringBuilder', 'userText', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'users', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'try', '{', 'User', 'u', '=', 'userDirectoryService', '.', 'getUser', '(', 'users', '.', 'get', '(', 'i', ')', ')', ';', 'DateTime', 'dt', '=', 'new', 'DateTime', '(', 'u', '.', 'getCreatedDate', '(', ')', ')', ';', 'DateTimeFormatter', 'fmt', '=', 'DateTimeFormat', '.', 'longDate', '(', ')', ';', 'String', 'str', '=', 'fmt', '.', 'withLocale', '(', 'locale', ')', '.', 'print', '(', 'dt', ')', ';', 'userText', '.', 'append', '(', 'u', '.', 'getEid', '(', ')', '+', '"" (""', '+', 'str', '+', '"")\n""', ')', ';', 'removeCleaUpUser', '(', 'u', '.', 'getId', '(', ')', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', 'ValidationAccount', 'va', '=', 'validationLogic', '.', 'getVaLidationAcountByUserId', '(', 'users', '.', 'get', '(', 'i', ')', ')', ';', 'validationLogic', '.', 'deleteValidationAccount', '(', 'va', ')', ';', '}', '}', 'List', '<', 'String', '>', 'userReferences', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'userReferences', '.', 'add', '(', 'creator', '.', 'getReference', '(', ')', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'replacementValues', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'replacementValues', '.', 'put', '(', '""userList""', ',', 'userText', '.', 'toString', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""creatorName""', ',', 'creator', '.', 'getDisplayName', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""deleteDays""', ',', 'Integer', '.', 'valueOf', '(', 'maxDays', ')', '.', 'toString', '(', ')', ')', ';', 'replacementValues', '.', 'put', '(', '""institution""', ',', 'serverConfigurationService', '.', 'getString', '(', '""ui.institution""', ')', ')', ';', 'String', 'fromEmail', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.checkValidations.fromEmailAddress""', ',', 'serverConfigurationService', '.', 'getString', '(', '""mail.support""', ')', ')', ';', 'String', 'fromName', '=', 'serverConfigurationService', '.', 'getString', '(', '""accountValidator.checkValidations.fromEmailName""', ',', 'serverConfigurationService', '.', 'getString', '(', '""mail.support""', ')', ')', ';', 'emailTemplateService', '.', 'sendRenderedMessages', '(', '""validate.deleted""', ',', 'userReferences', ',', 'replacementValues', ',', 'fromEmail', ',', 'fromName', ')', ';', '}', 'catch', '(', 'UserNotDefinedException', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}', '}', '}']","['class', 'T', '{', 'void', 'execute', '(', 'JobExecutionContext', 'arg0', ')', '{', '}', '}']",1002,12,10,990,99.7983870967742
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_7.txt,0.7289,0.5175,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",73.225023,"class T { @Override public void run() { running = true; notifyCallback(JournalClientEvents.EVT_RUNNING); int event = JournalClientEvents.EVT_NONE; boolean connected = false; try { while (true) { if (!connected) { int retryCount = config.getReconnectPolicy().getRetryCount(); int loginRetryCount = config.getReconnectPolicy().getLoginRetryCount(); do { try { closeChannel(); try { openChannel(); counter.incrementAndGet(); } catch (JournalNetworkException e) { if (retryCount-- > 0) { continue; } else { break; } } sendProtocolVersion(); checkAuthAndSendCredential(); resubscribe(); sendReady(); connected = true; notifyCallback(JournalClientEvents.EVT_CONNECTED); } catch (UnauthorizedException e) { notifyCallback(JournalClientEvents.EVT_AUTH_ERROR); loginRetryCount--; } catch (AuthenticationConfigException | AuthenticationProviderException e) { closeChannel(); close0(); notifyCallback(JournalClientEvents.EVT_AUTH_CONFIG_ERROR); return; } catch (JournalNetworkException e) { LOG.info().$(e.getMessage()).$(); closeChannel(); } if (!connected && retryCount-- > 0 && loginRetryCount > 0) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(config.getReconnectPolicy().getSleepBetweenRetriesMillis())); LOG.info().$(""Retrying reconnect ... ["").$(retryCount + 1).$(']').$(); } else { break; } } while (true); if (!connected && (retryCount == 0 || loginRetryCount == 0)) { event = JournalClientEvents.EVT_SERVER_ERROR; } } try { if (connected && channel.isOpen() && isRunning()) { commandConsumer.read(channel); byte cmd = commandConsumer.getCommand(); switch(cmd) { case Command.JOURNAL_DELTA_CMD: statsChannel.setDelegate(channel); int index = intResponseConsumer.getValue(statsChannel); deltaConsumers.getQuick(index).read(statsChannel); statusSentList.set(index, 0); statsChannel.logStats(); break; case Command.SERVER_READY_CMD: sendState(); sendReady(); break; case Command.SERVER_HEARTBEAT: if (processSubscriptionQueue()) { sendReady(); } else { event = JournalClientEvents.EVT_CLIENT_HALT; } break; case Command.SERVER_SHUTDOWN: connected = false; break; default: LOG.info().$(""Unknown command: "").$(cmd).$(); break; } } else if (event == JournalClientEvents.EVT_NONE) { event = JournalClientEvents.EVT_CLIENT_HALT; } } catch (IncompatibleJournalException e) { LOG.error().$(e.getMessage()).$(); event = JournalClientEvents.EVT_INCOMPATIBLE_JOURNAL; } catch (JournalNetworkException e) { LOG.error().$(""Network error. Server died?"").$(); LOG.debug().$(""Network error details: "").$(e).$(); notifyCallback(JournalClientEvents.EVT_SERVER_DIED); connected = false; } catch (Throwable e) { LOG.error().$(""Unhandled exception in client"").$(e).$(); event = JournalClientEvents.EVT_CLIENT_EXCEPTION; } if (event != JournalClientEvents.EVT_NONE) { if (channel != null && channel.isOpen()) { sendDisconnect(); } closeChannel(); close0(); notifyCallback(event); break; } } } catch (Throwable e) { LOG.error().$(""Fatal exception when closing client"").$(e).$(); closeChannel(); close0(); } finally { running = false; notifyCallback(JournalClientEvents.EVT_TERMINATED); haltLatch.countDown(); LOG.info().$(""Terminated"").$(); } } }",class T { @Override void run() { } },3127,36,23,3091,99.58118556701032,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'running', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_RUNNING', ')', ';', 'int', 'event', '=', 'JournalClientEvents', '.', 'EVT_NONE', ';', 'boolean', 'connected', '=', 'false', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'if', '(', '!', 'connected', ')', '{', 'int', 'retryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getRetryCount', '(', ')', ';', 'int', 'loginRetryCount', '=', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getLoginRetryCount', '(', ')', ';', 'do', '{', 'try', '{', 'closeChannel', '(', ')', ';', 'try', '{', 'openChannel', '(', ')', ';', 'counter', '.', 'incrementAndGet', '(', ')', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'if', '(', 'retryCount', '--', '>', '0', ')', '{', 'continue', ';', '}', 'else', '{', 'break', ';', '}', '}', 'sendProtocolVersion', '(', ')', ';', 'checkAuthAndSendCredential', '(', ')', ';', 'resubscribe', '(', ')', ';', 'sendReady', '(', ')', ';', 'connected', '=', 'true', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_CONNECTED', ')', ';', '}', 'catch', '(', 'UnauthorizedException', 'e', ')', '{', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_ERROR', ')', ';', 'loginRetryCount', '--', ';', '}', 'catch', '(', 'AuthenticationConfigException', '|', 'AuthenticationProviderException', 'e', ')', '{', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_AUTH_CONFIG_ERROR', ')', ';', 'return', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'info', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', '}', 'if', '(', '!', 'connected', '&&', 'retryCount', '--', '>', '0', '&&', 'loginRetryCount', '>', '0', ')', '{', 'LockSupport', '.', 'parkNanos', '(', 'TimeUnit', '.', 'MILLISECONDS', '.', 'toNanos', '(', 'config', '.', 'getReconnectPolicy', '(', ')', '.', 'getSleepBetweenRetriesMillis', '(', ')', ')', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Retrying reconnect ... [""', ')', '.', '$', '(', 'retryCount', '+', '1', ')', '.', '$', '(', ""']'"", ')', '.', '$', '(', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'while', '(', 'true', ')', ';', 'if', '(', '!', 'connected', '&&', '(', 'retryCount', '==', '0', '||', 'loginRetryCount', '==', '0', ')', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_SERVER_ERROR', ';', '}', '}', 'try', '{', 'if', '(', 'connected', '&&', 'channel', '.', 'isOpen', '(', ')', '&&', 'isRunning', '(', ')', ')', '{', 'commandConsumer', '.', 'read', '(', 'channel', ')', ';', 'byte', 'cmd', '=', 'commandConsumer', '.', 'getCommand', '(', ')', ';', 'switch', '(', 'cmd', ')', '{', 'case', 'Command', '.', 'JOURNAL_DELTA_CMD', ':', 'statsChannel', '.', 'setDelegate', '(', 'channel', ')', ';', 'int', 'index', '=', 'intResponseConsumer', '.', 'getValue', '(', 'statsChannel', ')', ';', 'deltaConsumers', '.', 'getQuick', '(', 'index', ')', '.', 'read', '(', 'statsChannel', ')', ';', 'statusSentList', '.', 'set', '(', 'index', ',', '0', ')', ';', 'statsChannel', '.', 'logStats', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_READY_CMD', ':', 'sendState', '(', ')', ';', 'sendReady', '(', ')', ';', 'break', ';', 'case', 'Command', '.', 'SERVER_HEARTBEAT', ':', 'if', '(', 'processSubscriptionQueue', '(', ')', ')', '{', 'sendReady', '(', ')', ';', '}', 'else', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', 'break', ';', 'case', 'Command', '.', 'SERVER_SHUTDOWN', ':', 'connected', '=', 'false', ';', 'break', ';', 'default', ':', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Unknown command: ""', ')', '.', '$', '(', 'cmd', ')', '.', '$', '(', ')', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'event', '==', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_HALT', ';', '}', '}', 'catch', '(', 'IncompatibleJournalException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', 'e', '.', 'getMessage', '(', ')', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_INCOMPATIBLE_JOURNAL', ';', '}', 'catch', '(', 'JournalNetworkException', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Network error. Server died?""', ')', '.', '$', '(', ')', ';', 'LOG', '.', 'debug', '(', ')', '.', '$', '(', '""Network error details: ""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_SERVER_DIED', ')', ';', 'connected', '=', 'false', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Unhandled exception in client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'event', '=', 'JournalClientEvents', '.', 'EVT_CLIENT_EXCEPTION', ';', '}', 'if', '(', 'event', '!=', 'JournalClientEvents', '.', 'EVT_NONE', ')', '{', 'if', '(', 'channel', '!=', 'null', '&&', 'channel', '.', 'isOpen', '(', ')', ')', '{', 'sendDisconnect', '(', ')', ';', '}', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', 'notifyCallback', '(', 'event', ')', ';', 'break', ';', '}', '}', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'LOG', '.', 'error', '(', ')', '.', '$', '(', '""Fatal exception when closing client""', ')', '.', '$', '(', 'e', ')', '.', '$', '(', ')', ';', 'closeChannel', '(', ')', ';', 'close0', '(', ')', ';', '}', 'finally', '{', 'running', '=', 'false', ';', 'notifyCallback', '(', 'JournalClientEvents', '.', 'EVT_TERMINATED', ')', ';', 'haltLatch', '.', 'countDown', '(', ')', ';', 'LOG', '.', 'info', '(', ')', '.', '$', '(', '""Terminated""', ')', '.', '$', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",740,12,10,728,99.72602739726028
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,run_8.txt,0.9809,0.0335,"{'n_total': 3, 'n_valid': -1, 'n_correct': -1}",73.382079,"class T { @Override public void run() { logger.trace(""host proxy port "" + this.localport + "" for "" + host + "" started""); stop = false; try { try { if (ss.isClosed()) { ss = new ServerSocket(localport); } } catch (BindException b) { try { Thread.sleep(100); } catch (InterruptedException i) { } if (ss.isClosed()) { ss = new ServerSocket(localport); } } final byte[] request = new byte[1024]; byte[] reply = new byte[4096]; while (!stop) { try { client = ss.accept(); final InputStream fromClient = client.getInputStream(); final OutputStream toClient = client.getOutputStream(); try { server = new Socket(host, remoteport); } catch (IOException e) { PrintWriter out = new PrintWriter(new OutputStreamWriter(toClient)); out.println(""Proxy server cannot connect to "" + host + "":"" + remoteport + "":
"" + e); out.flush(); client.close(); continue; } final InputStream fromServer = server.getInputStream(); final OutputStream toServer = server.getOutputStream(); new Thread(() -> { int bytesRead; try { while ((bytesRead = fromClient.read(request)) != -1) { if (delay > 0) { try { Thread.sleep(delay); } catch (InterruptedException e) { e.printStackTrace(); } } toServer.write(request, 0, bytesRead); toServer.flush(); } } catch (IOException e) { } try { toServer.close(); } catch (IOException e) { } }).start(); int bytesRead; try { while ((bytesRead = fromServer.read(reply)) != -1) { try { Thread.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } toClient.write(reply, 0, bytesRead); toClient.flush(); } } catch (IOException e) { } toClient.close(); } catch (IOException e) { } finally { try { if (server != null) { server.close(); } if (client != null) { client.close(); } } catch (IOException e) { } } } } catch (IOException e) { e.printStackTrace(); } } }",class T { @Override void run() { } },1773,36,23,1737,99.25714285714284,"['class', 'T', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'logger', '.', 'trace', '(', '""host proxy port ""', '+', 'this', '.', 'localport', '+', '"" for ""', '+', 'host', '+', '"" started""', ')', ';', 'stop', '=', 'false', ';', 'try', '{', 'try', '{', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'catch', '(', 'BindException', 'b', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '100', ')', ';', '}', 'catch', '(', 'InterruptedException', 'i', ')', '{', '}', 'if', '(', 'ss', '.', 'isClosed', '(', ')', ')', '{', 'ss', '=', 'new', 'ServerSocket', '(', 'localport', ')', ';', '}', '}', 'final', 'byte', '[', ']', 'request', '=', 'new', 'byte', '[', '1024', ']', ';', 'byte', '[', ']', 'reply', '=', 'new', 'byte', '[', '4096', ']', ';', 'while', '(', '!', 'stop', ')', '{', 'try', '{', 'client', '=', 'ss', '.', 'accept', '(', ')', ';', 'final', 'InputStream', 'fromClient', '=', 'client', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toClient', '=', 'client', '.', 'getOutputStream', '(', ')', ';', 'try', '{', 'server', '=', 'new', 'Socket', '(', 'host', ',', 'remoteport', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'PrintWriter', 'out', '=', 'new', 'PrintWriter', '(', 'new', 'OutputStreamWriter', '(', 'toClient', ')', ')', ';', 'out', '.', 'println', '(', '""Proxy server cannot connect to ""', '+', 'host', '+', '"":""', '+', 'remoteport', '+', '"":\n""', '+', 'e', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'client', '.', 'close', '(', ')', ';', 'continue', ';', '}', 'final', 'InputStream', 'fromServer', '=', 'server', '.', 'getInputStream', '(', ')', ';', 'final', 'OutputStream', 'toServer', '=', 'server', '.', 'getOutputStream', '(', ')', ';', 'new', 'Thread', '(', '(', ')', '->', '{', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromClient', '.', 'read', '(', 'request', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'delay', '>', '0', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'delay', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'toServer', '.', 'write', '(', 'request', ',', '0', ',', 'bytesRead', ')', ';', 'toServer', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'try', '{', 'toServer', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', ')', '.', 'start', '(', ')', ';', 'int', 'bytesRead', ';', 'try', '{', 'while', '(', '(', 'bytesRead', '=', 'fromServer', '.', 'read', '(', 'reply', ')', ')', '!=', '-', '1', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', '1', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'toClient', '.', 'write', '(', 'reply', ',', '0', ',', 'bytesRead', ')', ';', 'toClient', '.', 'flush', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'toClient', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'finally', '{', 'try', '{', 'if', '(', 'server', '!=', 'null', ')', '{', 'server', '.', 'close', '(', ')', ';', '}', 'if', '(', 'client', '!=', 'null', ')', '{', 'client', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']","['class', 'T', '{', '@', 'Override', 'void', 'run', '(', ')', '{', '}', '}']",492,12,10,480,99.5850622406639
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,hashCode_1.txt,0.9925,0.0087,"{'n_total': 12, 'n_valid': -1, 'n_correct': -1}",382.914709,"class T { @SuppressWarnings(""SimplifiableIfStatement"") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; } }",class T { @Override int hashCode() { int result ; } },4859,53,28,4806,99.48250879735043,"['class', 'T', '{', '@', 'SuppressWarnings', '(', '""SimplifiableIfStatement""', ')', '@', 'Override', 'public', 'int', 'hashCode', '(', ')', '{', 'int', 'result', '=', 'user', '!=', 'null', '?', 'user', '.', 'hashCode', '(', ')', ':', '0', ';', 'result', '=', '31', '*', 'result', '+', '(', 'password', '!=', 'null', '?', 'password', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustServerCertificate', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverSslCert', '!=', 'null', '?', 'serverSslCert', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStore', '!=', 'null', '?', 'trustStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'trustStorePassword', '!=', 'null', '?', 'trustStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStore', '!=', 'null', '?', 'keyStore', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyStorePassword', '!=', 'null', '?', 'keyStorePassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'keyPassword', '!=', 'null', '?', 'keyPassword', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslProtocolSuites', '!=', 'null', '?', 'enabledSslProtocolSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useFractionalSeconds', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pinGlobalTxToPhysicalConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketFactory', '!=', 'null', '?', 'socketFactory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'connectTimeout', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pipe', '!=', 'null', '?', 'pipe', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocket', '!=', 'null', '?', 'localSocket', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sharedMemory', '!=', 'null', '?', 'sharedMemory', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpNoDelay', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpKeepAlive', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpRcvBuf', '!=', 'null', '?', 'tcpRcvBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpSndBuf', '!=', 'null', '?', 'tcpSndBuf', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tcpAbortiveClose', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'localSocketAddress', '!=', 'null', '?', 'localSocketAddress', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'socketTimeout', '!=', 'null', '?', 'socketTimeout', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMultiQueries', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'rewriteBatchedStatements', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useCompression', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'interactiveClient', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'passwordCharacterEncoding', '!=', 'null', '?', 'passwordCharacterEncoding', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useSsl', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enabledSslCipherSuites', '!=', 'null', '?', 'enabledSslCipherSuites', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'sessionVariables', '!=', 'null', '?', 'sessionVariables', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'tinyInt1isBit', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'yearIsDateType', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'createDatabaseIfNotExist', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'serverTimezone', '!=', 'null', '?', 'serverTimezone', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'nullCatalogMeansCurrent', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'dumpQueriesOnException', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useOldAliasMetadataBehavior', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowLocalInfile', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cachePrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', 'prepStmtCacheSqlLimit', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useLegacyDatetimeCode', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'maximizeMysqlCompatibility', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useServerPrepStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'continueBatchOnError', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'jdbcCompliantTruncation', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'cacheCallableStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'callableStmtCacheSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'connectionAttributes', '!=', 'null', '?', 'connectionAttributes', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBatchMultiSend', '!=', 'null', '?', 'useBatchMultiSend', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'useBatchMultiSendNumber', ';', 'result', '=', '31', '*', 'result', '+', '(', 'usePipelineAuth', '!=', 'null', '?', 'usePipelineAuth', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'enablePacketDebug', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useBulkStmts', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'disableSslHostnameVerification', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'log', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'profileSql', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxQuerySizeToLog', ';', 'result', '=', '31', '*', 'result', '+', '(', 'slowQueryThresholdNanos', '!=', 'null', '?', 'slowQueryThresholdNanos', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'assureReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autoReconnect', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'failOnReadOnly', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'allowMasterDownConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'retriesAllDown', ';', 'result', '=', '31', '*', 'result', '+', 'validConnectionTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'loadBalanceBlacklistTimeout', ';', 'result', '=', '31', '*', 'result', '+', 'failoverLoopRetries', ';', 'result', '=', '31', '*', 'result', '+', '(', 'pool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'registerJmxPool', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'useResetConnection', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'staticGlobal', '?', '1', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', '(', 'poolName', '!=', 'null', '?', 'poolName', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxPoolSize', ';', 'result', '=', '31', '*', 'result', '+', '(', 'minPoolSize', '!=', 'null', '?', 'minPoolSize', '.', 'hashCode', '(', ')', ':', '0', ')', ';', 'result', '=', '31', '*', 'result', '+', 'maxIdleTime', ';', 'result', '=', '31', '*', 'result', '+', 'poolValidMinDelay', ';', 'result', '=', '31', '*', 'result', '+', '(', 'autocommit', '?', '1', ':', '0', ')', ';', 'return', 'result', ';', '}', '}']","['class', 'T', '{', '@', 'Override', 'int', 'hashCode', '(', ')', '{', 'int', 'result', ';', '}', '}']",1206,15,10,1191,99.5819397993311
code2seq,METHOD_NAME,perses_fixpoint,large,perses_fixpoint_large_methods,main_8.txt,0.9577,0.0701,"{'n_total': 4, 'n_valid': -1, 'n_correct': -1}",81.476956,"class T { public static void main(String[] args) { boolean status = false; Scanner scanner = new Scanner(System.in); System.out.print(""Enter your email address and press enter : ""); String email = scanner.next(); if (!QSGUtils.isValidEmailAddress(email)) { do { System.out.print(""Please enter a valid email address and press enter : ""); email = scanner.next(); } while (!QSGUtils.isValidEmailAddress(email)); } String token = QSGUtils.getOAuthToken(); if (token == null) { System.out.println(""Unable to get the OAuth token. Please check the config.properties file.""); System.exit(0); } HTTPInvoker.oAuthToken = token; status = UserOperations.createUser(""tom"", ""tom@mobx.com"", true); if (!status) { System.out.println(""Unable to create the admin user. Please check the config.properties file.""); System.exit(0); } status = UserOperations.changePassword(""tom"", ""tomemm""); if (!status) { System.out.println(""Unable to change the password of the admin user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createUser(""kim"", email, false); if (!status) { System.out.println(""Unable to create the emm user Kim. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.changePassword(""kim"", ""kimemm""); if (!status) { System.out.println(""Unable to change the password of the emm user. Terminating the EMM QSG now.""); System.exit(0); } status = UserOperations.createRole(Constants.EMM_USER_ROLE, new String[] { ""kim"" }); if (!status) { System.out.println(""Unable to create the emm user role. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""android-passcode-policy1"", Constants.DeviceType.ANDROID); if (!status) { System.out.println(""Unable to create the android passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""windows-passcode-policy1"", Constants.DeviceType.WINDOWS); if (!status) { System.out.println(""Unable to create the windows passcode policy. Terminating the EMM QSG now.""); System.exit(0); } status = PolicyOperations.createPasscodePolicy(""ios-passcode-policy1"", Constants.DeviceType.IOS); if (!status) { System.out.println(""Unable to create the ios passcode policy. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication application = AppOperations.uploadApplication(Constants.DeviceType.ANDROID, ""catalog.apk"", ""application/vnd.android.package-archive""); if (application == null) { System.out.println(""Unable to upload the sample android application. Terminating the EMM QSG now.""); System.exit(0); } application = AppOperations.uploadAssets(Constants.DeviceType.ANDROID, application); if (application == null) { System.out.println(""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""Catalog"", application, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } MobileApplication iOSApplication = AppOperations.uploadApplication(Constants.DeviceType.IOS, ""PNDemo.ipa"", ""application/octet-stream""); iOSApplication.setVersion(""1.0.0""); iOSApplication = AppOperations.uploadAssets(Constants.DeviceType.IOS, iOSApplication); if (iOSApplication == null) { System.out.println(""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""); System.exit(0); } status = AppOperations.addApplication(""WSO2Con"", iOSApplication, true); if (!status) { System.out.println(""Unable to create the mobile application. Terminating the EMM QSG now.""); System.exit(0); } } }",class T { void main(String args) { } },3627,38,24,3589,99.61143491534833,"['class', 'T', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'boolean', 'status', '=', 'false', ';', 'Scanner', 'scanner', '=', 'new', 'Scanner', '(', 'System', '.', 'in', ')', ';', 'System', '.', 'out', '.', 'print', '(', '""Enter your email address and press enter : ""', ')', ';', 'String', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', 'if', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', '{', 'do', '{', 'System', '.', 'out', '.', 'print', '(', '""Please enter a valid email address and press enter : ""', ')', ';', 'email', '=', 'scanner', '.', 'next', '(', ')', ';', '}', 'while', '(', '!', 'QSGUtils', '.', 'isValidEmailAddress', '(', 'email', ')', ')', ';', '}', 'String', 'token', '=', 'QSGUtils', '.', 'getOAuthToken', '(', ')', ';', 'if', '(', 'token', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to get the OAuth token. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'HTTPInvoker', '.', 'oAuthToken', '=', 'token', ';', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""tom""', ',', '""tom@mobx.com""', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the admin user. Please check the config.properties file.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""tom""', ',', '""tomemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the admin user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createUser', '(', '""kim""', ',', 'email', ',', 'false', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user Kim. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'changePassword', '(', '""kim""', ',', '""kimemm""', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to change the password of the emm user. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'UserOperations', '.', 'createRole', '(', 'Constants', '.', 'EMM_USER_ROLE', ',', 'new', 'String', '[', ']', '{', '""kim""', '}', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the emm user role. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""android-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the android passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""windows-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'WINDOWS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the windows passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'PolicyOperations', '.', 'createPasscodePolicy', '(', '""ios-passcode-policy1""', ',', 'Constants', '.', 'DeviceType', '.', 'IOS', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the ios passcode policy. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'application', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', '""catalog.apk""', ',', '""application/vnd.android.package-archive""', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'application', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'ANDROID', ',', 'application', ')', ';', 'if', '(', 'application', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample android application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""Catalog""', ',', 'application', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'MobileApplication', 'iOSApplication', '=', 'AppOperations', '.', 'uploadApplication', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', '""PNDemo.ipa""', ',', '""application/octet-stream""', ')', ';', 'iOSApplication', '.', 'setVersion', '(', '""1.0.0""', ')', ';', 'iOSApplication', '=', 'AppOperations', '.', 'uploadAssets', '(', 'Constants', '.', 'DeviceType', '.', 'IOS', ',', 'iOSApplication', ')', ';', 'if', '(', 'iOSApplication', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to upload the assets for sample iOS application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'status', '=', 'AppOperations', '.', 'addApplication', '(', '""WSO2Con""', ',', 'iOSApplication', ',', 'true', ')', ';', 'if', '(', '!', 'status', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""Unable to create the mobile application. Terminating the EMM QSG now.""', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', '}']","['class', 'T', '{', 'void', 'main', '(', 'String', 'args', ')', '{', '}', '}']",645,12,10,633,99.68503937007874
