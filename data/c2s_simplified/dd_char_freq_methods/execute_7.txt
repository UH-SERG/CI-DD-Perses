
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/ant/JKStatusUpdateTask_execute.java
method_name = execute
method_body = @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }
predict, score, loss = execute, 0.9935383, 0.009382841

Trace of simplified code(s):
{"time": "2020-12-28 00:16:12.712745", "n_pass": [1, 1, 1], "score": "0.9935", "loss": "0.0094", "code": "@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }"}
{"time": "2020-12-28 00:16:14.418971", "n_pass": [20, 2, 2], "score": "0.9631", "loss": "0.0535", "code": "d execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }"}
{"time": "2020-12-28 00:16:17.147337", "n_pass": [24, 4, 3], "score": "0.9901", "loss": "0.0196", "code": "d execute() throws BuildException { super.execute(); checkParer sb = createLink(); execute(sb.toString(), null, null, -1); }"}
{"time": "2020-12-28 00:16:19.885751", "n_pass": [43, 6, 4], "score": "0.9972", "loss": "0.006", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(); execute(sb.toString(), null, null, -1); }"}
{"time": "2020-12-28 00:16:21.194205", "n_pass": [45, 7, 5], "score": "0.9932", "loss": "0.0109", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(sb.toString(), null, null, -1); }"}
{"time": "2020-12-28 00:16:22.508440", "n_pass": [47, 8, 6], "score": "0.9788", "loss": "0.0338", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(sb.toStringull, -1); }"}
{"time": "2020-12-28 00:16:23.837139", "n_pass": [51, 9, 7], "score": "0.947", "loss": "0.0772", "code": "d execute() throws Bion { super.execute(); checkPareateLink(sb.toStringull, -1); }"}
{"time": "2020-12-28 00:16:25.165773", "n_pass": [56, 10, 8], "score": "0.9276", "loss": "0.0981", "code": "d execute() throws Bion { super.execute(); checkPareateLink(ull, -1); }"}
{"time": "2020-12-28 00:16:26.471398", "n_pass": [78, 11, 9], "score": "0.8369", "loss": "0.2479", "code": "d execute() throws Bion { super.execute(); checkPareateLink(-1); }"}
{"time": "2020-12-28 00:16:30.775715", "n_pass": [88, 14, 10], "score": "0.7364", "loss": "0.4781", "code": "d execute() throws Bion { super.execute(); chreateLink(-1); }"}
{"time": "2020-12-28 00:16:32.083977", "n_pass": [89, 15, 11], "score": "0.8186", "loss": "0.338", "code": "d execute() throws Bion { super.execute(); chLink(-1); }"}
{"time": "2020-12-28 00:16:33.777258", "n_pass": [97, 16, 12], "score": "0.1981", "loss": "2.4331", "code": "d execute() throws Bion {r.execute(); chLink(-1); }"}
{"time": "2020-12-28 00:16:47.553919", "n_pass": [189, 24, 13], "score": "0.3262", "loss": "1.8295", "code": "d execute() throws Bin {r.execute(); chLink(-1); }"}
{"time": "2020-12-28 00:16:50.211598", "n_pass": [191, 26, 14], "score": "0.3262", "loss": "1.8295", "code": "d execute() throws Bin{r.execute(); chLink(-1); }"}
{"time": "2020-12-28 00:16:59.498010", "n_pass": [202, 33, 15], "score": "0.2418", "loss": "2.1722", "code": "d execute() throws Bin{r.execute(); cink(-1); }"}
{"time": "2020-12-28 00:17:00.802264", "n_pass": [203, 34, 16], "score": "0.464", "loss": "1.3058", "code": "d execute() throws Bin{r.execute(); ck(-1); }"}
{"time": "2020-12-28 00:17:02.113149", "n_pass": [205, 35, 17], "score": "0.7945", "loss": "0.3856", "code": "d execute() throws Bin{r.execute(); ck(); }"}
{"time": "2020-12-28 00:17:06.735440", "n_pass": [219, 36, 18], "score": "0.7945", "loss": "0.3856", "code": "d execute()throws Bin{r.execute(); ck(); }"}
{"time": "2020-12-28 00:17:08.121336", "n_pass": [227, 37, 19], "score": "0.7287", "loss": "0.4114", "code": "d execute()throws in{r.execute(); ck(); }"}
{"time": "2020-12-28 00:17:09.425349", "n_pass": [228, 38, 20], "score": "0.7084", "loss": "0.4752", "code": "d execute()throws n{r.execute(); ck(); }"}
{"time": "2020-12-28 00:17:17.416593", "n_pass": [239, 44, 21], "score": "0.5274", "loss": "0.7766", "code": "d execute()throws n{r.execute();k(); }"}
{"time": "2020-12-28 00:17:29.778071", "n_pass": [287, 50, 22], "score": "0.5274", "loss": "0.7766", "code": "d execute()throws n{r.execute();k();}"}

Minimal simplified code:
d execute()throws n{r.execute();k();}

