
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javamelody__javamelody/javamelody-core/src/test/java/net/bull/javamelody/TestJpa_assertCounter.java
method_name = assertCounter
method_body = private static void assertCounter(String method) { final Counter counter = JpaWrapper.getJpaCounter(); assertEquals("getRequestsCount", 1, counter.getRequestsCount()); assertEquals("requestName", method, counter.getRequests().get(0).getName()); counter.clear(); }
predict, score, loss = assertCounter, 0.25701198, 3.9570107

Trace of simplified code(s):
{"time": "2021-01-23 13:17:06.565111", "n_pass": [1, 1, 1], "score": "0.257", "loss": "3.957", "code": "private static void assertCounter(String method) { final Counter counter = JpaWrapper.getJpaCounter(); assertEquals(\"getRequestsCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\", method, counter.getRequests().get(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:09.982707", "n_pass": [49, 3, 2], "score": "0.2611", "loss": "4.5711", "code": "private static void assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getRequestsCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\", method, counter.getRequests().get(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:14.016584", "n_pass": [56, 6, 3], "score": "0.2544", "loss": "4.7055", "code": "private static void assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getRequestsCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\",getRequests().get(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:15.365898", "n_pass": [57, 7, 4], "score": "0.2489", "loss": "4.5036", "code": "private static void assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getRequestsCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:16.694506", "n_pass": [60, 8, 5], "score": "0.2334", "loss": "4.3702", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getRequestsCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:24.545639", "n_pass": [108, 13, 6], "score": "0.2593", "loss": "3.8836", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", 1, counter.getRequestsCount()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:25.870434", "n_pass": [110, 14, 7], "score": "0.2431", "loss": "4.6635", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", er.getRequestsCount()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:27.205381", "n_pass": [111, 15, 8], "score": "0.2763", "loss": "4.9042", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", questsCount()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:28.545682", "n_pass": [112, 16, 9], "score": "0.2316", "loss": "4.7256", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEquals(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:39.935530", "n_pass": [177, 24, 10], "score": "0.2288", "loss": "4.6581", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEq(\"requestName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:41.259778", "n_pass": [178, 25, 11], "score": "0.2265", "loss": "3.7678", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); counter.clear(); }"}
{"time": "2021-01-23 13:17:45.249639", "n_pass": [185, 28, 12], "score": "0.4101", "loss": "4.2", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); couclear(); }"}
{"time": "2021-01-23 13:17:46.570115", "n_pass": [186, 29, 13], "score": "0.4673", "loss": "3.6533", "code": "oid assertCounter(String method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:17:49.375243", "n_pass": [193, 30, 14], "score": "0.2701", "loss": "5.1193", "code": "oid assertCounter(St method) { final Counter counter = JpaWrter(); assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:18:23.069181", "n_pass": [319, 54, 15], "score": "0.2701", "loss": "5.1193", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr(); assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:19.836808", "n_pass": [530, 91, 16], "score": "0.2701", "loss": "5.1193", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEquals(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:34.585970", "n_pass": [541, 102, 17], "score": "0.2858", "loss": "4.9203", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"getCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:35.911783", "n_pass": [544, 103, 18], "score": "0.3292", "loss": "5.2943", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"etCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:38.575825", "n_pass": [546, 105, 19], "score": "0.2999", "loss": "5.1633", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"eCount\", unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:46.529626", "n_pass": [554, 111, 20], "score": "0.2999", "loss": "5.1633", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"eCount\",unt()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:49.201290", "n_pass": [556, 113, 21], "score": "0.3415", "loss": "5.2589", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"eCount\",ut()); assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:19:51.847133", "n_pass": [562, 115, 22], "score": "0.3415", "loss": "5.2589", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName()); cou(); }"}
{"time": "2021-01-23 13:20:22.377886", "n_pass": [597, 138, 23], "score": "0.3415", "loss": "5.2589", "code": "oid assertCounter(St method) { final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:35.530312", "n_pass": [621, 144, 24], "score": "0.5761", "loss": "4.3402", "code": "oid assertCounter(t method) { final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:40.876012", "n_pass": [627, 148, 25], "score": "0.537", "loss": "4.4107", "code": "oid assertCounter(t metod) { final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:44.859535", "n_pass": [631, 151, 26], "score": "0.537", "loss": "4.4107", "code": "oid assertCounter(t metod){ final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:46.204787", "n_pass": [633, 152, 27], "score": "0.537", "loss": "4.4107", "code": "oid assertCounter(t metod){final Counter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:47.538958", "n_pass": [639, 153, 28], "score": "0.4796", "loss": "3.5576", "code": "oid assertCounter(t metod){finalCounter counter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:20:59.509421", "n_pass": [648, 162, 29], "score": "0.4171", "loss": "4.5083", "code": "oid assertCounter(t metod){finalCounter ounter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:00.859718", "n_pass": [649, 163, 30], "score": "0.418", "loss": "4.3285", "code": "oid assertCounter(t metod){finalCounter unter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:02.178676", "n_pass": [650, 164, 31], "score": "0.4171", "loss": "4.5083", "code": "oid assertCounter(t metod){finalCounter nter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:03.507730", "n_pass": [651, 165, 32], "score": "0.4339", "loss": "4.5065", "code": "oid assertCounter(t metod){finalCounter ter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:04.849225", "n_pass": [652, 166, 33], "score": "0.3897", "loss": "4.6232", "code": "oid assertCounter(t metod){finalCounter er = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:06.178608", "n_pass": [653, 167, 34], "score": "0.4092", "loss": "4.6759", "code": "oid assertCounter(t metod){finalCounter r = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:07.497164", "n_pass": [654, 168, 35], "score": "0.3498", "loss": "4.1455", "code": "oid assertCounter(t metod){finalCounter  = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:08.815986", "n_pass": [655, 169, 36], "score": "0.3498", "loss": "4.1455", "code": "oid assertCounter(t metod){finalCounter = JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:10.135345", "n_pass": [657, 170, 37], "score": "0.3498", "loss": "4.1455", "code": "oid assertCounter(t metod){finalCounter =JpaWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:11.483316", "n_pass": [658, 171, 38], "score": "0.3372", "loss": "3.9424", "code": "oid assertCounter(t metod){finalCounter =paWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:12.800984", "n_pass": [659, 172, 39], "score": "0.4084", "loss": "4.1832", "code": "oid assertCounter(t metod){finalCounter =aWrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:14.118754", "n_pass": [660, 173, 40], "score": "0.3698", "loss": "4.0082", "code": "oid assertCounter(t metod){finalCounter =Wrr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:15.459521", "n_pass": [661, 174, 41], "score": "0.3821", "loss": "3.9746", "code": "oid assertCounter(t metod){finalCounter =rr();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:16.798836", "n_pass": [662, 175, 42], "score": "0.4098", "loss": "4.0485", "code": "oid assertCounter(t metod){finalCounter =r();assertEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:22.120305", "n_pass": [670, 179, 43], "score": "0.4057", "loss": "4.1368", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",ut());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:40.598955", "n_pass": [688, 193, 44], "score": "0.3798", "loss": "4.1305", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"retName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:53.819203", "n_pass": [705, 203, 45], "score": "0.391", "loss": "4.0433", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtName\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:21:59.102041", "n_pass": [709, 207, 46], "score": "0.3427", "loss": "4.2515", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNae\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:22:00.467737", "n_pass": [710, 208, 47], "score": "0.3791", "loss": "4.1671", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getName());cou(); }"}
{"time": "2021-01-23 13:22:08.400306", "n_pass": [722, 214, 48], "score": "0.3451", "loss": "4.5514", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cou(); }"}
{"time": "2021-01-23 13:22:12.389622", "n_pass": [729, 217, 49], "score": "0.3228", "loss": "4.8592", "code": "oid assertCounter(t metod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:22.953407", "n_pass": [753, 221, 50], "score": "0.3094", "loss": "4.5931", "code": "oid assertCounter(t etod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:24.279763", "n_pass": [754, 222, 51], "score": "0.479", "loss": "4.2013", "code": "oid assertCounter(t tod){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:25.601016", "n_pass": [755, 223, 52], "score": "0.3282", "loss": "4.5264", "code": "oid assertCounter(t od){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:26.926432", "n_pass": [756, 224, 53], "score": "0.3346", "loss": "4.5277", "code": "oid assertCounter(t d){finalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:29.591932", "n_pass": [761, 226, 54], "score": "0.3938", "loss": "4.143", "code": "oid assertCounter(t d){fnalCounter =r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:44.197372", "n_pass": [772, 237, 55], "score": "0.3938", "loss": "4.143", "code": "oid assertCounter(t d){fnalCounter=r();assrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:46.808170", "n_pass": [778, 239, 56], "score": "0.3449", "loss": "4.4016", "code": "oid assertCounter(t d){fnalCounter=r();ssrtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:48.146213", "n_pass": [779, 240, 57], "score": "0.393", "loss": "4.6923", "code": "oid assertCounter(t d){fnalCounter=r();srtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:49.492816", "n_pass": [780, 241, 58], "score": "0.4076", "loss": "3.9638", "code": "oid assertCounter(t d){fnalCounter=r();rtEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:50.810476", "n_pass": [781, 242, 59], "score": "0.3822", "loss": "4.2515", "code": "oid assertCounter(t d){fnalCounter=r();tEqual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:52.136540", "n_pass": [782, 243, 60], "score": "0.4121", "loss": "4.1139", "code": "oid assertCounter(t d){fnalCounter=r();Equal(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:53.451170", "n_pass": [783, 244, 61], "score": "0.3795", "loss": "4.7949", "code": "oid assertCounter(t d){fnalCounter=r();qual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:54.795031", "n_pass": [784, 245, 62], "score": "0.3592", "loss": "4.468", "code": "oid assertCounter(t d){fnalCounter=r();ual(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:56.102274", "n_pass": [785, 246, 63], "score": "0.4174", "loss": "3.7052", "code": "oid assertCounter(t d){fnalCounter=r();al(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:57.423373", "n_pass": [786, 247, 64], "score": "0.3653", "loss": "4.0834", "code": "oid assertCounter(t d){fnalCounter=r();l(\"eCount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:22:58.735954", "n_pass": [790, 248, 65], "score": "0.3442", "loss": "3.8436", "code": "oid assertCounter(t d){fnalCounter=r();l(\"Count\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:00.047403", "n_pass": [791, 249, 66], "score": "0.2818", "loss": "5.1858", "code": "oid assertCounter(t d){fnalCounter=r();l(\"ount\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:01.366332", "n_pass": [792, 250, 67], "score": "0.2802", "loss": "4.6908", "code": "oid assertCounter(t d){fnalCounter=r();l(\"unt\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:02.686589", "n_pass": [793, 251, 68], "score": "0.3235", "loss": "4.9315", "code": "oid assertCounter(t d){fnalCounter=r();l(\"nt\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:04.024690", "n_pass": [794, 252, 69], "score": "0.3384", "loss": "5.0457", "code": "oid assertCounter(t d){fnalCounter=r();l(\"t\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:05.347907", "n_pass": [795, 253, 70], "score": "0.3602", "loss": "4.9813", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertEq(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:15.935747", "n_pass": [810, 261, 71], "score": "0.3499", "loss": "5.1539", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).getNae());cu(); }"}
{"time": "2021-01-23 13:23:26.526512", "n_pass": [826, 269, 72], "score": "0.2935", "loss": "5.2461", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).getae());cu(); }"}
{"time": "2021-01-23 13:23:27.844671", "n_pass": [827, 270, 73], "score": "0.4194", "loss": "4.8028", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).gete());cu(); }"}
{"time": "2021-01-23 13:23:29.183488", "n_pass": [828, 271, 74], "score": "0.3797", "loss": "4.7932", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).get());cu(); }"}
{"time": "2021-01-23 13:23:30.506239", "n_pass": [833, 272, 75], "score": "0.3875", "loss": "4.9786", "code": "oid assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).get());u(); }"}
{"time": "2021-01-23 13:23:31.831575", "n_pass": [837, 273, 76], "score": "0.346", "loss": "5.2905", "code": "id assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).get());u(); }"}
{"time": "2021-01-23 13:23:33.178107", "n_pass": [838, 274, 77], "score": "0.3306", "loss": "5.5719", "code": "d assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).get());u(); }"}
{"time": "2021-01-23 13:24:13.744662", "n_pass": [925, 300, 78], "score": "0.3306", "loss": "5.5719", "code": "d assertCounter(t d){fnalCounter=r();l(\"\",t());assertE(\"rtNa\",(0).get());u();}"}

Minimal simplified code:
d assertCounter(t d){fnalCounter=r();l("",t());assertE("rtNa",(0).get());u();}

