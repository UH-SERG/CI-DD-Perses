
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Glitchfiend__BiomesOPlenty/src/main/java/biomesoplenty/common/block/BlockBOPFarmland_hasWater.java
method_name = hasWater
method_body = private boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }
predict, score, loss = hasWater, 0.3770268, 1.4133283

Trace of simplified code(s):
{"time": "2021-01-23 09:46:38.268959", "n_pass": [1, 1, 1], "score": "0.3327", "loss": "1.615", "code": "private boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:44.067565", "n_pass": [92, 5, 2], "score": "0.3743", "loss": "1.4787", "code": "boolean hasWater(World world, BlockPos pos) { for (BlockPos.MutableBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:45.802545", "n_pass": [100, 6, 3], "score": "0.3743", "loss": "1.4612", "code": "boolean hasWater(World world, BlockPos pos) { for (BlockbleBlockPos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:47.141165", "n_pass": [101, 7, 4], "score": "0.3808", "loss": "1.4349", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllInBoxMutable(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:51.176860", "n_pass": [106, 10, 5], "score": "0.3899", "loss": "1.3723", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (world.getBlockState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:52.521024", "n_pass": [113, 11, 6], "score": "0.3862", "loss": "1.4298", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutableblockpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:53.848596", "n_pass": [115, 12, 7], "score": "0.3436", "loss": "1.6226", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMaterial() == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:55.187225", "n_pass": [117, 13, 8], "score": "0.3228", "loss": "1.6835", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getM == Material.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:46:56.538931", "n_pass": [118, 14, 9], "score": "0.2687", "loss": "1.9944", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { return true; } } return false; }"}
{"time": "2021-01-23 09:47:03.605236", "n_pass": [195, 19, 10], "score": "0.1899", "loss": "2.6246", "code": "boolean hasWater(World world, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:08.736748", "n_pass": [207, 22, 11], "score": "0.2114", "loss": "2.5232", "code": "boolean hasWater(World w, BlockPos pos) { for (Blockos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:11.411854", "n_pass": [214, 24, 12], "score": "0.2197", "loss": "2.3854", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : BlockPos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:18.174284", "n_pass": [221, 29, 13], "score": "0.1686", "loss": "2.6101", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : Blos.getAllble(pos.add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:22.200242", "n_pass": [225, 32, 14], "score": "0.1688", "loss": "2.7036", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : Blos.getAllble(add(-4, 0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:23.540818", "n_pass": [227, 33, 15], "score": "0.1839", "loss": "2.559", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : Blos.getAllble(add(0, -4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:24.892511", "n_pass": [228, 34, 16], "score": "0.2037", "loss": "2.4201", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : Blos.getAllble(add(4), pos.add(4, 1, 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:27.576637", "n_pass": [232, 36, 17], "score": "0.2147", "loss": "2.419", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mutableblockpos : Blos.getAllble(add(4), pos.add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:36.722642", "n_pass": [261, 42, 18], "score": "0.2006", "loss": "2.5232", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mleblockpos : Blos.getAllble(add(4), pos.add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:38.051069", "n_pass": [262, 43, 19], "score": "0.2006", "loss": "2.5232", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mockpos : Blos.getAllble(add(4), pos.add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:39.406041", "n_pass": [263, 44, 20], "score": "0.2327", "loss": "2.3286", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mos : Blos.getAllble(add(4), pos.add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:40.745454", "n_pass": [265, 45, 21], "score": "0.23", "loss": "2.3268", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mos :s.getAllble(add(4), pos.add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:44.770454", "n_pass": [271, 48, 22], "score": "0.2296", "loss": "2.3359", "code": "boolean hasWater(World w, BlockPos pos) { for (Bos mos :s.getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:47:52.636560", "n_pass": [295, 53, 23], "score": "0.196", "loss": "2.472", "code": "boolean hasWater(World w, Blos pos) { for (Bos mos :s.getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:03.069902", "n_pass": [398, 60, 24], "score": "0.2546", "loss": "2.2833", "code": "boolean hasWater(World w, Bl pos) { for (Bos mos :s.getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:04.417824", "n_pass": [399, 61, 25], "score": "0.2499", "loss": "2.3175", "code": "boolean hasWater(World w, Bl p) { for (Bos mos :s.getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:05.774494", "n_pass": [405, 62, 26], "score": "0.2256", "loss": "2.4627", "code": "boolean hasWater(World w, Bl p) { for (B mos :s.getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:08.429366", "n_pass": [409, 64, 27], "score": "0.2259", "loss": "2.3994", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAllble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:12.408710", "n_pass": [412, 67, 28], "score": "0.2288", "loss": "2.3898", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAble(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:13.759380", "n_pass": [413, 68, 29], "score": "0.1968", "loss": "2.682", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(add(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:15.085537", "n_pass": [415, 69, 30], "score": "0.169", "loss": "2.8694", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add( 4))) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:17.743007", "n_pass": [421, 71, 31], "score": "0.1681", "loss": "2.824", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (worldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:19.103711", "n_pass": [427, 72, 32], "score": "0.1739", "loss": "2.7535", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldState(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:23.089505", "n_pass": [430, 75, 33], "score": "0.1646", "loss": "2.861", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldSte(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:24.436577", "n_pass": [431, 76, 34], "score": "0.1603", "loss": "2.8171", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldS(mutpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:25.766167", "n_pass": [433, 77, 35], "score": "0.1822", "loss": "2.6673", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldS(mpos).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:27.109565", "n_pass": [434, 78, 36], "score": "0.1635", "loss": "2.8285", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldS(ms).getMial.WATER) { retrue; } } return false; }"}
{"time": "2021-01-23 09:48:32.436781", "n_pass": [442, 82, 37], "score": "0.1772", "loss": "2.6633", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldS(ms).getMial.WATER) { rue; } } return false; }"}
{"time": "2021-01-23 09:48:33.759284", "n_pass": [443, 83, 38], "score": "0.1942", "loss": "2.5654", "code": "boolean hasWater(World w, Bl p) { for (B mos :getAe(d(4), add())) { if (rldS(ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:46.320425", "n_pass": [472, 91, 39], "score": "0.1917", "loss": "2.5955", "code": "boolean hasWater(World w, Bl p) { for (B m :getAe(d(4), add())) { if (rldS(ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:48.960120", "n_pass": [475, 93, 40], "score": "0.2487", "loss": "2.3873", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), add())) { if (rldS(ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:50.287408", "n_pass": [480, 94, 41], "score": "0.2316", "loss": "2.4631", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if (rldS(ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:51.639540", "n_pass": [487, 95, 42], "score": "0.2127", "loss": "2.5907", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if (dS(ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:52.986420", "n_pass": [488, 96, 43], "score": "0.2321", "loss": "2.6099", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms).getMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:54.331190", "n_pass": [491, 97, 44], "score": "0.2274", "loss": "2.5147", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)tMial.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:55.652619", "n_pass": [492, 98, 45], "score": "0.2727", "loss": "2.1727", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)al.WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:48:56.980748", "n_pass": [493, 99, 46], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)WATER) { ; } } return false; }"}
{"time": "2021-01-23 09:49:24.171871", "n_pass": [635, 114, 47], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)WATER){ ; } } return false; }"}
{"time": "2021-01-23 09:49:25.497971", "n_pass": [637, 115, 48], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)WATER){; } } return false; }"}
{"time": "2021-01-23 09:49:26.842293", "n_pass": [638, 116, 49], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w, Bl p) { for (B m :gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:49:51.608081", "n_pass": [674, 132, 50], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w,Bl p) { for (B m :gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:49:55.569434", "n_pass": [680, 135, 51], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w,Bl p){ for (B m :gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:49:56.893536", "n_pass": [682, 136, 52], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w,Bl p){for (B m :gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:49:58.227650", "n_pass": [686, 137, 53], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w,Bl p){for(B m :gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:49:59.550756", "n_pass": [691, 138, 54], "score": "0.2088", "loss": "2.8195", "code": "boolean hasWater(World w,Bl p){for(B m:gee(d(4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:04.844587", "n_pass": [697, 142, 55], "score": "0.2456", "loss": "2.5629", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4), d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:06.156891", "n_pass": [702, 143, 56], "score": "0.2456", "loss": "2.5629", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4),d())) { if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:07.493217", "n_pass": [708, 144, 57], "score": "0.2456", "loss": "2.5629", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4),d())){ if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:08.804279", "n_pass": [710, 145, 58], "score": "0.2456", "loss": "2.5629", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4),d())){if ((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:10.137448", "n_pass": [713, 146, 59], "score": "0.2456", "loss": "2.5629", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4),d())){if((ms)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:11.451035", "n_pass": [716, 147, 60], "score": "0.2115", "loss": "2.773", "code": "boolean hasWater(World w,Bl p){for(B m:gee((4),d())){if((s)WATER){ } } return false; }"}
{"time": "2021-01-23 09:50:38.673847", "n_pass": [755, 165, 61], "score": "0.1588", "loss": "3.1867", "code": "boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){ } } return false; }"}
{"time": "2021-01-23 09:51:17.243967", "n_pass": [851, 190, 62], "score": "0.1588", "loss": "3.1867", "code": "boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){} } return false; }"}
{"time": "2021-01-23 09:51:18.572244", "n_pass": [852, 191, 63], "score": "0.1588", "loss": "3.1867", "code": "boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){}} return false; }"}
{"time": "2021-01-23 09:51:19.885314", "n_pass": [854, 192, 64], "score": "0.1588", "loss": "3.1867", "code": "boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){}}return false; }"}
{"time": "2021-01-23 09:51:29.092073", "n_pass": [868, 199, 65], "score": "0.1588", "loss": "3.1867", "code": "boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){}}return false;}"}

Minimal simplified code:
boolean hasWater(Wold w,Bl p){for(B m:gee((4),d())){if((s)WATER){}}return false;}

