
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/startup/Tool_main.java
method_name = main
method_body = @SuppressWarnings("null") public static void main(String[] args) { if (catalinaHome == null) { log.error("Must set '" + Globals.CATALINA_HOME_PROP + "' system property"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if ("-ant".equals(args[index])) ant = true; else if ("-common".equals(args[index])) common = true; else if ("-server".equals(args[index])) server = true; else if ("-shared".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty("ant.home", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, "classes")); packed.add(new File(catalinaHome, "lib")); if (common) { unpacked.add(new File(catalinaHome, "common" + File.separator + "classes")); packed.add(new File(catalinaHome, "common" + File.separator + "lib")); } if (server) { unpacked.add(new File(catalinaHome, "server" + File.separator + "classes")); packed.add(new File(catalinaHome, "server" + File.separator + "lib")); } if (shared) { unpacked.add(new File(catalinaHome, "shared" + File.separator + "classes")); packed.add(new File(catalinaHome, "shared" + File.separator + "lib")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Class loader creation threw exception", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug("Loading application class " + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Exception creating instance of " + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug("Identifying main() method"); String methodName = "main"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error("Exception locating main() method", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug("Calling main() method"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error("Exception calling main() method", t); System.exit(1); } }
predict, score, loss = main, 0.94271934, 0.08038629

Trace of simplified code(s):
{"time": "2021-01-20 09:11:46.419366", "n_pass": [1, 1, 1], "score": "0.9042", "loss": "0.135", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"common\" + File.separator + \"lib\")); } if (server) { unpacked.add(new File(catalinaHome, \"server\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:48.171326", "n_pass": [50, 2, 2], "score": "0.943", "loss": "0.0683", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); Class<?> clazz = null; String className = args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:50.212187", "n_pass": [196, 3, 3], "score": "0.8875", "loss": "0.1522", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); } Method method = null; String[] params = new String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:51.884274", "n_pass": [203, 4, 4], "score": "0.9571", "loss": "0.0548", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object[1]; paramValues[0] = params; method.invoke(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:53.580250", "n_pass": [216, 5, 5], "score": "0.711", "loss": "0.4894", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> packed = new ArrayList<>(); ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:55.326676", "n_pass": [239, 6, 6], "score": "0.8555", "loss": "0.205", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"classes\")); packed.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:56.928416", "n_pass": [241, 7, 7], "score": "0.9289", "loss": "0.0913", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome, \"shared\" + File.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:11:59.358950", "n_pass": [418, 8, 8], "score": "0.8558", "loss": "0.2131", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread.currentThread().setContextClassLoader(classLoader); args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:01.071043", "n_pass": [434, 9, 9], "score": "0.869", "loss": "0.1947", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(\"Loading application class \" + className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:02.689379", "n_pass": [438, 10, 10], "score": "0.9416", "loss": "0.0762", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, index, params, 0, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:04.359119", "n_pass": [449, 11, 11], "score": "0.9663", "loss": "0.0448", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:06.036757", "n_pass": [462, 12, 12], "score": "0.94", "loss": "0.0797", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { if (log.isDebugEnabled()) log.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:07.654023", "n_pass": [467, 13, 13], "score": "0.9016", "loss": "0.1134", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"Exception calling main() method\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:09.318167", "n_pass": [476, 14, 14], "score": "0.7735", "loss": "0.3525", "code": "@SuppressWarnings(\"null\") public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:10.921829", "n_pass": [479, 15, 15], "score": "0.9504", "loss": "0.0786", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); System.exit(1); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:12.537126", "n_pass": [488, 16, 16], "score": "0.9042", "loss": "0.1575", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) { usage(); System.exit(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:14.148362", "n_pass": [493, 17, 17], "score": "0.8832", "loss": "0.1835", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true; else break; index++; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:15.778241", "n_pass": [506, 18, 18], "score": "0.9292", "loss": "0.1152", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); ClassLoader classLoader = null; try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:17.384488", "n_pass": [513, 19, 19], "score": "0.8629", "loss": "0.2486", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayList<File> unpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:19.617202", "n_pass": [814, 20, 20], "score": "0.9166", "loss": "0.109", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>(); unpacked.add(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:21.218051", "n_pass": [818, 21, 21], "score": "0.867", "loss": "0.229", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + File.separator + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:22.861114", "n_pass": [829, 22, 22], "score": "0.9684", "loss": "0.0486", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\")); packed.add(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:24.458051", "n_pass": [832, 23, 23], "score": "0.8931", "loss": "0.1726", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + File.separator + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:26.088823", "n_pass": [836, 24, 24], "score": "0.674", "loss": "0.6485", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(catalinaHome.separator + \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:27.714787", "n_pass": [844, 25, 25], "score": "0.9465", "loss": "0.0717", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\")); packed.add(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:29.298572", "n_pass": [847, 26, 26], "score": "0.9215", "loss": "0.1269", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"shared\" + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:30.900649", "n_pass": [850, 27, 27], "score": "0.8606", "loss": "0.2178", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, + File.separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:32.489710", "n_pass": [851, 28, 28], "score": "0.9095", "loss": "0.1404", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, separator + \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:34.112496", "n_pass": [852, 29, 29], "score": "0.9382", "loss": "0.0973", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } classLoader = ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:35.700518", "n_pass": [855, 30, 30], "score": "0.9223", "loss": "0.1391", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:37.342804", "n_pass": [866, 31, 31], "score": "0.8897", "loss": "0.1851", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader creation threw exception\", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:38.923085", "n_pass": [869, 32, 32], "score": "0.6712", "loss": "0.4888", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug(+ className); clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:40.551656", "n_pass": [879, 33, 33], "score": "0.8044", "loss": "0.3388", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exception creating instance of \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:42.171150", "n_pass": [888, 34, 34], "score": "0.9096", "loss": "0.157", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(args, params.length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:43.821783", "n_pass": [897, 35, 35], "score": "0.925", "loss": "0.1016", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying main() method\"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:45.419590", "n_pass": [903, 36, 36], "score": "0.9778", "loss": "0.0325", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method = clazz.getMethod(methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:47.058534", "n_pass": [914, 37, 37], "score": "0.9804", "loss": "0.026", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception locating main() method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:48.684537", "n_pass": [920, 38, 38], "score": "0.9693", "loss": "0.0477", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\"Calling main() method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:50.295669", "n_pass": [927, 39, 39], "score": "0.9457", "loss": "0.0942", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object[] paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:51.863948", "n_pass": [929, 40, 40], "score": "0.9554", "loss": "0.0606", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\");paramValues = new Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:53.428824", "n_pass": [930, 41, 41], "score": "0.8856", "loss": "0.153", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils.handleThrowable(t); log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:55.051227", "n_pass": [938, 42, 42], "score": "0.9005", "loss": "0.1675", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils; log.error(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:56.638172", "n_pass": [939, 43, 43], "score": "0.9357", "loss": "0.1087", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System.exit(1); } }"}
{"time": "2021-01-20 09:12:58.216483", "n_pass": [942, 44, 44], "score": "0.7617", "loss": "0.3966", "code": "public static void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:12:59.802859", "n_pass": [944, 45, 45], "score": "0.9183", "loss": "0.1191", "code": "void main(String[] args) { if (catalinaHome == null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:01.378245", "n_pass": [949, 46, 46], "score": "0.949", "loss": "0.0768", "code": "void main(String[] args) { if ( null) { log.error(\"Must set '\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:02.960116", "n_pass": [953, 47, 47], "score": "0.952", "loss": "0.0662", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + Globals.CATALINA_HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:04.551354", "n_pass": [955, 48, 48], "score": "0.8946", "loss": "0.1782", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + HOME_PROP + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:06.124104", "n_pass": [956, 49, 49], "score": "0.9251", "loss": "0.0989", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"' system property\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:07.696015", "n_pass": [958, 50, 50], "score": "0.9507", "loss": "0.079", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index == args.length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:09.310475", "n_pass": [966, 51, 51], "score": "0.9753", "loss": "0.0309", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) ant = true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:10.890714", "n_pass": [974, 52, 52], "score": "0.9297", "loss": "0.0974", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals(args[index])) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:12.455405", "n_pass": [979, 53, 53], "score": "0.6758", "loss": "0.5991", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common = true; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:14.011048", "n_pass": [981, 54, 54], "score": "0.8695", "loss": "0.2123", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) server = true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:15.579091", "n_pass": [987, 55, 55], "score": "0.9359", "loss": "0.1031", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals(args[index])) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:17.147815", "n_pass": [992, 56, 56], "score": "0.9798", "loss": "0.0287", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared = true;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:18.719273", "n_pass": [994, 57, 57], "score": "0.8571", "loss": "0.2304", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (index > args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:20.274392", "n_pass": [997, 58, 58], "score": "0.7474", "loss": "0.421", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usage(); System.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:21.830742", "n_pass": [1000, 59, 59], "score": "0.951", "loss": "0.064", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageSystem.exit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:28.956023", "n_pass": [1469, 60, 60], "score": "0.9369", "loss": "0.0884", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) System.setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:30.969004", "n_pass": [1476, 61, 61], "score": "0.9621", "loss": "0.0533", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant.home\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:32.531157", "n_pass": [1479, 62, 62], "score": "0.9609", "loss": "0.0554", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try { ArrayListunpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:34.115738", "n_pass": [1485, 63, 63], "score": "0.9295", "loss": "0.1124", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked.add(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:35.754232", "n_pass": [1504, 64, 64], "score": "0.9819", "loss": "0.0255", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:37.360924", "n_pass": [1511, 65, 65], "score": "0.9696", "loss": "0.0446", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:38.948181", "n_pass": [1521, 66, 66], "score": "0.9181", "loss": "0.1168", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { unpacked.add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:40.569503", "n_pass": [1532, 67, 67], "score": "0.965", "loss": "0.0477", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(new File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:42.146050", "n_pass": [1534, 68, 68], "score": "0.8964", "loss": "0.1873", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(+ \"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:43.706749", "n_pass": [1536, 69, 69], "score": "0.6267", "loss": "0.743", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory.createClassLoader(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:45.325819", "n_pass": [1549, 70, 70], "score": "0.9488", "loss": "0.0744", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked.toArray(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:46.898940", "n_pass": [1551, 71, 71], "score": "0.9487", "loss": "0.0777", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), packed.toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:48.482881", "n_pass": [1557, 72, 72], "score": "0.9244", "loss": "0.1147", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(new File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:50.038321", "n_pass": [1559, 73, 73], "score": "0.879", "loss": "0.1917", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtils. log.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:51.653336", "n_pass": [1572, 74, 74], "score": "0.9258", "loss": "0.1084", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilslog.error(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:53.221078", "n_pass": [1573, 75, 75], "score": "0.9102", "loss": "0.1389", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class loader \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:56.324991", "n_pass": [1576, 76, 76], "score": "0.9211", "loss": "0.1259", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); System.exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:57.847034", "n_pass": [1581, 77, 77], "score": "0.9521", "loss": "0.076", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); } Thread. args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:13:59.392521", "n_pass": [1586, 78, 78], "score": "0.9619", "loss": "0.0577", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index++]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:00.925009", "n_pass": [1589, 79, 79], "score": "0.9377", "loss": "0.1076", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (log.isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:02.477560", "n_pass": [1595, 80, 80], "score": "0.9699", "loss": "0.0409", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) log.debug; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:04.011163", "n_pass": [1599, 81, 81], "score": "0.826", "loss": "0.2853", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) log; clazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:05.514060", "n_pass": [1600, 82, 82], "score": "0.9542", "loss": "0.0688", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logclazz = classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:07.015575", "n_pass": [1601, 83, 83], "score": "0.853", "loss": "0.2603", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) log= classLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:08.524998", "n_pass": [1602, 84, 84], "score": "0.8478", "loss": "0.2844", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logclassLoader.loadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:10.031257", "n_pass": [1603, 85, 85], "score": "0.9311", "loss": "0.1011", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { ExceptionUtils.handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:11.603284", "n_pass": [1613, 86, 86], "score": "0.9584", "loss": "0.0567", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); log.error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:13.118516", "n_pass": [1617, 87, 87], "score": "0.6648", "loss": "0.6722", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exceptionof \" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:14.623243", "n_pass": [1620, 88, 88], "score": "0.8491", "loss": "0.2699", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + className, t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:16.152408", "n_pass": [1623, 89, 89], "score": "0.9526", "loss": "0.0624", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t); System.exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:17.689687", "n_pass": [1625, 90, 90], "score": "0.5561", "loss": "0.9217", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args.length - index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:19.213026", "n_pass": [1630, 91, 91], "score": "0.9397", "loss": "0.0947", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args- index]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:20.709400", "n_pass": [1631, 92, 92], "score": "0.967", "loss": "0.0486", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; System.arraycopy(length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:22.216625", "n_pass": [1633, 93, 93], "score": "0.804", "loss": "0.3688", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; (length); try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:23.727782", "n_pass": [1634, 94, 94], "score": "0.9243", "loss": "0.1238", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled()) log.debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:25.251996", "n_pass": [1640, 95, 95], "score": "0.9482", "loss": "0.088", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; Class<?>[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:26.781928", "n_pass": [1648, 96, 96], "score": "0.9779", "loss": "0.0372", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; Class[] paramTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:28.293159", "n_pass": [1649, 97, 97], "score": "0.9779", "loss": "0.0291", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes = new Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:29.790091", "n_pass": [1651, 98, 98], "score": "0.9622", "loss": "0.0559", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] = params.getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:31.320274", "n_pass": [1656, 99, 99], "score": "0.9916", "loss": "0.0123", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName, paramTypes); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:32.845243", "n_pass": [1660, 100, 100], "score": "0.9687", "loss": "0.0378", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\", t); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:34.374363", "n_pass": [1669, 101, 101], "score": "0.9878", "loss": "0.0201", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); System.exit(1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:35.868498", "n_pass": [1671, 102, 102], "score": "0.9402", "loss": "0.0856", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); (1); } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:37.362330", "n_pass": [1672, 103, 103], "score": "0.9696", "loss": "0.0507", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { iflog.debug(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:38.867566", "n_pass": [1676, 104, 104], "score": "0.931", "loss": "0.1008", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t = ExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:40.401261", "n_pass": [1687, 105, 105], "score": "0.9517", "loss": "0.069", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { tExceptionUtils.unwrapInvocationTargetException(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:41.910177", "n_pass": [1688, 106, 106], "score": "0.9414", "loss": "0.0797", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(t); ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:43.396073", "n_pass": [1689, 107, 107], "score": "0.9714", "loss": "0.04", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t; ExceptionUtils(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:44.897651", "n_pass": [1690, 108, 108], "score": "0.9936", "loss": "0.0085", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\", t); System; } }"}
{"time": "2021-01-20 09:14:46.387736", "n_pass": [1692, 109, 109], "score": "0.9626", "loss": "0.0577", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); System; } }"}
{"time": "2021-01-20 09:14:47.874408", "n_pass": [1694, 110, 110], "score": "0.9338", "loss": "0.1043", "code": "void main(String[] args) { if ( null) { log.error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:49.818602", "n_pass": [1707, 111, 111], "score": "0.9799", "loss": "0.0286", "code": "void main(String[] args) { if ( null) { error(\"Must\" + + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:51.315006", "n_pass": [1711, 112, 112], "score": "0.992", "loss": "0.0115", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } int index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:52.808651", "n_pass": [1717, 113, 113], "score": "0.9622", "loss": "0.062", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index .length) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:54.308025", "n_pass": [1728, 114, 114], "score": "0.9817", "loss": "0.0249", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"-ant\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:55.797105", "n_pass": [1736, 115, 115], "score": "0.9526", "loss": "0.0797", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])) true; else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:57.305162", "n_pass": [1742, 116, 116], "score": "0.8986", "loss": "0.19", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); else if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:14:58.778762", "n_pass": [1744, 117, 117], "score": "0.9547", "loss": "0.0772", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"-common\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:00.244736", "n_pass": [1747, 118, 118], "score": "0.8973", "loss": "0.1751", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()) common; else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:01.717585", "n_pass": [1751, 119, 119], "score": "0.8905", "loss": "0.1902", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); else if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:03.183621", "n_pass": [1753, 120, 120], "score": "0.9707", "loss": "0.0436", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"-server\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:04.674924", "n_pass": [1756, 121, 121], "score": "0.953", "loss": "0.0702", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])) true; else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:06.158062", "n_pass": [1762, 122, 122], "score": "0.7603", "loss": "0.4464", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); else if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:07.624285", "n_pass": [1764, 123, 123], "score": "0.8901", "loss": "0.1972", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"-shared\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:09.093240", "n_pass": [1767, 124, 124], "score": "0.8927", "loss": "0.1699", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals()) shared;; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:10.568139", "n_pass": [1771, 125, 125], "score": "0.9086", "loss": "0.1582", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (args.length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:12.071903", "n_pass": [1776, 126, 126], "score": "0.6531", "loss": "0.7203", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) { usageexit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:13.546178", "n_pass": [1779, 127, 127], "score": "0.9823", "loss": "0.0265", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) { unpacked(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:15.528055", "n_pass": [1811, 128, 128], "score": "0.9329", "loss": "0.1201", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) { ExceptionUtilserror(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:17.238431", "n_pass": [1869, 129, 129], "score": "0.9056", "loss": "0.1883", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled()) logloadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:18.793170", "n_pass": [1889, 130, 130], "score": "0.9553", "loss": "0.0775", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassparamTypes =Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:20.657514", "n_pass": [1924, 131, 131], "score": "0.9695", "loss": "0.0426", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } if (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:22.789015", "n_pass": [1991, 132, 132], "score": "0.9522", "loss": "0.0642", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); if (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:24.265908", "n_pass": [1999, 133, 133], "score": "0.982", "loss": "0.026", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); if (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:25.755160", "n_pass": [2005, 134, 134], "score": "0.9021", "loss": "0.1544", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); if (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:15:27.232564", "n_pass": [2013, 135, 135], "score": "0.8859", "loss": "0.1982", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());; } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:16.510635", "n_pass": [2730, 136, 136], "score": "0.9701", "loss": "0.0485", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals()); } if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:17.982503", "n_pass": [2731, 137, 137], "score": "0.9665", "loss": "0.0432", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());} if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:19.467048", "n_pass": [2733, 138, 138], "score": "0.9306", "loss": "0.1034", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if (length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:20.960930", "n_pass": [2735, 139, 139], "score": "0.9762", "loss": "0.0327", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length) {exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:22.445626", "n_pass": [2739, 140, 140], "score": "0.9695", "loss": "0.0436", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){exit(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:23.939844", "n_pass": [2741, 141, 141], "score": "0.9849", "loss": "0.0216", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1); } if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:25.418771", "n_pass": [2746, 142, 142], "score": "0.9007", "loss": "0.1504", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);} if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:26.893261", "n_pass": [2748, 143, 143], "score": "0.8286", "loss": "0.2834", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if (ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:28.770400", "n_pass": [2750, 144, 144], "score": "0.9483", "loss": "0.0839", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant) setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:30.250688", "n_pass": [2754, 145, 145], "score": "0.9283", "loss": "0.1192", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"ant\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:31.753525", "n_pass": [2758, 146, 146], "score": "0.9405", "loss": "0.0834", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\", catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:33.230607", "n_pass": [2761, 147, 147], "score": "0.9428", "loss": "0.0789", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome); try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:34.708328", "n_pass": [2765, 148, 148], "score": "0.9508", "loss": "0.0648", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try {unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:36.208945", "n_pass": [2767, 149, 149], "score": "0.9396", "loss": "0.0879", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked = new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:37.671285", "n_pass": [2770, 150, 150], "score": "0.8671", "loss": "0.2232", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked= new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:39.166006", "n_pass": [2772, 151, 151], "score": "0.7803", "loss": "0.4051", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(new File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:40.674290", "n_pass": [2782, 152, 152], "score": "0.9766", "loss": "0.0381", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();( File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:42.140598", "n_pass": [2783, 153, 153], "score": "0.8872", "loss": "0.2029", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome, \"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:43.913049", "n_pass": [2788, 154, 154], "score": "0.9842", "loss": "0.021", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"lib\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:45.403199", "n_pass": [2790, 155, 155], "score": "0.8017", "loss": "0.3807", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\")); if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:46.902313", "n_pass": [2795, 156, 156], "score": "0.9636", "loss": "0.0551", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if (common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:48.380507", "n_pass": [2797, 157, 157], "score": "0.9194", "loss": "0.1103", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common) {(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:49.859839", "n_pass": [2801, 158, 158], "score": "0.946", "loss": "0.075", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(new File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:51.338100", "n_pass": [2804, 159, 159], "score": "0.8242", "loss": "0.3061", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){( File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:52.800723", "n_pass": [2805, 160, 160], "score": "0.9047", "loss": "0.1458", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome, \"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:54.283402", "n_pass": [2810, 161, 161], "score": "0.9137", "loss": "0.1476", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"common\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:55.753285", "n_pass": [2812, 162, 162], "score": "0.8602", "loss": "0.2032", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\" + \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:57.221506", "n_pass": [2814, 163, 163], "score": "0.915", "loss": "0.1012", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+ \"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:16:58.701416", "n_pass": [2816, 164, 164], "score": "0.9643", "loss": "0.0488", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"classes\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:00.212972", "n_pass": [2818, 165, 165], "score": "0.9304", "loss": "0.0994", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(new File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:01.703076", "n_pass": [2824, 166, 166], "score": "0.8586", "loss": "0.2524", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));( File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:03.178952", "n_pass": [2825, 167, 167], "score": "0.8137", "loss": "0.2928", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"server\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:04.660691", "n_pass": [2831, 168, 168], "score": "0.9408", "loss": "0.0787", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\" + \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:06.137951", "n_pass": [2833, 169, 169], "score": "0.8959", "loss": "0.1737", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+ \"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:07.646887", "n_pass": [2835, 170, 170], "score": "0.8991", "loss": "0.1467", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"lib\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:09.120195", "n_pass": [2837, 171, 171], "score": "0.9286", "loss": "0.1171", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\")); } if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:10.618657", "n_pass": [2842, 172, 172], "score": "0.8914", "loss": "0.1335", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));} if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:12.104983", "n_pass": [2844, 173, 173], "score": "0.8621", "loss": "0.2376", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if (shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:13.597795", "n_pass": [2846, 174, 174], "score": "0.9631", "loss": "0.0595", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared) { add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:15.087744", "n_pass": [2850, 175, 175], "score": "0.9599", "loss": "0.0734", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){ add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:16.577396", "n_pass": [2852, 176, 176], "score": "0.9419", "loss": "0.0985", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){add(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:18.060444", "n_pass": [2853, 177, 177], "score": "0.9414", "loss": "0.0823", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){(File(\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:19.570909", "n_pass": [2855, 178, 178], "score": "0.9217", "loss": "0.1138", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"classes\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:21.050425", "n_pass": [2858, 179, 179], "score": "0.9753", "loss": "0.0352", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(new File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:22.530924", "n_pass": [2864, 180, 180], "score": "0.9525", "loss": "0.069", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));( File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:24.003057", "n_pass": [2865, 181, 181], "score": "0.9157", "loss": "0.1465", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome, \"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:25.483320", "n_pass": [2870, 182, 182], "score": "0.9778", "loss": "0.0294", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"lib\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:26.974637", "n_pass": [2872, 183, 183], "score": "0.7452", "loss": "0.4569", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\")); } ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:28.452794", "n_pass": [2877, 184, 184], "score": "0.7761", "loss": "0.4148", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));} ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:29.947397", "n_pass": [2879, 185, 185], "score": "0.9568", "loss": "0.063", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory(unpacked(new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:31.432006", "n_pass": [2882, 186, 186], "score": "0.9094", "loss": "0.1319", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((new File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:32.909251", "n_pass": [2884, 187, 187], "score": "0.8339", "loss": "0.2992", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory(( File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:34.380268", "n_pass": [2885, 188, 188], "score": "0.9005", "loss": "0.165", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]), toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:35.912763", "n_pass": [2892, 189, 189], "score": "0.8808", "loss": "0.1555", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),toArray(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:37.409766", "n_pass": [2893, 190, 190], "score": "0.7844", "loss": "0.4237", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]), null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:38.908716", "n_pass": [2901, 191, 191], "score": "0.5083", "loss": "1.074", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null); } catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:40.424108", "n_pass": [2905, 192, 192], "score": "0.9506", "loss": "0.0783", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);} catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:41.899952", "n_pass": [2907, 193, 193], "score": "0.9487", "loss": "0.0619", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch (Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:43.390231", "n_pass": [2909, 194, 194], "score": "0.9629", "loss": "0.0573", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t) {error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:44.891952", "n_pass": [2915, 195, 195], "score": "0.9265", "loss": "0.1275", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"Class \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:46.379562", "n_pass": [2920, 196, 196], "score": "0.8821", "loss": "0.1667", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\" \", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:47.849388", "n_pass": [2921, 197, 197], "score": "0.9184", "loss": "0.146", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\", t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:49.329319", "n_pass": [2924, 198, 198], "score": "0.8227", "loss": "0.2786", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t); exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:50.814325", "n_pass": [2928, 199, 199], "score": "0.7553", "loss": "0.3784", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);exit(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:52.289682", "n_pass": [2929, 200, 200], "score": "0.8301", "loss": "0.3141", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1); }  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:53.804174", "n_pass": [2934, 201, 201], "score": "0.9282", "loss": "0.1178", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}  args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:55.291658", "n_pass": [2936, 202, 202], "score": "0.7362", "loss": "0.4573", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);} args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:56.758601", "n_pass": [2937, 203, 203], "score": "0.7174", "loss": "0.4322", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index]; try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:58.248504", "n_pass": [2943, 204, 204], "score": "0.9121", "loss": "0.1226", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try { if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:17:59.738260", "n_pass": [2945, 205, 205], "score": "0.8306", "loss": "0.2455", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{ if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:01.213157", "n_pass": [2947, 206, 206], "score": "0.8525", "loss": "0.1871", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if (isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:02.712597", "n_pass": [2949, 207, 207], "score": "0.7727", "loss": "0.3409", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())loadClass(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:04.206230", "n_pass": [2955, 208, 208], "score": "0.9143", "loss": "0.1147", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className); } catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:05.709418", "n_pass": [2960, 209, 209], "score": "0.7012", "loss": "0.5326", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);} catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:07.182319", "n_pass": [2962, 210, 210], "score": "0.8879", "loss": "0.1659", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch (Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:08.652712", "n_pass": [2964, 211, 211], "score": "0.9192", "loss": "0.1055", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t) { handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:10.164704", "n_pass": [2970, 212, 212], "score": "0.9113", "loss": "0.1246", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){ handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:11.644928", "n_pass": [2972, 213, 213], "score": "0.9273", "loss": "0.0954", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){handleThrowable(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:13.109000", "n_pass": [2973, 214, 214], "score": "0.7881", "loss": "0.3383", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t); error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:14.994587", "n_pass": [2978, 215, 215], "score": "0.9112", "loss": "0.128", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);error(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:16.464101", "n_pass": [2979, 216, 216], "score": "0.9052", "loss": "0.1294", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"Exception\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:17.962018", "n_pass": [2982, 217, 217], "score": "0.9152", "loss": "0.1189", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\" + t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:19.420484", "n_pass": [2984, 218, 218], "score": "0.5438", "loss": "0.948", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+ t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:20.911954", "n_pass": [2986, 219, 219], "score": "0.9429", "loss": "0.0879", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);exit(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:22.420987", "n_pass": [2990, 220, 220], "score": "0.8601", "loss": "0.2078", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1); }  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:23.925570", "n_pass": [2995, 221, 221], "score": "0.9446", "loss": "0.069", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}  String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:25.395974", "n_pass": [2997, 222, 222], "score": "0.7426", "loss": "0.4074", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);} String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:26.860018", "n_pass": [2998, 223, 223], "score": "0.7704", "loss": "0.4282", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args]; ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:28.343804", "n_pass": [3003, 224, 224], "score": "0.9679", "loss": "0.0409", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args] ; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:29.809218", "n_pass": [3004, 225, 225], "score": "0.948", "loss": "0.0765", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args]; try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:31.283677", "n_pass": [3006, 226, 226], "score": "0.8809", "loss": "0.1541", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try { if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:32.778616", "n_pass": [3008, 227, 227], "score": "0.9178", "loss": "0.1117", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{ if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:34.255464", "n_pass": [3010, 228, 228], "score": "0.9727", "loss": "0.0341", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if (log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:35.732637", "n_pass": [3012, 229, 229], "score": "0.873", "loss": "0.1747", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log.isDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:37.215448", "n_pass": [3015, 230, 230], "score": "0.9116", "loss": "0.1086", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(logisDebugEnabled())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:38.677867", "n_pass": [3016, 231, 231], "score": "0.8345", "loss": "0.2252", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())debug(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:40.166974", "n_pass": [3020, 232, 232], "score": "0.921", "loss": "0.1011", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"Identifying \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:41.640063", "n_pass": [3023, 233, 233], "score": "0.899", "loss": "0.1389", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\" \"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:43.135204", "n_pass": [3024, 234, 234], "score": "0.8349", "loss": "0.265", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\"); String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:44.635335", "n_pass": [3028, 235, 235], "score": "0.9059", "loss": "0.113", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");String methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:46.086317", "n_pass": [3029, 236, 236], "score": "0.9263", "loss": "0.1008", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\"); methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:47.537220", "n_pass": [3030, 237, 237], "score": "0.8116", "loss": "0.3065", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName = \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:49.012872", "n_pass": [3032, 238, 238], "score": "0.9184", "loss": "0.1248", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName= \"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:50.472845", "n_pass": [3034, 239, 239], "score": "0.8294", "loss": "0.2662", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"main\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:51.923905", "n_pass": [3036, 240, 240], "score": "0.9025", "loss": "0.1418", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\"; ClassClass[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:53.396737", "n_pass": [3038, 241, 241], "score": "0.8026", "loss": "0.2795", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); method (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:54.885050", "n_pass": [3047, 242, 242], "score": "0.9011", "loss": "0.1182", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log.error(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:56.396911", "n_pass": [3057, 243, 243], "score": "0.956", "loss": "0.0574", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"Exception) method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:57.845477", "n_pass": [3059, 244, 244], "score": "0.8868", "loss": "0.1882", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\" method\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:18:59.298839", "n_pass": [3060, 245, 245], "score": "0.8341", "loss": "0.2405", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); ; } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:19:00.748363", "n_pass": [3062, 246, 246], "score": "0.7758", "loss": "0.3187", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(null, paramValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:19:02.262624", "n_pass": [3073, 247, 247], "score": "0.8681", "loss": "0.1782", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(\"\"); } }"}
{"time": "2021-01-20 09:19:03.758005", "n_pass": [3083, 248, 248], "score": "0.8686", "loss": "0.2094", "code": "void main(String[] args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:06.026094", "n_pass": [3094, 249, 249], "score": "0.851", "loss": "0.1976", "code": "void main(String[]args) { if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:07.477908", "n_pass": [3097, 250, 250], "score": "0.7952", "loss": "0.27", "code": "void main(String[]args){ if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:08.922045", "n_pass": [3099, 251, 251], "score": "0.8966", "loss": "0.1482", "code": "void main(String[]args){if ( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:10.369215", "n_pass": [3101, 252, 252], "score": "0.9635", "loss": "0.057", "code": "void main(String[]args){if( null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:11.816048", "n_pass": [3103, 253, 253], "score": "0.8577", "loss": "0.2198", "code": "void main(String[]args){if(null) { error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:13.265772", "n_pass": [3106, 254, 254], "score": "0.9207", "loss": "0.1196", "code": "void main(String[]args){if(null){ error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:14.720653", "n_pass": [3108, 255, 255], "score": "0.919", "loss": "0.1157", "code": "void main(String[]args){if(null){error(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:16.167690", "n_pass": [3109, 256, 256], "score": "0.6939", "loss": "0.4916", "code": "void main(String[]args){if(null){(\"Must\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:17.617117", "n_pass": [3112, 257, 257], "score": "0.8414", "loss": "0.2124", "code": "void main(String[]args){if(null){(\"\" + \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:19.062014", "n_pass": [3114, 258, 258], "score": "0.9426", "loss": "0.0875", "code": "void main(String[]args){if(null){(\"\"+ \"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:20.553582", "n_pass": [3116, 259, 259], "score": "0.7055", "loss": "0.4795", "code": "void main(String[]args){if(null){(\"\"+\"'\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:21.999225", "n_pass": [3118, 260, 260], "score": "0.9403", "loss": "0.086", "code": "void main(String[]args){if(null){(\"\"+\"\"); } index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:23.482502", "n_pass": [3122, 261, 261], "score": "0.9402", "loss": "0.0802", "code": "void main(String[]args){if(null){(\"\"+\"\");} index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:24.936620", "n_pass": [3124, 262, 262], "score": "0.8946", "loss": "0.1279", "code": "void main(String[]args){if(null){(\"\"+\"\");}index = 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:26.381843", "n_pass": [3126, 263, 263], "score": "0.6449", "loss": "0.6969", "code": "void main(String[]args){if(null){(\"\"+\"\");}index= 0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:27.821676", "n_pass": [3128, 264, 264], "score": "0.832", "loss": "0.2766", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0; while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:29.287113", "n_pass": [3131, 265, 265], "score": "0.8315", "loss": "0.2327", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while (true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:30.761285", "n_pass": [3133, 266, 266], "score": "0.932", "loss": "0.0922", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true) { if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:32.229247", "n_pass": [3137, 267, 267], "score": "0.8606", "loss": "0.1863", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){ if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:33.676416", "n_pass": [3139, 268, 268], "score": "0.8971", "loss": "0.1532", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if (index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:35.155150", "n_pass": [3141, 269, 269], "score": "0.9433", "loss": "0.0718", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index ) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:36.606373", "n_pass": [3144, 270, 270], "score": "0.9514", "loss": "0.0595", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index) {(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:38.054661", "n_pass": [3146, 271, 271], "score": "0.883", "loss": "0.1799", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1); } (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:39.510258", "n_pass": [3152, 272, 272], "score": "0.8861", "loss": "0.1834", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);} (\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:40.961540", "n_pass": [3154, 273, 273], "score": "0.8197", "loss": "0.2502", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);}(\"\".equals(args[index])); (\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:42.434122", "n_pass": [3168, 274, 274], "score": "0.9281", "loss": "0.1077", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals()); (\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:43.930431", "n_pass": [3178, 275, 275], "score": "0.9542", "loss": "0.0638", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index])); (\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:45.415352", "n_pass": [3192, 276, 276], "score": "0.9293", "loss": "0.095", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\"); Object(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:48.521966", "n_pass": [3432, 277, 277], "score": "0.7231", "loss": "0.4083", "code": "void main(String[]args){if(null){(\"\"+\"\");}index=0;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:51.197499", "n_pass": [3471, 278, 278], "score": "0.598", "loss": "0.8705", "code": "void main(String[]args){if(null){(\"\"+\"\");}index0;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:52.642505", "n_pass": [3472, 279, 279], "score": "0.7111", "loss": "0.5487", "code": "void main(String[]args){if(null){(\"\"+\"\");}index;while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:56.793868", "n_pass": [3800, 280, 280], "score": "0.8332", "loss": "0.2473", "code": "void main(String[]args){if(null){(\"\"+\"\");};while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:19:58.240926", "n_pass": [3801, 281, 281], "score": "0.911", "loss": "0.1084", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1]; paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:12.595049", "n_pass": [4217, 282, 282], "score": "0.8948", "loss": "0.1373", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0] =getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:14.062614", "n_pass": [4222, 283, 283], "score": "0.7351", "loss": "0.4118", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass(); (methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:15.552468", "n_pass": [4228, 284, 284], "score": "0.9166", "loss": "0.1071", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName); } catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:17.048268", "n_pass": [4233, 285, 285], "score": "0.7788", "loss": "0.3439", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);} catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:18.500274", "n_pass": [4235, 286, 286], "score": "0.8087", "loss": "0.2737", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch (Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:20.000427", "n_pass": [4237, 287, 287], "score": "0.8851", "loss": "0.1599", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t) {log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:21.480159", "n_pass": [4243, 288, 288], "score": "0.8245", "loss": "0.2578", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){log(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:22.930272", "n_pass": [4245, 289, 289], "score": "0.8625", "loss": "0.2228", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\"); } try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:24.411241", "n_pass": [4251, 290, 290], "score": "0.8091", "loss": "0.3038", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");} try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:25.861355", "n_pass": [4253, 291, 291], "score": "0.7943", "loss": "0.4323", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try { if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:27.328144", "n_pass": [4255, 292, 292], "score": "0.8133", "loss": "0.2986", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{ if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:28.807929", "n_pass": [4257, 293, 293], "score": "0.9128", "loss": "0.1214", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{if(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:30.277624", "n_pass": [4258, 294, 294], "score": "0.9347", "loss": "0.0826", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\" method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:31.736101", "n_pass": [4261, 295, 295], "score": "0.903", "loss": "0.1147", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"method\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:33.183076", "n_pass": [4262, 296, 296], "score": "0.9076", "loss": "0.1176", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(nullparamValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:34.673188", "n_pass": [4267, 297, 297], "score": "0.764", "loss": "0.4271", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues); } catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:36.146038", "n_pass": [4271, 298, 298], "score": "0.7272", "loss": "0.4701", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);} catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:37.595162", "n_pass": [4273, 299, 299], "score": "0.8059", "loss": "0.2847", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch (Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:39.045262", "n_pass": [4275, 300, 300], "score": "0.8522", "loss": "0.1936", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch(Throwable t) { t(); } }"}
{"time": "2021-01-20 09:20:40.518714", "n_pass": [4281, 301, 301], "score": "0.7432", "loss": "0.4227", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch(Throwable t){ t(); } }"}
{"time": "2021-01-20 09:20:41.972061", "n_pass": [4283, 302, 302], "score": "0.7216", "loss": "0.4434", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch(Throwable t){t(); } }"}
{"time": "2021-01-20 09:20:43.470314", "n_pass": [4288, 303, 303], "score": "0.9651", "loss": "0.0499", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch(Throwable t){t();} }"}
{"time": "2021-01-20 09:20:44.926269", "n_pass": [4290, 304, 304], "score": "0.9438", "loss": "0.075", "code": "void main(String[]args){if(null){(\"\"+\"\");}while(true){if(index){(1);}(\"\".equals(args[index]));(\"\".equals());(\"\".equals(args[index]));(\"\".equals());}if(length){(1);}if(ant)setProperty(\"\",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,\"\"));if(common){(File(catalinaHome,\"\"+\"\"));(File(catalinaHome,\"\"+\"\"));}if(shared){((\"\"));(File(catalinaHome,\"\"));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error(\"\",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(\"\"+t);(1);}String[args];try{if(log())(\"\");methodName=\"\";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){(\"\");}try{(\"\");(paramValues);}catch(Throwable t){t();}}"}

Minimal simplified code:
void main(String[]args){if(null){(""+"");}while(true){if(index){(1);}("".equals(args[index]));("".equals());("".equals(args[index]));("".equals());}if(length){(1);}if(ant)setProperty("",catalinaHome);try{unpacked=new ArrayList<>();(File(catalinaHome,""));if(common){(File(catalinaHome,""+""));(File(catalinaHome,""+""));}if(shared){((""));(File(catalinaHome,""));}ClassLoaderFactory((File[0]),(File[0]),null);}catch(Throwable t){error("",t);(1);}args[index];try{if(isDebugEnabled())(className);}catch(Throwable t){(t);(""+t);(1);}String[args];try{if(log())("");methodName="";Class[1];paramTypes[0]=getClass();(methodName);}catch(Throwable t){("");}try{("");(paramValues);}catch(Throwable t){t();}}

