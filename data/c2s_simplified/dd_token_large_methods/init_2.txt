
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/util/RequestFilter_init.java
method_name = init
method_body = public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString("serverUrl", null); chsDomain = serverConfigurationService.getString("content.chs.serverName", null); chsUrl = serverConfigurationService.getString("content.chs.serverUrl", null); useContentHostingDomain = serverConfigurationService.getBoolean("content.separateDomains", false); contentPaths = serverConfigurationService.getStrings("content.chs.urlprefixes"); if (contentPaths == null) { contentPaths = new String[] { "/access/", "/web/" }; } loginPaths = serverConfigurationService.getStrings("content.login.urlprefixes"); if (loginPaths == null) { loginPaths = new String[] { "/access/login", "/sakai-login-tool", "/access/require", "/access/accept" }; } contentExceptions = serverConfigurationService.getStrings("content.chsexception.urlprefixes"); if (contentExceptions == null) { contentExceptions = new String[] { "/access/calendar/", "/access/citation/export_ris_sel/", "/access/citation/export_ris_all/" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if ("container".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if ("sakai".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if ("context".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if ("tool".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn("invalid " + CONFIG_SESSION + " setting (" + s + "): not one of container, sakai, context, tool"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = "basic".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn("overridding " + CONFIG_MAX_PER_FILE + " setting: must be 'true' with " + CONFIG_CONTINUE + " ='true'"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty("sakai.cluster.terracotta"); TERRACOTTA_CLUSTER = "true".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!"none".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn("Unable to compile " + SAKAI_SESSION_PARAM_ALLOW + "=" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, "lax"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }
predict, score, loss = init, 0.80159825, 0.33616322

Trace of simplified code(s):
{"time": "2021-01-20 10:00:14.554281", "n_pass": [1, 1, 1], "score": "0.7994", "loss": "0.3291", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContext.getServletContextName(); if (m_contextId == null) { m_contextId = toString(); } } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING) != null) { m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:17.987175", "n_pass": [105, 2, 2], "score": "0.8029", "loss": "0.3533", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_CONTEXT) != null) { m_contextId = filterConfig.getInitParameter(CONFIG_CONTEXT); } else { m_contextId = m_servletContextm_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:21.690308", "n_pass": [136, 4, 3], "score": "0.7241", "loss": "0.4783", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)).booleanValue(); } if (System.getProperty(SYSTEM_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:23.338232", "n_pass": [139, 5, 4], "score": "0.8106", "loss": "0.3465", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding \" + CONFIG_MAX_PER_FILE + \" setting: must be 'true' with \" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:27.612775", "n_pass": [242, 7, 5], "score": "0.8456", "loss": "0.2437", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m_cookieHttpOnly = serverConfigurationService.getBoolean(SAKAI_COOKIE_HTTP_ONLY, true); m_cookieSameSite = serverConfigurationService.getString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:29.354070", "n_pass": [253, 8, 6], "score": "0.8901", "loss": "0.1959", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA_COMPATIBLE, null); isLTIProviderAllowed = (serverConfigurationService.getString(SAKAI_BLTI_PROVIDER_TOOLS, null) != null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:30.994198", "n_pass": [255, 9, 7], "score": "0.7321", "loss": "0.4608", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"container\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTAINER_SESSION; } else if (\"sakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:32.704232", "n_pass": [270, 10, 8], "score": "0.855", "loss": "0.2993", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize; } if (filterConfig.getInitParameter(CONFIG_UPLOAD_MAX) != null) { m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:34.588141", "n_pass": [286, 11, 9], "score": "0.7799", "loss": "0.3548", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize = Long.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_MAX).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:36.221575", "n_pass": [287, 12, 10], "score": "0.8888", "loss": "0.1905", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_MAX_PER_FILE) != null) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:38.714224", "n_pass": [463, 13, 11], "score": "0.862", "loss": "0.2405", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW, false); String allowBypassSession = serverConfigurationService.getString(SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:42.105523", "n_pass": [479, 15, 12], "score": "0.8391", "loss": "0.2811", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,SAKAI_SESSION_PARAM_ALLOW_BYPASS, SAKAI_SESSION_PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:43.716829", "n_pass": [480, 16, 13], "score": "0.7684", "loss": "0.3477", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(\"Unable to compile \" + SAKAI_SESSION_PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:45.366658", "n_pass": [485, 17, 14], "score": "0.8744", "loss": "0.2067", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } mgetString(SAKAI_COOKIE_SAME_SITE, \"lax\"); m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:47.020322", "n_pass": [488, 18, 15], "score": "0.8242", "loss": "0.2989", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/export_ris_sel/\", \"/access/citation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:49.229853", "n_pass": [513, 19, 16], "score": "0.8528", "loss": "0.2538", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED)) * 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:54.509686", "n_pass": [546, 22, 17], "score": "0.8868", "loss": "0.1746", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean* 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding\" + CONFIG_CONTINUE + \" ='true'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:00:58.014448", "n_pass": [571, 24, 18], "score": "0.8101", "loss": "0.2736", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" + CONFIG_SESSION + \" setting (\" + s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean* 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:01.991039", "n_pass": [624, 26, 19], "score": "0.8137", "loss": "0.3051", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean* 1024L * 1024L; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:03.950715", "n_pass": [644, 27, 20], "score": "0.7542", "loss": "0.421", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = Boolean; m_uploadCeiling = m_uploadMaxSize1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:05.585361", "n_pass": [645, 28, 21], "score": "0.8821", "loss": "0.1815", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; } m_servletContext = filterConfig.getServletContext(); if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:08.166127", "n_pass": [709, 29, 22], "score": "0.7897", "loss": "0.3531", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { String s = filterConfig.getInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:11.256335", "n_pass": [989, 30, 23], "score": "0.7042", "loss": "0.5186", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { m_sakaiHttpSession = TOOL_SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:14.492558", "n_pass": [1002, 32, 24], "score": "0.7658", "loss": "0.3933", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \"): not one of container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:17.701545", "n_pass": [1007, 34, 25], "score": "0.8548", "loss": "0.2755", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \") container, sakai, context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:19.289791", "n_pass": [1008, 35, 26], "score": "0.7915", "loss": "0.345", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { m_sakaiRemoteUser = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:20.937730", "n_pass": [1014, 36, 27], "score": "0.8469", "loss": "0.3255", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) { m_checkPrincipal = \"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:22.574159", "n_pass": [1021, 37, 28], "score": "0.8644", "loss": "0.2089", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) { m_toolPlacement = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:24.213213", "n_pass": [1028, 38, 29], "score": "0.8449", "loss": "0.2341", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT)).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:25.829063", "n_pass": [1030, 39, 30], "score": "0.8165", "loss": "0.3017", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = BooleanL * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:27.959673", "n_pass": [1046, 40, 31], "score": "0.7391", "loss": "0.4196", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty(SYSTEM_UPLOAD_CEILING).trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:30.011261", "n_pass": [1053, 41, 32], "score": "0.8232", "loss": "0.2814", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_DIR) != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:36.457216", "n_pass": [1065, 45, 33], "score": "0.8331", "loss": "0.3101", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m_uploadThreshold = Integer.valueOf(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:38.116207", "n_pass": [1073, 46, 34], "score": "0.8255", "loss": "0.2736", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig.getInitParameter(CONFIG_CONTINUE) != null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:39.727499", "n_pass": [1077, 47, 35], "score": "0.8239", "loss": "0.2763", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadContinue && !m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:42.973293", "n_pass": [1088, 49, 36], "score": "0.9154", "loss": "0.1438", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warn(\"overridding'\"); m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:44.581240", "n_pass": [1090, 50, 37], "score": "0.6836", "loss": "0.5204", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(\"content.separateDomains\", false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:54.626874", "n_pass": [1138, 56, 38], "score": "0.8258", "loss": "0.3098", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/access/\", \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:56.246248", "n_pass": [1146, 57, 39], "score": "0.8047", "loss": "0.3358", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/login\", \"/sakai-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:57.894276", "n_pass": [1155, 58, 40], "score": "0.7033", "loss": "0.537", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\", \"/access/require\", \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:01:59.471180", "n_pass": [1157, 59, 41], "score": "0.7764", "loss": "0.3553", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  \"/access/accept\" }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:01.047969", "n_pass": [1158, 60, 42], "score": "0.8749", "loss": "0.2044", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn(\"invalid \" +  s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:07.472135", "n_pass": [1187, 64, 43], "score": "0.7807", "loss": "0.3905", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) { m_uploadEnabled = 24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:09.312317", "n_pass": [1221, 65, 44], "score": "0.8873", "loss": "0.1589", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue() * 1024L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:11.363285", "n_pass": [1229, 66, 45], "score": "0.8668", "loss": "0.1997", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue24L * 1024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:12.953611", "n_pass": [1230, 67, 46], "score": "0.6347", "loss": "0.6512", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty(SYSTEM_UPLOAD_DIR) != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:14.562124", "n_pass": [1233, 68, 47], "score": "0.8797", "loss": "0.1913", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA_CLUSTER = \"true\".equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:17.986366", "n_pass": [1264, 70, 48], "score": "0.8146", "loss": "0.3171", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(\"content.chsexception.urlprefixes\"); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:26.500966", "n_pass": [1325, 75, 49], "score": "0.7929", "loss": "0.3368", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_sakaiHttpSession = CONTEXT_SESSION; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:29.739143", "n_pass": [1345, 77, 50], "score": "0.7834", "loss": "0.3411", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { m_uploadContinue = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:33.419036", "n_pass": [1409, 79, 51], "score": "0.7837", "loss": "0.3845", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m_sessionParamAllow = serverConfigurationService.getBoolean(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:35.210579", "n_pass": [1434, 80, 52], "score": "0.7962", "loss": "0.3556", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW,PARAM_ALLOW_BYPASS_DEFAULT); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:36.785203", "n_pass": [1436, 81, 53], "score": "0.8733", "loss": "0.211", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); m_redirectRandomNode = serverConfigurationService.getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:40.035440", "n_pass": [1450, 83, 54], "score": "0.7965", "loss": "0.3955", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citationcitation/export_ris_all/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:41.837275", "n_pass": [1489, 84, 55], "score": "0.8462", "loss": "0.234", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) { m_uploadCeiling = Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:43.800722", "n_pass": [1544, 85, 56], "score": "0.7897", "loss": "0.4242", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m_sessionParamRegex = Pattern.compile(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:46.115219", "n_pass": [1593, 86, 57], "score": "0.7955", "loss": "0.3201", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) { log.warn(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:48.956955", "n_pass": [2045, 87, 58], "score": "0.809", "loss": "0.3014", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_CLUSTER_REDIRECT_RANDOM, true); }"}
{"time": "2021-01-20 10:02:55.289810", "n_pass": [2059, 91, 59], "score": "0.7693", "loss": "0.4188", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_RANDOM, true); }"}
{"time": "2021-01-20 10:02:56.887452", "n_pass": [2060, 92, 60], "score": "0.7326", "loss": "0.4515", "code": "public void init(FilterConfig filterConfig) throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:02:58.919566", "n_pass": [2064, 93, 61], "score": "0.6909", "loss": "0.7275", "code": "public void init() throws ServletException { appUrl = serverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:00.523866", "n_pass": [2068, 94, 62], "score": "0.7714", "loss": "0.4727", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain = serverConfigurationService.getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:03.665036", "n_pass": [2074, 96, 63], "score": "0.838", "loss": "0.4921", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.chs.serverName\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:05.276706", "n_pass": [2077, 97, 64], "score": "0.8118", "loss": "0.513", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl = serverConfigurationService.getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:06.858478", "n_pass": [2081, 98, 65], "score": "0.8232", "loss": "0.374", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.chs.serverUrl\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:08.441694", "n_pass": [2084, 99, 66], "score": "0.7237", "loss": "0.7206", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain = serverConfigurationService.getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:10.030375", "n_pass": [2088, 100, 67], "score": "0.7905", "loss": "0.5961", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths = serverConfigurationService.getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:11.630041", "n_pass": [2092, 101, 68], "score": "0.7887", "loss": "0.4348", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.chs.urlprefixes\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:13.205865", "n_pass": [2095, 102, 69], "score": "0.7707", "loss": "0.5214", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"/web/\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:14.834454", "n_pass": [2106, 103, 70], "score": "0.7805", "loss": "0.4795", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths = serverConfigurationService.getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:16.415344", "n_pass": [2110, 104, 71], "score": "0.7716", "loss": "0.624", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.login.urlprefixes\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:18.003773", "n_pass": [2113, 105, 72], "score": "0.7571", "loss": "0.6332", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"/access/-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:19.635476", "n_pass": [2124, 106, 73], "score": "0.7403", "loss": "0.6386", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"-login-tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:21.201295", "n_pass": [2125, 107, 74], "score": "0.5642", "loss": "0.9618", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions = serverConfigurationService.getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:22.786272", "n_pass": [2130, 108, 75], "score": "0.7469", "loss": "0.7163", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"/access/calendar/\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:24.432954", "n_pass": [2142, 109, 76], "score": "0.8106", "loss": "0.4285", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"/access/citation/\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:26.016997", "n_pass": [2145, 110, 77], "score": "0.6137", "loss": "1.1013", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(CONFIG_SESSION); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:27.659778", "n_pass": [2156, 111, 78], "score": "0.6184", "loss": "0.8383", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase(s)) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:29.247852", "n_pass": [2161, 112, 79], "score": "0.8087", "loss": "0.4454", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) { m_sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:30.804715", "n_pass": [2163, 113, 80], "score": "0.6494", "loss": "0.8668", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {sakaiHttpSession = SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:32.354977", "n_pass": [2164, 114, 81], "score": "0.7588", "loss": "0.7637", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) { SAKAI_SESSION; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:33.902218", "n_pass": [2165, 115, 82], "score": "0.6569", "loss": "0.7613", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { m_; } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:35.479846", "n_pass": [2171, 116, 83], "score": "0.5718", "loss": "0.9363", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (\"tool\".equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:37.046486", "n_pass": [2174, 117, 84], "score": "0.8096", "loss": "0.6389", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { _SESSION; } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:38.604472", "n_pass": [2177, 118, 85], "score": "0.7583", "loss": "0.4837", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \")context, tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:40.569363", "n_pass": [2182, 119, 86], "score": "0.6298", "loss": "0.978", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(CONFIG_REMOTE_USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:42.169336", "n_pass": [2187, 120, 87], "score": "0.8138", "loss": "0.5254", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:43.776983", "n_pass": [2194, 121, 88], "score": "0.6345", "loss": "1.037", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(CONFIG_SESSION_AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:45.347021", "n_pass": [2198, 122, 89], "score": "0.8195", "loss": "0.564", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(CONFIG_SESSION_AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:46.920801", "n_pass": [2204, 123, 90], "score": "0.5089", "loss": "1.1246", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding = filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:48.950210", "n_pass": [2215, 124, 91], "score": "0.8393", "loss": "0.3522", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG_CHARACTER_ENCODING); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:50.524091", "n_pass": [2217, 125, 92], "score": "0.8352", "loss": "0.4479", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:52.088444", "n_pass": [2221, 126, 93], "score": "0.76", "loss": "0.5179", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:53.660211", "n_pass": [2226, 127, 94], "score": "0.7484", "loss": "0.6475", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_CHARACTER_ENCODING_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:55.225110", "n_pass": [2229, 128, 95], "score": "0.721", "loss": "0.9591", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)).booleanValue(); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:56.784613", "n_pass": [2231, 129, 96], "score": "0.7348", "loss": "0.756", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_ENABLED) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:58.377568", "n_pass": [2235, 130, 97], "score": "0.6715", "loss": "0.7216", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM_UPLOAD_CEILING) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:03:59.990853", "n_pass": [2242, 131, 98], "score": "0.7722", "loss": "0.5082", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty.trim()).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:01.606844", "n_pass": [2247, 132, 99], "score": "0.8305", "loss": "0.6162", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_uploadTempDir = System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:03.206042", "n_pass": [2255, 133, 100], "score": "0.6712", "loss": "0.7953", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(SYSTEM_UPLOAD_DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:04.766089", "n_pass": [2257, 134, 101], "score": "0.6755", "loss": "0.8349", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameter != null) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:06.324380", "n_pass": [2261, 135, 102], "score": "0.5769", "loss": "0.807", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir = filterConfig.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:07.897628", "n_pass": [2264, 136, 103], "score": "0.6626", "loss": "0.816", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG_UPLOAD_DIR); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:09.434497", "n_pass": [2266, 137, 104], "score": "0.7451", "loss": "0.6444", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:11.033351", "n_pass": [2270, 138, 105], "score": "0.7844", "loss": "0.559", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)).intValue(); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:12.630931", "n_pass": [2277, 139, 106], "score": "0.7114", "loss": "0.606", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig!= null) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:14.188386", "n_pass": [2280, 140, 107], "score": "0.7204", "loss": "0.6888", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_MAX_PER_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:15.830580", "n_pass": [2293, 141, 108], "score": "0.724", "loss": "0.6958", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) { log.warnm_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:17.414088", "n_pass": [2299, 142, 109], "score": "0.7967", "loss": "0.46", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta = System.getProperty(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:18.995956", "n_pass": [2304, 143, 110], "score": "0.7304", "loss": "0.6589", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { cookieName = System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:20.617587", "n_pass": [2315, 144, 111], "score": "0.8074", "loss": "0.4923", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) { System.getProperty(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:22.152736", "n_pass": [2316, 145, 112], "score": "0.6115", "loss": "1.0707", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { cookieDomain = System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:23.755470", "n_pass": [2325, 146, 113], "score": "0.7616", "loss": "0.5417", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) { System.getProperty(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:25.284261", "n_pass": [2326, 147, 114], "score": "0.5707", "loss": "1.1127", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION_PARAM_ALLOW); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:26.879373", "n_pass": [2331, 148, 115], "score": "0.8447", "loss": "0.5109", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex = null; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:28.520568", "n_pass": [2347, 149, 116], "score": "0.7355", "loss": "0.6362", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible = serverConfigurationService.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:30.104409", "n_pass": [2351, 150, 117], "score": "0.6067", "loss": "0.8486", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAI_UA= null); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:31.641314", "n_pass": [2353, 151, 118], "score": "0.6972", "loss": "1.1534", "code": "public void init() throws ServletException { appUrlserverConfigurationService.getString(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:33.648043", "n_pass": [2362, 152, 119], "score": "0.5506", "loss": "1.1957", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).m_characterEncoding.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:35.759452", "n_pass": [2479, 153, 120], "score": "0.7052", "loss": "0.7218", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String clusterTerracotta =(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:37.781149", "n_pass": [2549, 154, 121], "score": "0.6579", "loss": "0.7798", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession); m_sessionParamRegex; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:39.581697", "n_pass": [2586, 155, 122], "score": "0.7234", "loss": "0.675", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);; } } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:56.549099", "n_pass": [3286, 156, 123], "score": "0.5979", "loss": "0.9286", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } m; m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:58.107918", "n_pass": [3288, 157, 124], "score": "0.6579", "loss": "0.8318", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} }  m_UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:04:59.681723", "n_pass": [3289, 158, 125], "score": "0.5381", "loss": "0.9402", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible.getString(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:05:01.261126", "n_pass": [3291, 159, 126], "score": "0.8441", "loss": "0.3444", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(SAKAI_); }"}
{"time": "2021-01-20 10:05:02.838676", "n_pass": [3296, 160, 127], "score": "0.7645", "loss": "0.6765", "code": "public void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:04.395593", "n_pass": [3299, 161, 128], "score": "0.7191", "loss": "0.9792", "code": " void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:05.938607", "n_pass": [3300, 162, 129], "score": "0.646", "loss": "0.8942", "code": "void init() throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:08.313130", "n_pass": [3306, 163, 130], "score": "0.4927", "loss": "1.1751", "code": "void init()throws ServletException { appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:09.874019", "n_pass": [3310, 164, 131], "score": "0.7105", "loss": "0.879", "code": "void init()throws ServletException{ appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:11.429071", "n_pass": [3312, 165, 132], "score": "0.7175", "loss": "0.6763", "code": "void init()throws ServletException{appUrl(\"serverUrl\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:12.994077", "n_pass": [3316, 166, 133], "score": "0.6202", "loss": "0.8263", "code": "void init()throws ServletException{appUrl(\"\", null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:14.551991", "n_pass": [3319, 167, 134], "score": "0.5655", "loss": "0.9587", "code": "void init()throws ServletException{appUrl(\"\",null); chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:16.119376", "n_pass": [3323, 168, 135], "score": "0.8066", "loss": "0.4661", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain .getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:17.661911", "n_pass": [3325, 169, 136], "score": "0.7715", "loss": "0.5313", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain.getString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:19.197235", "n_pass": [3326, 170, 137], "score": "0.6033", "loss": "1.093", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomaingetString(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:20.738676", "n_pass": [3327, 171, 138], "score": "0.6409", "loss": "1.0432", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"content.\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:22.298578", "n_pass": [3330, 172, 139], "score": "0.7232", "loss": "0.5434", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\".\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:23.835980", "n_pass": [3331, 173, 140], "score": "0.601", "loss": "0.8017", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\", null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:25.401427", "n_pass": [3334, 174, 141], "score": "0.6359", "loss": "1.1366", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null); chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:26.980665", "n_pass": [3338, 175, 142], "score": "0.7955", "loss": "0.4756", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl .getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:28.525741", "n_pass": [3340, 176, 143], "score": "0.8061", "loss": "0.467", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl.getString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:30.082359", "n_pass": [3341, 177, 144], "score": "0.6952", "loss": "0.8207", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrlgetString(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:31.620297", "n_pass": [3342, 178, 145], "score": "0.7773", "loss": "0.5582", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"content.\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:33.181114", "n_pass": [3345, 179, 146], "score": "0.8281", "loss": "0.4302", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\".\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:34.722865", "n_pass": [3346, 180, 147], "score": "0.7844", "loss": "0.6716", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\", null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:36.270217", "n_pass": [3349, 181, 148], "score": "0.6232", "loss": "0.8271", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null); useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:37.834853", "n_pass": [3353, 182, 149], "score": "0.6692", "loss": "0.7403", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain .getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:39.376718", "n_pass": [3355, 183, 150], "score": "0.6777", "loss": "0.6873", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain.getBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:40.911776", "n_pass": [3356, 184, 151], "score": "0.8341", "loss": "0.4212", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomaingetBoolean(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:42.448601", "n_pass": [3357, 185, 152], "score": "0.7244", "loss": "0.7492", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain(false); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:43.989783", "n_pass": [3359, 186, 153], "score": "0.6585", "loss": "0.8601", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain(); contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:45.537197", "n_pass": [3362, 187, 154], "score": "0.8088", "loss": "0.4193", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths .getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:47.074526", "n_pass": [3364, 188, 155], "score": "0.9011", "loss": "0.2395", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths.getStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:48.614505", "n_pass": [3365, 189, 156], "score": "0.8773", "loss": "0.3181", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPathsgetStrings(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:50.147227", "n_pass": [3366, 190, 157], "score": "0.7872", "loss": "0.4665", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"content.\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:51.686956", "n_pass": [3369, 191, 158], "score": "0.823", "loss": "0.5147", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\".\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:53.239617", "n_pass": [3370, 192, 159], "score": "0.6391", "loss": "0.9446", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\"); if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:54.783766", "n_pass": [3374, 193, 160], "score": "0.8502", "loss": "0.3515", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if (contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:56.320652", "n_pass": [3376, 194, 161], "score": "0.7975", "loss": "0.5075", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths == null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:57.870044", "n_pass": [3379, 195, 162], "score": "0.809", "loss": "0.4611", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] { \"\" }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:05:59.448119", "n_pass": [3390, 196, 163], "score": "0.8286", "loss": "0.4847", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths .getStrings(\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:01.005207", "n_pass": [3395, 197, 164], "score": "0.6479", "loss": "0.7204", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"content.\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:02.546955", "n_pass": [3397, 198, 165], "score": "0.8273", "loss": "0.4746", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPaths == null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:04.117945", "n_pass": [3402, 199, 166], "score": "0.6426", "loss": "0.8182", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPaths= null) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:05.681228", "n_pass": [3403, 200, 167], "score": "0.7721", "loss": "0.7307", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\",  }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:07.280359", "n_pass": [3414, 201, 168], "score": "0.7464", "loss": "0.615", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions .getStrings(); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:08.833349", "n_pass": [3419, 202, 169], "score": "0.8053", "loss": "0.4823", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions (); if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:10.398068", "n_pass": [3420, 203, 170], "score": "0.7691", "loss": "0.5989", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptions == null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:11.944196", "n_pass": [3424, 204, 171], "score": "0.8017", "loss": "0.6041", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptions= null) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:13.475993", "n_pass": [3425, 205, 172], "score": "0.7426", "loss": "0.6046", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"//\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:15.061300", "n_pass": [3435, 206, 173], "score": "0.7081", "loss": "0.9039", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"//\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:16.595999", "n_pass": [3438, 207, 174], "score": "0.7654", "loss": "0.5687", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig.getInitParameter(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:18.151869", "n_pass": [3444, 208, 175], "score": "0.7118", "loss": "0.633", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG_SESSION) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:19.711883", "n_pass": [3446, 209, 176], "score": "0.6855", "loss": "0.7535", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter(); if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:21.283961", "n_pass": [3453, 210, 177], "score": "0.7684", "loss": "0.6269", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"containersakai\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:22.841841", "n_pass": [3457, 211, 178], "score": "0.6996", "loss": "0.786", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {; } else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:24.416369", "n_pass": [3461, 212, 179], "score": "0.8294", "loss": "0.4385", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} else if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:25.965960", "n_pass": [3463, 213, 180], "score": "0.6839", "loss": "0.7471", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } else if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:27.530453", "n_pass": [3472, 214, 181], "score": "0.6035", "loss": "0.8485", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } else { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:29.109700", "n_pass": [3480, 215, 182], "score": "0.8075", "loss": "0.4485", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { log.warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:30.637154", "n_pass": [3482, 216, 183], "score": "0.7814", "loss": "0.6952", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( s + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:32.169414", "n_pass": [3484, 217, 184], "score": "0.7813", "loss": "0.4672", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( + \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:33.712617", "n_pass": [3485, 218, 185], "score": "0.792", "loss": "0.5088", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (filterConfig.getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:35.290547", "n_pass": [3493, 219, 186], "score": "0.7188", "loss": "0.8505", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) { mvalueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:37.284186", "n_pass": [3500, 220, 187], "score": "0.7237", "loss": "0.708", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(filterConfig.getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:38.817392", "n_pass": [3502, 221, 188], "score": "0.6201", "loss": "0.8874", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(CONFIG_REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:40.348574", "n_pass": [3504, 222, 189], "score": "0.7348", "loss": "0.6293", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(REMOTE_USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:41.881025", "n_pass": [3505, 223, 190], "score": "0.7122", "loss": "0.6536", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (filterConfig.getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:43.437461", "n_pass": [3511, 224, 191], "score": "0.5954", "loss": "0.9783", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(filterConfig.getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:45.409768", "n_pass": [3521, 225, 192], "score": "0.8051", "loss": "0.5962", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (filterConfig.getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:46.954475", "n_pass": [3528, 226, 193], "score": "0.6789", "loss": "0.7514", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(CONFIG_TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:48.478026", "n_pass": [3530, 227, 194], "score": "0.6817", "loss": "0.8405", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(TOOL_PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:50.020238", "n_pass": [3531, 228, 195], "score": "0.828", "loss": "0.4926", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {Boolean.valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:51.981908", "n_pass": [3537, 229, 196], "score": "0.693", "loss": "0.6833", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(filterConfig.getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:53.509665", "n_pass": [3539, 230, 197], "score": "0.7258", "loss": "0.7436", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (filterConfig.getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:55.071628", "n_pass": [3547, 231, 198], "score": "0.7261", "loss": "0.7341", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENCODING_ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:56.601465", "n_pass": [3549, 232, 199], "score": "0.5824", "loss": "1.016", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) { m_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:06:58.562006", "n_pass": [3555, 233, 200], "score": "0.7267", "loss": "0.6426", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled.valueOf(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:00.132034", "n_pass": [3557, 234, 201], "score": "0.7845", "loss": "0.5199", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig.getInitParameter(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:01.674768", "n_pass": [3559, 235, 202], "score": "0.6468", "loss": "0.8161", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG_ENABLED)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:03.223512", "n_pass": [3561, 236, 203], "score": "0.7201", "loss": "0.6404", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig.getInitParameter(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:04.775161", "n_pass": [3567, 237, 204], "score": "0.5916", "loss": "0.8602", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {24L; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:06.356980", "n_pass": [3574, 238, 205], "score": "0.612", "loss": "0.94", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System.getProperty(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:07.906145", "n_pass": [3579, 239, 206], "score": "0.6869", "loss": "0.874", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long.valueOf(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:09.467668", "n_pass": [3586, 240, 207], "score": "0.7997", "loss": "0.6278", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System.getProperty).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:10.992030", "n_pass": [3588, 241, 208], "score": "0.768", "loss": "0.5357", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue024L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:12.515094", "n_pass": [3591, 242, 209], "score": "0.6711", "loss": "0.75", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (System.getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:14.074786", "n_pass": [3596, 243, 210], "score": "0.6785", "loss": "0.8522", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { m_System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:15.647774", "n_pass": [3602, 244, 211], "score": "0.6172", "loss": "1.0311", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { System.getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:17.186200", "n_pass": [3603, 245, 212], "score": "0.592", "loss": "1.1169", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfig.getInitParameternull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:18.749879", "n_pass": [3610, 246, 213], "score": "0.6474", "loss": "0.8537", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) { m_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:20.273251", "n_pass": [3613, 247, 214], "score": "0.7918", "loss": "0.5358", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir.getInitParameter(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:21.788473", "n_pass": [3615, 248, 215], "score": "0.6656", "loss": "0.8014", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (filterConfig.getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:23.337689", "n_pass": [3621, 249, 216], "score": "0.5079", "loss": "1.2037", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) { m(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:25.292166", "n_pass": [3628, 250, 217], "score": "0.4796", "loss": "1.1945", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig.getInitParameter(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:26.806892", "n_pass": [3630, 251, 218], "score": "0.5997", "loss": "0.9647", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG_UPLOAD_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:28.321566", "n_pass": [3632, 252, 219], "score": "0.6603", "loss": "0.6976", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG_THRESHOLD)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:29.831367", "n_pass": [3633, 253, 220], "score": "0.767", "loss": "0.5925", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(filterConfig.getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:31.415405", "n_pass": [3642, 254, 221], "score": "0.6782", "loss": "0.7664", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONFIG_CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:32.944729", "n_pass": [3644, 255, 222], "score": "0.6893", "loss": "0.7764", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { m_uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:34.545546", "n_pass": [3655, 256, 223], "score": "0.4484", "loss": "1.3616", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = Boolean.valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:36.076010", "n_pass": [3658, 257, 224], "score": "0.6521", "loss": "1.0001", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(filterConfig.getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:37.617525", "n_pass": [3660, 258, 225], "score": "0.6697", "loss": "0.8297", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(CONFIG_FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:39.165721", "n_pass": [3662, 259, 226], "score": "0.6487", "loss": "0.8847", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (m_uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:40.720576", "n_pass": [3670, 260, 227], "score": "0.6249", "loss": "0.9062", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {m_uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:42.244481", "n_pass": [3673, 261, 228], "score": "0.6379", "loss": "0.8946", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; } String(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:43.800541", "n_pass": [3678, 262, 229], "score": "0.5887", "loss": "0.9552", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"sakai.cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:45.306846", "n_pass": [3680, 263, 230], "score": "0.683", "loss": "0.7978", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"cluster.terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:46.813184", "n_pass": [3681, 264, 231], "score": "0.759", "loss": "0.5941", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA.equals(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:48.335328", "n_pass": [3685, 265, 232], "score": "0.5785", "loss": "0.9821", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (System.getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:49.887949", "n_pass": [3690, 266, 233], "score": "0.8053", "loss": "0.4624", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(SAKAI_COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:51.404260", "n_pass": [3692, 267, 234], "score": "0.696", "loss": "0.8055", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(COOKIE_NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:52.908619", "n_pass": [3693, 268, 235], "score": "0.6879", "loss": "0.7604", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI_COOKIE_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:54.894333", "n_pass": [3700, 269, 236], "score": "0.681", "loss": "0.8062", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI_NAME); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:56.398119", "n_pass": [3701, 270, 237], "score": "0.7243", "loss": "0.6342", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (System.getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:57.958529", "n_pass": [3706, 271, 238], "score": "0.5979", "loss": "1.0963", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(SAKAI_COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:07:59.490766", "n_pass": [3708, 272, 239], "score": "0.6824", "loss": "0.8104", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(COOKIE_DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:00.992118", "n_pass": [3709, 273, 240], "score": "0.5539", "loss": "1.107", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI_COOKIE_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:02.969612", "n_pass": [3716, 274, 241], "score": "0.7586", "loss": "0.6996", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI_DOMAIN); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:04.508526", "n_pass": [3717, 275, 242], "score": "0.7233", "loss": "0.6556", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); } m(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:06.024665", "n_pass": [3720, 276, 243], "score": "0.7418", "loss": "0.6803", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI_SESSION); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:07.541884", "n_pass": [3722, 277, 244], "score": "0.6658", "loss": "0.7915", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try { m(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:09.113839", "n_pass": [3734, 278, 245], "score": "0.7766", "loss": "0.6632", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM_ALLOW + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:10.675059", "n_pass": [3744, 279, 246], "score": "0.5835", "loss": "1.0275", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } _UACompatible(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:12.238890", "n_pass": [3753, 280, 247], "score": "0.5686", "loss": "1.0104", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();contentPaths(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:15.691457", "n_pass": [3797, 281, 248], "score": "0.7368", "loss": "0.7795", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } loginPaths (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:17.288483", "n_pass": [3819, 282, 249], "score": "0.5504", "loss": "1.2672", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } contentExceptions ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:18.859168", "n_pass": [3838, 283, 250], "score": "0.6208", "loss": "0.9617", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } ; if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:20.362672", "n_pass": [3839, 284, 251], "score": "0.7076", "loss": "0.8076", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { StringgetInitParameter; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:21.979904", "n_pass": [3864, 285, 252], "score": "0.6782", "loss": "0.7306", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { ; if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:23.476239", "n_pass": [3865, 286, 253], "score": "0.648", "loss": "0.8234", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {_characterEncodingEnabled(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:26.975122", "n_pass": [3944, 287, 254], "score": "0.4916", "loss": "1.2863", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).longValue0L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:28.623892", "n_pass": [3970, 288, 255], "score": "0.589", "loss": "1.0832", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {_uploadTempDir(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:30.214818", "n_pass": [3988, 289, 256], "score": "0.6056", "loss": "0.8457", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\"); TERRACOTTA(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:08:32.469768", "n_pass": [4041, 290, 257], "score": "0.6518", "loss": "0.8657", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if (getProperty(NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:44.551441", "n_pass": [4945, 291, 258], "score": "0.5544", "loss": "1.147", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME) != null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:46.076531", "n_pass": [4948, 292, 259], "score": "0.578", "loss": "1.1191", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)!= null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:47.606601", "n_pass": [4949, 293, 260], "score": "0.7461", "loss": "0.5917", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)= null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:49.135158", "n_pass": [4950, 294, 261], "score": "0.5415", "loss": "1.1552", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME) null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:50.644244", "n_pass": [4951, 295, 262], "score": "0.5146", "loss": "1.1748", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)null) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:52.143899", "n_pass": [4952, 296, 263], "score": "0.7137", "loss": "0.812", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)) {(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:53.653639", "n_pass": [4954, 297, 264], "score": "0.4962", "loss": "1.2417", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI); } if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:55.195642", "n_pass": [4960, 298, 265], "score": "0.4246", "loss": "1.5108", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);} if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:56.713254", "n_pass": [4962, 299, 266], "score": "0.7155", "loss": "0.7599", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if (getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:58.227251", "n_pass": [4964, 300, 267], "score": "0.4736", "loss": "1.2575", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if(getProperty(DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:09:59.745236", "n_pass": [4966, 301, 268], "score": "0.4648", "loss": "1.3049", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN) != null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:01.276605", "n_pass": [4970, 302, 269], "score": "0.5847", "loss": "1.0033", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)!= null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:02.809166", "n_pass": [4971, 303, 270], "score": "0.5439", "loss": "1.239", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)= null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:04.334592", "n_pass": [4972, 304, 271], "score": "0.5016", "loss": "1.2504", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN) null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:05.872121", "n_pass": [4973, 305, 272], "score": "0.547", "loss": "1.2009", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)null) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:07.400329", "n_pass": [4974, 306, 273], "score": "0.6488", "loss": "0.8758", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)) {(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:08.923058", "n_pass": [4976, 307, 274], "score": "0.6257", "loss": "0.9071", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI); }(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:10.472223", "n_pass": [4982, 308, 275], "score": "0.5363", "loss": "1.1308", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI); if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:12.060466", "n_pass": [4988, 309, 276], "score": "0.6658", "loss": "1.0123", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if (!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:13.576292", "n_pass": [4990, 310, 277], "score": "0.6076", "loss": "1.0566", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(!\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:15.104704", "n_pass": [4992, 311, 278], "score": "0.5894", "loss": "1.0219", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"none\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:16.611872", "n_pass": [4994, 312, 279], "score": "0.5551", "loss": "1.2024", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals(allowBypassSession)) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:18.158846", "n_pass": [4999, 313, 280], "score": "0.5292", "loss": "1.1803", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()) { try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:19.691716", "n_pass": [5002, 314, 281], "score": "0.6754", "loss": "0.8415", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){ try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:21.220598", "n_pass": [5004, 315, 282], "score": "0.4811", "loss": "1.2402", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try {(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:22.754882", "n_pass": [5006, 316, 283], "score": "0.7052", "loss": "0.7071", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession); } catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:24.305851", "n_pass": [5012, 317, 284], "score": "0.6048", "loss": "0.982", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);} catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:25.832795", "n_pass": [5014, 318, 285], "score": "0.6239", "loss": "1.1022", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch (Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:27.343913", "n_pass": [5016, 319, 286], "score": "0.6754", "loss": "0.7987", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e) {(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:28.916923", "n_pass": [5022, 320, 287], "score": "0.6481", "loss": "0.9948", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(PARAM + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:30.457087", "n_pass": [5025, 321, 288], "score": "0.7134", "loss": "0.825", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){( + \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:31.997259", "n_pass": [5026, 322, 289], "score": "0.4724", "loss": "1.3704", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(+ \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:33.507110", "n_pass": [5027, 323, 290], "score": "0.6117", "loss": "0.9872", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){( \"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:35.006275", "n_pass": [5028, 324, 291], "score": "0.6988", "loss": "0.7654", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"=\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:36.527360", "n_pass": [5030, 325, 292], "score": "0.5121", "loss": "1.4206", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\" + allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:38.034979", "n_pass": [5032, 326, 293], "score": "0.6074", "loss": "1.0023", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+ allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:39.545438", "n_pass": [5034, 327, 294], "score": "0.7739", "loss": "0.5637", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);} } (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:41.082281", "n_pass": [5039, 328, 295], "score": "0.3873", "loss": "1.531", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}} (SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:42.618579", "n_pass": [5041, 329, 296], "score": "0.5833", "loss": "0.9972", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(SAKAInull); getBoolean(); }"}
{"time": "2021-01-20 10:10:44.124274", "n_pass": [5043, 330, 297], "score": "0.6001", "loss": "1.0474", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null); getBoolean(); }"}
{"time": "2021-01-20 10:10:45.645511", "n_pass": [5047, 331, 298], "score": "0.6682", "loss": "0.854", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean(); }"}
{"time": "2021-01-20 10:10:47.174998", "n_pass": [5052, 332, 299], "score": "0.7006", "loss": "0.9064", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths== null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:49.630004", "n_pass": [5099, 333, 300], "score": "0.5811", "loss": "1.0173", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths= null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:51.144000", "n_pass": [5101, 334, 301], "score": "0.5974", "loss": "0.9849", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null) { contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:52.672738", "n_pass": [5104, 335, 302], "score": "0.7333", "loss": "0.7364", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){ contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:54.178359", "n_pass": [5106, 336, 303], "score": "0.6023", "loss": "0.9441", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths = new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:55.685098", "n_pass": [5108, 337, 304], "score": "0.63", "loss": "0.9781", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths= new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:57.205046", "n_pass": [5110, 338, 305], "score": "0.724", "loss": "0.7029", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[] {  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:10:58.744866", "n_pass": [5116, 339, 306], "score": "0.6333", "loss": "0.8855", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{  }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:00.249892", "n_pass": [5118, 340, 307], "score": "0.484", "loss": "1.2138", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{ }; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:01.751143", "n_pass": [5119, 341, 308], "score": "0.5902", "loss": "1.1106", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{}; } (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:03.259678", "n_pass": [5122, 342, 309], "score": "0.5894", "loss": "1.0929", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};} (\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:04.777945", "n_pass": [5124, 343, 310], "score": "0.6318", "loss": "0.7843", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\"); if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:06.295143", "n_pass": [5130, 344, 311], "score": "0.5232", "loss": "1.4186", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if (loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:07.814238", "n_pass": [5132, 345, 312], "score": "0.6791", "loss": "0.8677", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(loginPathsnull) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:09.337179", "n_pass": [5134, 346, 313], "score": "0.5449", "loss": "1.0328", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null) { loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:10.842397", "n_pass": [5137, 347, 314], "score": "0.7008", "loss": "0.8777", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){ loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:12.344614", "n_pass": [5139, 348, 315], "score": "0.6459", "loss": "0.8569", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths = new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:13.881663", "n_pass": [5141, 349, 316], "score": "0.6004", "loss": "1.0771", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths= new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:15.385160", "n_pass": [5143, 350, 317], "score": "0.7204", "loss": "0.7245", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[] { \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:16.906473", "n_pass": [5149, 351, 318], "score": "0.6649", "loss": "0.885", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{ \"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:18.420585", "n_pass": [5151, 352, 319], "score": "0.4711", "loss": "1.2866", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"tool\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:19.947780", "n_pass": [5153, 353, 320], "score": "0.629", "loss": "0.8125", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\" }; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:21.457164", "n_pass": [5155, 354, 321], "score": "0.5031", "loss": "1.2853", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"}; } if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:22.963161", "n_pass": [5158, 355, 322], "score": "0.5781", "loss": "1.0042", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};} if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:24.473402", "n_pass": [5160, 356, 323], "score": "0.5773", "loss": "0.9371", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if (contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:25.976708", "n_pass": [5162, 357, 324], "score": "0.6237", "loss": "0.8086", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(contentExceptionsnull) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:27.479806", "n_pass": [5164, 358, 325], "score": "0.7008", "loss": "0.6319", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null) { contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:28.988372", "n_pass": [5167, 359, 326], "score": "0.7239", "loss": "0.6545", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){ contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:30.491563", "n_pass": [5169, 360, 327], "score": "0.8101", "loss": "0.42", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions = new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:32.012892", "n_pass": [5171, 361, 328], "score": "0.504", "loss": "1.113", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions= new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:33.517655", "n_pass": [5173, 362, 329], "score": "0.6404", "loss": "0.7511", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[] { \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:35.035346", "n_pass": [5179, 363, 330], "score": "0.6768", "loss": "0.7653", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{ \"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:36.538043", "n_pass": [5181, 364, 331], "score": "0.4618", "loss": "1.2793", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\", \"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:38.039881", "n_pass": [5185, 365, 332], "score": "0.6807", "loss": "0.729", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\" }; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:39.541188", "n_pass": [5188, 366, 333], "score": "0.6622", "loss": "1.0739", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"}; }if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:41.052680", "n_pass": [5191, 367, 334], "score": "0.7058", "loss": "0.9187", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if (filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:42.590755", "n_pass": [5194, 368, 335], "score": "0.6958", "loss": "0.6298", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if(filterConfig(CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:44.105435", "n_pass": [5196, 369, 336], "score": "0.4667", "loss": "1.2135", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG) != null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:45.641491", "n_pass": [5200, 370, 337], "score": "0.5415", "loss": "1.0628", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)!= null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:47.166002", "n_pass": [5201, 371, 338], "score": "0.5716", "loss": "1.0071", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)= null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:48.670353", "n_pass": [5202, 372, 339], "score": "0.6021", "loss": "0.844", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG) null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:50.211614", "n_pass": [5203, 373, 340], "score": "0.6175", "loss": "0.9115", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)null) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:51.737600", "n_pass": [5204, 374, 341], "score": "0.6174", "loss": "0.8972", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)) { if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:53.235240", "n_pass": [5206, 375, 342], "score": "0.6308", "loss": "0.9114", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){ if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:54.738476", "n_pass": [5208, 376, 343], "score": "0.5916", "loss": "0.9318", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if (\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:56.238093", "n_pass": [5210, 377, 344], "score": "0.5419", "loss": "1.1165", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase) {} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:57.751906", "n_pass": [5217, 378, 345], "score": "0.6695", "loss": "0.8296", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){} if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:11:59.274393", "n_pass": [5220, 379, 346], "score": "0.7072", "loss": "0.7733", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if (\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:00.794184", "n_pass": [5222, 380, 347], "score": "0.7244", "loss": "0.7561", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"context\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:02.297646", "n_pass": [5225, 381, 348], "score": "0.6893", "loss": "0.6613", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase(s)) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:03.810862", "n_pass": [5230, 382, 349], "score": "0.5681", "loss": "1.0478", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()) { } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:05.310512", "n_pass": [5233, 383, 350], "score": "0.5658", "loss": "0.922", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){ } if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:06.807929", "n_pass": [5235, 384, 351], "score": "0.4935", "loss": "1.1488", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){} if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:08.337276", "n_pass": [5237, 385, 352], "score": "0.6731", "loss": "0.7074", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if (equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:09.836699", "n_pass": [5239, 386, 353], "score": "0.6633", "loss": "0.7446", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if(equalsIgnoreCase(s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:11.357250", "n_pass": [5241, 387, 354], "score": "0.5509", "loss": "1.0539", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)) { } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:12.883581", "n_pass": [5246, 388, 355], "score": "0.5638", "loss": "0.9653", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){ } { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:14.377788", "n_pass": [5248, 389, 356], "score": "0.5867", "loss": "0.959", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){} { warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:15.875043", "n_pass": [5250, 390, 357], "score": "0.4553", "loss": "1.2635", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{ warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:17.375308", "n_pass": [5252, 391, 358], "score": "0.6392", "loss": "0.8879", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{warn( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:18.856972", "n_pass": [5253, 392, 359], "score": "0.543", "loss": "1.1019", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{( \"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:20.368689", "n_pass": [5255, 393, 360], "score": "0.6647", "loss": "0.8112", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"tool\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:21.861165", "n_pass": [5257, 394, 361], "score": "0.6358", "loss": "1.1104", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\"); } } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:23.363659", "n_pass": [5261, 395, 362], "score": "0.68", "loss": "0.7996", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");} } if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:24.864807", "n_pass": [5263, 396, 363], "score": "0.6132", "loss": "0.8717", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}} if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:26.383121", "n_pass": [5265, 397, 364], "score": "0.7192", "loss": "0.8484", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if (getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:27.874503", "n_pass": [5267, 398, 365], "score": "0.6782", "loss": "0.8507", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if(getInitParameter(USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:29.381496", "n_pass": [5269, 399, 366], "score": "0.522", "loss": "1.3384", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER) != null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:30.887418", "n_pass": [5273, 400, 367], "score": "0.5568", "loss": "0.9075", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)!= null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:32.380202", "n_pass": [5274, 401, 368], "score": "0.5684", "loss": "1.0586", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)= null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:33.871678", "n_pass": [5275, 402, 369], "score": "0.4838", "loss": "1.2551", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER) null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:35.362419", "n_pass": [5276, 403, 370], "score": "0.6179", "loss": "0.9682", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)null) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:36.855660", "n_pass": [5277, 404, 371], "score": "0.6815", "loss": "0.7096", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)) {valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:38.350787", "n_pass": [5279, 405, 372], "score": "0.7944", "loss": "0.5167", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){valueOf(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:39.871862", "n_pass": [5281, 406, 373], "score": "0.6022", "loss": "0.9331", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){(getInitParameter(USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:41.363535", "n_pass": [5283, 407, 374], "score": "0.4618", "loss": "1.3522", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER)); } if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:43.508147", "n_pass": [5289, 408, 375], "score": "0.506", "loss": "1.1395", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));} if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:45.009666", "n_pass": [5291, 409, 376], "score": "0.5101", "loss": "1.1684", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if (getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:46.501963", "n_pass": [5293, 410, 377], "score": "0.6004", "loss": "0.9694", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if(getInitParameter(AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:47.996143", "n_pass": [5295, 411, 378], "score": "0.6194", "loss": "0.8039", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH) != null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:49.496269", "n_pass": [5299, 412, 379], "score": "0.5694", "loss": "0.9556", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)!= null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:50.993081", "n_pass": [5300, 413, 380], "score": "0.6378", "loss": "1.0103", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)= null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:52.505562", "n_pass": [5301, 414, 381], "score": "0.571", "loss": "0.9876", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH) null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:54.023189", "n_pass": [5302, 415, 382], "score": "0.3662", "loss": "1.738", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)null) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:55.518776", "n_pass": [5303, 416, 383], "score": "0.4469", "loss": "1.3675", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)) {\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:57.027192", "n_pass": [5305, 417, 384], "score": "0.4376", "loss": "1.4431", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"basic\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:12:58.538302", "n_pass": [5308, 418, 385], "score": "0.5579", "loss": "0.9804", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals(getInitParameter(AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:00.065947", "n_pass": [5313, 419, 386], "score": "0.4798", "loss": "1.3097", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); } if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:03.090958", "n_pass": [5321, 421, 387], "score": "0.588", "loss": "1.0637", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if (getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:04.620531", "n_pass": [5323, 422, 388], "score": "0.7144", "loss": "0.8536", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if(getInitParameter(PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:06.112193", "n_pass": [5325, 423, 389], "score": "0.534", "loss": "1.091", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT) != null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:07.612338", "n_pass": [5329, 424, 390], "score": "0.5162", "loss": "1.2153", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)!= null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:09.117811", "n_pass": [5330, 425, 391], "score": "0.4136", "loss": "1.4427", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)= null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:10.654126", "n_pass": [5331, 426, 392], "score": "0.3904", "loss": "1.4931", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT) null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:12.161401", "n_pass": [5332, 427, 393], "score": "0.4096", "loss": "1.4826", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)null) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:13.648781", "n_pass": [5333, 428, 394], "score": "0.5243", "loss": "1.2396", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)) {valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:15.153579", "n_pass": [5335, 429, 395], "score": "0.3748", "loss": "1.5726", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){valueOf(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:16.684641", "n_pass": [5337, 430, 396], "score": "0.4041", "loss": "1.6085", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter(CONFIG); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:18.604954", "n_pass": [5344, 431, 397], "score": "0.4865", "loss": "1.2676", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter(); } if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:20.099698", "n_pass": [5347, 432, 398], "score": "0.6545", "loss": "0.8617", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();} if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:21.612565", "n_pass": [5349, 433, 399], "score": "0.4726", "loss": "1.2748", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if (getInitParameter(ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:24.623241", "n_pass": [5353, 435, 400], "score": "0.3596", "loss": "1.6539", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED) != null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:26.120654", "n_pass": [5357, 436, 401], "score": "0.3628", "loss": "1.6317", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null) {(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:32.055851", "n_pass": [5363, 440, 402], "score": "0.4076", "loss": "1.5025", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig(CONFIG)); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:35.016021", "n_pass": [5368, 442, 403], "score": "0.373", "loss": "1.4204", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); } if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:38.043199", "n_pass": [5374, 444, 404], "score": "0.368", "loss": "1.5254", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if (filterConfig(CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:40.998807", "n_pass": [5378, 446, 405], "score": "0.4641", "loss": "1.2742", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) != null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:45.438521", "n_pass": [5384, 449, 406], "score": "0.4408", "loss": "1.5519", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {2; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:49.851813", "n_pass": [5390, 452, 407], "score": "0.4413", "loss": "1.3297", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {; } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:51.356702", "n_pass": [5391, 453, 408], "score": "0.4589", "loss": "1.377", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) { } if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:52.835942", "n_pass": [5392, 454, 409], "score": "0.4177", "loss": "1.4114", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if (System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:13:55.785329", "n_pass": [5396, 456, 410], "score": "0.4403", "loss": "1.3436", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM) != null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:00.228629", "n_pass": [5402, 459, 411], "score": "0.381", "loss": "1.5617", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {Long(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:05.115297", "n_pass": [5410, 462, 412], "score": "0.4083", "loss": "1.3728", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L; } if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:07.038687", "n_pass": [5417, 463, 413], "score": "0.359", "loss": "1.6687", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null) { getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:15.910291", "n_pass": [5430, 469, 414], "score": "0.3634", "loss": "1.4809", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(DIR); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:20.387995", "n_pass": [5435, 472, 415], "score": "0.4707", "loss": "1.2723", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if (filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:24.823189", "n_pass": [5442, 475, 416], "score": "0.4269", "loss": "1.4138", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfignull) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:27.784651", "n_pass": [5445, 477, 417], "score": "0.3377", "loss": "1.7111", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG); } if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:30.754585", "n_pass": [5453, 479, 418], "score": "0.4114", "loss": "1.5859", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if (getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:33.726865", "n_pass": [5457, 481, 419], "score": "0.3747", "loss": "1.6213", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD) != null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:38.181348", "n_pass": [5463, 484, 420], "score": "0.3582", "loss": "1.6405", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!= null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:40.096845", "n_pass": [5466, 485, 421], "score": "0.4167", "loss": "1.3918", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null) {(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:41.590502", "n_pass": [5469, 486, 422], "score": "0.4174", "loss": "1.3117", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig(CONFIG)); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:44.568488", "n_pass": [5474, 488, 423], "score": "0.5144", "loss": "1.1742", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if (filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:49.016310", "n_pass": [5482, 491, 424], "score": "0.4894", "loss": "1.1247", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig) { valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:50.508629", "n_pass": [5486, 492, 425], "score": "0.4311", "loss": "1.5085", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ valueOf(getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:53.453292", "n_pass": [5489, 494, 426], "score": "0.4902", "loss": "1.1738", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); } if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:14:59.354304", "n_pass": [5503, 498, 427], "score": "0.3951", "loss": "1.4192", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if (filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:00.835287", "n_pass": [5505, 499, 428], "score": "0.3397", "loss": "1.6383", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfignull) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:03.816148", "n_pass": [5508, 501, 429], "score": "0.4141", "loss": "1.3662", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig) { uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:05.303090", "n_pass": [5510, 502, 430], "score": "0.3601", "loss": "1.571", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){ uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:06.785371", "n_pass": [5512, 503, 431], "score": "0.4192", "loss": "1.3411", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile = valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:09.730967", "n_pass": [5516, 505, 432], "score": "0.5146", "loss": "1.1168", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =valueOf(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:11.229062", "n_pass": [5517, 506, 433], "score": "0.3981", "loss": "1.4804", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter(FILE)).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:14.171532", "n_pass": [5521, 508, 434], "score": "0.4435", "loss": "1.4851", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)!= null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:38.625750", "n_pass": [5832, 523, 435], "score": "0.4608", "loss": "1.3102", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) ! null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:47.580566", "n_pass": [5853, 529, 436], "score": "0.3562", "loss": "1.5174", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null) {} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:49.065115", "n_pass": [5856, 530, 437], "score": "0.4273", "loss": "1.3364", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!= null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:55.398623", "n_pass": [5868, 534, 438], "score": "0.4441", "loss": "1.1753", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null) {(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:15:56.887998", "n_pass": [5871, 535, 439], "score": "0.4007", "loss": "1.637", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty != null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:03.218036", "n_pass": [5886, 539, 440], "score": "0.4395", "loss": "1.3129", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); } if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:09.203124", "n_pass": [5899, 543, 441], "score": "0.4133", "loss": "1.2713", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig) {(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:10.698856", "n_pass": [5904, 544, 442], "score": "0.4614", "loss": "1.2208", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); } if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:18.550162", "n_pass": [5931, 549, 443], "score": "0.4", "loss": "1.4434", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){ (getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:20.059176", "n_pass": [5937, 550, 444], "score": "0.3935", "loss": "1.3378", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter(CONTINUE)).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:23.038304", "n_pass": [5941, 552, 445], "score": "0.4948", "loss": "1.3382", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); } if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:30.546009", "n_pass": [5971, 557, 446], "score": "0.3344", "loss": "1.7183", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if (uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:32.053266", "n_pass": [5973, 558, 447], "score": "0.4825", "loss": "1.2316", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths=null){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:16:45.197195", "n_pass": [6114, 566, 448], "score": "0.3746", "loss": "1.5301", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if(System(SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:17:02.392793", "n_pass": [6299, 577, 449], "score": "0.4494", "loss": "1.3916", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta); if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:17:35.982736", "n_pass": [6424, 599, 450], "score": "0.3521", "loss": "1.4464", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH)); }if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:17:43.643178", "n_pass": [6673, 603, 451], "score": "0.3414", "loss": "1.8409", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig()); }if ((CONFIG) !null){} if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:17:50.128024", "n_pass": [6708, 607, 452], "score": "0.4062", "loss": "1.5027", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){} if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:17:56.066672", "n_pass": [6722, 611, 453], "score": "0.4481", "loss": "1.325", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig()); }if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:18:14.771040", "n_pass": [6786, 623, 454], "score": "0.3878", "loss": "1.407", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile = true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:18:23.804126", "n_pass": [6832, 629, 455], "score": "0.2974", "loss": "1.8437", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile= true; }(\"terracotta\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:18:28.249770", "n_pass": [6841, 632, 456], "score": "0.3296", "loss": "1.6686", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPathsnull){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile= true; }(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:18:34.050025", "n_pass": [6965, 635, 457], "score": "0.328", "loss": "1.9579", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty = null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile= true; }(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:18:52.618357", "n_pass": [7166, 646, 458], "score": "0.4024", "loss": "1.4387", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile =(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile= true; }(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:19:05.029987", "n_pass": [7231, 654, 459], "score": "0.3796", "loss": "1.4832", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile=(getInitParameter()).booleanValue(); }if(uploadMaxPerFile) {uploadMaxPerFile= true; }(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:19:09.569993", "n_pass": [7249, 657, 460], "score": "0.3289", "loss": "1.6901", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile=(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true; }(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:19:12.544505", "n_pass": [7256, 659, 461], "score": "0.412", "loss": "1.4878", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if ((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile=(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true;}(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:19:22.236728", "n_pass": [7550, 664, 462], "score": "0.3817", "loss": "1.4348", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile=(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true;}(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}
{"time": "2021-01-20 10:19:44.148871", "n_pass": [7647, 678, 463], "score": "0.3964", "loss": "1.4793", "code": "void init()throws ServletException{appUrl(\"\",null);chsDomain(\"\",null);chsUrl(\"\",null);useContentHostingDomain();(\"\");if(contentPaths){contentPaths=new String[]{};}(\"\");if(null){loginPaths=new String[]{\"\"};}if(null){contentExceptions=new String[]{\"\",\"\"};}if((CONFIG)){if(\"\".equalsIgnoreCase){}if(\"\".equalsIgnoreCase()){}if((s)){}{(\"\");}}if((USER)){((USER));}if((AUTH)){\"\".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true;}(\"\");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if(\"\".equals()){try{(allowBypassSession);}catch(Exception e){(\"\"+allowBypassSession);}}(null);getBoolean();}"}

Minimal simplified code:
void init()throws ServletException{appUrl("",null);chsDomain("",null);chsUrl("",null);useContentHostingDomain();("");if(contentPaths){contentPaths=new String[]{};}("");if(null){loginPaths=new String[]{""};}if(null){contentExceptions=new String[]{"",""};}if((CONFIG)){if("".equalsIgnoreCase){}if("".equalsIgnoreCase()){}if((s)){}{("");}}if((USER)){((USER));}if((AUTH)){"".equals((AUTH));}if((PLACEMENT)){(getInitParameter).getInitParameter();}if ((ENABLED)! null){(filterConfig());}if((CONFIG) !null){}if((SYSTEM)!=null){(System).L;} if (getProperty= null){ getProperty(); }if(filterConfig){(CONFIG);} if(getInitParameter(THRESHOLD)!=null){(filterConfig());}if(filterConfig){(getInitParameter()).booleanValue(); }if(filterConfig){uploadMaxPerFile(getInitParameter()).booleanValue(); }if(uploadMaxPerFile){uploadMaxPerFile= true;}("");(clusterTerracotta);if ((NAME)){(SAKAI);}if((DOMAIN)){(SAKAI);}(SAKAI);if("".equals()){try{(allowBypassSession);}catch(Exception e){(""+allowBypassSession);}}(null);getBoolean();}

