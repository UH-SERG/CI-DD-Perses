
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/sae/api/SecureAttrs_main.java
method_name = main
method_body = static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty("keystorefile", "mykeystore"); properties.setProperty("keystoretype", "JKS"); properties.setProperty("keystorepass", "22222222"); properties.setProperty("privatekeyalias", "test"); properties.setProperty("publickeyalias", "test"); properties.setProperty("privatekeypass", "22222222"); properties.setProperty("encryptionkeystrength", "56"); properties.setProperty("encryptionalgorithm", "DES"); SecureAttrs.init("testsym", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init("testasym", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println("TEST 1 START test encoded str ==========="); SecureAttrs secureattrs = SecureAttrs.getInstance("testsym"); String s = "YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ=="; Map map = secureattrs.verifyEncodedString(s, "secret"); if (map == null) System.out.println(" FAILED"); else System.out.println(" PASSED" + map); System.out.println("TEST 1 END ================"); System.out.println("TEST 2 START : encode followed by decode ==="); HashMap hashmap = new HashMap(); hashmap.put("branch", "bb"); hashmap.put("mail", "mm"); hashmap.put("sun.userid", "uu"); hashmap.put("sun.spappurl", "apapp"); System.out.println(" TEST 2a START : SYM KEY ==="); secureattrs = SecureAttrs.getInstance("testsym"); String s1 = "secret"; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println("Encoded string: " + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(" 2a PASSED " + map1); else System.out.println(" 2a FAILED " + map1); System.out.println(" TEST 2b START : ASYM KEY ==="); secureattrs = getInstance("testasym"); s1 = "test"; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println("Encoded string: " + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(" 2b PASSED " + map1); else System.out.println(" 2b FAILED " + map1); System.out.println("TEST 2 END ===================="); System.out.println("TEST 3 START : decode with incorrect secret"); System.out.println(" TEST 3a START : SYM KEY ==="); secureattrs = getInstance("testsym"); map1 = secureattrs.verifyEncodedString(s2, "junk"); if (map1 != null) System.out.println(" 3a FAILED " + map1); else System.out.println(" 3a PASSED " + map1); System.out.println(" TEST 3b START : ASYM KEY ==="); secureattrs = getInstance("testasym"); map1 = secureattrs.verifyEncodedString(s3, "junk"); if (map1 != null) System.out.println(" 3b FAILED " + map1); else System.out.println(" 3b PASSED " + map1); System.out.println("TEST 3 END ===================="); System.out.println("TEST 4 START : decode with correct secret"); System.out.println(" TEST 4a START : SYM KEY ==="); secureattrs = getInstance("testsym"); s1 = "secret"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(" 4a PASSED " + map1); else System.out.println(" 4a FAILED " + map1); System.out.println(" TEST 4b START : ASYM KEY ==="); secureattrs = getInstance("testasym"); s1 = "test"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(" 4a PASSED " + map1); else System.out.println(" 4a FAILED " + map1); System.out.println("TEST 4 END ===================="); System.out.println(" TEST 5a START : ASYM KEY ==="); secureattrs = getInstance("testasym"); s1 = "test"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println("Encrypted string: " + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(" 5a PASSED " + map1); else System.out.println(" 5a FAILED " + map1); System.out.println(" TEST 5b START : SYM KEY ==="); secureattrs = SecureAttrs.getInstance("testsym"); s1 = "secret"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println("Encrypted string: " + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(" 5b PASSED " + map1); else System.out.println(" 5b FAILED " + map1); System.out.println("TEST 5 END ===================="); } catch (Exception exception) { exception.printStackTrace(); System.out.println("TEST Exc : " + exception); } }
predict, score, loss = main, 0.9241203, 0.11118513

Trace of simplified code(s):
{"time": "2021-01-20 11:01:12.699216", "n_pass": [1, 1, 1], "score": "0.9563", "loss": "0.0656", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test\"); properties.setProperty(\"privatekeypass\", \"22222222\"); properties.setProperty(\"encryptionkeystrength\", \"56\"); properties.setProperty(\"encryptionalgorithm\", \"DES\"); SecureAttrs.init(\"testsym\", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(\"testasym\", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(\"TEST 1 START test encoded str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) System.out.println(\" FAILED\"); else System.out.println(\" PASSED\" + map); System.out.println(\"TEST 1 END ================\"); System.out.println(\"TEST 2 START : encode followed by decode ===\"); HashMap hashmap = new HashMap(); hashmap.put(\"branch\", \"bb\"); hashmap.put(\"mail\", \"mm\"); hashmap.put(\"sun.userid\", \"uu\"); hashmap.put(\"sun.spappurl\", \"apapp\"); System.out.println(\" TEST 2a START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); String s1 = \"secret\"; String s2 = secureattrs.getEncodedString(hashmap, s1); System.out.println(\"Encoded string: \" + s2); Map map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 2a PASSED \" + map1); else System.out.println(\" 2a FAILED \" + map1); System.out.println(\" TEST 2b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; String s3 = secureattrs.getEncodedString(hashmap, s1); System.out.println(\"Encoded string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 2b PASSED \" + map1); else System.out.println(\" 2b FAILED \" + map1); System.out.println(\"TEST 2 END ====================\"); System.out.println(\"TEST 3 START : decode with incorrect secret\"); System.out.println(\" TEST 3a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); map1 = secureattrs.verifyEncodedString(s2, \"junk\"); if (map1 != null) System.out.println(\" 3a FAILED \" + map1); else System.out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\" 3b PASSED \" + map1); System.out.println(\"TEST 3 END ====================\"); System.out.println(\"TEST 4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:14.370795", "n_pass": [9, 2, 2], "score": "0.9721", "loss": "0.0404", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test\"); properties.setProperty(\"privatekeypass\", \"22222222\"); properties.setProperty(\"encryptionkeystrength\", \"56\"); properties.setProperty(\"encryptionalgorithm\", \"DES\"); SecureAttrs.init(\"testsym\", SecureAttrs.SAE_CRYPTO_TYPE_SYM, properties); SecureAttrs.init(\"testasym\", SecureAttrs.SAE_CRYPTO_TYPE_ASYM, properties); System.out.println(\"TEST 1 START test encoded str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) System.out.println(\" FAILED\"); else System.out.println(\" PASSED\" + map); System.out.println(\"TEST 1 END ================\"); System.out.println(\"TEST 2 START : encode followed by decode ===\"); HashMap hashmap = new HashMap(); hashmap.put(\"branch\", \"bb\"); hashmap; map1 = secureattrs.verifyEncodedString(s2, \"junk\"); if (map1 != null) System.out.println(\" 3a FAILED \" + map1); else System.out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\" 3b PASSED \" + map1); System.out.println(\"TEST 3 END ====================\"); System.out.println(\"TEST 4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:16.529855", "n_pass": [45, 3, 3], "score": "0.9996", "loss": "0.0005", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) System.out.println(\" FAILED\"); else System.out.println(\" PASSED\" + map); System.out.println(\"TEST 1 END ================\"); System.out.println(\"TEST 2 START : encode followed by decode ===\"); HashMap hashmap = new HashMap(); hashmap.put(\"branch\", \"bb\"); hashmap; map1 = secureattrs.verifyEncodedString(s2, \"junk\"); if (map1 != null) System.out.println(\" 3a FAILED \" + map1); else System.out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\" 3b PASSED \" + map1); System.out.println(\"TEST 3 END ====================\"); System.out.println(\"TEST 4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:18.145287", "n_pass": [47, 4, 4], "score": "0.9837", "loss": "0.0226", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null)  hashmap; map1 = secureattrs.verifyEncodedString(s2, \"junk\"); if (map1 != null) System.out.println(\" 3a FAILED \" + map1); else System.out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\" 3b PASSED \" + map1); System.out.println(\"TEST 3 END ====================\"); System.out.println(\"TEST 4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:20.226211", "n_pass": [78, 5, 5], "score": "0.9906", "loss": "0.0128", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\" 3b PASSED \" + map1); System.out.println(\"TEST 3 END ====================\"); System.out.println(\"TEST 4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:21.827678", "n_pass": [80, 6, 6], "score": "0.9454", "loss": "0.088", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\" TEST 4b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:23.402205", "n_pass": [83, 7, 7], "score": "0.9778", "loss": "0.0304", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else Systems1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else System.out.println(\" 4a FAILED \" + map1); System.out.println(\"TEST 4 END ====================\"); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:24.969469", "n_pass": [85, 8, 8], "score": "0.8853", "loss": "0.1615", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = \"secret\"; map1 = secureattrs.verifyEncodedString(s2, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); else Systems1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:26.979464", "n_pass": [100, 9, 9], "score": "0.9989", "loss": "0.0015", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 =s1 = \"test\"; map1 = secureattrs.verifyEncodedString(s3, s1); if (map1 != null) System.out.println(\" 4a PASSED \" + map1); System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:28.511102", "n_pass": [101, 10, 10], "score": "0.9332", "loss": "0.1029", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5b FAILED \" + map1); System.out.println(\"TEST 5 END ====================\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:30.566253", "n_pass": [155, 11, 11], "score": "0.9644", "loss": "0.0492", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; Properties properties = new Properties(); properties.setProperty(\"keystorefile\", \"mykeystore\"); properties.setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:32.096375", "n_pass": [159, 12, 12], "score": "0.9668", "loss": "0.0449", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"22222222\"); properties.setProperty(\"privatekeyalias\", \"test\"); properties.setProperty(\"publickeyalias\", \"test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:33.630933", "n_pass": [161, 13, 13], "score": "0.8868", "loss": "0.1724", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222test str ===========\"); SecureAttrs secureattrs = SecureAttrs.getInstance(\"testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:35.134738", "n_pass": [162, 14, 14], "score": "0.9945", "loss": "0.0075", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG1haWwuY29tfHN1bi51c2VyaWQ9dXNlcjV8U2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:36.740224", "n_pass": [236, 15, 15], "score": "0.9972", "loss": "0.004", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QGU2lnbmF0dXJlPVRTMTE3NDI3ODY1OTM2NlRTbzI2MkhoL3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:38.249764", "n_pass": [237, 16, 16], "score": "0.8544", "loss": "0.1972", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null) out.println(\" 3a PASSED \" + map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:39.763515", "n_pass": [241, 17, 17], "score": "0.9988", "loss": "0.0015", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" TEST 3b START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:41.270453", "n_pass": [243, 18, 18], "score": "0.9944", "loss": "0.0085", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct secret\"); System.out.println(\" TEST 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:43.414529", "n_pass": [250, 19, 19], "score": "0.8202", "loss": "0.2889", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct 4a START : SYM KEY ===\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:44.921109", "n_pass": [251, 20, 20], "score": "0.9842", "loss": "0.0216", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST 5a START : ASYM KEY ===\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:46.430414", "n_pass": [254, 21, 21], "score": "0.9759", "loss": "0.0289", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\"); s1 = \"test\"; s3 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:47.907763", "n_pass": [256, 22, 22], "score": "0.964", "loss": "0.0586", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\"); secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:49.382095", "n_pass": [257, 23, 23], "score": "0.9431", "loss": "0.0818", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = SecureAttrs.getInstance(\"testsym\"); s1 = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:50.890349", "n_pass": [267, 24, 24], "score": "0.9153", "loss": "0.1387", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap, s1, s1); System.out.println(\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:52.342038", "n_pass": [269, 25, 25], "score": "0.9055", "loss": "0.1447", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\" 5===============\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:53.820770", "n_pass": [275, 26, 26], "score": "0.9934", "loss": "0.009", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystoretype\", \"JKS\"); properties.setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:55.671379", "n_pass": [281, 27, 27], "score": "0.9528", "loss": "0.0822", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, \"secret\"); if (map == null+ map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:57.154400", "n_pass": [286, 28, 28], "score": "0.9955", "loss": "0.0068", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs = getInstance(\"testasym\");; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:01:59.159289", "n_pass": [409, 29, 29], "score": "0.9715", "loss": "0.0425", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs ;; System.out.println(\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:00.630264", "n_pass": [410, 30, 30], "score": "0.9699", "loss": "0.0426", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println(\" 5a PASSED \" + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:02.102023", "n_pass": [418, 31, 31], "score": "0.9588", "loss": "0.0558", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println(\" 5a FAILED \" + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:03.580087", "n_pass": [421, 32, 32], "score": "0.9206", "loss": "0.1099", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" TEST 5b START : SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:05.036761", "n_pass": [424, 33, 33], "score": "0.9841", "loss": "0.0224", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\"  SYM KEY ===\"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:06.504953", "n_pass": [425, 34, 34], "score": "0.9544", "loss": "0.0624", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,\"Encrypted string: \" + s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:07.981858", "n_pass": [429, 35, 35], "score": "0.968", "loss": "0.0439", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s2, s1, s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:09.463796", "n_pass": [432, 36, 36], "score": "0.9565", "loss": "0.0731", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) { exception.printStackTrace(); System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:10.937373", "n_pass": [441, 37, 37], "score": "0.9875", "loss": "0.0193", "code": "static public void main(String[] args) { try { SecureAttrs.dbg = true; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:12.414363", "n_pass": [448, 38, 38], "score": "0.9588", "loss": "0.0712", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\"); String s = \"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:13.863417", "n_pass": [452, 39, 39], "score": "0.9339", "loss": "0.1078", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R1dDRJc0U1V3ZqWjVSLzZkM0FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:15.297254", "n_pass": [454, 40, 40], "score": "0.9869", "loss": "0.0201", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null) System.out.println( + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:16.923791", "n_pass": [483, 41, 41], "score": "0.9984", "loss": "0.0026", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null + map1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:18.543706", "n_pass": [649, 42, 42], "score": "0.9781", "loss": "0.031", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); else System.out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:19.982295", "n_pass": [650, 43, 43], "score": "0.9842", "loss": "0.0201", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println( + map1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:21.416849", "n_pass": [652, 44, 44], "score": "0.9975", "loss": "0.0038", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); System.out.println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:22.881381", "n_pass": [654, 45, 45], "score": "0.9731", "loss": "0.0358", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \"); secureattrs = \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:24.352257", "n_pass": [657, 46, 46], "score": "0.8823", "loss": "0.1763", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \"); \"secret\"; s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:25.780337", "n_pass": [658, 47, 47], "score": "0.9952", "loss": "0.0063", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); map1 = secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:27.243296", "n_pass": [664, 48, 48], "score": "0.9582", "loss": "0.0579", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\" 5b PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:28.700172", "n_pass": [672, 49, 49], "score": "0.9374", "loss": "0.08", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" + map1); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:30.148712", "n_pass": [674, 50, 50], "score": "0.8299", "loss": "0.2508", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {System.out.println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:31.595132", "n_pass": [682, 51, 51], "score": "0.792", "loss": "0.3016", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST Exc : \" + exception); } }"}
{"time": "2021-01-20 11:02:33.029996", "n_pass": [684, 52, 52], "score": "0.997", "loss": "0.004", "code": "static public void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:34.474087", "n_pass": [688, 53, 53], "score": "0.9537", "loss": "0.0611", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:36.332209", "n_pass": [699, 54, 54], "score": "0.9523", "loss": "0.0676", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"2222testsym\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:37.784609", "n_pass": [700, 55, 55], "score": "0.9928", "loss": "0.0091", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1QG3R10FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:39.215454", "n_pass": [703, 56, 56], "score": "0.9819", "loss": "0.022", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI110FzPQ==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:40.648689", "n_pass": [704, 57, 57], "score": "0.957", "loss": "0.0567", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map map = secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:42.101169", "n_pass": [707, 58, 58], "score": "0.9759", "loss": "0.0335", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map= secureattrs.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:43.519650", "n_pass": [708, 59, 59], "score": "0.9889", "loss": "0.0152", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString(s, + map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:44.941971", "n_pass": [710, 60, 60], "score": "0.998", "loss": "0.0027", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(\" =\"); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:46.366427", "n_pass": [714, 61, 61], "score": "0.9985", "loss": "0.0022", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs = getInstance(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:47.785790", "n_pass": [716, 62, 62], "score": "0.9796", "loss": "0.0269", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); map1 = secureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:49.203590", "n_pass": [719, 63, 63], "score": "0.9823", "loss": "0.0244", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(s3, \"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:50.621791", "n_pass": [721, 64, 64], "score": "0.99", "loss": "0.013", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 != null) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:52.044455", "n_pass": [725, 65, 65], "score": "0.9504", "loss": "0.0658", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); else System.out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:53.489162", "n_pass": [732, 66, 66], "score": "0.9834", "loss": "0.0214", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START : decode with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:54.916625", "n_pass": [735, 67, 67], "score": "0.9525", "loss": "0.0632", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START with correct\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:56.329751", "n_pass": [736, 68, 68], "score": "0.9368", "loss": "0.0834", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); secureattrs = getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:57.774764", "n_pass": [738, 69, 69], "score": "0.9474", "loss": "0.07", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\"); s1 = System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:02:59.194629", "n_pass": [741, 70, 70], "score": "0.964", "loss": "0.0421", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3); map1 = secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:00.637320", "n_pass": [750, 71, 71], "score": "0.9941", "loss": "0.0071", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:02.050300", "n_pass": [753, 72, 72], "score": "0.9969", "loss": "0.0039", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\"; Map.verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:03.944384", "n_pass": [800, 73, 73], "score": "0.9685", "loss": "0.0368", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString( map1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:11.871449", "n_pass": [1037, 74, 74], "score": "0.9794", "loss": "0.024", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); System.out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:13.289954", "n_pass": [1039, 75, 75], "score": "0.9731", "loss": "0.033", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); out.println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:14.700599", "n_pass": [1040, 76, 76], "score": "0.8743", "loss": "0.1668", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println(); secureattrs(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:16.123296", "n_pass": [1043, 77, 77], "score": "0.9952", "loss": "0.0057", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\"); mapsecureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:17.533161", "n_pass": [1047, 78, 78], "score": "0.9555", "loss": "0.0543", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");secureattrs.verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:18.939539", "n_pass": [1048, 79, 79], "score": "0.9548", "loss": "0.0557", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map1 ) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:20.759011", "n_pass": [1055, 80, 80], "score": "0.9766", "loss": "0.0277", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) System.out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:22.210036", "n_pass": [1057, 81, 81], "score": "0.9928", "loss": "0.0086", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) out.println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:23.614184", "n_pass": [1058, 82, 82], "score": "0.79", "loss": "0.2757", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\" 3b FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:25.020927", "n_pass": [1061, 83, 83], "score": "0.985", "loss": "0.0183", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  FAILED \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:26.423810", "n_pass": [1062, 84, 84], "score": "0.9596", "loss": "0.0506", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" + map1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:27.829757", "n_pass": [1065, 85, 85], "score": "0.934", "loss": "0.0901", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); out.println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:29.250887", "n_pass": [1068, 86, 86], "score": "0.9941", "loss": "0.0072", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4 START\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:30.653075", "n_pass": [1071, 87, 87], "score": "0.9817", "loss": "0.0217", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System.out.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:32.094715", "n_pass": [1079, 88, 88], "score": "0.9864", "loss": "0.0183", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System.println(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:33.495474", "n_pass": [1080, 89, 89], "score": "0.9954", "loss": "0.0056", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\" TEST\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:34.899793", "n_pass": [1082, 90, 90], "score": "0.9775", "loss": "0.0291", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); secureattrs (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:36.299563", "n_pass": [1085, 91, 91], "score": "0.9681", "loss": "0.0382", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\"Encrypted string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:37.712333", "n_pass": [1087, 92, 92], "score": "0.9713", "loss": "0.0357", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\"string: \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:39.109968", "n_pass": [1088, 93, 93], "score": "0.9569", "loss": "0.0528", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" + s3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:40.513021", "n_pass": [1091, 94, 94], "score": "0.9927", "loss": "0.0089", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs.verifyEncodedString(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:41.934130", "n_pass": [1095, 95, 95], "score": "0.9918", "loss": "0.0097", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3, s1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:43.336565", "n_pass": [1098, 96, 96], "score": "0.9609", "loss": "0.0501", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); if (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:44.738438", "n_pass": [1101, 97, 97], "score": "0.9324", "loss": "0.0876", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map1 != null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:46.139007", "n_pass": [1103, 98, 98], "score": "0.9971", "loss": "0.0038", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!= null1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:47.553547", "n_pass": [1105, 99, 99], "score": "0.9928", "loss": "0.0089", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); out.println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:48.983391", "n_pass": [1108, 100, 100], "score": "0.9601", "loss": "0.0538", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  s2 = secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:50.777481", "n_pass": [1117, 101, 101], "score": "0.982", "loss": "0.0234", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  s= secureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:52.174473", "n_pass": [1118, 102, 102], "score": "0.9895", "loss": "0.0127", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  ssecureattrs.getEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:53.568370", "n_pass": [1119, 103, 103], "score": "0.9929", "loss": "0.0082", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString(hashmap,+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:54.980599", "n_pass": [1121, 104, 104], "score": "0.9839", "loss": "0.02", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString(+ s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:56.371523", "n_pass": [1122, 105, 105], "score": "0.993", "loss": "0.0089", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString(s2); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:57.796148", "n_pass": [1123, 106, 106], "score": "0.9963", "loss": "0.0045", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString(); mapsecureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:03:59.190582", "n_pass": [1125, 107, 107], "score": "0.9974", "loss": "0.003", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();secureattrs.verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:00.582111", "n_pass": [1126, 108, 108], "score": "0.9925", "loss": "0.0094", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(s1); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:01.973780", "n_pass": [1128, 109, 109], "score": "0.9927", "loss": "0.0087", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1 != null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:03.404666", "n_pass": [1133, 110, 110], "score": "0.9813", "loss": "0.0227", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1= null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:04.790580", "n_pass": [1134, 111, 111], "score": "0.9163", "loss": "0.1178", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System.out.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:06.184305", "n_pass": [1137, 112, 112], "score": "0.949", "loss": "0.0652", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System.println(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:07.571051", "n_pass": [1138, 113, 113], "score": "0.9905", "loss": "0.0115", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"PASSED \" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:08.981434", "n_pass": [1140, 114, 114], "score": "0.9929", "loss": "0.0086", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); else System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:10.390023", "n_pass": [1143, 115, 115], "score": "0.993", "loss": "0.0087", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System.out.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:11.807023", "n_pass": [1145, 116, 116], "score": "0.9987", "loss": "0.0017", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System.println(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:13.192212", "n_pass": [1146, 117, 117], "score": "0.9921", "loss": "0.0104", "code": " void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:14.613899", "n_pass": [1164, 118, 118], "score": "0.9898", "loss": "0.0127", "code": "void main(String[] args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:16.764117", "n_pass": [1172, 119, 119], "score": "0.9969", "loss": "0.0038", "code": "void main(String[]args) { try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:18.171855", "n_pass": [1175, 120, 120], "score": "0.993", "loss": "0.0082", "code": "void main(String[]args){ try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:19.559119", "n_pass": [1177, 121, 121], "score": "0.9954", "loss": "0.0056", "code": "void main(String[]args){try { ; setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:20.954093", "n_pass": [1180, 122, 122], "score": "0.9962", "loss": "0.0049", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"22\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:22.373034", "n_pass": [1185, 123, 123], "score": "0.9942", "loss": "0.007", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"YnJhbmNoPTAwNXxtYWlsPXVzZXI1==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:23.795213", "n_pass": [1188, 124, 124], "score": "0.9924", "loss": "0.0098", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"==\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:25.177244", "n_pass": [1189, 125, 125], "score": "0.9882", "loss": "0.0144", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\");  System(\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:26.977478", "n_pass": [1220, 126, 126], "score": "0.9805", "loss": "0.0251", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s3,1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:28.375118", "n_pass": [1231, 127, 127], "score": "0.9731", "loss": "0.0335", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map!=1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:29.770977", "n_pass": [1235, 128, 128], "score": "0.9471", "loss": "0.0658", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map1); println(1); println(\" \");  sgetEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:31.576315", "n_pass": [1245, 129, 129], "score": "0.9796", "loss": "0.0259", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (map1null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:33.364454", "n_pass": [1252, 130, 130], "score": "0.9846", "loss": "0.019", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null) System(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:34.745207", "n_pass": [1254, 131, 131], "score": "0.9833", "loss": "0.0214", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" ); System(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:36.152657", "n_pass": [1258, 132, 132], "score": "0.9554", "loss": "0.0578", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3);  secureattrs(s1); (map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:04:38.763988", "n_pass": [1332, 133, 133], "score": "0.9819", "loss": "0.0234", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1); (map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:00.975945", "n_pass": [1602, 134, 134], "score": "0.986", "loss": "0.018", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(map1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:02.358289", "n_pass": [1604, 135, 135], "score": "0.9866", "loss": "0.016", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1); println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:03.748565", "n_pass": [1608, 136, 136], "score": "0.9668", "loss": "0.0421", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);println(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:05.128107", "n_pass": [1609, 137, 137], "score": "0.987", "loss": "0.0154", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1); println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:06.559967", "n_pass": [1614, 138, 138], "score": "0.9606", "loss": "0.0476", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);println(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:07.959098", "n_pass": [1615, 139, 139], "score": "0.9672", "loss": "0.0407", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\" \"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:09.346236", "n_pass": [1618, 140, 140], "score": "0.9489", "loss": "0.068", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\"); getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:10.747662", "n_pass": [1622, 141, 141], "score": "0.9704", "loss": "0.0354", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString(); if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:12.144143", "n_pass": [1631, 142, 142], "score": "0.9739", "loss": "0.0314", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if (null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:13.547776", "n_pass": [1633, 143, 143], "score": "0.9841", "loss": "0.0202", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\" );(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:14.938411", "n_pass": [1640, 144, 144], "score": "0.9765", "loss": "0.0281", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"=\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:16.340193", "n_pass": [1645, 145, 145], "score": "0.9605", "loss": "0.0469", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\"); } catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:17.729334", "n_pass": [1649, 146, 146], "score": "0.9869", "loss": "0.0168", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");} catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:19.110161", "n_pass": [1651, 147, 147], "score": "0.952", "loss": "0.063", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch (Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:20.517143", "n_pass": [1653, 148, 148], "score": "0.9771", "loss": "0.0279", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception) {println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:21.906299", "n_pass": [1659, 149, 149], "score": "0.9809", "loss": "0.0224", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){println(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:23.295039", "n_pass": [1661, 150, 150], "score": "0.9914", "loss": "0.0111", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"TEST \" + exception); } }"}
{"time": "2021-01-20 11:05:24.676555", "n_pass": [1664, 151, 151], "score": "0.9546", "loss": "0.0613", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\" \" + exception); } }"}
{"time": "2021-01-20 11:05:26.054676", "n_pass": [1665, 152, 152], "score": "0.9842", "loss": "0.0191", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\" + exception); } }"}
{"time": "2021-01-20 11:05:27.454480", "n_pass": [1667, 153, 153], "score": "0.9486", "loss": "0.066", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+ exception); } }"}
{"time": "2021-01-20 11:05:28.861188", "n_pass": [1669, 154, 154], "score": "0.9803", "loss": "0.0252", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception); } }"}
{"time": "2021-01-20 11:05:30.246219", "n_pass": [1673, 155, 155], "score": "0.9845", "loss": "0.0177", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);} }"}
{"time": "2021-01-20 11:05:31.625959", "n_pass": [1675, 156, 156], "score": "0.9289", "loss": "0.0978", "code": "void main(String[]args){try { setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:33.778646", "n_pass": [1688, 157, 157], "score": "0.9713", "loss": "0.034", "code": "void main(String[]args){try{ setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:35.179322", "n_pass": [1690, 158, 158], "score": "0.9872", "loss": "0.0158", "code": "void main(String[]args){try{setProperty(\"keystorepass\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:36.558756", "n_pass": [1694, 159, 159], "score": "0.9788", "loss": "0.0273", "code": "void main(String[]args){try{setProperty(\"\", \"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:37.938250", "n_pass": [1697, 160, 160], "score": "0.9585", "loss": "0.0539", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString(1); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:39.329145", "n_pass": [1707, 161, 161], "score": "0.9812", "loss": "0.0242", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString(); println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:40.740346", "n_pass": [1710, 162, 162], "score": "0.9881", "loss": "0.0161", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"testasym\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:42.127384", "n_pass": [1717, 163, 163], "score": "0.9813", "loss": "0.0237", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");verifyEncodedString(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:43.504686", "n_pass": [1721, 164, 164], "score": "0.9598", "loss": "0.0511", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"junk\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:44.900918", "n_pass": [1724, 165, 165], "score": "0.9655", "loss": "0.0435", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\"); if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:46.309384", "n_pass": [1728, 166, 166], "score": "0.968", "loss": "0.0401", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if (map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:48.065201", "n_pass": [1730, 167, 167], "score": "0.9913", "loss": "0.0111", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map) println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:49.440271", "n_pass": [1734, 168, 168], "score": "0.9434", "loss": "0.0696", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)println(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:50.817220", "n_pass": [1735, 169, 169], "score": "0.9782", "loss": "0.0269", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"  \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:52.216572", "n_pass": [1738, 170, 170], "score": "0.9868", "loss": "0.0161", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\" \" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:53.588105", "n_pass": [1739, 171, 171], "score": "0.9884", "loss": "0.0147", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\" +1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:54.962369", "n_pass": [1741, 172, 172], "score": "0.9776", "loss": "0.0277", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1); println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:56.349143", "n_pass": [1746, 173, 173], "score": "0.9819", "loss": "0.0223", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);println(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:57.724981", "n_pass": [1747, 174, 174], "score": "0.9753", "loss": "0.0311", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"4\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:05:59.132292", "n_pass": [1750, 175, 175], "score": "0.9548", "loss": "0.0603", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\"); getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:00.514547", "n_pass": [1754, 176, 176], "score": "0.98", "loss": "0.0252", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");getInstance(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:01.889572", "n_pass": [1755, 177, 177], "score": "0.984", "loss": "0.0216", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"testsym\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:03.417646", "n_pass": [1758, 178, 178], "score": "0.9892", "loss": "0.0146", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\"); (\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:04.792802", "n_pass": [1762, 179, 179], "score": "0.9825", "loss": "0.0224", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\"); (\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:06.192630", "n_pass": [1768, 180, 180], "score": "0.9828", "loss": "0.0219", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\");(\" \" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:07.564374", "n_pass": [1771, 181, 181], "score": "0.986", "loss": "0.0188", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\");(\"\" +3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:08.939149", "n_pass": [1773, 182, 182], "score": "0.9841", "loss": "0.0207", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\");(\"\"+3); (s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:10.317191", "n_pass": [1778, 183, 183], "score": "0.9827", "loss": "0.022", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\");(\"\"+3);(s1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}
{"time": "2021-01-20 11:06:11.691366", "n_pass": [1780, 184, 184], "score": "0.9882", "loss": "0.0147", "code": "void main(String[]args){try{setProperty(\"\",\"\");\"\".verifyEncodedString();println();(\"\");(\"\");if(map)(\"\"+1);(\"\");(\"\");(\"\");(\"\"+3);(1);(1);(1);(\"\");getEncodedString();verifyEncodedString();if(null)(\"\");(\"\");}catch(Exception exception){(\"\"+exception);}}"}

Minimal simplified code:
void main(String[]args){try{setProperty("","");"".verifyEncodedString();println();("");("");if(map)(""+1);("");("");("");(""+3);(1);(1);(1);("");getEncodedString();verifyEncodedString();if(null)("");("");}catch(Exception exception){(""+exception);}}

