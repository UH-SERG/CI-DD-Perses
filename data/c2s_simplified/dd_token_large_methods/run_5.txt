
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__apex-core/engine/src/main/java/com/datatorrent/stram/StramLocalCluster_run.java
method_name = run
method_body = @Override @SuppressWarnings({ "SleepWhileInLoop", "ResultOfObjectAllocationIgnored" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop, 0, 1024 * 1024, 8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info("Buffer server started: {}", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info("Container {} restart.", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info("Stopping on exit condition"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug("Sleep interrupted", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug("Wait for {} to terminate interrupted", thread, e); } if (thread.isAlive()) { LOG.warn("Container thread {} is still alive", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn("Exception during StreamingContainerManager teardown", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn("Exception during BufferServer stop", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug("Wait for {} to terminate interrupted", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn("Exception during {} stop", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn("Event loop {} is still active", StreamingContainer.eventloop); } } } LOG.info("Application finished."); }
predict, score, loss = run, 0.50603384, 1.1304599

Trace of simplified code(s):
{"time": "2021-01-20 10:40:04.566859", "n_pass": [1, 1, 1], "score": "0.6871", "loss": "0.7591", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop, 0, 1024 * 1024, 8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate interrupted\", thread, e); } if (thread.isAlive()) { LOG.warn(\"Container thread {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:06.495842", "n_pass": [114, 2, 2], "score": "0.3912", "loss": "1.331", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop, 0, 1024 * 1024, 8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:10.008680", "n_pass": [231, 4, 3], "score": "0.4939", "loss": "1.0625", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r = new ContainerHeartbeatResponse(); r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:15.382026", "n_pass": [436, 7, 4], "score": "0.3249", "loss": "2.0367", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainers.isEmpty() && dnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:18.609568", "n_pass": [455, 9, 5], "score": "0.6785", "loss": "0.6962", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && System.currentTimeMillis() > endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:21.746586", "n_pass": [460, 11, 6], "score": "0.4731", "loss": "1.1382", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate {} is still alive\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:25.211853", "n_pass": [491, 13, 7], "score": "0.5796", "loss": "1.0514", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { StreamingContainer.eventloop.stop(); eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:26.888631", "n_pass": [507, 14, 8], "score": "0.674", "loss": "0.7341", "code": "@Override @SuppressWarnings({ \"SleepWhileInLoop\", \"ResultOfObjectAllocationIgnored\" }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:30.116996", "n_pass": [526, 16, 9], "score": "0.5068", "loss": "1.0413", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) { Thread eventLoopThread = null; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:31.676790", "n_pass": [529, 17, 10], "score": "0.4252", "loss": "1.5038", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest cdr = dnmgr.containerStartRequests.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:35.381584", "n_pass": [568, 19, 11], "score": "0.6684", "loss": "0.8208", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillis > 0 && endMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:37.143130", "n_pass": [579, 20, 12], "score": "0.7165", "loss": "0.6553", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait for {} to terminate\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:38.903446", "n_pass": [609, 21, 13], "score": "0.6605", "loss": "0.6275", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop.start(); bufferServer = new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:42.656598", "n_pass": [650, 23, 14], "score": "0.7242", "loss": "0.5929", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run().getPort()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:48.728599", "n_pass": [1001, 26, 15], "score": "0.4757", "loss": "1.2888", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr.containerStopRequests.values()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:51.936723", "n_pass": [1018, 28, 16], "score": "0.4861", "loss": "1.2594", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (c != null) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:53.544989", "n_pass": [1025, 29, 17], "score": "0.6918", "loss": "0.6912", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) { ContainerHeartbeatResponse r; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:55.112153", "n_pass": [1027, 30, 18], "score": "0.313", "loss": "1.7821", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {; r.shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:56.706496", "n_pass": [1028, 31, 19], "score": "0.3901", "loss": "1.3484", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = StreamingContainerUmbilicalProtocol.ShutdownType.ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:40:59.836511", "n_pass": [1030, 33, 20], "score": "0.4339", "loss": "1.2755", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\"Container {} restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:01.438615", "n_pass": [1038, 34, 21], "score": "0.8405", "loss": "0.3751", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!dnmgr.containerStartRequests.isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:03.239362", "n_pass": [1045, 35, 22], "score": "0.8231", "loss": "0.373", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest.poll(); if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:04.809722", "n_pass": [1048, 36, 23], "score": "0.4258", "loss": "1.4004", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersdnmgr.containerStartRequests.isEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:06.438861", "n_pass": [1062, 37, 24], "score": "0.5615", "loss": "1.131", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) { appDone = true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:09.570053", "n_pass": [1069, 39, 25], "score": "0.5332", "loss": "1.0395", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) { true; } try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:11.141222", "n_pass": [1070, 40, 26], "score": "0.5243", "loss": "1.0417", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null && exitCondition.call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:12.713844", "n_pass": [1075, 41, 27], "score": "0.4498", "loss": "1.2816", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null .call()) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:14.300874", "n_pass": [1076, 42, 28], "score": "0.8355", "loss": "0.5401", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on exit condition\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:15.851986", "n_pass": [1080, 43, 29], "score": "0.8458", "loss": "0.298", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); appDone = true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:17.393714", "n_pass": [1082, 44, 30], "score": "0.3038", "loss": "2.1168", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) { break; } if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:18.964151", "n_pass": [1087, 45, 31], "score": "0.7443", "loss": "0.9067", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(1000); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:20.564944", "n_pass": [1097, 46, 32], "score": "0.5166", "loss": "0.813", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc.getContainerId(), lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:22.211693", "n_pass": [1115, 47, 33], "score": "0.7052", "loss": "0.7736", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try { thread.join(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:23.822748", "n_pass": [1124, 48, 34], "score": "0.5807", "loss": "1.0014", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug(\"Wait\", thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:25.431931", "n_pass": [1131, 49, 35], "score": "0.5315", "loss": "0.9064", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\"Exception during StreamingContainerManager teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:27.039762", "n_pass": [1141, 50, 36], "score": "0.6667", "loss": "0.7309", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress != null) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:28.592157", "n_pass": [1145, 51, 37], "score": "0.6092", "loss": "1.0285", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"Wait for {} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:30.284659", "n_pass": [1165, 52, 38], "score": "0.459", "loss": "1.2021", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\"} to terminate interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:31.820714", "n_pass": [1166, 53, 39], "score": "0.3639", "loss": "1.6515", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception during {} stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:33.426772", "n_pass": [1174, 54, 40], "score": "0.5432", "loss": "1.4132", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event loop {} is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:36.588136", "n_pass": [1182, 56, 41], "score": "0.6655", "loss": "0.8286", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Event is still active\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:38.121482", "n_pass": [1183, 57, 42], "score": "0.4537", "loss": "1.5004", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { eventLoopThread = StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:40.532899", "n_pass": [1204, 58, 43], "score": "0.5215", "loss": "1.1933", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { StreamingContainer.eventloop= new Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:42.101322", "n_pass": [1206, 59, 44], "score": "0.4385", "loss": "1.4026", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { StreamingContainer.eventloopServer(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {shutdown = ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:45.533149", "n_pass": [1246, 61, 45], "score": "0.6305", "loss": "1.2031", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { StreamingContainer.eventloopServer(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone = true; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:47.241949", "n_pass": [1277, 62, 46], "score": "0.3261", "loss": "1.9153", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { StreamingContainer.eventloopServer(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer.eventloop, e); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:49.387708", "n_pass": [1372, 63, 47], "score": "0.4148", "loss": "1.548", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) { StreamingContainer.eventloopServer(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:51.833093", "n_pass": [1398, 64, 48], "score": "0.4823", "loss": "1.1774", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer server started: {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:41:53.440407", "n_pass": [1418, 65, 49], "score": "0.6951", "loss": "0.6773", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } long endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:05.628268", "n_pass": [1986, 67, 50], "score": "0.5649", "loss": "0.9194", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr()) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:08.783587", "n_pass": [2003, 69, 51], "score": "0.646", "loss": "0.6416", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { StreamingContainer c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:10.336830", "n_pass": [2006, 70, 52], "score": "0.8202", "loss": "0.4018", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = childContainers.get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:11.884596", "n_pass": [2009, 71, 53], "score": "0.6896", "loss": "0.6137", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {ABORT; c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:13.466471", "n_pass": [2017, 72, 54], "score": "0.7088", "loss": "0.6955", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c.processHeartbeatResponse(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:15.019372", "n_pass": [2019, 73, 55], "score": "0.5895", "loss": "0.8854", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr.containerStopRequests.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:16.575312", "n_pass": [2024, 74, 56], "score": "0.6391", "loss": "0.8593", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr.remove(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:18.112215", "n_pass": [2025, 75, 57], "score": "0.5439", "loss": "1.0717", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG.info(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:19.668161", "n_pass": [2029, 76, 58], "score": "0.7046", "loss": "0.9365", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\" restart.\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:21.208261", "n_pass": [2031, 77, 59], "score": "0.8816", "loss": "0.4172", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); dnmgr.scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:22.782589", "n_pass": [2036, 78, 60], "score": "0.6913", "loss": "0.8038", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) { ContainerStartRequest; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:24.382041", "n_pass": [2046, 79, 61], "score": "0.4376", "loss": "1.6265", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdr != null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:27.458152", "n_pass": [2050, 81, 62], "score": "0.7211", "loss": "0.6652", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdr= null) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:28.999378", "n_pass": [2051, 82, 63], "score": "0.9066", "loss": "0.1952", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { new LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:30.546648", "n_pass": [2054, 83, 64], "score": "0.8048", "loss": "0.3633", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdr, containerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:32.113501", "n_pass": [2057, 84, 65], "score": "0.9737", "loss": "0.1022", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { dnmgr.monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:33.687228", "n_pass": [2066, 85, 66], "score": "0.6063", "loss": "0.9792", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) { appDone; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:35.269459", "n_pass": [2076, 86, 67], "score": "0.635", "loss": "0.8224", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {; } if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:36.806306", "n_pass": [2077, 87, 68], "score": "0.7731", "loss": "0.4737", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition != null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:38.413644", "n_pass": [2088, 88, 69], "score": "0.7019", "loss": "0.7932", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition= null ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:40.220061", "n_pass": [2089, 89, 70], "score": "0.7977", "loss": "0.5821", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitConditionnull ) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:41.767892", "n_pass": [2090, 90, 71], "score": "0.8334", "loss": "0.4172", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { LOG.info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:43.338828", "n_pass": [2093, 91, 72], "score": "0.7302", "loss": "0.7526", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping on\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:44.881839", "n_pass": [2096, 92, 73], "score": "0.4991", "loss": "1.0498", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\"); true; } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:46.420048", "n_pass": [2099, 93, 74], "score": "0.7186", "loss": "0.6071", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread.interrupted()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:48.007726", "n_pass": [2110, 94, 75], "score": "0.8429", "loss": "0.4352", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread()) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:49.556949", "n_pass": [2111, 95, 76], "score": "0.6664", "loss": "0.8267", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) { break; } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:51.098131", "n_pass": [2114, 96, 77], "score": "0.7092", "loss": "0.6493", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { Thread.sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:52.689459", "n_pass": [2123, 97, 78], "score": "0.7152", "loss": "0.641", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG.debug(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:54.273269", "n_pass": [2133, 98, 79], "score": "0.4325", "loss": "1.1156", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"Sleep interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:55.807195", "n_pass": [2135, 99, 80], "score": "0.6209", "loss": "0.9267", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e); break; } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:57.354111", "n_pass": [2140, 100, 81], "score": "0.7833", "loss": "0.6136", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : childContainers.values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:42:58.946921", "n_pass": [2152, 101, 82], "score": "0.7174", "loss": "0.8166", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown.put(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:00.495951", "n_pass": [2157, 102, 83], "score": "0.7717", "loss": "0.5813", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsc, lsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:02.047289", "n_pass": [2159, 103, 84], "score": "0.4012", "loss": "1.3591", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); lsc.triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:03.596908", "n_pass": [2162, 104, 85], "score": "0.6568", "loss": "0.829", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(1000); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:05.201051", "n_pass": [2176, 105, 86], "score": "0.8387", "loss": "0.3725", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { LOG.debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:06.775194", "n_pass": [2185, 106, 87], "score": "0.6606", "loss": "0.7422", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread.getName()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:08.330923", "n_pass": [2188, 107, 88], "score": "0.5261", "loss": "1.2172", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread()); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:09.855973", "n_pass": [2189, 108, 89], "score": "0.7117", "loss": "0.6241", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr.teardown(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:11.424530", "n_pass": [2196, 109, 90], "score": "0.6261", "loss": "1.0542", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr(); } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:12.968698", "n_pass": [2197, 110, 91], "score": "0.6544", "loss": "0.8731", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { LOG.warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:14.533642", "n_pass": [2205, 111, 92], "score": "0.9041", "loss": "0.2814", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { bufferServer.stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:16.132305", "n_pass": [2219, 112, 93], "score": "0.6843", "loss": "0.7598", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG.warn(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:17.731602", "n_pass": [2229, 113, 94], "score": "0.7455", "loss": "0.5666", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"Exception during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:19.251417", "n_pass": [2231, 114, 95], "score": "0.373", "loss": "1.321", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"during BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:20.786707", "n_pass": [2232, 115, 96], "score": "0.3867", "loss": "1.5232", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"BufferServer stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:22.311167", "n_pass": [2233, 116, 97], "score": "0.9076", "loss": "0.31", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { eventLoopThread.join(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:23.906739", "n_pass": [2246, 117, 98], "score": "0.7537", "loss": "0.5658", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\", StreamingContainer.eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:25.611948", "n_pass": [2278, 118, 99], "score": "0.6169", "loss": "0.9734", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } } LOG.info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:27.177003", "n_pass": [2282, 119, 100], "score": "0.8505", "loss": "0.3155", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\"Application finished.\"); }"}
{"time": "2021-01-20 10:43:28.696648", "n_pass": [2284, 120, 101], "score": "0.8235", "loss": "0.4937", "code": "@Override @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:30.234084", "n_pass": [2287, 121, 102], "score": "0.9134", "loss": "0.2172", "code": " @SuppressWarnings({  }) public void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:31.759315", "n_pass": [2293, 122, 103], "score": "0.8447", "loss": "0.5082", "code": " @SuppressWarnings({  }) void run(long runMillis) {; List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:33.720149", "n_pass": [2299, 123, 104], "score": "0.8055", "loss": "0.5312", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList<>(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:36.047361", "n_pass": [2306, 124, 105], "score": "0.8808", "loss": "0.2776", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(StreamingContainer.eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:37.614811", "n_pass": [2316, 125, 106], "score": "0.7809", "loss": "0.7604", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(eventloop,8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:39.125756", "n_pass": [2317, 126, 107], "score": "0.65", "loss": "0.9148", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(new DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:42.168444", "n_pass": [2324, 128, 108], "score": "0.6185", "loss": "0.7437", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { throw new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:43.708336", "n_pass": [2334, 129, 109], "score": "0.682", "loss": "0.9964", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { new RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:45.217612", "n_pass": [2335, 130, 110], "score": "0.39", "loss": "1.2624", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = InetSocketAddress.createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:46.746924", "n_pass": [2342, 131, 111], "score": "0.8457", "loss": "0.385", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(LOCALHOST, bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:48.278214", "n_pass": [2344, 132, 112], "score": "0.6904", "loss": "0.7069", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer.run()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:49.784027", "n_pass": [2346, 133, 113], "score": "0.802", "loss": "0.6906", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer()); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:51.290133", "n_pass": [2347, 134, 114], "score": "0.8504", "loss": "0.3637", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG.info(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:52.797641", "n_pass": [2350, 135, 115], "score": "0.6481", "loss": "1.0648", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"Buffer  {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:54.324486", "n_pass": [2352, 136, 116], "score": "0.6012", "loss": "1.121", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\" {}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:55.856712", "n_pass": [2353, 137, 117], "score": "0.7467", "loss": "0.5048", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = System.currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:57.416270", "n_pass": [2361, 138, 118], "score": "0.8591", "loss": "0.3632", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) { c(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:43:59.040466", "n_pass": [2387, 139, 119], "score": "0.5776", "loss": "1.0883", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); } dnmgr(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:00.558839", "n_pass": [2391, 140, 120], "score": "0.4352", "loss": "1.8124", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {; if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:02.140361", "n_pass": [2409, 141, 121], "score": "0.4678", "loss": "1.5128", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) { LocalStreamingContainerLauncher(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:03.675667", "n_pass": [2414, 142, 122], "score": "0.8262", "loss": "0.3804", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) { injectShutdown(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:05.905227", "n_pass": [2497, 143, 123], "score": "0.4823", "loss": "1.5324", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug( thread); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:07.958763", "n_pass": [2523, 144, 124], "score": "0.6745", "loss": "0.9824", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = new LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:12.674651", "n_pass": [2623, 146, 125], "score": "0.8384", "loss": "0.4392", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList(); try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:14.170433", "n_pass": [2625, 147, 126], "score": "0.7377", "loss": "0.602", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { bufferServer.setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:15.747782", "n_pass": [2638, 148, 127], "score": "0.5028", "loss": "1.2459", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved( bufferServer); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:17.310405", "n_pass": [2656, 149, 128], "score": "0.7797", "loss": "0.7747", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try { dnmgr; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:20.067328", "n_pass": [2828, 150, 129], "score": "0.5855", "loss": "1.1977", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {; } catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:44:21.566136", "n_pass": [2829, 151, 130], "score": "0.8829", "loss": "0.2159", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {} catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:37.662179", "n_pass": [3710, 152, 131], "score": "0.8243", "loss": "0.4256", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch (RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:39.190412", "n_pass": [3712, 153, 132], "score": "0.6962", "loss": "0.9059", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e) { warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:40.734796", "n_pass": [3718, 154, 133], "score": "0.6031", "loss": "1.2452", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){ warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:42.276333", "n_pass": [3720, 155, 134], "score": "0.8925", "loss": "0.4076", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\" teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:43.826131", "n_pass": [3724, 156, 135], "score": "0.7341", "loss": "0.5219", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"teardown\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:45.360136", "n_pass": [3725, 157, 136], "score": "0.9035", "loss": "0.2788", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\", e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:46.887265", "n_pass": [3728, 158, 137], "score": "0.8823", "loss": "0.3935", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e); } if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:48.420134", "n_pass": [3732, 159, 138], "score": "0.8144", "loss": "0.4207", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if (bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:51.464773", "n_pass": [3736, 161, 139], "score": "0.7209", "loss": "0.6943", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress) { try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:53.020587", "n_pass": [3740, 162, 140], "score": "0.8013", "loss": "0.4653", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try { stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:56.029641", "n_pass": [3744, 164, 141], "score": "0.7743", "loss": "0.4128", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{ stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:57.580186", "n_pass": [3746, 165, 142], "score": "0.8308", "loss": "0.5121", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop(); } catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:45:59.118101", "n_pass": [3751, 166, 143], "score": "0.5805", "loss": "1.0906", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();} catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:00.639053", "n_pass": [3753, 167, 144], "score": "0.6597", "loss": "0.7189", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch (RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:02.164773", "n_pass": [3755, 168, 145], "score": "0.5702", "loss": "1.3679", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e) { LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:03.708133", "n_pass": [3761, 169, 146], "score": "0.5557", "loss": "0.9679", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){ LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:05.235919", "n_pass": [3763, 170, 147], "score": "0.539", "loss": "1.1561", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"stop\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:06.772646", "n_pass": [3767, 171, 148], "score": "0.7155", "loss": "0.7453", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\", e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:08.302147", "n_pass": [3770, 172, 149], "score": "0.5677", "loss": "1.4449", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e); } } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:09.831839", "n_pass": [3774, 173, 150], "score": "0.8302", "loss": "0.4804", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);} } if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:11.359920", "n_pass": [3776, 174, 151], "score": "0.4317", "loss": "1.9352", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}} if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:12.879366", "n_pass": [3778, 175, 152], "score": "0.5481", "loss": "1.6588", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if (eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:14.423538", "n_pass": [3780, 176, 153], "score": "0.7544", "loss": "0.9348", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread != null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:15.939995", "n_pass": [3783, 177, 154], "score": "0.5805", "loss": "1.2248", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread!= null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:17.470113", "n_pass": [3784, 178, 155], "score": "0.8452", "loss": "0.5092", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread= null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:18.990972", "n_pass": [3786, 179, 156], "score": "0.7955", "loss": "0.7608", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null) { try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:20.519329", "n_pass": [3789, 180, 157], "score": "0.6337", "loss": "0.8668", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){ try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:22.069925", "n_pass": [3791, 181, 158], "score": "0.6226", "loss": "1.238", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try { (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:23.610064", "n_pass": [3793, 182, 159], "score": "0.7765", "loss": "0.63", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{ (1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:25.152367", "n_pass": [3795, 183, 160], "score": "0.6441", "loss": "1.0069", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(1000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:26.675717", "n_pass": [3797, 184, 161], "score": "0.8025", "loss": "0.7245", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(000); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:28.211491", "n_pass": [3798, 185, 162], "score": "0.8697", "loss": "0.4714", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(00); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:29.726862", "n_pass": [3799, 186, 163], "score": "0.9078", "loss": "0.2516", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0); } catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:31.255079", "n_pass": [3803, 187, 164], "score": "0.8255", "loss": "0.5636", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);} catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:32.775946", "n_pass": [3805, 188, 165], "score": "0.3493", "loss": "2.2555", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch (InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:34.295481", "n_pass": [3807, 189, 166], "score": "0.7896", "loss": "0.4979", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie) { LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:35.839589", "n_pass": [3813, 190, 167], "score": "0.648", "loss": "1.1169", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){ LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:37.387204", "n_pass": [3815, 191, 168], "score": "0.8261", "loss": "0.5926", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG.debug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:38.921625", "n_pass": [3817, 192, 169], "score": "0.6206", "loss": "1.4677", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOGdebug(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:40.435930", "n_pass": [3818, 193, 170], "score": "0.5851", "loss": "1.2544", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\" interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:41.957207", "n_pass": [3821, 194, 171], "score": "0.8577", "loss": "0.398", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"interrupted\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:43.470308", "n_pass": [3822, 195, 172], "score": "0.8699", "loss": "0.3938", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThread.getName(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:44.989803", "n_pass": [3825, 196, 173], "score": "0.9196", "loss": "0.2861", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThread(), ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:46.500397", "n_pass": [3826, 197, 174], "score": "0.6145", "loss": "1.1376", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThread, ie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:48.013477", "n_pass": [3827, 198, 175], "score": "0.836", "loss": "0.4652", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { LOG.warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:49.585192", "n_pass": [3836, 199, 176], "score": "0.6953", "loss": "0.9049", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception stop\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:51.102212", "n_pass": [3839, 200, 177], "score": "0.8467", "loss": "0.4165", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (StreamingContainer.eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:52.645580", "n_pass": [3846, 201, 178], "score": "0.6928", "loss": "0.904", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (eventloop.isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:54.168626", "n_pass": [3847, 202, 179], "score": "0.593", "loss": "1.2785", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG.warn(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:55.721438", "n_pass": [3852, 203, 180], "score": "0.8498", "loss": "0.471", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"Eventactive\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:57.249825", "n_pass": [3854, 204, 181], "score": "0.7244", "loss": "0.8217", "code": " @SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:46:58.816204", "n_pass": [3865, 205, 182], "score": "0.5634", "loss": "1.7116", "code": "@SuppressWarnings({  }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:00.324606", "n_pass": [3870, 206, 183], "score": "0.8989", "loss": "0.2661", "code": "@SuppressWarnings({ }) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:01.847561", "n_pass": [3871, 207, 184], "score": "0.6102", "loss": "1.5687", "code": "@SuppressWarnings({}) void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:03.357328", "n_pass": [3874, 208, 185], "score": "0.8604", "loss": "0.4744", "code": "@SuppressWarnings({})void run(long runMillis) {List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:05.698981", "n_pass": [3883, 209, 186], "score": "0.6704", "loss": "0.9526", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread> containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:07.603762", "n_pass": [3889, 210, 187], "score": "0.8579", "loss": "0.4434", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads = LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:09.119660", "n_pass": [3891, 211, 188], "score": "0.6515", "loss": "1.4978", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads= LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:10.651946", "n_pass": [3893, 212, 189], "score": "0.9272", "loss": "0.3", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList; try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:12.165061", "n_pass": [3896, 213, 190], "score": "0.5859", "loss": "1.5498", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try { if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:13.697362", "n_pass": [3898, 214, 191], "score": "0.7175", "loss": "0.9199", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{ if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:15.233824", "n_pass": [3900, 215, 192], "score": "0.8207", "loss": "0.5991", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if (!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:16.757816", "n_pass": [3902, 216, 193], "score": "0.7132", "loss": "1.0792", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(!perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:18.265195", "n_pass": [3904, 217, 194], "score": "0.8042", "loss": "0.6422", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer) {Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:19.762419", "n_pass": [3907, 218, 195], "score": "0.6508", "loss": "1.0974", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){Server(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:21.268488", "n_pass": [3909, 219, 196], "score": "0.8731", "loss": "0.4582", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8); try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:22.783520", "n_pass": [3914, 220, 197], "score": "0.7123", "loss": "0.7796", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try { setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:24.294303", "n_pass": [3916, 221, 198], "score": "0.5627", "loss": "1.7814", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{ setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:25.801364", "n_pass": [3918, 222, 199], "score": "0.7736", "loss": "0.6668", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{setSpoolStorage(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:27.302924", "n_pass": [3919, 223, 200], "score": "0.8206", "loss": "0.6163", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage()); } catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:28.834572", "n_pass": [3926, 224, 201], "score": "0.5838", "loss": "1.9755", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());} catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:30.337613", "n_pass": [3928, 225, 202], "score": "0.9086", "loss": "0.2536", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch (IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:31.863347", "n_pass": [3930, 226, 203], "score": "0.7607", "loss": "1.02", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e) { RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:33.382695", "n_pass": [3936, 227, 204], "score": "0.8465", "loss": "0.9093", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){ RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:34.887286", "n_pass": [3938, 228, 205], "score": "0.8084", "loss": "0.6564", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){RuntimeException(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:36.394659", "n_pass": [3939, 229, 206], "score": "0.8108", "loss": "0.6747", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e); } bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:37.899346", "n_pass": [3944, 230, 207], "score": "0.9359", "loss": "0.2446", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);} bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:39.404064", "n_pass": [3946, 231, 208], "score": "0.856", "loss": "0.5243", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress = createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:40.911223", "n_pass": [3948, 232, 209], "score": "0.8134", "loss": "0.8015", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress= createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:42.419794", "n_pass": [3950, 233, 210], "score": "0.7514", "loss": "0.8504", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved(); LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:43.941331", "n_pass": [3955, 234, 211], "score": "0.6644", "loss": "1.1091", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"}\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:45.482087", "n_pass": [3959, 235, 212], "score": "0.7996", "loss": "0.5927", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\", bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:46.985328", "n_pass": [3962, 236, 213], "score": "0.7258", "loss": "1.3922", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress); } endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:48.504507", "n_pass": [3966, 237, 214], "score": "0.8079", "loss": "0.6331", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);} endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:49.998952", "n_pass": [3968, 238, 215], "score": "0.8627", "loss": "0.6267", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis = currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:51.508801", "n_pass": [3970, 239, 216], "score": "0.5492", "loss": "1.8272", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis= currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:53.008570", "n_pass": [3972, 240, 217], "score": "0.8088", "loss": "0.5755", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis() + runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:54.536042", "n_pass": [3976, 241, 218], "score": "0.7553", "loss": "0.8681", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis; while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:57.533146", "n_pass": [3981, 243, 219], "score": "0.939", "loss": "0.2188", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while (!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:47:59.057978", "n_pass": [3983, 244, 220], "score": "0.9822", "loss": "0.0788", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(!appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:00.569404", "n_pass": [3985, 245, 221], "score": "0.4344", "loss": "2.5492", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone) { for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:02.107104", "n_pass": [3988, 246, 222], "score": "0.605", "loss": "1.8157", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){ for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:03.628995", "n_pass": [3990, 247, 223], "score": "0.8915", "loss": "0.4391", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for (String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:05.138265", "n_pass": [3992, 248, 224], "score": "0.7605", "loss": "1.22", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr : dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:06.654665", "n_pass": [3997, 249, 225], "score": "0.7939", "loss": "1.1603", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr: dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:08.158137", "n_pass": [3999, 250, 226], "score": "0.7747", "loss": "0.7979", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr) { c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:09.687159", "n_pass": [4002, 251, 227], "score": "0.9728", "loss": "0.1106", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){ c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:11.192980", "n_pass": [4004, 252, 228], "score": "0.7598", "loss": "1.3132", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c = get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:12.723847", "n_pass": [4006, 253, 229], "score": "0.7582", "loss": "0.8191", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c= get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:14.257484", "n_pass": [4008, 254, 230], "score": "0.8274", "loss": "0.6502", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=get(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:15.770765", "n_pass": [4009, 255, 231], "score": "0.816", "loss": "0.7869", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr); if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:17.312023", "n_pass": [4014, 256, 232], "score": "0.5716", "loss": "1.6813", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if (cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:18.810673", "n_pass": [4016, 257, 233], "score": "0.7613", "loss": "1.0674", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(cnull) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:20.314693", "n_pass": [4018, 258, 234], "score": "0.7414", "loss": "1.3134", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null) {(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:21.846770", "n_pass": [4021, 259, 235], "score": "0.7354", "loss": "0.9677", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r); }(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:23.363563", "n_pass": [4027, 260, 236], "score": "0.7437", "loss": "0.928", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr); LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:25.294000", "n_pass": [4033, 261, 237], "score": "0.8669", "loss": "0.6793", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\".\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:26.815463", "n_pass": [4037, 262, 238], "score": "0.6869", "loss": "1.2234", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\", containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:28.317732", "n_pass": [4040, 263, 239], "score": "0.9417", "loss": "0.2624", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr); scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:29.825759", "n_pass": [4044, 264, 240], "score": "0.8108", "loss": "1.0278", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);scheduleContainerRestart(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:31.311548", "n_pass": [4045, 265, 241], "score": "0.6198", "loss": "1.4508", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr); } while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:32.826131", "n_pass": [4050, 266, 242], "score": "0.9101", "loss": "0.2483", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);} while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:34.366515", "n_pass": [4052, 267, 243], "score": "0.9546", "loss": "0.2034", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while (!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:35.865337", "n_pass": [4054, 268, 244], "score": "0.5875", "loss": "1.4166", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(!isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:37.383014", "n_pass": [4056, 269, 245], "score": "0.7624", "loss": "0.8659", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()) {if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:38.894597", "n_pass": [4061, 270, 246], "score": "0.8617", "loss": "0.4261", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if (cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:40.427542", "n_pass": [4064, 271, 247], "score": "0.8504", "loss": "0.6634", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(cdrnull) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:41.929125", "n_pass": [4066, 272, 248], "score": "0.824", "loss": "0.8502", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null) {(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:43.432747", "n_pass": [4069, 273, 249], "score": "0.6138", "loss": "1.5504", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(cdrcontainerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:44.938496", "n_pass": [4072, 274, 250], "score": "0.8975", "loss": "0.2716", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads); } } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:46.447057", "n_pass": [4076, 275, 251], "score": "0.7729", "loss": "0.792", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);} } if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:47.948388", "n_pass": [4078, 276, 252], "score": "0.7741", "loss": "0.8053", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}} if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:49.451328", "n_pass": [4080, 277, 253], "score": "0.823", "loss": "0.8804", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if (heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:50.949488", "n_pass": [4082, 278, 254], "score": "0.5954", "loss": "1.4657", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled) { monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:52.480158", "n_pass": [4086, 279, 255], "score": "0.8041", "loss": "0.7064", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){ monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:53.998475", "n_pass": [4088, 280, 256], "score": "0.8453", "loss": "0.7046", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){monitorHeartbeat(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:55.492824", "n_pass": [4089, 281, 257], "score": "0.7886", "loss": "0.8108", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false); } if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:57.014124", "n_pass": [4094, 282, 258], "score": "0.7812", "loss": "1.1686", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);} if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:48:58.520386", "n_pass": [4096, 283, 259], "score": "0.4413", "loss": "2.0381", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if (childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:00.018971", "n_pass": [4098, 284, 260], "score": "0.7925", "loss": "0.936", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(childContainersisEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:01.544505", "n_pass": [4100, 285, 261], "score": "0.8612", "loss": "0.6397", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()) {} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:03.057469", "n_pass": [4105, 286, 262], "score": "0.96", "loss": "0.1498", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){} if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:04.563310", "n_pass": [4108, 287, 263], "score": "0.9731", "loss": "0.1089", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if (runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:06.067088", "n_pass": [4110, 288, 264], "score": "0.9141", "loss": "0.4015", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(runMillisendMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:07.601245", "n_pass": [4112, 289, 265], "score": "0.6331", "loss": "1.3458", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis) {} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:09.112575", "n_pass": [4115, 290, 266], "score": "0.8477", "loss": "0.6288", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){} try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:10.620238", "n_pass": [4118, 291, 267], "score": "0.793", "loss": "0.6792", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try { if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:12.132822", "n_pass": [4120, 292, 268], "score": "0.8424", "loss": "0.4845", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{ if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:13.632709", "n_pass": [4122, 293, 269], "score": "0.9366", "loss": "0.2032", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if (exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:15.174592", "n_pass": [4124, 294, 270], "score": "0.7091", "loss": "0.9158", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition) { info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:16.687090", "n_pass": [4128, 295, 271], "score": "0.7389", "loss": "0.9377", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){ info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:18.176810", "n_pass": [4130, 296, 272], "score": "0.6623", "loss": "1.1506", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){info(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:19.683499", "n_pass": [4131, 297, 273], "score": "0.7629", "loss": "0.835", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"Stopping\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:21.212647", "n_pass": [4134, 298, 274], "score": "0.952", "loss": "0.1349", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");  } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:22.717224", "n_pass": [4138, 299, 275], "score": "0.594", "loss": "1.3329", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\"); } } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:24.245011", "n_pass": [4139, 300, 276], "score": "0.9033", "loss": "0.3748", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");} } catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:25.765735", "n_pass": [4141, 301, 277], "score": "0.8611", "loss": "0.4035", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}} catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:27.264925", "n_pass": [4143, 302, 278], "score": "0.8956", "loss": "0.3273", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch (Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:28.767754", "n_pass": [4145, 303, 279], "score": "0.8714", "loss": "0.5933", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex) {} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:30.299992", "n_pass": [4151, 304, 280], "score": "0.8186", "loss": "0.6152", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){} if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:31.823939", "n_pass": [4154, 305, 281], "score": "0.4297", "loss": "2.1858", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if (Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:33.341703", "n_pass": [4156, 306, 282], "score": "0.9517", "loss": "0.1373", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread) {  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:34.859504", "n_pass": [4160, 307, 283], "score": "0.8928", "loss": "0.3014", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){  } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:36.385663", "n_pass": [4162, 308, 284], "score": "0.843", "loss": "0.4662", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){ } if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:37.879384", "n_pass": [4163, 309, 285], "score": "0.7469", "loss": "0.7452", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){} if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:39.375276", "n_pass": [4165, 310, 286], "score": "0.8897", "loss": "0.3524", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if (!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:40.889222", "n_pass": [4167, 311, 287], "score": "0.6754", "loss": "1.0664", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(!appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:42.423931", "n_pass": [4169, 312, 288], "score": "0.8659", "loss": "0.6079", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone) { try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:43.944312", "n_pass": [4172, 313, 289], "score": "0.9769", "loss": "0.0735", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){ try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:45.458109", "n_pass": [4174, 314, 290], "score": "0.9234", "loss": "0.3805", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try { sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:46.954389", "n_pass": [4176, 315, 291], "score": "0.7648", "loss": "1.1321", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{ sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:48.457746", "n_pass": [4178, 316, 292], "score": "0.7039", "loss": "1.4126", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep(); } catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:49.967066", "n_pass": [4183, 317, 293], "score": "0.7839", "loss": "0.5264", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();} catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:51.464446", "n_pass": [4185, 318, 294], "score": "0.9521", "loss": "0.1222", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch (InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:52.962997", "n_pass": [4187, 319, 295], "score": "0.8908", "loss": "0.4098", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e) { LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:54.478646", "n_pass": [4193, 320, 296], "score": "0.5865", "loss": "1.5617", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){ LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:55.976305", "n_pass": [4195, 321, 297], "score": "0.5889", "loss": "1.5855", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"interrupted\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:57.478506", "n_pass": [4199, 322, 298], "score": "0.9519", "loss": "0.1871", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\", e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:49:58.992310", "n_pass": [4202, 323, 299], "score": "0.4909", "loss": "2.2137", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);  } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:00.501776", "n_pass": [4206, 324, 300], "score": "0.9386", "loss": "0.2197", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e); } } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:02.023524", "n_pass": [4207, 325, 301], "score": "0.8329", "loss": "0.6411", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);} } } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:03.518702", "n_pass": [4209, 326, 302], "score": "0.6474", "loss": "1.3167", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}} } } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:05.022632", "n_pass": [4211, 327, 303], "score": "0.9607", "loss": "0.2372", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}} } finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:06.519368", "n_pass": [4213, 328, 304], "score": "0.8818", "loss": "0.4076", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}} finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:08.015782", "n_pass": [4215, 329, 305], "score": "0.9662", "loss": "0.1461", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally { for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:09.508737", "n_pass": [4217, 330, 306], "score": "0.4452", "loss": "2.206", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{ for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:11.025179", "n_pass": [4219, 331, 307], "score": "0.7205", "loss": "1.013", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for (LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:12.520359", "n_pass": [4221, 332, 308], "score": "0.9703", "loss": "0.082", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc : values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:14.053327", "n_pass": [4226, 333, 309], "score": "0.9422", "loss": "0.2269", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc: values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:15.550599", "n_pass": [4228, 334, 310], "score": "0.9769", "loss": "0.0977", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()) {(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:17.083550", "n_pass": [4233, 335, 311], "score": "0.3907", "loss": "2.4369", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsclsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:18.588243", "n_pass": [4236, 336, 312], "score": "0.9231", "loss": "0.3288", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc); triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:20.503565", "n_pass": [4240, 337, 313], "score": "0.8699", "loss": "0.4351", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat(); } for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:22.022270", "n_pass": [4245, 338, 314], "score": "0.7767", "loss": "0.7544", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();} for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:23.519984", "n_pass": [4247, 339, 315], "score": "0.7971", "loss": "0.6511", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for (Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:25.030599", "n_pass": [4249, 340, 316], "score": "0.8531", "loss": "0.4636", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread : containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:28.065845", "n_pass": [4256, 342, 317], "score": "0.4979", "loss": "1.8309", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads) { try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:29.575000", "n_pass": [4259, 343, 318], "score": "0.5305", "loss": "1.9029", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){ try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:31.071652", "n_pass": [4261, 344, 319], "score": "0.9387", "loss": "0.1862", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try {(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:32.569343", "n_pass": [4263, 345, 320], "score": "0.8465", "loss": "0.5191", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(10); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:34.078307", "n_pass": [4266, 346, 321], "score": "0.8295", "loss": "0.6899", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0); } catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:35.600332", "n_pass": [4270, 347, 322], "score": "0.9011", "loss": "0.3487", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);} catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:37.094508", "n_pass": [4272, 348, 323], "score": "0.914", "loss": "0.2679", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch (InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:38.621272", "n_pass": [4274, 349, 324], "score": "0.9649", "loss": "0.0866", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e) { debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:40.135378", "n_pass": [4280, 350, 325], "score": "0.7357", "loss": "1.2506", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){ debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:41.660931", "n_pass": [4282, 351, 326], "score": "0.7999", "loss": "0.7523", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug(); } } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:43.171739", "n_pass": [4287, 352, 327], "score": "0.6428", "loss": "1.4049", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();} } try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:44.667197", "n_pass": [4289, 353, 328], "score": "0.598", "loss": "1.7228", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}} try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:46.196569", "n_pass": [4291, 354, 329], "score": "0.9283", "loss": "0.2272", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try {}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:47.689525", "n_pass": [4293, 355, 330], "score": "0.7339", "loss": "1.0091", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);} if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:49.282040", "n_pass": [4312, 356, 331], "score": "0.484", "loss": "1.9148", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){ try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:50.814380", "n_pass": [4318, 357, 332], "score": "0.9284", "loss": "0.4313", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread=null){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:52.885402", "n_pass": [4346, 358, 333], "score": "0.8351", "loss": "0.5808", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThreadnull){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:54.376679", "n_pass": [4347, 359, 334], "score": "0.8156", "loss": "0.6049", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\", eventLoopThreadie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:55.995723", "n_pass": [4368, 360, 335], "score": "0.7944", "loss": "0.8887", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads=LinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:50:59.703662", "n_pass": [4420, 361, 336], "score": "0.888", "loss": "0.4149", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreadsLinkedList;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:01.193221", "n_pass": [4421, 362, 337], "score": "0.738", "loss": "0.8953", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress=createUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:02.776902", "n_pass": [4456, 363, 338], "score": "0.9454", "loss": "0.146", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddresscreateUnresolved();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:04.292033", "n_pass": [4457, 364, 339], "score": "0.7059", "loss": "0.8888", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+ runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:06.245905", "n_pass": [4476, 365, 340], "score": "0.4466", "loss": "1.8447", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c=(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:07.806225", "n_pass": [4494, 366, 341], "score": "0.9437", "loss": "0.1272", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c(containerIdStr);if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:09.297325", "n_pass": [4496, 367, 342], "score": "0.9355", "loss": "0.1751", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread :containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:12.237393", "n_pass": [4654, 368, 343], "score": "0.8711", "loss": "0.4088", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie); } catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:25.180191", "n_pass": [5097, 369, 344], "score": "0.8708", "loss": "0.4646", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);} catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:26.697653", "n_pass": [5099, 370, 345], "score": "0.8719", "loss": "0.3385", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch (RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:28.191341", "n_pass": [5101, 371, 346], "score": "0.9492", "loss": "0.19", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e) { warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:29.711335", "n_pass": [5107, 372, 347], "score": "0.9462", "loss": "0.1787", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){ warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:31.197939", "n_pass": [5109, 373, 348], "score": "0.7825", "loss": "0.772", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"Exception\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:32.714212", "n_pass": [5113, 374, 349], "score": "0.8341", "loss": "0.5738", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\", StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:34.210855", "n_pass": [5116, 375, 350], "score": "0.9373", "loss": "0.2132", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer); } if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:35.733697", "n_pass": [5120, 376, 351], "score": "0.6794", "loss": "1.2534", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);} if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:37.226364", "n_pass": [5122, 377, 352], "score": "0.918", "loss": "0.4786", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if (isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:38.720606", "n_pass": [5124, 378, 353], "score": "0.9572", "loss": "0.1765", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()) { LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:40.252680", "n_pass": [5130, 379, 354], "score": "0.5885", "loss": "1.4164", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){ LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:41.745435", "n_pass": [5132, 380, 355], "score": "0.9355", "loss": "0.159", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop); } } }info(\".\"); }"}
{"time": "2021-01-20 10:51:43.276512", "n_pass": [5141, 381, 356], "score": "0.7712", "loss": "0.7005", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);} } }info(\".\"); }"}
{"time": "2021-01-20 10:51:44.770307", "n_pass": [5143, 382, 357], "score": "0.9488", "loss": "0.1493", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);}} }info(\".\"); }"}
{"time": "2021-01-20 10:51:46.258202", "n_pass": [5145, 383, 358], "score": "0.9642", "loss": "0.0866", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);}}}info(\".\"); }"}
{"time": "2021-01-20 10:51:47.751558", "n_pass": [5147, 384, 359], "score": "0.965", "loss": "0.1531", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);}}}(\".\"); }"}
{"time": "2021-01-20 10:51:49.270068", "n_pass": [5150, 385, 360], "score": "0.9702", "loss": "0.0984", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);}}}(\"\"); }"}
{"time": "2021-01-20 10:51:50.770749", "n_pass": [5154, 386, 361], "score": "0.8367", "loss": "0.7081", "code": "@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG(\"\",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG(\"\",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){(\"\");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG(\"\",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn(\"\",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG(\"\",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG(\"\",ie);}catch(RuntimeException e){warn(\"\",StreamingContainer);}if(isActive()){LOG(\"\",eventloop);}}}(\"\");}"}

Minimal simplified code:
@SuppressWarnings({})void run(long runMillis){List<Thread>containerThreads;try{if(perContainerBufferServer){(8);try{(DiskStorage());}catch(IOException e){(e);}bufferServerAddress();LOG("",bufferServerAddress);}endMillis=currentTimeMillis()+runMillis;while(appDone){for(String containerIdStr:dnmgr){c();if(null){(r);}(containerIdStr);LOG("",containerIdStr);(containerIdStr);}while(isEmpty()){if(null){(containerThreads);}}if(heartbeatMonitoringEnabled){(false);}if(isEmpty()){}if(endMillis){}try{if(exitCondition){("");}}catch(Exception ex){}if(Thread){}if(appDone){try{sleep();}catch(InterruptedException e){LOG("",e);}}}}finally{for(LocalStreamingContainer lsc:values()){(lsc);triggerHeartbeat();}for(Thread thread:containerThreads){try{(0);}catch(InterruptedException e){debug();}}try{}catch(RuntimeException e){warn("",e);}if(bufferServerAddress){try{stop();}catch(RuntimeException e){LOG("",e);}}if(eventLoopThread){try{(0);}catch(InterruptedException ie){LOG("",ie);}catch(RuntimeException e){warn("",StreamingContainer);}if(isActive()){LOG("",eventloop);}}}("");}

