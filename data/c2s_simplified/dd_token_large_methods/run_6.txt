
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/iplanet/services/comm/https/JSSProxy_run.java
method_name = run
method_body = public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error("JSSProxySessionRunnable: Unable to open input stream on " + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message("JSSProxySessionRunnable: " + "Unable to connect to " + host + ":" + port + ". ", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = "CONNECT " + desthost + ":" + destport + " HTTP/1.0\n" + "User-Agent: " + sun.net.www.protocol.http.HttpURLConnection.userAgent + "\r\n\r\n"; debug.message(msg); byte[] b; try { b = msg.getBytes("ASCII7"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error("JSSProxySessionRunnable: " + "Unexpected EOF from proxy"); closeSockets(); return; } if (i == '\n') { headerDone = true; ++newlinesSeen; } else if (i != '\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error("JSSProxySessionRunnable: " + "Unable to get OutputStream", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, "ASCII7"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith("HTTP/1.0 200")) { debug.error("JSSProxySessionRunnable: Unable to tunnel through "); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error("JSSProxySessionRunnable: " + "Unable to write prebuffer.", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }
predict, score, loss = run, 0.7512952, 0.5541871

Trace of simplified code(s):
{"time": "2021-01-20 11:51:40.081589", "n_pass": [1, 1, 1], "score": "0.7582", "loss": "0.6221", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try { port = Integer.parseInt(st.nextToken()); } catch (Exception ex) { port = 8080; } try { toProxySocket = new Socket(host, port); toProxySocket.setTcpNoDelay(true); } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i == '\\n') { headerDone = true; ++newlinesSeen; } else if (i != '\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:41.764156", "n_pass": [47, 2, 2], "score": "0.6421", "loss": "0.7873", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i == '\\n') { headerDone = true; ++newlinesSeen; } else if (i != '\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:43.487670", "n_pass": [107, 3, 3], "score": "0.8043", "loss": "0.4881", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to get OutputStream\", ioe); closeSockets(); return; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:45.044147", "n_pass": [110, 4, 4], "score": "0.8346", "loss": "0.46", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {; } String replyStr; try { replyStr = new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:47.214816", "n_pass": [195, 5, 5], "score": "0.7856", "loss": "0.5912", "code": "public void run() { Integer remotePort = new Integer(inconnection.getPort()); byte[] prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:48.812924", "n_pass": [207, 6, 6], "score": "0.628", "loss": "0.9746", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream()); inFrom.readFully(prebuffer, 0, 1); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:50.344881", "n_pass": [210, 7, 7], "score": "0.804", "loss": "0.4775", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String info = (String) connectHashMap.remove(remotePort); StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:51.879255", "n_pass": [215, 8, 8], "score": "0.8517", "loss": "0.3933", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; StringTokenizer st = new StringTokenizer(info); String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:53.397661", "n_pass": [216, 9, 9], "score": "0.728", "loss": "0.7133", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } String host = st.nextToken(); int port; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:54.912590", "n_pass": [217, 10, 10], "score": "0.6598", "loss": "0.8398", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; } ; try {  } catch (Exception ex) { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:56.426232", "n_pass": [218, 11, 11], "score": "0.6979", "loss": "0.7591", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \" + \"Unable to connect to \" + host + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:57.945473", "n_pass": [221, 12, 12], "score": "0.542", "loss": "1.0938", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out = null; InputStream in = null; byte[] reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:51:59.474813", "n_pass": [227, 13, 13], "score": "0.8188", "loss": "0.46", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLen = 0; int newlinesSeen = 0; boolean headerDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:00.982346", "n_pass": [229, 14, 14], "score": "0.8308", "loss": "0.3845", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket.getOutputStream(); String msg = \"CONNECT \" + desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:02.523488", "n_pass": [231, 15, 15], "score": "0.7092", "loss": "0.7026", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" HTTP/1.0\\n\" + \"User-Agent: \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:04.016279", "n_pass": [233, 16, 16], "score": "0.6562", "loss": "0.8061", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgent + \"\\r\\n\\r\\n\"; debug.message(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:05.513156", "n_pass": [235, 17, 17], "score": "0.7081", "loss": "0.7154", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flush(); in = toProxySocket.getInputStream(); boolean error = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:07.038261", "n_pass": [240, 18, 18], "score": "0.7472", "loss": "0.6013", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) { reply[replyLen++] = (byte) i; } } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:08.678490", "n_pass": [248, 19, 19], "score": "0.6589", "loss": "0.8215", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); String destport = st.nextToken(); OutputStream out =reply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:10.262221", "n_pass": [274, 20, 20], "score": "0.4662", "loss": "1.2605", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); Stringreply = new byte[200]; int replyLenheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:11.738135", "n_pass": [275, 21, 21], "score": "0.5697", "loss": "0.9713", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + \" \" + sun.net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:13.760190", "n_pass": [397, 22, 22], "score": "0.606", "loss": "0.9398", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + net.www.protocol.http.HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:15.233282", "n_pass": [398, 23, 23], "score": "0.5554", "loss": "1.0558", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg); byte[] b; try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:16.709710", "n_pass": [400, 24, 24], "score": "0.6373", "loss": "0.8919", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b = msg.getBytes(); } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:18.221402", "n_pass": [405, 25, 25], "score": "0.5664", "loss": "1.0772", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"JSSProxySessionRunnable: \" + \"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:19.754228", "n_pass": [414, 26, 26], "score": "0.555", "loss": "1.1032", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"HTTP/1.0 200\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:21.295476", "n_pass": [431, 27, 27], "score": "0.5869", "loss": "0.9422", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\"JSSProxySessionRunnable: \" + \"Unable to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:22.788252", "n_pass": [440, 28, 28], "score": "0.5807", "loss": "1.0367", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable to open input stream on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:24.840856", "n_pass": [454, 29, 29], "score": "0.5501", "loss": "1.0514", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { closeSockets(); return; } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:26.346616", "n_pass": [468, 30, 30], "score": "0.5053", "loss": "1.1782", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = st.nextToken(); StringheaderDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:27.847049", "n_pass": [470, 31, 31], "score": "0.7707", "loss": "0.5532", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = headerDone = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:30.704688", "n_pass": [675, 32, 32], "score": "0.6192", "loss": "0.9081", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket. desthost + \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:32.595293", "n_pass": [678, 33, 33], "score": "0.7904", "loss": "0.4524", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + destport + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:34.090854", "n_pass": [681, 34, 34], "score": "0.702", "loss": "0.7092", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + HttpURLConnection.userAgentmessage(msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:35.562785", "n_pass": [682, 35, 35], "score": "0.5585", "loss": "1.0695", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { b = msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:37.057341", "n_pass": [685, 36, 36], "score": "0.6723", "loss": "0.7684", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:38.523366", "n_pass": [687, 37, 37], "score": "0.7453", "loss": "0.5537", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror = false; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:40.032642", "n_pass": [696, 38, 38], "score": "0.7124", "loss": "0.6611", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"Unexpected EOF from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:41.528752", "n_pass": [708, 39, 39], "score": "0.76", "loss": "0.5171", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSockets(); return; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:43.020065", "n_pass": [711, 40, 40], "score": "0.67", "loss": "0.7552", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if (i =='\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:44.488565", "n_pass": [714, 41, 41], "score": "0.7417", "loss": "0.5596", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { newlinesSeen = 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:46.088063", "n_pass": [717, 42, 42], "score": "0.6541", "loss": "0.7656", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDone && replyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:47.575824", "n_pass": [720, 43, 43], "score": "0.7493", "loss": "0.5925", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereplyLen < reply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:49.065057", "n_pass": [721, 44, 44], "score": "0.8669", "loss": "0.3346", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0, replyLen, \"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:50.560693", "n_pass": [730, 45, 45], "score": "0.7681", "loss": "0.5322", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable: Unable to tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:52.082556", "n_pass": [745, 46, 46], "score": "0.6652", "loss": "0.8238", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); closeSockets(); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:53.552548", "n_pass": [747, 47, 47], "score": "0.7324", "loss": "0.6426", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write(prebuffer); out.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:55.020002", "n_pass": [751, 48, 48], "score": "0.8128", "loss": "0.4331", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.writeout.flush(); } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:56.470166", "n_pass": [752, 49, 49], "score": "0.8257", "loss": "0.4224", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" to write prebuffer.\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:57.939518", "n_pass": [757, 50, 50], "score": "0.8273", "loss": "0.4228", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); closeSockets(); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:52:59.424795", "n_pass": [759, 51, 51], "score": "0.8009", "loss": "0.5082", "code": "public void run() { Integer remotePort = prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:01.296923", "n_pass": [767, 52, 52], "score": "0.8504", "loss": "0.3833", "code": "public void run() { Integer prebuffer = new byte[1]; DataInputStream inFrom; try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:02.770017", "n_pass": [771, 53, 53], "score": "0.6175", "loss": "0.9912", "code": "public void run() { Integer prebuffer = new byte[1];  try { inFrom = new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:04.226653", "n_pass": [773, 54, 54], "score": "0.8578", "loss": "0.3679", "code": "public void run() { Integer prebuffer = new byte[1];  try { new DataInputStream(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:05.673233", "n_pass": [774, 55, 55], "score": "0.7623", "loss": "0.6481", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\"JSSProxySessionRunnable: Unable on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:07.136100", "n_pass": [781, 56, 56], "score": "0.8064", "loss": "0.495", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \" + inconnection, e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:08.605991", "n_pass": [783, 57, 57], "score": "0.855", "loss": "0.3814", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket = null; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:10.100820", "n_pass": [791, 58, 58], "score": "0.8835", "loss": "0.294", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + port + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:11.586063", "n_pass": [800, 59, 59], "score": "0.8278", "loss": "0.4188", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket == null) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:13.055324", "n_pass": [806, 60, 60], "score": "0.8496", "loss": "0.3932", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); out.flusherror; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:14.936439", "n_pass": [825, 61, 61], "score": "0.8002", "loss": "0.4889", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); ; while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:20.614827", "n_pass": [1144, 62, 62], "score": "0.8593", "loss": "0.3153", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { int i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:22.065110", "n_pass": [1150, 63, 63], "score": "0.8231", "loss": "0.4758", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = in.read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:23.652980", "n_pass": [1153, 64, 64], "score": "0.8929", "loss": "0.2682", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug.error(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:25.146514", "n_pass": [1163, 65, 65], "score": "0.8457", "loss": "0.3567", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"from proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:26.593539", "n_pass": [1165, 66, 66], "score": "0.9296", "loss": "0.172", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); closeSocketsreturn; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:28.075725", "n_pass": [1168, 67, 67], "score": "0.8638", "loss": "0.3078", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\");return; } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:29.508391", "n_pass": [1169, 68, 68], "score": "0.8374", "loss": "0.3739", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') { 0; if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:30.959867", "n_pass": [1177, 69, 69], "score": "0.9422", "loss": "0.1373", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (!headerDonereply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:32.433094", "n_pass": [1180, 70, 70], "score": "0.9066", "loss": "0.21", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (reply.length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:33.870573", "n_pass": [1181, 71, 71], "score": "0.8379", "loss": "0.3611", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply, 0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:35.386105", "n_pass": [1195, 72, 72], "score": "0.9018", "loss": "0.2133", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = new String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:36.892892", "n_pass": [1208, 73, 73], "score": "0.8209", "loss": "0.4398", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply, 0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:38.341246", "n_pass": [1211, 74, 74], "score": "0.8533", "loss": "0.3317", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr.startsWith(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:39.810005", "n_pass": [1219, 75, 75], "score": "0.9215", "loss": "0.1883", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { debug.error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:41.275564", "n_pass": [1224, 76, 76], "score": "0.8931", "loss": "0.2615", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable:tunnel through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:42.720264", "n_pass": [1227, 77, 77], "score": "0.8931", "loss": "0.2499", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable through \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:44.149394", "n_pass": [1228, 78, 78], "score": "0.9539", "loss": "0.1014", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \"); return; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:45.592904", "n_pass": [1231, 79, 79], "score": "0.8586", "loss": "0.318", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");; } try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:47.025786", "n_pass": [1232, 80, 80], "score": "0.8986", "loss": "0.2245", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { out.write; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:48.470776", "n_pass": [1235, 81, 81], "score": "0.9051", "loss": "0.2247", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); return; } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:49.968565", "n_pass": [1245, 82, 82], "score": "0.8273", "loss": "0.4275", "code": "public void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:51.413223", "n_pass": [1251, 83, 83], "score": "0.8977", "loss": "0.2522", "code": "void run() { Integer prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:53.243631", "n_pass": [1256, 84, 84], "score": "0.8542", "loss": "0.3204", "code": "void run() { prebuffer = new byte[1];  try {(inconnection.getInputStream); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:54.689245", "n_pass": [1266, 85, 85], "score": "0.74", "loss": "0.6127", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug.error(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:56.150278", "n_pass": [1275, 86, 86], "score": "0.8295", "loss": "0.3828", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" on \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:57.573113", "n_pass": [1277, 87, 87], "score": "0.616", "loss": "0.8461", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); connectHashMap.remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:53:59.009652", "n_pass": [1282, 88, 88], "score": "0.9011", "loss": "0.2264", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets(); return; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:00.445361", "n_pass": [1288, 89, 89], "score": "0.8398", "loss": "0.3581", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();; }  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:01.876223", "n_pass": [1289, 90, 90], "score": "0.9081", "loss": "0.1982", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  { toProxySocket; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:03.307770", "n_pass": [1292, 91, 91], "score": "0.8086", "loss": "0.453", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {; if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:04.751279", "n_pass": [1293, 92, 92], "score": "0.8229", "loss": "0.4198", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug.messageEnabled()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:06.206333", "n_pass": [1296, 93, 93], "score": "0.8244", "loss": "0.4183", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug()) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:07.645371", "n_pass": [1297, 94, 94], "score": "0.9226", "loss": "0.1999", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { debug.message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:09.097974", "n_pass": [1300, 95, 95], "score": "0.864", "loss": "0.2921", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable: \"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:10.518900", "n_pass": [1303, 96, 96], "score": "0.8051", "loss": "0.4362", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \". \", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:11.963464", "n_pass": [1310, 97, 97], "score": "0.8146", "loss": "0.4485", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } String desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:13.411106", "n_pass": [1322, 98, 98], "score": "0.8527", "loss": "0.3304", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out = toProxySocket+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:14.844498", "n_pass": [1330, 99, 99], "score": "0.8558", "loss": "0.326", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =+ \":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:16.274513", "n_pass": [1331, 100, 100], "score": "0.8483", "loss": "0.3841", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { msg.getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:17.744890", "n_pass": [1339, 101, 101], "score": "0.8468", "loss": "0.3685", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) { b; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:19.179866", "n_pass": [1348, 102, 102], "score": "0.8069", "loss": "0.4204", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {; } out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:20.591686", "n_pass": [1349, 103, 103], "score": "0.8049", "loss": "0.4639", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} out.write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:22.009500", "n_pass": [1351, 104, 104], "score": "0.8007", "loss": "0.488", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) { debug(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:23.479341", "n_pass": [1371, 105, 105], "score": "0.8512", "loss": "0.3404", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if (!replyStr(\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:54:25.027207", "n_pass": [1417, 106, 106], "score": "0.8256", "loss": "0.4251", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")) { error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:09.337174", "n_pass": [1924, 107, 107], "score": "0.8243", "loss": "0.3694", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){ error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:10.758176", "n_pass": [1926, 108, 108], "score": "0.8487", "loss": "0.3332", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){error(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:12.194834", "n_pass": [1927, 109, 109], "score": "0.7917", "loss": "0.4494", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"JSSProxySessionRunnable \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:13.616413", "n_pass": [1930, 110, 110], "score": "0.8301", "loss": "0.3982", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\" \");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:15.065214", "n_pass": [1931, 111, 111], "score": "0.8837", "loss": "0.2572", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");} try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:16.476884", "n_pass": [1936, 112, 112], "score": "0.7648", "loss": "0.5202", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try { ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:17.897675", "n_pass": [1938, 113, 113], "score": "0.6539", "loss": "0.7727", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{ ; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:19.323612", "n_pass": [1940, 114, 114], "score": "0.826", "loss": "0.399", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{; } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:20.739174", "n_pass": [1941, 115, 115], "score": "0.8429", "loss": "0.3101", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{ } catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:22.162985", "n_pass": [1942, 116, 116], "score": "0.7966", "loss": "0.4075", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{} catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:23.585443", "n_pass": [1944, 117, 117], "score": "0.7809", "loss": "0.4719", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch (IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:24.999947", "n_pass": [1946, 118, 118], "score": "0.6607", "loss": "0.7374", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { debug.error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:26.436056", "n_pass": [1953, 119, 119], "score": "0.8084", "loss": "0.4333", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } new RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:27.869811", "n_pass": [1961, 120, 120], "score": "0.8319", "loss": "0.406", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(inconnection, toProxySocket); }"}
{"time": "2021-01-20 11:55:29.278715", "n_pass": [1963, 121, 121], "score": "0.6371", "loss": "0.8459", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy( toProxySocket); }"}
{"time": "2021-01-20 11:55:30.692651", "n_pass": [1964, 122, 122], "score": "0.8709", "loss": "0.3061", "code": "void run() { prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:32.919504", "n_pass": [1972, 123, 123], "score": "0.6785", "loss": "0.6676", "code": "void run(){ prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:34.334655", "n_pass": [1974, 124, 124], "score": "0.8231", "loss": "0.4244", "code": "void run(){prebuffer = new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:35.747556", "n_pass": [1976, 125, 125], "score": "0.7491", "loss": "0.5788", "code": "void run(){prebuffer= new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:37.183385", "n_pass": [1978, 126, 126], "score": "0.7229", "loss": "0.637", "code": "void run(){prebuffer=new byte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:38.594063", "n_pass": [1980, 127, 127], "score": "0.7588", "loss": "0.5736", "code": "void run(){prebuffer=newbyte[1];  try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:40.032552", "n_pass": [1986, 128, 128], "score": "0.8445", "loss": "0.338", "code": "void run(){prebuffer=newbyte[1]; try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:41.440184", "n_pass": [1987, 129, 129], "score": "0.8431", "loss": "0.3407", "code": "void run(){prebuffer=newbyte[1];try {(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:42.851530", "n_pass": [1989, 130, 130], "score": "0.8583", "loss": "0.3079", "code": "void run(){prebuffer=newbyte[1];try{(inconnection); } catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:44.271846", "n_pass": [1995, 131, 131], "score": "0.7145", "loss": "0.6977", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);} catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:45.681459", "n_pass": [1997, 132, 132], "score": "0.7587", "loss": "0.5295", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch (IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:47.098408", "n_pass": [1999, 133, 133], "score": "0.8793", "loss": "0.2734", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e) { debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:48.524633", "n_pass": [2005, 134, 134], "score": "0.8571", "loss": "0.3292", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){ debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:49.943740", "n_pass": [2007, 135, 135], "score": "0.8864", "loss": "0.2528", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\" \", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:51.374180", "n_pass": [2011, 136, 136], "score": "0.7817", "loss": "0.4788", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\", e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:52.786352", "n_pass": [2014, 137, 137], "score": "0.8763", "loss": "0.2716", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e); remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:54.200564", "n_pass": [2018, 138, 138], "score": "0.7748", "loss": "0.5298", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);remove(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:55.631152", "n_pass": [2019, 139, 139], "score": "0.8083", "loss": "0.445", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort); closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:57.431663", "n_pass": [2024, 140, 140], "score": "0.8408", "loss": "0.3575", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}  {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:55:58.855484", "n_pass": [2030, 141, 141], "score": "0.8292", "loss": "0.3827", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();} {if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:00.265358", "n_pass": [2031, 142, 142], "score": "0.7068", "loss": "0.6598", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if (debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:01.682191", "n_pass": [2034, 143, 143], "score": "0.815", "loss": "0.3966", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug) { message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:03.097110", "n_pass": [2038, 144, 144], "score": "0.8439", "loss": "0.3339", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){ message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:04.506737", "n_pass": [2040, 145, 145], "score": "0.8267", "loss": "0.3865", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"JSSProxySessionRunnable\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:05.945106", "n_pass": [2044, 146, 146], "score": "0.7749", "loss": "0.4939", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"  + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:07.351492", "n_pass": [2046, 147, 147], "score": "0.8592", "loss": "0.3153", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\" + \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:08.758036", "n_pass": [2047, 148, 148], "score": "0.8694", "loss": "0.2736", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+ \":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:10.189987", "n_pass": [2049, 149, 149], "score": "0.8111", "loss": "0.4222", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\":\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:11.591726", "n_pass": [2051, 150, 150], "score": "0.7733", "loss": "0.4981", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\" + \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:13.027104", "n_pass": [2053, 151, 151], "score": "0.8065", "loss": "0.4256", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+ \"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:14.433797", "n_pass": [2055, 152, 152], "score": "0.8292", "loss": "0.372", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\", ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:15.843515", "n_pass": [2059, 153, 153], "score": "0.8252", "loss": "0.3902", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex); } } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:17.262159", "n_pass": [2063, 154, 154], "score": "0.8317", "loss": "0.3859", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);} } if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:18.673620", "n_pass": [2065, 155, 155], "score": "0.7886", "loss": "0.4475", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}} if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:20.084964", "n_pass": [2067, 156, 156], "score": "0.7802", "loss": "0.4758", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if (toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:21.520088", "n_pass": [2069, 157, 157], "score": "0.6671", "loss": "0.7107", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket ) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:22.932363", "n_pass": [2072, 158, 158], "score": "0.6179", "loss": "0.7745", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket) { } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:24.357848", "n_pass": [2074, 159, 159], "score": "0.7353", "loss": "0.6189", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){ } desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:25.768693", "n_pass": [2076, 160, 160], "score": "0.8988", "loss": "0.2027", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){} desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:27.182200", "n_pass": [2078, 161, 161], "score": "0.9074", "loss": "0.1876", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost = false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:28.591279", "n_pass": [2080, 162, 162], "score": "0.6854", "loss": "0.7282", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost= false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:30.026106", "n_pass": [2082, 163, 163], "score": "0.8554", "loss": "0.3206", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false; try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:31.434422", "n_pass": [2085, 164, 164], "score": "0.8639", "loss": "0.2739", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try { out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:32.844955", "n_pass": [2087, 165, 165], "score": "0.7751", "loss": "0.5403", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{ out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:34.257850", "n_pass": [2089, 166, 166], "score": "0.856", "loss": "0.2819", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out =\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:35.668482", "n_pass": [2091, 167, 167], "score": "0.7237", "loss": "0.5854", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\":\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:37.086310", "n_pass": [2094, 168, 168], "score": "0.8202", "loss": "0.4122", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\" + (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:38.495964", "n_pass": [2096, 169, 169], "score": "0.6711", "loss": "0.7289", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+ (msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:39.904732", "n_pass": [2098, 170, 170], "score": "0.7872", "loss": "0.4374", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try { getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:41.347813", "n_pass": [2104, 171, 171], "score": "0.8682", "loss": "0.2931", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{ getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:42.756183", "n_pass": [2106, 172, 172], "score": "0.88", "loss": "0.2455", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes(); } catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:44.172584", "n_pass": [2111, 173, 173], "score": "0.8232", "loss": "0.4038", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();} catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:45.581267", "n_pass": [2113, 174, 174], "score": "0.8039", "loss": "0.392", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch (UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:47.016305", "n_pass": [2115, 175, 175], "score": "0.7508", "loss": "0.5097", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored) {} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:48.438567", "n_pass": [2121, 176, 176], "score": "0.7174", "loss": "0.5599", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){} write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:49.848462", "n_pass": [2124, 177, 177], "score": "0.7481", "loss": "0.5244", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}write(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:51.285023", "n_pass": [2125, 178, 178], "score": "0.8684", "loss": "0.2756", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b); while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:52.699852", "n_pass": [2130, 179, 179], "score": "0.8324", "loss": "0.3398", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while (newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:54.111445", "n_pass": [2132, 180, 180], "score": "0.7888", "loss": "0.4279", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen < 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:55.524280", "n_pass": [2135, 181, 181], "score": "0.8043", "loss": "0.3837", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen< 2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:56.932235", "n_pass": [2137, 182, 182], "score": "0.7163", "loss": "0.6193", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2) { i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:58.378019", "n_pass": [2140, 183, 183], "score": "0.7505", "loss": "0.549", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){ i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:56:59.784575", "n_pass": [2142, 184, 184], "score": "0.7769", "loss": "0.4851", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i = read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:01.215208", "n_pass": [2144, 185, 185], "score": "0.7587", "loss": "0.4787", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i= read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:02.627507", "n_pass": [2146, 186, 186], "score": "0.866", "loss": "0.2492", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read(); if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:04.043762", "n_pass": [2151, 187, 187], "score": "0.8088", "loss": "0.3943", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if (i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:05.480616", "n_pass": [2153, 188, 188], "score": "0.894", "loss": "0.2185", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i < 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:06.894513", "n_pass": [2156, 189, 189], "score": "0.7315", "loss": "0.5123", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i< 0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:08.301007", "n_pass": [2158, 190, 190], "score": "0.89", "loss": "0.2232", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0) {(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:09.714845", "n_pass": [2161, 191, 191], "score": "0.8026", "loss": "0.387", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"proxy\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:11.149713", "n_pass": [2165, 192, 192], "score": "0.602", "loss": "0.755", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\"); } if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:12.562864", "n_pass": [2169, 193, 193], "score": "0.7637", "loss": "0.4681", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");} if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:13.972163", "n_pass": [2171, 194, 194], "score": "0.7027", "loss": "0.6021", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if ('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:15.379155", "n_pass": [2173, 195, 195], "score": "0.8671", "loss": "0.2616", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('\\r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:16.790009", "n_pass": [2176, 196, 196], "score": "0.8163", "loss": "0.3716", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r') {  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:18.538916", "n_pass": [2180, 197, 197], "score": "0.7067", "loss": "0.5743", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){  if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:19.956230", "n_pass": [2182, 198, 198], "score": "0.7939", "loss": "0.3758", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){ if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:21.356886", "n_pass": [2183, 199, 199], "score": "0.7021", "loss": "0.5484", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if (length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:22.766733", "n_pass": [2185, 200, 200], "score": "0.6141", "loss": "0.754", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length) {} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:24.197250", "n_pass": [2189, 201, 201], "score": "0.6264", "loss": "0.7259", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){} } } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:25.611697", "n_pass": [2192, 202, 202], "score": "0.8105", "loss": "0.3678", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}} } } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:27.021163", "n_pass": [2194, 203, 203], "score": "0.8181", "loss": "0.3792", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}} } catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:28.448508", "n_pass": [2196, 204, 204], "score": "0.7013", "loss": "0.6208", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}} catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:29.858882", "n_pass": [2198, 205, 205], "score": "0.8015", "loss": "0.4198", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch (IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:31.291629", "n_pass": [2200, 206, 206], "score": "0.813", "loss": "0.4018", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe) {new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:32.717853", "n_pass": [2206, 207, 207], "score": "0.6927", "loss": "0.5944", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){new String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:34.123440", "n_pass": [2208, 208, 208], "score": "0.809", "loss": "0.3923", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){ String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:35.534004", "n_pass": [2209, 209, 209], "score": "0.8216", "loss": "0.3563", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(reply0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:36.949992", "n_pass": [2212, 210, 210], "score": "0.6981", "loss": "0.6206", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"ASCII7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:38.374833", "n_pass": [2216, 211, 211], "score": "0.717", "loss": "0.5619", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"7\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:39.807235", "n_pass": [2217, 212, 212], "score": "0.7786", "loss": "0.4695", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\"); } catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:41.223974", "n_pass": [2221, 213, 213], "score": "0.6753", "loss": "0.7099", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");} catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:42.634996", "n_pass": [2223, 214, 214], "score": "0.6431", "loss": "0.7329", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch (UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:44.072817", "n_pass": [2225, 215, 215], "score": "0.6972", "loss": "0.5734", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored) { replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:45.508148", "n_pass": [2231, 216, 216], "score": "0.518", "loss": "1.0048", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){ replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:46.916330", "n_pass": [2233, 217, 217], "score": "0.6704", "loss": "0.7692", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr = String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:48.324195", "n_pass": [2235, 218, 218], "score": "0.6761", "loss": "0.6005", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr= String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:49.762640", "n_pass": [2237, 219, 219], "score": "0.7078", "loss": "0.5593", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(reply0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:51.169636", "n_pass": [2240, 220, 220], "score": "0.7705", "loss": "0.4202", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0, replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:52.576650", "n_pass": [2243, 221, 221], "score": "0.6462", "loss": "0.8054", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen); } if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:54.009285", "n_pass": [2247, 222, 222], "score": "0.5448", "loss": "0.9649", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);} if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:55.413950", "n_pass": [2249, 223, 223], "score": "0.6909", "loss": "0.6512", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if ((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:56.820897", "n_pass": [2251, 224, 224], "score": "0.7216", "loss": "0.552", "code": "void run(){prebuffer=newbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:57:59.113508", "n_pass": [2292, 225, 225], "score": "0.6303", "loss": "0.7657", "code": "void run(){prebuffernewbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:00.519213", "n_pass": [2293, 226, 226], "score": "0.6157", "loss": "0.831", "code": "void run(){prebufferbyte[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:01.942338", "n_pass": [2294, 227, 227], "score": "0.8127", "loss": "0.3793", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost=false;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:04.038364", "n_pass": [2359, 228, 228], "score": "0.69", "loss": "0.6618", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthostfalse;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:05.436787", "n_pass": [2360, 229, 229], "score": "0.8028", "loss": "0.4141", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen<2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:06.923097", "n_pass": [2395, 230, 230], "score": "0.8204", "loss": "0.3979", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen2){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:08.336888", "n_pass": [2396, 231, 231], "score": "0.7634", "loss": "0.5204", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i=read();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:09.739925", "n_pass": [2400, 232, 232], "score": "0.8159", "loss": "0.4557", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){iread();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:11.160584", "n_pass": [2401, 233, 233], "score": "0.8034", "loss": "0.489", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i<0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:12.574906", "n_pass": [2408, 234, 234], "score": "0.93", "loss": "0.1637", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i0){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:13.970985", "n_pass": [2409, 235, 235], "score": "0.8084", "loss": "0.4832", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr=String(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:15.822029", "n_pass": [2458, 236, 236], "score": "0.8551", "loss": "0.3308", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStrString(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:17.221586", "n_pass": [2459, 237, 237], "score": "0.8575", "loss": "0.3361", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}desthost;try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:19.994156", "n_pass": [2571, 238, 238], "score": "0.8336", "loss": "0.4092", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){};try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:21.405630", "n_pass": [2572, 239, 239], "score": "0.9587", "loss": "0.1027", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe) { error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:27.829275", "n_pass": [2799, 240, 240], "score": "0.8819", "loss": "0.2867", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){ error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:29.261407", "n_pass": [2801, 241, 241], "score": "0.8349", "loss": "0.3931", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\" .\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:30.664716", "n_pass": [2805, 242, 242], "score": "0.8996", "loss": "0.249", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\".\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:32.073544", "n_pass": [2806, 243, 243], "score": "0.8729", "loss": "0.2968", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\", ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:33.482092", "n_pass": [2809, 244, 244], "score": "0.8846", "loss": "0.2637", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe); } RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:34.926165", "n_pass": [2813, 245, 245], "score": "0.8902", "loss": "0.2626", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);} RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:36.352117", "n_pass": [2815, 246, 246], "score": "0.8552", "loss": "0.3792", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);}RWGroupJSSProxy(); }"}
{"time": "2021-01-20 11:58:37.759875", "n_pass": [2820, 247, 247], "score": "0.95", "loss": "0.1117", "code": "void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug(\"\",e);(remotePort);closeSockets();}{if(debug){message(\"\"+\"\"+\"\",ex);}}if(toProxySocket){}try{out=\"\"+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){(\"\");}if('r'){if(length){}}}}catch(IOException ioe){String(0,\"\");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if((\"\")){(\"\");}try{}catch(IOException ioe){error(\"\",ioe);}RWGroupJSSProxy();}"}

Minimal simplified code:
void run(){prebuffer[1];try{(inconnection);}catch(IOException e){debug("",e);(remotePort);closeSockets();}{if(debug){message(""+""+"",ex);}}if(toProxySocket){}try{out=""+(msg);try{getBytes();}catch(UnsupportedEncodingException ignored){}(b);while(newlinesSeen){i();if(i){("");}if('r'){if(length){}}}}catch(IOException ioe){String(0,"");}catch(UnsupportedEncodingException ignored){replyStr(0,replyLen);}if(("")){("");}try{}catch(IOException ioe){error("",ioe);}RWGroupJSSProxy();}

