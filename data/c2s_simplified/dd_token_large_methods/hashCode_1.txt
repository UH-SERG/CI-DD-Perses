
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/internal/util/Options_hashCode.java
method_name = hashCode
method_body = @SuppressWarnings("SimplifiableIfStatement") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }
predict, score, loss = hashCode, 0.9879166, 0.013637432

Trace of simplified code(s):
{"time": "2021-01-20 12:25:43.046014", "n_pass": [1, 1, 1], "score": "0.9957", "loss": "0.0053", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != null ? sharedMemory.hashCode() : 0); result = 31 * result + (tcpNoDelay ? 1 : 0); result = 31 * result + (tcpKeepAlive ? 1 : 0); result = 31 * result + (tcpRcvBuf != null ? tcpRcvBuf.hashCode() : 0); result = 31 * result + (tcpSndBuf != null ? tcpSndBuf.hashCode() : 0); result = 31 * result + (tcpAbortiveClose ? 1 : 0); result = 31 * result + (localSocketAddress != null ? localSocketAddress.hashCode() : 0); result = 31 * result + (socketTimeout != null ? socketTimeout.hashCode() : 0); result = 31 * result + (allowMultiQueries ? 1 : 0); result = 31 * result + (rewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:45.232718", "n_pass": [22, 2, 2], "score": "0.9839", "loss": "0.0182", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = 31 * result + (disableSslHostnameVerification ? 1 : 0); result = 31 * result + (log ? 1 : 0); result = 31 * result + (profileSql ? 1 : 0); result = 31 * result + maxQuerySizeToLog; result = 31 * result + (slowQueryThresholdNanos != null ? slowQueryThresholdNanos.hashCode() : 0); result = 31 * result + (assureReadOnly ? 1 : 0); result = 31 * result + (autoReconnect ? 1 : 0); result = 31 * result + (failOnReadOnly ? 1 : 0); result = 31 * result + (allowMasterDownConnection ? 1 : 0); result = 31 * result + retriesAllDown; result = 31 * result + validConnectionTimeout; result = 31 * result + loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:46.938650", "n_pass": [26, 3, 3], "score": "0.9927", "loss": "0.0084", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result = loadBalanceBlacklistTimeout; result = 31 * result + failoverLoopRetries; result = 31 * result + (pool ? 1 : 0); result = 31 * result + (registerJmxPool ? 1 : 0); result = 31 * result + (useResetConnection ? 1 : 0); result = 31 * result + (staticGlobal ? 1 : 0); result = 31 * result + (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:48.657220", "n_pass": [45, 4, 4], "score": "0.9943", "loss": "0.0065", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode() : 0); result = 31 * result + (trustStore != null ? trustStore.hashCode() : 0); result = 31 * result + (trustStorePassword != null ? trustStorePassword.hashCode() : 0); result = 31 * result + (keyStore != null ? keyStore.hashCode() : 0); result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:50.249628", "n_pass": [47, 5, 5], "score": "0.9987", "loss": "0.0016", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 : 0); result = 31 * result + (cachePrepStmts ? 1 : 0); result = 31 * result + prepStmtCacheSize; result = 31 * result + prepStmtCacheSqlLimit; result = 31 * result + (useLegacyDatetimeCode ? 1 : 0); result = 31 * result + (maximizeMysqlCompatibility ? 1 : 0); result = 31 * result + (useServerPrepStmts ? 1 : 0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:51.852657", "n_pass": [53, 6, 6], "score": "0.9972", "loss": "0.0036", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 :0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = 31 * result + (useBatchMultiSend != null ? useBatchMultiSend.hashCode() : 0); result = 31 * result + useBatchMultiSendNumber; result = 31 * result + (usePipelineAuth != null ? usePipelineAuth.hashCode() : 0); result = 31 * result + (enablePacketDebug ? 1 : 0); result = 31 * result + (useBulkStmts ? 1 : 0); result =(poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:53.399662", "n_pass": [55, 7, 7], "score": "0.9961", "loss": "0.0046", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 0); result = 31 * result + (serverTimezone != null ? serverTimezone.hashCode() : 0); result = 31 * result + (nullCatalogMeansCurrent ? 1 : 0); result = 31 * result + (dumpQueriesOnException ? 1 : 0); result = 31 * result + (useOldAliasMetadataBehavior ? 1 : 0); result = 31 * result + (allowLocalInfile ? 1 :0); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:55.160976", "n_pass": [62, 8, 8], "score": "0.9978", "loss": "0.0028", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + (cacheCallableStmts ? 1 : 0); result = 31 * result + callableStmtCacheSize; result = 31 * result + (connectionAttributes != null ? connectionAttributes.hashCode() : 0); result = (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:56.722793", "n_pass": [85, 9, 9], "score": "0.9927", "loss": "0.0089", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result  (poolName != null ? poolName.hashCode() : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:58.329541", "n_pass": [125, 10, 10], "score": "0.9799", "loss": "0.0228", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 : 0); result = 31 * result + (serverSslCert != null ? serverSslCert.hashCode().hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:25:59.853096", "n_pass": [132, 11, 11], "score": "0.9917", "loss": "0.0093", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0); result = 31 * result + (enabledSslProtocolSuites != null ? enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:01.363642", "n_pass": [134, 12, 12], "score": "0.9897", "loss": "0.0119", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != null ? pipe.hashCode() : 0); result = 31 * result + (localSocket != null ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:03.236308", "n_pass": [139, 13, 13], "score": "0.9975", "loss": "0.003", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result = 31 * result + (passwordCharacterEncoding != null ? passwordCharacterEncoding.hashCode() : 0); result = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:04.717435", "n_pass": [143, 14, 14], "score": "0.9968", "loss": "0.0037", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 * result + (enabledSslCipherSuites != null ? enabledSslCipherSuites.hashCode() : 0); result = 31 * result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:06.187874", "n_pass": [145, 15, 15], "score": "0.9942", "loss": "0.0066", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + (yearIsDateType ? 1 : 0); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:08.683922", "n_pass": [210, 16, 16], "score": "0.9995", "loss": "0.0007", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result + maxPoolSize; result = 31 * result + (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:10.583910", "n_pass": [215, 17, 17], "score": "0.997", "loss": "0.0037", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + (pinGlobalTxToPhysicalConnection ? 1 : 0); result = 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:12.106262", "n_pass": [232, 18, 18], "score": "0.999", "loss": "0.0012", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 * result + 31 * result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:14.959465", "n_pass": [345, 19, 19], "score": "0.9976", "loss": "0.0029", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + connectTimeout; result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:16.422520", "n_pass": [351, 20, 20], "score": "0.9996", "loss": "0.0006", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + 1 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:17.894680", "n_pass": [352, 21, 21], "score": "0.9989", "loss": "0.0014", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != nullrewriteBatchedStatements ? 1 : 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:19.755066", "n_pass": [358, 22, 22], "score": "0.9979", "loss": "0.0027", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0); result  = 31 * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:21.250625", "n_pass": [365, 23, 23], "score": "0.9915", "loss": "0.0101", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0); result = 31 *  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:22.706757", "n_pass": [368, 24, 24], "score": "0.9956", "loss": "0.0052", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0); result = 31 * result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:24.159035", "n_pass": [372, 25, 25], "score": "0.9973", "loss": "0.0031", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1isBit ? 1 : 0); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:25.600136", "n_pass": [374, 26, 26], "score": "0.9991", "loss": "0.0012", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:27.063384", "n_pass": [376, 27, 27], "score": "0.9995", "loss": "0.0007", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist ? 1 : 00); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:28.531496", "n_pass": [378, 28, 28], "score": "0.9979", "loss": "0.0027", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0); result = 31 * result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:29.994806", "n_pass": [382, 29, 29], "score": "0.9961", "loss": "0.0045", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = 31 * result + poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:32.347788", "n_pass": [391, 30, 30], "score": "0.9994", "loss": "0.0008", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result = poolValidMinDelay; result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:33.784912", "n_pass": [392, 31, 31], "score": "0.9925", "loss": "0.0089", "code": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:35.232272", "n_pass": [396, 32, 32], "score": "0.9943", "loss": "0.0063", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0); result = 31 * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:37.065104", "n_pass": [406, 33, 33], "score": "0.9941", "loss": "0.0064", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result = 31 * result + (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:38.517918", "n_pass": [415, 34, 34], "score": "0.9969", "loss": "0.0034", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + maxIdleTime; result =1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:41.247166", "n_pass": [453, 35, 35], "score": "0.9996", "loss": "0.0005", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result1 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:44.474861", "n_pass": [625, 36, 36], "score": "0.9979", "loss": "0.0024", "code": "@Override public int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:45.943057", "n_pass": [631, 37, 37], "score": "0.9936", "loss": "0.0082", "code": " int hashCode() { int result = user != null ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:47.388685", "n_pass": [636, 38, 38], "score": "0.9916", "loss": "0.01", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * result + (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:49.197926", "n_pass": [643, 39, 39], "score": "0.9884", "loss": "0.0137", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) * result + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:50.639119", "n_pass": [649, 40, 40], "score": "0.9914", "loss": "0.0108", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 * result + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:52.448703", "n_pass": [657, 41, 41], "score": "0.9983", "loss": "0.0024", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPassword != null ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:53.880310", "n_pass": [659, 42, 42], "score": "0.9955", "loss": "0.0057", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  result + (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:56.228493", "n_pass": [671, 43, 43], "score": "0.9927", "loss": "0.0085", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory != null ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:57.656676", "n_pass": [673, 44, 44], "score": "0.9691", "loss": "0.0405", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory.hashCode() : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:26:59.099789", "n_pass": [675, 45, 45], "score": "0.9831", "loss": "0.0193", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * result + (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:00.927722", "n_pass": [680, 46, 46], "score": "0.9731", "loss": "0.0309", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket.hashCode() : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:02.359525", "n_pass": [684, 47, 47], "score": "0.9969", "loss": "0.0042", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * result + (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:04.167176", "n_pass": [689, 48, 48], "score": "0.9918", "loss": "0.01", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 * result + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:06.358090", "n_pass": [694, 49, 49], "score": "0.9929", "loss": "0.009", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result = 31 * result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:08.163586", "n_pass": [700, 50, 50], "score": "0.9965", "loss": "0.0047", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  result + (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:09.589724", "n_pass": [701, 51, 51], "score": "0.9949", "loss": "0.0071", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) * result + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:11.047034", "n_pass": [705, 52, 52], "score": "0.9966", "loss": "0.0048", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  result + (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:12.489774", "n_pass": [710, 53, 53], "score": "0.9898", "loss": "0.0134", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables != null ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:13.914942", "n_pass": [712, 54, 54], "score": "0.9904", "loss": "0.0125", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables.hashCode() : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:15.341153", "n_pass": [714, 55, 55], "score": "0.9909", "loss": "0.0113", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = 31 * result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:17.922155", "n_pass": [723, 56, 56], "score": "0.9959", "loss": "0.0053", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result = 31 + (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:20.948126", "n_pass": [765, 57, 57], "score": "0.9647", "loss": "0.0423", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =+ (keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:28.582611", "n_pass": [1042, 58, 58], "score": "0.9928", "loss": "0.0097", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPasswordnull ?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:30.031762", "n_pass": [1043, 59, 59], "score": "0.9948", "loss": "0.0068", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites.hashCode() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:31.468667", "n_pass": [1046, 60, 60], "score": "0.9955", "loss": "0.0059", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites() : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:32.902998", "n_pass": [1047, 61, 61], "score": "0.9846", "loss": "0.0193", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =+ (useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:34.703002", "n_pass": [1053, 62, 62], "score": "0.9675", "loss": "0.0403", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result = 31 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:36.144853", "n_pass": [1062, 63, 63], "score": "0.971", "loss": "0.035", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result = 31 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:37.598808", "n_pass": [1074, 64, 64], "score": "0.9882", "loss": "0.0149", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe != nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:39.025525", "n_pass": [1078, 65, 65], "score": "0.9963", "loss": "0.0052", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe= nullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:40.474487", "n_pass": [1079, 66, 66], "score": "0.979", "loss": "0.026", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipenullnull ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:41.890386", "n_pass": [1080, 67, 67], "score": "0.9922", "loss": "0.0094", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result = 31 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:43.470266", "n_pass": [1088, 68, 68], "score": "0.9896", "loss": "0.0128", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory != 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:44.894334", "n_pass": [1092, 69, 69], "score": "0.9885", "loss": "0.0142", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory= 0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:46.314824", "n_pass": [1093, 70, 70], "score": "0.9967", "loss": "0.0045", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result = 31 + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:48.134856", "n_pass": [1098, 71, 71], "score": "0.9866", "loss": "0.0186", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  + (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:49.575695", "n_pass": [1099, 72, 72], "score": "0.9956", "loss": "0.0058", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* result + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:51.486896", "n_pass": [1130, 73, 73], "score": "0.9834", "loss": "0.0198", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* + (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:52.907781", "n_pass": [1131, 74, 74], "score": "0.9871", "loss": "0.0173", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result = 31 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:54.385111", "n_pass": [1137, 75, 75], "score": "0.987", "loss": "0.0167", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * result + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:55.798488", "n_pass": [1140, 76, 76], "score": "0.9914", "loss": "0.0112", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * + (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:57.217479", "n_pass": [1141, 77, 77], "score": "0.9722", "loss": "0.0335", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = result + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:27:58.650200", "n_pass": [1146, 78, 78], "score": "0.9952", "loss": "0.0074", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = + (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:00.093980", "n_pass": [1147, 79, 79], "score": "0.991", "loss": "0.0115", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* result + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:01.545783", "n_pass": [1155, 80, 80], "score": "0.974", "loss": "0.0322", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * result+ (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:03.356197", "n_pass": [1164, 81, 81], "score": "0.9892", "loss": "0.0146", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ? minPoolSize.hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:04.777356", "n_pass": [1168, 82, 82], "score": "0.9977", "loss": "0.0032", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 * result + (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:06.231738", "n_pass": [1175, 83, 83], "score": "0.9776", "loss": "0.0325", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); return result; }"}
{"time": "2021-01-20 12:28:07.686627", "n_pass": [1181, 84, 84], "score": "0.9686", "loss": "0.0431", "code": " int hashCode() { int result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:09.491239", "n_pass": [1187, 85, 85], "score": "0.9204", "loss": "0.1187", "code": " int hashCode() { result = usernull ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:10.908378", "n_pass": [1190, 86, 86], "score": "0.9518", "loss": "0.0722", "code": " int hashCode() { result =null ? user.hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:12.307755", "n_pass": [1193, 87, 87], "score": "0.949", "loss": "0.0728", "code": " int hashCode() { result =null ? hashCode() : 0; result = 31 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:14.094853", "n_pass": [1200, 88, 88], "score": "0.9283", "loss": "0.1184", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password != null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:15.509406", "n_pass": [1204, 89, 89], "score": "0.9565", "loss": "0.0628", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password= null ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:16.905766", "n_pass": [1205, 90, 90], "score": "0.9607", "loss": "0.0568", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (passwordnull ? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:18.335229", "n_pass": [1206, 91, 91], "score": "0.9508", "loss": "0.0773", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? password.hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:19.738149", "n_pass": [1208, 92, 92], "score": "0.9205", "loss": "0.1239", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode() : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:21.183758", "n_pass": [1219, 93, 93], "score": "0.9237", "loss": "0.1084", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result =(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:22.589165", "n_pass": [1224, 94, 94], "score": "0.954", "loss": "0.0699", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result =(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:24.040730", "n_pass": [1232, 95, 95], "score": "0.8931", "loss": "0.1591", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result =  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:26.994362", "n_pass": [1268, 96, 96], "score": "0.8433", "loss": "0.2449", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)* + (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:29.669255", "n_pass": [1316, 97, 97], "score": "0.6963", "loss": "0.4974", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 31 *+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:31.491019", "n_pass": [1333, 98, 98], "score": "0.5445", "loss": "0.8171", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1 .hashCode : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:34.446825", "n_pass": [1367, 99, 99], "score": "0.6871", "loss": "0.5379", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0); result(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:35.865073", "n_pass": [1371, 100, 100], "score": "0.7356", "loss": "0.454", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0); result(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:37.271035", "n_pass": [1378, 101, 101], "score": "0.8635", "loss": "0.2308", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0); result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:39.829309", "n_pass": [1412, 102, 102], "score": "0.8553", "loss": "0.222", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)result  (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:28:41.220948", "n_pass": [1413, 103, 103], "score": "0.9177", "loss": "0.1312", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0) (useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:25.744578", "n_pass": [1828, 104, 104], "score": "0.8291", "loss": "0.2939", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression ? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:27.146996", "n_pass": [1830, 105, 105], "score": "0.9409", "loss": "0.0916", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression? 1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:28.549094", "n_pass": [1832, 106, 106], "score": "0.7736", "loss": "0.3799", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1 : 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:29.979372", "n_pass": [1834, 107, 107], "score": "0.9597", "loss": "0.0589", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1: 0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:31.382533", "n_pass": [1836, 108, 108], "score": "0.9609", "loss": "0.0609", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0); result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:32.789209", "n_pass": [1840, 109, 109], "score": "0.8928", "loss": "0.1657", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result =  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:34.188978", "n_pass": [1842, 110, 110], "score": "0.9495", "loss": "0.0696", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=  (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:35.969598", "n_pass": [1844, 111, 111], "score": "0.8542", "loss": "0.2324", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result= (interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:37.382377", "n_pass": [1845, 112, 112], "score": "0.751", "loss": "0.4257", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient ? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:38.787183", "n_pass": [1848, 113, 113], "score": "0.9522", "loss": "0.08", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient? 1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:40.218813", "n_pass": [1850, 114, 114], "score": "0.9662", "loss": "0.051", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1 : 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:41.620182", "n_pass": [1852, 115, 115], "score": "0.9219", "loss": "0.1313", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1: 0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:43.021660", "n_pass": [1854, 116, 116], "score": "0.9579", "loss": "0.0627", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0) + (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:44.426519", "n_pass": [1857, 117, 117], "score": "0.7922", "loss": "0.3397", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+ (useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:45.818607", "n_pass": [1859, 118, 118], "score": "0.9286", "loss": "0.1129", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl ? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:47.253719", "n_pass": [1862, 119, 119], "score": "0.9349", "loss": "0.104", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl? 1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:48.675476", "n_pass": [1864, 120, 120], "score": "0.9673", "loss": "0.05", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1 : 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:50.082788", "n_pass": [1866, 121, 121], "score": "0.9756", "loss": "0.0337", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1: 0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:51.490229", "n_pass": [1868, 122, 122], "score": "0.9289", "loss": "0.1155", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*  (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:52.897578", "n_pass": [1872, 123, 123], "score": "0.8244", "loss": "0.3084", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)* (sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:54.294740", "n_pass": [1873, 124, 124], "score": "0.9462", "loss": "0.0815", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables  ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:55.713618", "n_pass": [1876, 125, 125], "score": "0.9532", "loss": "0.0695", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables ? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:57.110846", "n_pass": [1877, 126, 126], "score": "0.8854", "loss": "0.1676", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables? sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:58.534483", "n_pass": [1879, 127, 127], "score": "0.9324", "loss": "0.1115", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables : 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:29:59.935892", "n_pass": [1881, 128, 128], "score": "0.8854", "loss": "0.1755", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables: 0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:01.361696", "n_pass": [1883, 129, 129], "score": "0.939", "loss": "0.0935", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)* (tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:02.776860", "n_pass": [1887, 130, 130], "score": "0.9343", "loss": "0.0955", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(tinyInt1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:04.191971", "n_pass": [1889, 131, 131], "score": "0.9386", "loss": "0.0909", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1); result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:05.606963", "n_pass": [1893, 132, 132], "score": "0.922", "loss": "0.1126", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result =1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:07.009873", "n_pass": [1895, 133, 133], "score": "0.7755", "loss": "0.3586", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1 * (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:08.778748", "n_pass": [1898, 134, 134], "score": "0.9571", "loss": "0.0609", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1* (createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:10.187843", "n_pass": [1900, 135, 135], "score": "0.85", "loss": "0.2197", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist); result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:12.005208", "n_pass": [1905, 136, 136], "score": "0.934", "loss": "0.0988", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result = (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:13.404466", "n_pass": [1907, 137, 137], "score": "0.8653", "loss": "0.195", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result= (continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:15.197109", "n_pass": [1909, 138, 138], "score": "0.7786", "loss": "0.3322", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError ? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:16.613904", "n_pass": [1912, 139, 139], "score": "0.9373", "loss": "0.0912", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError? 1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:18.012101", "n_pass": [1914, 140, 140], "score": "0.8561", "loss": "0.2164", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1 : 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:19.420541", "n_pass": [1916, 141, 141], "score": "0.9167", "loss": "0.1214", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1: 0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:20.822088", "n_pass": [1918, 142, 142], "score": "0.6749", "loss": "0.5631", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+ (jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:22.227975", "n_pass": [1922, 143, 143], "score": "0.9519", "loss": "0.0731", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation ? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:23.634966", "n_pass": [1925, 144, 144], "score": "0.83", "loss": "0.2684", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation? 1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:25.043426", "n_pass": [1927, 145, 145], "score": "0.863", "loss": "0.2141", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1 : 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:26.443326", "n_pass": [1929, 146, 146], "score": "0.8209", "loss": "0.2676", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1: 0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:27.871143", "n_pass": [1931, 147, 147], "score": "0.9039", "loss": "0.1341", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0); result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:29.307072", "n_pass": [1935, 148, 148], "score": "0.9295", "loss": "0.1067", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result = 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:30.724091", "n_pass": [1937, 149, 149], "score": "0.5477", "loss": "0.8195", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result= 31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:32.126497", "n_pass": [1939, 150, 150], "score": "0.9339", "loss": "0.1081", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=31 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:33.528025", "n_pass": [1940, 151, 151], "score": "0.6129", "loss": "0.6675", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1 * (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:34.937287", "n_pass": [1942, 152, 152], "score": "0.8386", "loss": "0.2373", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize != null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:36.341447", "n_pass": [1945, 153, 153], "score": "0.8057", "loss": "0.3217", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize= null ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:37.737457", "n_pass": [1946, 154, 154], "score": "0.8151", "loss": "0.2852", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSizenull ?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:39.129923", "n_pass": [1947, 155, 155], "score": "0.889", "loss": "0.1815", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode() : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:40.558115", "n_pass": [1949, 156, 156], "score": "0.9092", "loss": "0.1321", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result = 3+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:41.971809", "n_pass": [1955, 157, 157], "score": "0.7079", "loss": "0.4798", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =+ (autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:43.390068", "n_pass": [1956, 158, 158], "score": "0.8317", "loss": "0.2633", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); ; }"}
{"time": "2021-01-20 12:30:44.807401", "n_pass": [1963, 159, 159], "score": "0.9162", "loss": "0.1349", "code": " int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:46.204183", "n_pass": [1965, 160, 160], "score": "0.8835", "loss": "0.1833", "code": "int hashCode() { result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:48.345901", "n_pass": [1971, 161, 161], "score": "0.8958", "loss": "0.1481", "code": "int hashCode(){ result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:49.743526", "n_pass": [1973, 162, 162], "score": "0.9298", "loss": "0.0995", "code": "int hashCode(){result =null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:51.154291", "n_pass": [1975, 163, 163], "score": "0.8857", "loss": "0.1776", "code": "int hashCode(){result=null ? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:52.910069", "n_pass": [1978, 164, 164], "score": "0.9722", "loss": "0.0387", "code": "int hashCode(){result=null? hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:54.305480", "n_pass": [1980, 165, 165], "score": "0.8889", "loss": "0.1656", "code": "int hashCode(){result=null?hashCode() : 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:55.721175", "n_pass": [1984, 166, 166], "score": "0.9301", "loss": "0.1039", "code": "int hashCode(){result=null?hashCode(): 0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:57.121532", "n_pass": [1986, 167, 167], "score": "0.8977", "loss": "0.1531", "code": "int hashCode(){result=null?hashCode():0; result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:58.537650", "n_pass": [1989, 168, 168], "score": "0.8581", "loss": "0.222", "code": "int hashCode(){result=null?hashCode():0;result =1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:30:59.933406", "n_pass": [1991, 169, 169], "score": "0.7153", "loss": "0.4541", "code": "int hashCode(){result=null?hashCode():0;result=1 * (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:01.722146", "n_pass": [1994, 170, 170], "score": "0.8436", "loss": "0.2411", "code": "int hashCode(){result=null?hashCode():0;result=1* (password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:03.117853", "n_pass": [1996, 171, 171], "score": "0.9101", "loss": "0.1342", "code": "int hashCode(){result=null?hashCode():0;result=1*(password? hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:04.522663", "n_pass": [2000, 172, 172], "score": "0.8451", "loss": "0.2429", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode() : 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:05.954498", "n_pass": [2004, 173, 173], "score": "0.9063", "loss": "0.1368", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode(): 0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:07.370616", "n_pass": [2006, 174, 174], "score": "0.9302", "loss": "0.1053", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0) + (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:08.761880", "n_pass": [2009, 175, 175], "score": "0.8952", "loss": "0.1658", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+ (trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:10.176272", "n_pass": [2011, 176, 176], "score": "0.9211", "loss": "0.1256", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate ? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:11.594922", "n_pass": [2014, 177, 177], "score": "0.9285", "loss": "0.1034", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate? 1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:13.000205", "n_pass": [2016, 178, 178], "score": "0.8774", "loss": "0.1868", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1  : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:14.402925", "n_pass": [2018, 179, 179], "score": "0.7241", "loss": "0.4577", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1 : 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:15.799552", "n_pass": [2019, 180, 180], "score": "0.9587", "loss": "0.0562", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1: 0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:17.194423", "n_pass": [2021, 181, 181], "score": "0.9517", "loss": "0.0681", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?  enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:18.601929", "n_pass": [2028, 182, 182], "score": "0.8638", "loss": "0.2023", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword? enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:19.996919", "n_pass": [2029, 183, 183], "score": "0.8999", "loss": "0.1444", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites : 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:21.401103", "n_pass": [2031, 184, 184], "score": "0.8416", "loss": "0.2662", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites: 0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:22.820182", "n_pass": [2033, 185, 185], "score": "0.7671", "loss": "0.3792", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds ? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:24.244363", "n_pass": [2039, 186, 186], "score": "0.8527", "loss": "0.2314", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds? 1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:25.664530", "n_pass": [2041, 187, 187], "score": "0.9321", "loss": "0.1009", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1 : 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:27.060089", "n_pass": [2043, 188, 188], "score": "0.7998", "loss": "0.2865", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1: 0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:28.470044", "n_pass": [2045, 189, 189], "score": "0.7241", "loss": "0.4677", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0); result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:29.903012", "n_pass": [2049, 190, 190], "score": "0.7582", "loss": "0.3786", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result =1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:31.298332", "n_pass": [2051, 191, 191], "score": "0.8947", "loss": "0.1421", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1 *  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:33.055399", "n_pass": [2054, 192, 192], "score": "0.8895", "loss": "0.1688", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*  (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:34.451344", "n_pass": [2056, 193, 193], "score": "0.9676", "loss": "0.0486", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1* (socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:35.841958", "n_pass": [2057, 194, 194], "score": "0.846", "loss": "0.2235", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory  ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:37.242484", "n_pass": [2060, 195, 195], "score": "0.839", "loss": "0.2347", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory ? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:38.655085", "n_pass": [2061, 196, 196], "score": "0.9391", "loss": "0.0889", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory? socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:40.051241", "n_pass": [2063, 197, 197], "score": "0.9629", "loss": "0.0522", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory : 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:41.451374", "n_pass": [2065, 198, 198], "score": "0.7402", "loss": "0.4175", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory: 0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:42.884609", "n_pass": [2067, 199, 199], "score": "0.9182", "loss": "0.1217", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0); result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:44.284269", "n_pass": [2071, 200, 200], "score": "0.7976", "loss": "0.3232", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result =1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:45.678168", "n_pass": [2073, 201, 201], "score": "0.9526", "loss": "0.0672", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1 * (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:47.436731", "n_pass": [2076, 202, 202], "score": "0.8779", "loss": "0.1836", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1* (pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:48.821355", "n_pass": [2078, 203, 203], "score": "0.8197", "loss": "0.2948", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe ? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:50.227076", "n_pass": [2081, 204, 204], "score": "0.8838", "loss": "0.1757", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe? localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:51.646575", "n_pass": [2083, 205, 205], "score": "0.8687", "loss": "0.1921", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket : 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:53.044990", "n_pass": [2085, 206, 206], "score": "0.5767", "loss": "0.7845", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket: 0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:54.469695", "n_pass": [2087, 207, 207], "score": "0.889", "loss": "0.1852", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0); result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:55.869524", "n_pass": [2091, 208, 208], "score": "0.7802", "loss": "0.3509", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result =1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:57.286598", "n_pass": [2093, 209, 209], "score": "0.7845", "loss": "0.3346", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1 * (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:31:59.076489", "n_pass": [2096, 210, 210], "score": "0.8072", "loss": "0.3101", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1* (sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:32:00.474750", "n_pass": [2098, 211, 211], "score": "0.947", "loss": "0.0795", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory0)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:32:01.871320", "n_pass": [2101, 212, 212], "score": "0.8705", "loss": "0.1869", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result =(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:32:05.391294", "n_pass": [2177, 213, 213], "score": "0.7993", "loss": "0.32", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0); result(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:32:11.606216", "n_pass": [2343, 214, 214], "score": "0.9355", "loss": "0.094", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1 : 0); }"}
{"time": "2021-01-20 12:32:21.461605", "n_pass": [2535, 215, 215], "score": "0.9667", "loss": "0.0463", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1: 0); }"}
{"time": "2021-01-20 12:32:22.853244", "n_pass": [2536, 216, 216], "score": "0.922", "loss": "0.1127", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1:0); }"}
{"time": "2021-01-20 12:32:24.245672", "n_pass": [2540, 217, 217], "score": "0.9003", "loss": "0.1515", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1* (minPoolSize?hashCode : 0);(autocommit ? 1:0);}"}
{"time": "2021-01-20 12:32:30.419940", "n_pass": [2695, 218, 218], "score": "0.9239", "loss": "0.1156", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode : 0);(autocommit ? 1:0);}"}
{"time": "2021-01-20 12:32:31.870085", "n_pass": [2700, 219, 219], "score": "0.7757", "loss": "0.3713", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode: 0);(autocommit ? 1:0);}"}
{"time": "2021-01-20 12:32:33.269431", "n_pass": [2702, 220, 220], "score": "0.852", "loss": "0.2161", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit ? 1:0);}"}
{"time": "2021-01-20 12:32:34.700859", "n_pass": [2708, 221, 221], "score": "0.7807", "loss": "0.3641", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit? 1:0);}"}
{"time": "2021-01-20 12:32:36.112614", "n_pass": [2710, 222, 222], "score": "0.9145", "loss": "0.1257", "code": "int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);}"}

Minimal simplified code:
int hashCode(){result=null?hashCode():0;result=1*(password?hashCode():0)+(trustServerCertificate?1:0);(keyPassword?enabledSslProtocolSuites:0);(useFractionalSeconds?1:0);result=1*(socketFactory?socketFactory:0);result=1*(pipe?localSocket:0);result=1*(sharedMemory)(useCompression?1:0);result=(interactiveClient?1:0)+(useSsl?1:0)*(sessionVariables?sessionVariables:0)*(1);result=1*(createDatabaseIfNotExist);result=(continueBatchOnError?1:0)+(jdbcCompliantTruncation?1:0);result=1*(minPoolSize?hashCode:0);(autocommit?1:0);}

