
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyGenerationParameters_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }
predict, score, loss = equals, 0.9980849, 0.0038042103

Trace of simplified code(s):
{"time": "2021-01-20 12:17:22.634655", "n_pass": [1, 1, 1], "score": "0.9973", "loss": "0.0054", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != other.db) { return false; } if (df != other.df) { return false; } if (df1 != other.df1) { return false; } if (df2 != other.df2) { return false; } if (df3 != other.df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:24.122169", "n_pass": [22, 2, 2], "score": "0.9969", "loss": "0.0053", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != df3) { return false; } if (dg != other.dg) { return false; } if (dm0 != other.dm0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:25.607660", "n_pass": [44, 3, 3], "score": "0.9991", "loss": "0.0019", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr1) { return false; } if (dr2 != other.dr2) { return false; } if (dr3 != other.dr3) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:27.065692", "n_pass": [46, 4, 4], "score": "0.9963", "loss": "0.0068", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (minCallsR != other.minCallsR) { return false; } if (!Arrays.equals(oid, other.oid)) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:28.535587", "n_pass": [51, 5, 5], "score": "0.9993", "loss": "0.0015", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } NTRUEncryptionKeyGenerationParameters other = (NTRUEncryptionKeyGenerationParameters) obj; if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:31.849416", "n_pass": [92, 7, 6], "score": "0.9988", "loss": "0.002", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if (bufferLenBits != other.bufferLenBits) { return false; } if (bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:33.282233", "n_pass": [94, 8, 7], "score": "0.9984", "loss": "0.0029", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db != 0) { return false; } if (dr != other.dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:34.692668", "n_pass": [97, 9, 8], "score": "0.9988", "loss": "0.0021", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.dr13) { return false; } if (fastFp != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:36.098635", "n_pass": [99, 10, 9], "score": "0.9968", "loss": "0.0047", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } else if (!hashAlg.getAlgorithmName().equals(other.hashAlg.getAlgorithmName())) { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:37.513540", "n_pass": [102, 11, 10], "score": "0.9963", "loss": "0.0059", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) { return false; } if (llen != other.llen) { return false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:38.918189", "n_pass": [104, 12, 11], "score": "0.998", "loss": "0.0034", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) { false; } if (maxMsgLenBytes != other.maxMsgLenBytes) { return false; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:40.338245", "n_pass": [105, 13, 12], "score": "0.9986", "loss": "0.0023", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {; } if (minCallsMask != other.minCallsMask) { return false; } if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:41.728037", "n_pass": [106, 14, 13], "score": "0.9974", "loss": "0.0046", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; } if (polyType != other.polyType) { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:43.183065", "n_pass": [151, 15, 14], "score": "0.9969", "loss": "0.005", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:44.955491", "n_pass": [159, 16, 15], "score": "0.9962", "loss": "0.0065", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } if(bufferLenTrits != other.bufferLenTrits) { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:46.351624", "n_pass": [164, 17, 16], "score": "0.9965", "loss": "0.0054", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1 != other.fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:48.190148", "n_pass": [249, 18, 17], "score": "0.9963", "loss": "0.0067", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLen != other.pkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:49.602009", "n_pass": [263, 19, 18], "score": "0.9945", "loss": "0.0098", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) { return false; } if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:51.116517", "n_pass": [270, 20, 19], "score": "0.9956", "loss": "0.0069", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparse != other.sparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:52.502519", "n_pass": [272, 21, 20], "score": "0.9899", "loss": "0.0173", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (N != other.N) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:53.936765", "n_pass": [287, 22, 21], "score": "0.9889", "loss": "0.0204", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { return false; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:55.468170", "n_pass": [435, 23, 22], "score": "0.9862", "loss": "0.0248", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { return false; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:56.853354", "n_pass": [440, 24, 23], "score": "0.9873", "loss": "0.0214", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) { return false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:58.259371", "n_pass": [457, 25, 24], "score": "0.9881", "loss": "0.0208", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {false; } } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:17:59.635337", "n_pass": [458, 26, 25], "score": "0.9795", "loss": "0.0384", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { return false; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:18:01.016303", "n_pass": [461, 27, 26], "score": "0.9827", "loss": "0.0292", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { return false; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:18:02.410545", "n_pass": [475, 28, 27], "score": "0.9792", "loss": "0.0347", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } return true; }"}
{"time": "2021-01-20 12:18:03.811697", "n_pass": [488, 29, 28], "score": "0.9854", "loss": "0.0261", "code": "public boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:05.203516", "n_pass": [490, 30, 29], "score": "0.9779", "loss": "0.0402", "code": "boolean equals(Object obj) { if (this == obj) { return true; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:06.957302", "n_pass": [500, 31, 30], "score": "0.9844", "loss": "0.0294", "code": "boolean equals(Object obj) { if (this == obj) { ; } { return false; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:08.326086", "n_pass": [503, 32, 31], "score": "0.9826", "loss": "0.0324", "code": "boolean equals(Object obj) { if (this == obj) { ; } { ; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:24.233504", "n_pass": [745, 33, 32], "score": "0.9776", "loss": "0.0421", "code": "boolean equals(Object obj) { if (this == obj) {; } { ; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:25.601011", "n_pass": [746, 34, 33], "score": "0.9814", "loss": "0.0342", "code": "boolean equals(Object obj) { if (this == obj) { } { ; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:27.089722", "n_pass": [747, 35, 34], "score": "0.9798", "loss": "0.0373", "code": "boolean equals(Object obj) { if (this == obj) {} { ; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:28.458293", "n_pass": [749, 36, 35], "score": "0.9852", "loss": "0.027", "code": "boolean equals(Object obj) { if (this == obj) {}{ ; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:29.828278", "n_pass": [751, 37, 36], "score": "0.9779", "loss": "0.0418", "code": "boolean equals(Object obj) { if (this == obj) {}{; } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:31.217982", "n_pass": [752, 38, 37], "score": "0.9847", "loss": "0.0288", "code": "boolean equals(Object obj) { if (this == obj) {}{ } if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:32.585318", "n_pass": [753, 39, 38], "score": "0.9819", "loss": "0.0341", "code": "boolean equals(Object obj) { if (this == obj) {}{} if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:33.971230", "n_pass": [755, 40, 39], "score": "0.9782", "loss": "0.0412", "code": "boolean equals(Object obj) { if (this == obj) {}{}if (getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:35.334310", "n_pass": [757, 41, 40], "score": "0.9802", "loss": "0.0377", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass() != obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:36.728773", "n_pass": [762, 42, 41], "score": "0.9778", "loss": "0.0421", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!= obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:38.479967", "n_pass": [765, 43, 42], "score": "0.9819", "loss": "0.0353", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj.getClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:39.865669", "n_pass": [767, 44, 43], "score": "0.9797", "loss": "0.0383", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=objgetClass())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:41.254255", "n_pass": [768, 45, 44], "score": "0.9817", "loss": "0.0346", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if (NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:42.627745", "n_pass": [773, 46, 45], "score": "0.9817", "loss": "0.0346", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(NN) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:43.996486", "n_pass": [775, 47, 46], "score": "0.982", "loss": "0.0336", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N) { return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:45.384966", "n_pass": [778, 48, 47], "score": "0.982", "loss": "0.0336", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){ return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:46.752632", "n_pass": [780, 49, 48], "score": "0.982", "loss": "0.0336", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){return false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:48.120498", "n_pass": [781, 50, 49], "score": "0.9829", "loss": "0.0326", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){ false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:49.508812", "n_pass": [782, 51, 50], "score": "0.9829", "loss": "0.0326", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){false; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:50.874548", "n_pass": [783, 52, 51], "score": "0.9785", "loss": "0.0401", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){; } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:52.239733", "n_pass": [784, 53, 52], "score": "0.9785", "loss": "0.0401", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){ } { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:53.605645", "n_pass": [785, 54, 53], "score": "0.9785", "loss": "0.0401", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){} { return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:54.975146", "n_pass": [787, 55, 54], "score": "0.9785", "loss": "0.0401", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{ return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:56.363543", "n_pass": [789, 56, 55], "score": "0.9785", "loss": "0.0401", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{return false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:57.726309", "n_pass": [790, 57, 56], "score": "0.9776", "loss": "0.044", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{ false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:18:59.094341", "n_pass": [791, 58, 57], "score": "0.9776", "loss": "0.044", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{false; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:00.488197", "n_pass": [792, 59, 58], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{; } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:01.868346", "n_pass": [793, 60, 59], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{ } if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:03.233066", "n_pass": [794, 61, 60], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{} if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:04.597400", "n_pass": [796, 62, 61], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if (c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:05.992522", "n_pass": [798, 63, 62], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c != other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:07.379008", "n_pass": [801, 64, 63], "score": "0.9713", "loss": "0.055", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c!= other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:08.763371", "n_pass": [802, 65, 64], "score": "0.9476", "loss": "0.107", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c= other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:10.138722", "n_pass": [804, 66, 65], "score": "0.9476", "loss": "0.107", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=other.c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:11.503397", "n_pass": [805, 67, 66], "score": "0.9439", "loss": "0.1158", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { ; } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:12.871926", "n_pass": [808, 68, 67], "score": "0.9439", "loss": "0.1158", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db .dr) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:14.258132", "n_pass": [813, 69, 68], "score": "0.9589", "loss": "0.085", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { ; } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:15.620660", "n_pass": [816, 70, 69], "score": "0.9589", "loss": "0.085", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr1fastFp) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:16.988711", "n_pass": [820, 71, 70], "score": "0.9635", "loss": "0.0707", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) { return false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:18.353781", "n_pass": [823, 72, 71], "score": "0.9587", "loss": "0.0878", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) { false; } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:19.710144", "n_pass": [824, 73, 72], "score": "0.9498", "loss": "0.1007", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (other.hashAlg != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:21.084725", "n_pass": [835, 74, 73], "score": "0.9442", "loss": "0.1141", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (other != null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:22.443060", "n_pass": [836, 75, 74], "score": "0.9114", "loss": "0.1961", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (other= null) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:23.836602", "n_pass": [837, 76, 75], "score": "0.9096", "loss": "0.1993", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { ; } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:25.236019", "n_pass": [843, 77, 76], "score": "0.9096", "loss": "0.1993", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeed != other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:26.584435", "n_pass": [847, 78, 77], "score": "0.8178", "loss": "0.4557", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeed= other.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:27.967529", "n_pass": [848, 79, 78], "score": "0.7554", "loss": "0.5911", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedother.hashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:29.327111", "n_pass": [849, 80, 79], "score": "0.7674", "loss": "0.5674", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) { return false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:30.698875", "n_pass": [857, 81, 80], "score": "0.7469", "loss": "0.6483", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) { false; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:32.062694", "n_pass": [858, 82, 81], "score": "0.6397", "loss": "0.9115", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {; }  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:33.447289", "n_pass": [859, 83, 82], "score": "0.6397", "loss": "0.9115", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { ; } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:34.826409", "n_pass": [862, 84, 83], "score": "0.6397", "loss": "0.9115", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other.q) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:36.187564", "n_pass": [869, 85, 84], "score": "0.6214", "loss": "0.9463", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other) {} if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:37.542946", "n_pass": [871, 86, 85], "score": "0.5776", "loss": "1.0724", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { return false; } ; }"}
{"time": "2021-01-20 12:19:38.919854", "n_pass": [877, 87, 86], "score": "0.5876", "loss": "1.1214", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) { false; } ; }"}
{"time": "2021-01-20 12:19:40.275090", "n_pass": [878, 88, 87], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } ; }"}
{"time": "2021-01-20 12:19:41.625924", "n_pass": [880, 89, 88], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj) { if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:43.727126", "n_pass": [890, 90, 89], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){ if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:45.093613", "n_pass": [892, 91, 90], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){if (this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:46.473005", "n_pass": [894, 92, 91], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){if(this == obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:47.854618", "n_pass": [897, 93, 92], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){if(this== obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:49.970570", "n_pass": [900, 94, 93], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){if(this==obj) {}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:51.326338", "n_pass": [903, 95, 94], "score": "0.451", "loss": "1.5068", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c=c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:53.091710", "n_pass": [930, 96, 95], "score": "0.4154", "loss": "1.5859", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(cc) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:19:56.414665", "n_pass": [1026, 97, 96], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr) {  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:14.537830", "n_pass": [1230, 98, 97], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){  } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:15.898665", "n_pass": [1232, 99, 98], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){ } if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:17.251250", "n_pass": [1233, 100, 99], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){} if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:18.598052", "n_pass": [1235, 101, 100], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if (hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:19.970417", "n_pass": [1237, 102, 101], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg == null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:21.321155", "n_pass": [1240, 103, 102], "score": "0.4438", "loss": "1.4554", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg== null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:22.671549", "n_pass": [1241, 104, 103], "score": "0.3193", "loss": "2.0601", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg= null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:24.041183", "n_pass": [1243, 105, 104], "score": "0.3193", "loss": "2.0601", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null) { if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:25.423060", "n_pass": [1246, 106, 105], "score": "0.3193", "loss": "2.0601", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){ if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:26.790230", "n_pass": [1248, 107, 106], "score": "0.3193", "loss": "2.0601", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if (othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:28.156557", "n_pass": [1250, 108, 107], "score": "0.3193", "loss": "2.0601", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(othernull) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:29.497497", "n_pass": [1252, 109, 108], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null) {} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:30.847620", "n_pass": [1255, 110, 109], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){} } { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:32.219648", "n_pass": [1258, 111, 110], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}} { } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:33.557329", "n_pass": [1260, 112, 111], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{ } if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:34.937681", "n_pass": [1262, 113, 112], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{} if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:36.276262", "n_pass": [1264, 114, 113], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if (hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:37.670817", "n_pass": [1266, 115, 114], "score": "0.2631", "loss": "2.2253", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeedhashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:39.017745", "n_pass": [1268, 116, 115], "score": "0.2582", "loss": "2.2276", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed) {} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:40.414928", "n_pass": [1271, 117, 116], "score": "0.2582", "loss": "2.2276", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){} if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:41.766011", "n_pass": [1274, 118, 117], "score": "0.2582", "loss": "2.2276", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if (pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:43.105654", "n_pass": [1276, 119, 118], "score": "0.2582", "loss": "2.2276", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLenpkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:44.453801", "n_pass": [1278, 120, 119], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen) {}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:45.803980", "n_pass": [1281, 121, 120], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}  { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:47.155536", "n_pass": [1284, 122, 121], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){} { } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:48.529741", "n_pass": [1285, 123, 122], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{ } if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:49.879802", "n_pass": [1287, 124, 123], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{} if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:51.228239", "n_pass": [1289, 125, 124], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if (q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:52.576929", "n_pass": [1291, 126, 125], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q != other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:53.942565", "n_pass": [1294, 127, 126], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!= other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:56.645789", "n_pass": [1297, 129, 127], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)  if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:57.994852", "n_pass": [1300, 130, 128], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other) if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:20:59.363570", "n_pass": [1301, 131, 129], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if (sparsesparse) {  } }"}
{"time": "2021-01-20 12:21:00.736165", "n_pass": [1303, 132, 130], "score": "0.2606", "loss": "2.1997", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparsesparse) {  } }"}
{"time": "2021-01-20 12:21:02.082362", "n_pass": [1305, 133, 131], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse) {  } }"}
{"time": "2021-01-20 12:21:03.431990", "n_pass": [1308, 134, 132], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){  } }"}
{"time": "2021-01-20 12:21:04.797536", "n_pass": [1310, 135, 133], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){ } }"}
{"time": "2021-01-20 12:21:06.143786", "n_pass": [1311, 136, 134], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){} }"}
{"time": "2021-01-20 12:21:07.491186", "n_pass": [1313, 137, 135], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c) { } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:10.745046", "n_pass": [1358, 138, 136], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){ } if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:12.120758", "n_pass": [1360, 139, 137], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){} if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:13.467065", "n_pass": [1362, 140, 138], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if (db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:14.820238", "n_pass": [1364, 141, 139], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db ) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:16.191955", "n_pass": [1367, 142, 140], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db) { } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:17.540665", "n_pass": [1369, 143, 141], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){ } if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:18.888559", "n_pass": [1371, 144, 142], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){} if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:20.242308", "n_pass": [1373, 145, 143], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if (dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:21.591871", "n_pass": [1375, 146, 144], "score": "0.2821", "loss": "2.1173", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg=null){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:22.949091", "n_pass": [1384, 147, 145], "score": "0.2856", "loss": "2.1153", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlgnull){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:24.300887", "n_pass": [1385, 148, 146], "score": "0.3502", "loss": "1.7721", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q!=other)if(sparse){}}"}
{"time": "2021-01-20 12:21:25.683054", "n_pass": [1414, 149, 147], "score": "0.2134", "loss": "2.5365", "code": "boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}}"}

Minimal simplified code:
boolean equals(Object obj){if(this==obj){}{}if(getClass()!=obj())if(N){}{}if(c){}if(db){}if(dr){}if(hashAlg){if(null){}}{}if(hashSeed){}if(pkLen){}{}if(q=other)if(sparse){}}

